{"version":3,"file":"totvs-thf-ui.js","sources":["ng://@totvs/thf-ui/lib/components/thf-avatar/thf-avatar-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-avatar/thf-avatar.component.ts","ng://@totvs/thf-ui/lib/components/thf-avatar/thf-avatar.module.ts","ng://@totvs/thf-ui/lib/components/thf-breadcrumb/thf-breadcrumb-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-breadcrumb/thf-breadcrumb.component.ts","ng://@totvs/thf-ui/lib/components/thf-breadcrumb/thf-breadcrumb-dropdown/thf-breadcrumb-dropdown.component.ts","ng://@totvs/thf-ui/lib/components/thf-breadcrumb/thf-breadcrumb-favorite/thf-breadcrumb-favorite.service.ts","ng://@totvs/thf-ui/lib/components/thf-breadcrumb/thf-breadcrumb-favorite/thf-breadcrumb-favorite.component.ts","ng://@totvs/thf-ui/lib/components/thf-breadcrumb/thf-breadcrumb-item/thf-breadcrumb-item.component.ts","ng://@totvs/thf-ui/lib/components/thf-breadcrumb/thf-breadcrumb.module.ts","ng://@totvs/thf-ui/lib/utils/util.ts","ng://@totvs/thf-ui/lib/components/thf-button/thf-button-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-button/thf-button.component.ts","ng://@totvs/thf-ui/lib/components/thf-button/thf-button.module.ts","ng://@totvs/thf-ui/lib/services/thf-control-position/thf-control-position.service.ts","ng://@totvs/thf-ui/lib/services/thf-control-position/thf-control-position.constants.ts","ng://@totvs/thf-ui/lib/directives/thf-tooltip/thf-tooltip-base.directive.ts","ng://@totvs/thf-ui/lib/directives/thf-tooltip/thf-tooltip.directive.ts","ng://@totvs/thf-ui/lib/directives/thf-tooltip/thf-tooltip.module.ts","ng://@totvs/thf-ui/lib/components/thf-button-group/thf-button-group-toggle.enum.ts","ng://@totvs/thf-ui/lib/components/thf-button-group/thf-button-group-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-button-group/thf-button-group.component.ts","ng://@totvs/thf-ui/lib/components/thf-button-group/thf-button-group.module.ts","ng://@totvs/thf-ui/lib/components/thf-calendar/thf-calendar-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-calendar/services/thf-calendar.lang.service.ts","ng://@totvs/thf-ui/lib/components/thf-calendar/services/thf-calendar.service.ts","ng://@totvs/thf-ui/lib/services/thf-date/thf-date.service.ts","ng://@totvs/thf-ui/lib/components/thf-calendar/thf-calendar.component.ts","ng://@totvs/thf-ui/lib/components/thf-calendar/thf-calendar.module.ts","ng://@totvs/thf-ui/lib/components/thf-chart/enums/thf-chart-type.enum.ts","ng://@totvs/thf-ui/lib/components/thf-chart/thf-chart-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-chart/thf-chart-colors.constant.ts","ng://@totvs/thf-ui/lib/components/thf-chart/thf-chart-types/thf-chart-pie/thf-chart-pie.constant.ts","ng://@totvs/thf-ui/lib/components/thf-chart/thf-chart-types/thf-chart-dynamic-type.component.ts","ng://@totvs/thf-ui/lib/components/thf-chart/thf-chart-types/thf-chart-pie/thf-chart-pie.component.ts","ng://@totvs/thf-ui/lib/components/thf-chart/thf-chart.component.ts","ng://@totvs/thf-ui/lib/components/thf-chart/thf-chart.module.ts","ng://@totvs/thf-ui/lib/components/thf-container/thf-container-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-container/thf-container.component.ts","ng://@totvs/thf-ui/lib/components/thf-container/thf-container.module.ts","ng://@totvs/thf-ui/lib/components/thf-disclaimer/thf-disclaimer-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-disclaimer/thf-disclaimer.component.ts","ng://@totvs/thf-ui/lib/components/thf-disclaimer/thf-disclaimer.module.ts","ng://@totvs/thf-ui/lib/components/thf-disclaimer-group/thf-disclaimer-group-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-disclaimer-group/thf-disclaimer-group.component.ts","ng://@totvs/thf-ui/lib/components/thf-disclaimer-group/thf-disclaimer-remove/thf-disclaimer-remove.component.ts","ng://@totvs/thf-ui/lib/components/thf-disclaimer-group/thf-disclaimer-group.module.ts","ng://@totvs/thf-ui/lib/components/thf-divider/thf-divider-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-divider/thf-divider.component.ts","ng://@totvs/thf-ui/lib/components/thf-divider/thf-divider.module.ts","ng://@totvs/thf-ui/lib/components/thf-popup/thf-popup-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-popup/thf-popup.component.ts","ng://@totvs/thf-ui/lib/components/thf-popup/thf-popup.module.ts","ng://@totvs/thf-ui/lib/components/thf-dropdown/thf-dropdown-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-dropdown/thf-dropdown.component.ts","ng://@totvs/thf-ui/lib/components/thf-dropdown/thf-dropdown.module.ts","ng://@totvs/thf-ui/lib/services/thf-language/thf-language.service.ts","ng://@totvs/thf-ui/lib/components/thf-loading/thf-loading-overlay/thf-loading-overlay-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-loading/thf-loading-overlay/thf-loading-overlay.component.ts","ng://@totvs/thf-ui/lib/services/thf-language/thf-language.module.ts","ng://@totvs/thf-ui/lib/components/thf-loading/thf-loading-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-loading/thf-loading.component.ts","ng://@totvs/thf-ui/lib/components/thf-loading/thf-loading.module.ts","ng://@totvs/thf-ui/lib/components/thf-modal/thf-modal-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-modal/thf-modal-service.ts","ng://@totvs/thf-ui/lib/components/thf-modal/thf-modal.component.ts","ng://@totvs/thf-ui/lib/components/thf-modal/thf-modal.module.ts","ng://@totvs/thf-ui/lib/pipes/thf-time/thf-time.pipe.ts","ng://@totvs/thf-ui/lib/pipes/thf-time/thf-time.module.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table-column-icon/thf-table-column-icon.component.ts","ng://@totvs/thf-ui/lib/enums/thf-color-palette.enum.ts","ng://@totvs/thf-ui/lib/services/thf-color-palette/thf-color-palette.service.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table-column-label/thf-table-column-label.component.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table-column-link/thf-table-column-link.component.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table-row-template/thf-table-row-template.directive.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table.component.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table-detail/thf-table-detail.component.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table-show-subtitle/thf-table-show-subtitle.component.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table-subtitle-circle/thf-table-subtitle-circle.component.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table-subtitle-footer/thf-table-subtitle-footer.component.ts","ng://@totvs/thf-ui/lib/components/thf-table/thf-table.module.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-datepicker/thf-calendar/thf-calendar.lang.service.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-datepicker/thf-calendar/thf-calendar.service.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-datepicker/thf-calendar/thf-calendar.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/validators.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-checkbox-group/thf-checkbox-group-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-checkbox-group/thf-checkbox-group.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-clean/thf-clean-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-clean/thf-clean.component.ts","ng://@totvs/thf-ui/lib/enums/thf-key-code.enum.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-combo/thf-combo-filter-mode.enum.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-combo/thf-combo-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-combo/thf-combo-filter.service.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-combo/thf-combo.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-input/thf-mask.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-datepicker/thf-datepicker-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-datepicker/thf-datepicker.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-datepicker-range/thf-datepicker-range-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-datepicker-range/thf-datepicker-range.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-input/thf-input-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-decimal/thf-decimal.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-input-generic/thf-input-generic.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-email/thf-email.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-field-container/thf-field-container.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-field-container/thf-field-container-bottom/thf-field-container-bottom.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-login/thf-login.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-lookup/thf-lookup-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-lookup/services/thf-lookup-filter.service.ts","ng://@totvs/thf-ui/lib/services/thf-component-injector/thf-component-injector.service.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-lookup/thf-lookup-modal/thf-lookup-modal-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-lookup/thf-lookup-modal/thf-lookup-modal.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-lookup/services/thf-lookup-modal.service.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-lookup/thf-lookup.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-multiselect/thf-multiselect-search/thf-multiselect-search.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-multiselect/thf-multiselect-dropdown/thf-multiselect-dropdown.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-multiselect/thf-multiselect-filter-mode.enum.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-multiselect/thf-multiselect-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-multiselect/thf-multiselect.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-multiselect/thf-multiselect-item/thf-multiselect-item.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-rich-text/thf-rich-text-body/thf-rich-text-body.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-rich-text/thf-rich-text-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-rich-text/thf-rich-text.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-rich-text/thf-rich-text-literals.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-rich-text/thf-rich-text-toolbar/thf-rich-text-toolbar.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-input/thf-input.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-number/thf-number-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-number/thf-number.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-password/thf-password.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-radio-group/thf-radio-group-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-radio-group/thf-radio-group.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-select/thf-select-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-select/thf-select-option-template/thf-select-option-template.directive.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-select/thf-select.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-switch/thf-switch-label-position.enum.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-switch/thf-switch-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-switch/thf-switch.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-textarea/thf-textarea-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-textarea/thf-textarea.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-upload/thf-upload-status.enum.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-upload/thf-upload-file.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-upload/thf-upload-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-upload/thf-upload-base.service.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-upload/thf-upload.service.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-upload/thf-upload.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-url/thf-url.component.ts","ng://@totvs/thf-ui/lib/components/thf-field/thf-field.module.ts","ng://@totvs/thf-ui/lib/components/thf-info/thf-info-orietation.enum.ts","ng://@totvs/thf-ui/lib/components/thf-info/thf-info-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-info/thf-info.component.ts","ng://@totvs/thf-ui/lib/components/thf-info/thf-info.module.ts","ng://@totvs/thf-ui/lib/components/thf-tag/enums/thf-tag-icon.enum.ts","ng://@totvs/thf-ui/lib/components/thf-tag/enums/thf-tag-orientation.enum.ts","ng://@totvs/thf-ui/lib/components/thf-tag/enums/thf-tag-type.enum.ts","ng://@totvs/thf-ui/lib/components/thf-tag/thf-tag-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-tag/thf-tag.component.ts","ng://@totvs/thf-ui/lib/components/thf-tag/thf-tag.module.ts","ng://@totvs/thf-ui/lib/components/thf-dynamic/thf-dynamic-form/thf-dynamic-form-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-dynamic/thf-dynamic-form/thf-dynamic-form.component.ts","ng://@totvs/thf-ui/lib/components/thf-dynamic/thf-dynamic.util.ts","ng://@totvs/thf-ui/lib/components/thf-dynamic/thf-dynamic-field-type.enum.ts","ng://@totvs/thf-ui/lib/components/thf-dynamic/thf-dynamic-form/thf-dynamic-form-fields/thf-dynamic-form-fields-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-dynamic/thf-dynamic-form/thf-dynamic-form-fields/thf-dynamic-form-fields.component.ts","ng://@totvs/thf-ui/lib/components/thf-dynamic/thf-dynamic-view/thf-dynamic-view-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-dynamic/thf-dynamic-view/thf-dynamic-view.component.ts","ng://@totvs/thf-ui/lib/components/thf-dynamic/thf-dynamic.module.ts","ng://@totvs/thf-ui/lib/components/thf-grid/thf-grid-cell-action/thf-grid-cell-action.component.ts","ng://@totvs/thf-ui/lib/components/thf-grid/thf-grid-cell/thf-grid-cell.component.ts","ng://@totvs/thf-ui/lib/components/thf-grid/thf-grid.component.ts","ng://@totvs/thf-ui/lib/components/thf-grid/thf-grid-head/thf-grid-head.component.ts","ng://@totvs/thf-ui/lib/components/thf-grid/thf-grid.module.ts","ng://@totvs/thf-ui/lib/components/thf-list-view/thf-list-view-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-list-view/thf-list-view-content-template/thf-list-view-content-template.directive.ts","ng://@totvs/thf-ui/lib/components/thf-list-view/thf-list-view-detail-template/thf-list-view-detail-template.directive.ts","ng://@totvs/thf-ui/lib/components/thf-list-view/thf-list-view.component.ts","ng://@totvs/thf-ui/lib/components/thf-list-view/thf-list-view.module.ts","ng://@totvs/thf-ui/lib/components/thf-badge/thf-badge-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-badge/thf-badge.component.ts","ng://@totvs/thf-ui/lib/components/thf-badge/thf-badge.module.ts","ng://@totvs/thf-ui/lib/components/thf-menu/thf-menu-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-menu/thf-menu-header-template/thf-menu-header-template.directive.ts","ng://@totvs/thf-ui/lib/components/thf-menu/services/thf-menu-items.service.ts","ng://@totvs/thf-ui/lib/components/thf-menu/services/thf-menu.service.ts","ng://@totvs/thf-ui/lib/components/thf-menu/thf-menu.component.ts","ng://@totvs/thf-ui/lib/components/thf-menu/thf-menu-filter/thf-menu-filter.component.ts","ng://@totvs/thf-ui/lib/components/thf-menu/thf-menu-item/thf-menu-item.component.ts","ng://@totvs/thf-ui/lib/components/thf-menu/thf-menu.module.ts","ng://@totvs/thf-ui/lib/components/thf-menu-panel/thf-menu-panel-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-menu-panel/services/thf-menu-panel-items.service.ts","ng://@totvs/thf-ui/lib/components/thf-menu-panel/thf-menu-panel.component.ts","ng://@totvs/thf-ui/lib/components/thf-menu-panel/thf-menu-panel-item/thf-menu-panel-item.component.ts","ng://@totvs/thf-ui/lib/components/thf-menu-panel/thf-menu-panel.module.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar-actions/thf-navbar-action/thf-navbar-action.component.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar-actions/thf-navbar-action-popup/thf-navbar-action-popup.component.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar-actions/thf-navbar-actions.component.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar-actions/thf-navbar-actions.module.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar-items/thf-navbar-item/thf-navbar-item.component.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar-items/thf-navbar-items.component.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar.component.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar-items/thf-navbar-items.module.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar-item-navigation/thf-navbar-item-navigation.component.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar-logo/thf-navbar-logo.component.ts","ng://@totvs/thf-ui/lib/components/thf-navbar/thf-navbar.module.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-content/thf-page-content-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-content/thf-page-content.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-default/thf-page-default-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-default/thf-page-default.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-detail/thf-page-detail-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-util/thf-page-util.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-detail/thf-page-detail.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-edit/thf-page-edit-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-edit/thf-page-edit.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-header/thf-page-header-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-header/thf-page-header.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-list/thf-page-list-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page-list/thf-page-list.component.ts","ng://@totvs/thf-ui/lib/components/thf-page/thf-page.module.ts","ng://@totvs/thf-ui/lib/components/thf-popover/thf-popover-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-popover/thf-popover.component.ts","ng://@totvs/thf-ui/lib/components/thf-popover/thf-popover.module.ts","ng://@totvs/thf-ui/lib/components/thf-slide/thf-slide-circles/thf-slide-circles.component.ts","ng://@totvs/thf-ui/lib/components/thf-slide/thf-slide-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-slide/directives/thf-slide-content-template.directive.ts","ng://@totvs/thf-ui/lib/components/thf-slide/thf-slide-item/thf-slide-item.component.ts","ng://@totvs/thf-ui/lib/components/thf-slide/thf-slide.component.ts","ng://@totvs/thf-ui/lib/components/thf-slide/thf-slide-control/thf-slide-control.component.ts","ng://@totvs/thf-ui/lib/components/thf-slide/thf-slide.module.ts","ng://@totvs/thf-ui/lib/components/thf-stepper/enums/thf-stepper-status.enum.ts","ng://@totvs/thf-ui/lib/components/thf-stepper/thf-step/thf-step.component.ts","ng://@totvs/thf-ui/lib/components/thf-stepper/thf-stepper-circle/thf-stepper-circle.component.ts","ng://@totvs/thf-ui/lib/components/thf-stepper/enums/thf-stepper-orientation.enum.ts","ng://@totvs/thf-ui/lib/components/thf-stepper/thf-stepper-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-stepper/thf-stepper.component.ts","ng://@totvs/thf-ui/lib/components/thf-stepper/thf-stepper-label/thf-stepper-label.component.ts","ng://@totvs/thf-ui/lib/components/thf-stepper/thf-stepper-step/thf-stepper-step.component.ts","ng://@totvs/thf-ui/lib/components/thf-stepper/thf-stepper.module.ts","ng://@totvs/thf-ui/lib/components/thf-tabs/thf-tab-button/thf-tab-button.component.ts","ng://@totvs/thf-ui/lib/components/thf-tabs/thf-tab/thf-tab-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-tabs/thf-tab/thf-tab.component.ts","ng://@totvs/thf-ui/lib/components/thf-tabs/thf-tab-dropdown/thf-tab-dropdown.component.ts","ng://@totvs/thf-ui/lib/components/thf-tabs/thf-tabs-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-tabs/thf-tabs.component.ts","ng://@totvs/thf-ui/lib/components/thf-tabs/thf-tabs.module.ts","ng://@totvs/thf-ui/lib/components/thf-toolbar/thf-toolbar-actions/thf-toolbar-actions.component.ts","ng://@totvs/thf-ui/lib/components/thf-toolbar/thf-toolbar-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-toolbar/thf-toolbar.component.ts","ng://@totvs/thf-ui/lib/components/thf-toolbar/thf-toolbar-notification/thf-toolbar-notification.component.ts","ng://@totvs/thf-ui/lib/components/thf-toolbar/thf-toolbar-profile/thf-toolbar-profile.component.ts","ng://@totvs/thf-ui/lib/components/thf-toolbar/thf-toolbar.module.ts","ng://@totvs/thf-ui/lib/components/thf-widget/thf-widget-base.component.ts","ng://@totvs/thf-ui/lib/components/thf-widget/thf-widget.component.ts","ng://@totvs/thf-ui/lib/components/thf-widget/thf-widget.module.ts","ng://@totvs/thf-ui/lib/components/components.module.ts","ng://@totvs/thf-ui/lib/directives/directives.module.ts","ng://@totvs/thf-ui/lib/guards/guards.module.ts","ng://@totvs/thf-ui/lib/services/thf-dialog/thf-dialog.enum.ts","ng://@totvs/thf-ui/lib/services/thf-dialog/thf-dialog-base.service.ts","ng://@totvs/thf-ui/lib/services/thf-dialog/thf-dialog.component.ts","ng://@totvs/thf-ui/lib/services/thf-dialog/thf-dialog.service.ts","ng://@totvs/thf-ui/lib/services/thf-notification/thf-toaster/thf-toaster-orientation.enum.ts","ng://@totvs/thf-ui/lib/services/thf-notification/thf-toaster/thf-toaster-type.enum.ts","ng://@totvs/thf-ui/lib/services/thf-notification/thf-notification-base.service.ts","ng://@totvs/thf-ui/lib/services/thf-notification/thf-toaster/thf-toaster-base.component.ts","ng://@totvs/thf-ui/lib/services/thf-notification/thf-toaster/thf-toaster.component.ts","ng://@totvs/thf-ui/lib/services/thf-notification/thf-notification.service.ts","ng://@totvs/thf-ui/lib/interceptors/thf-http-interceptor/thf-http-interceptor-base.service.ts","ng://@totvs/thf-ui/lib/interceptors/thf-http-interceptor/thf-http-interceptor.service.ts","ng://@totvs/thf-ui/lib/interceptors/thf-http-interceptor/thf-http-interceptor.module.ts","ng://@totvs/thf-ui/lib/interceptors/thf-http-request/thf-http-request-control-service.ts","ng://@totvs/thf-ui/lib/interceptors/thf-http-request/thf-http-request-interceptor.service.ts","ng://@totvs/thf-ui/lib/interceptors/thf-http-request/thf-http-request.module.ts","ng://@totvs/thf-ui/lib/interceptors/interceptors.module.ts","ng://@totvs/thf-ui/lib/pipes/pipes.module.ts","ng://@totvs/thf-ui/lib/services/thf-color-palette/thf-color-palette.module.ts","ng://@totvs/thf-ui/lib/services/thf-component-injector/thf-component-injector.module.ts","ng://@totvs/thf-ui/lib/services/thf-control-position/thf-control-position.module.ts","ng://@totvs/thf-ui/lib/services/thf-date/thf-date.module.ts","ng://@totvs/thf-ui/lib/services/thf-dialog/thf-dialog.module.ts","ng://@totvs/thf-ui/lib/services/thf-i18n/thf-i18n-base.pipe.ts","ng://@totvs/thf-ui/lib/services/thf-i18n/thf-i18n.pipe.ts","ng://@totvs/thf-ui/lib/services/thf-notification/thf-notification.module.ts","ng://@totvs/thf-ui/lib/services/services.module.ts","ng://@totvs/thf-ui/lib/thf.module.ts","ng://@totvs/thf-ui/lib/services/thf-i18n/thf-i18n-config-injection-token.ts","ng://@totvs/thf-ui/lib/services/thf-i18n/thf-i18n-base.service.ts","ng://@totvs/thf-ui/lib/services/thf-i18n/thf-i18n.service.ts","ng://@totvs/thf-ui/lib/services/thf-i18n/thf-i18n.module.ts"],"sourcesContent":["import { Input } from '@angular/core';\n\nconst THF_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];\nconst THF_AVATAR_SIZE_DEFAULT = 'md';\n\n/**\n * @description\n *\n * O componente `thf-avatar` Ã© um container para imagens em miniatura, possui um formato redondo e cinco opÃ§Ãµes de\n * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuÃ¡rio, entre outras possibilidades.\n *\n * AlÃ©m de poder ser utilizado separadamente, Ã© possÃ­vel usar o `thf-avatar` juntamente com outros componentes e criar\n * layouts ricos e bem interessantes para os usuÃ¡rios, como por exemplo, uma lista de itens ou produtos.\n */\nexport class ThfAvatarBaseComponent {\n  private _size: string = 'md';\n\n  /**\n   * Fonte da imagem que pode ser um caminho local (`./assets/images/logo-black-small.png`)\n   * ou um servidor externo (`https://thf.totvs.com.br/assets/images/logo-black-small.png`).\n   */\n  @Input('t-src') src: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Tamanho de exibiÃ§Ã£o do componente.\n   *\n   * Valores vÃ¡lidos:\n   *  - `xs` (24x24)\n   *  - `sm` (32x32)\n   *  - `md` (64x64)\n   *  - `lg` (96x96)\n   *  - `xl` (144x144)\n   *\n   * @default `md`\n   */\n  @Input('t-size') set size(value: string) {\n    this._size = THF_AVATAR_SIZES.includes(value) ? value : THF_AVATAR_SIZE_DEFAULT;\n  }\n  get size(): string {\n    return this._size;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { ThfAvatarBaseComponent } from './thf-avatar-base.component';\n\n/**\n * @docsExtends ThfAvatarBaseComponent\n *\n * @example\n *\n * <example name=\"thf-avatar-basic\" title=\"Totvs Avatar Basic\" >\n *  <file name=\"sample-thf-avatar-basic/sample-thf-avatar-basic.component.html\"> </file>\n *  <file name=\"sample-thf-avatar-basic/sample-thf-avatar-basic.component.ts\"> </file>\n *  <file name=\"sample-thf-avatar-basic/sample-thf-avatar-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-thf-avatar-basic/sample-thf-avatar-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-avatar-labs\" title=\"Totvs Avatar Labs\" >\n *  <file name=\"sample-thf-avatar-labs/sample-thf-avatar-labs.component.html\"> </file>\n *  <file name=\"sample-thf-avatar-labs/sample-thf-avatar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-avatar-business-card\" title=\"Totvs Avatar - Business Card\" >\n *  <file name=\"sample-thf-avatar-business-card/sample-thf-avatar-business-card.component.html\"> </file>\n *  <file name=\"sample-thf-avatar-business-card/sample-thf-avatar-business-card.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-avatar',\n  templateUrl: './thf-avatar.component.html'\n})\nexport class ThfAvatarComponent extends ThfAvatarBaseComponent implements OnInit {\n\n  ngOnInit(): void {\n    if (!this.src) {\n      this.src = undefined;\n    }\n  }\n\n  onError(): void {\n    this.src = undefined;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfAvatarComponent } from './thf-avatar.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-avatar.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ThfAvatarComponent\n  ],\n  exports: [\n    ThfAvatarComponent\n  ]\n})\nexport class ThfAvatarModule { }\n","import { Input } from '@angular/core';\n\nimport { ThfBreadcrumbItem } from './thf-breadcrumb-item.interface';\n\n/**\n * @description\n *\n * Este componente gera uma estrutura de navegaÃ§Ã£o que apresenta ao usuÃ¡rio a localizaÃ§Ã£o\n * da URL atual, exibindo as antecessoras conforme Ã© realizado a navegaÃ§Ã£o na aplicaÃ§Ã£o.\n *\n * Quando nÃ£o houver espaÃ§amento suficiente para exibi-lÃ¡s, o componente se encarrega tambÃ©m\n * de agrupar as URLs antecessoras, gerando assim um Ã­cone que permite a visualizaÃ§Ã£o em cascata.\n *\n * Caso um endereÃ§o seja especificado na propriedade `t-favorite-service`, o componente permite ao usuÃ¡rio\n * favoritar a URL.\n *\n * Havendo necessidade de incluir parÃ¢metros na requisiÃ§Ã£o do serviÃ§o,\n * o componente dispÃµe da propriedade `t-params-service` que recebe um objeto contendo as informaÃ§Ãµes.\n */\nexport class ThfBreadcrumbBaseComponent {\n\n  itemsView: Array<ThfBreadcrumbItem> = [];\n  private _items: Array<ThfBreadcrumbItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite definir uma URL no componente `thf-breadcrumb` para favoritar ou desfavoritar.\n   * > Para utilizar esta propriedade, o Ãºltimo `ThfBreadcrumbItem` da lista de items da propriedade `t-items` deve ter um link informado.\n   *\n   * > A API deve estar preparada para retornar um objeto no formato `{ isFavorite: boolean }`.\n   *\n   * Ao iniciar, o `thf-breadcrumb` faz um GET na URL definida na propriedade `t-favorite-service` e deve retornar a propriedade\n   * `{ isFavorite: boolean }` do Ãºltimo `ThfBreadcrumbItem` definido na lista de itens da propriedade `t-items`.\n   *\n   * Ao clicar em favoritar ou desfavoritar o `thf-breadcrumb` faz um POST com o link e a propriedade `{ isFavorite: boolean }`\n   * definidos no Ãºltimo item da propriedade `t-items`.\n   *\n   * > Caso algum parÃ¢metro seja definido na propriedade `t-params-service`, o mesmo serÃ¡ enviado para a API e retornarÃ¡\n   * apÃ³s fazer um GET ou POST.\n   *\n   * Exemplo de URL contendo o serviÃ§o de favoritar ou desfavoritar:\n   *\n   * ```\n   * https://thf.totvs.com.br/sample/api/favorite\n   * ```\n   *\n   * Ao fazer o GET o `thf-breadcrumb` concatena o link com a URL de serviÃ§o. Exemplo:\n   *\n   * ```\n   * GET http://<domain>/api/favorite?url=/example\n   * ```\n   *\n   * ```\n   * GET http://thf.totvs.com.br/sample/api/favorite?url=/example\n   * ```\n   *\n   * ```\n   * POST\n   * payload: { isFavorite: true, url: '/example' }\n   * ```\n   *\n   * Caso possua parÃ¢metros definidos na propriedade `t-params-service`:\n   *\n   * ```\n   * POST\n   * payload: { isFavorite: true, url: \"/example\", params: \"{ id: 14, user: 'dev.totvs' }\" }\n   * ```\n   *\n   * Exemplos de retorno:\n   *\n   * ```\n   * { isFavorite: true, url: \"/example\" }\n   * ```\n   *\n   * ```\n   * { isFavorite: false, url: \"/example\" }\n   * ```\n   *\n   * ```\n   * { isFavorite: false, url: \"/example\", params: \"{ id: 14, user: 'dev.totvs' }\" }\n   * ```\n   */\n  @Input('t-favorite-service') favoriteService?: string;\n\n  /**\n   * @description\n   *\n   * Lista de itens do _breadcrumb_.\n   *\n   * **Exemplo:**\n   * ```\n   * { label: 'Thf Portal', link: 'portal' }\n   * ```\n   */\n  @Input('t-items') set items(items: Array<ThfBreadcrumbItem>) {\n    this._items = items;\n    this.itemsView = [].concat(items);\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que possibilita o envio de parÃ¢metros adicionais Ã  requisiÃ§Ã£o.\n   */\n  @Input('t-params-service') paramsService?: object;\n\n  protected clickoutListener: () => void;\n\n  protected resizeListener: () => void;\n\n}\n","import { AfterViewInit, Component, DoCheck, ElementRef, IterableDiffers, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { ThfBreadcrumbBaseComponent } from './thf-breadcrumb-base.component';\nimport { ThfBreadcrumbItem } from './thf-breadcrumb-item.interface';\n\n/**\n * @docsExtends ThfBreadcrumbBaseComponent\n *\n * @example\n *\n * <example name=\"thf-breadcrumb-basic\" title=\"Totvs Breadcrumb Basic\">\n *  <file name=\"sample-thf-breadcrumb-basic/sample-thf-breadcrumb-basic.component.html\"> </file>\n *  <file name=\"sample-thf-breadcrumb-basic/sample-thf-breadcrumb-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-breadcrumb-labs\" title=\"Totvs Breadcrumb Labs\">\n *  <file name=\"sample-thf-breadcrumb-labs/sample-thf-breadcrumb-labs.component.html\"> </file>\n *  <file name=\"sample-thf-breadcrumb-labs/sample-thf-breadcrumb-labs.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-breadcrumb',\n  templateUrl: './thf-breadcrumb.component.html'\n})\nexport class ThfBreadcrumbComponent extends ThfBreadcrumbBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  showDropdown: boolean = false;\n  showDropdownToggle: boolean = false;\n  dropdownItems: Array<ThfBreadcrumbItem>;\n\n  private _breadcrumbItemsLenght: number = 0;\n  private calculatedElement = false;\n  private differ;\n  private hiddenWithoutResize = false;\n  private initialized = false;\n  private timeoutResize;\n\n  @ViewChild('breadcrumb', { read: ElementRef, static: true }) breadcrumbElement: ElementRef;\n  @ViewChild('dropdownIcon', { read: ElementRef, static: false }) dropdownIcon: ElementRef;\n\n  constructor(differs: IterableDiffers, private element: ElementRef, public renderer: Renderer2) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n\n    this.initializeResizeListener();\n  }\n\n  ngDoCheck() {\n    const breadcrumbWidth = this.breadcrumbElement.nativeElement.offsetWidth;\n\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (breadcrumbWidth && !this.calculatedElement && this.initialized) {\n      this.initBreadcrumbSize();\n    }\n\n    if (this.hiddenWithoutResize) {\n      this.debounceResize();\n      this.hiddenWithoutResize = false;\n    }\n\n    this.checkChangeOnItems();\n  }\n\n  ngOnDestroy() {\n    this.removeClickoutListener();\n    this.removeResizeListener();\n  }\n\n  toggleDropdown() {\n    this.showDropdown = !this.showDropdown;\n    this.initializeClickoutListener();\n  }\n\n  private wasClickedonDropdown = (event: MouseEvent) => {\n    const clickedOutIconDropdown = this.checkClickOutElement(event, this.dropdownIcon);\n\n    if (clickedOutIconDropdown) {\n      this.showDropdown = false;\n      this.removeClickoutListener();\n    }\n  }\n\n  private checkClickOutElement(event, element) {\n    return element && !element.nativeElement.contains(event.target);\n  }\n\n  private checkChangeOnItems() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.items);\n      if (changes) {\n        this.calcBreadcrumbItemsWidth();\n        this.calculatedElement = false;\n      }\n    }\n  }\n\n  private calcBreadcrumb() {\n    const breadcrumbFavorite = this.getBreadcrumbFavoriteWidth();\n    const breadcrumb = this.getBreadcrumbWidth(breadcrumbFavorite);\n\n    if (breadcrumb <= this._breadcrumbItemsLenght) {\n      this.enableBreadcrumbResponsive();\n    } else {\n      this.disableBreadcrumbResponsive();\n    }\n  }\n\n  private getBreadcrumbFavoriteWidth() {\n    return this.favoriteService ? this.element.nativeElement\n      .querySelector('.thf-breadcrumb-favorite').offsetWidth + 20 : 0;\n  }\n\n  private getBreadcrumbWidth(breadcrumbFavorite) {\n    return this.element.nativeElement.querySelector('.thf-breadcrumb').offsetWidth - breadcrumbFavorite;\n  }\n\n  private calcBreadcrumbItemsWidth() {\n    const breadcrumbItem = this.element.nativeElement\n      .querySelectorAll('.thf-breadcrumb-item, .thf-breadcrumb-item-unclickable');\n\n    this._breadcrumbItemsLenght = Array.from(breadcrumbItem)\n      .map(breadcrumb => breadcrumb['offsetWidth'])\n      .reduce((a, b) => a + b, 16);\n  }\n\n  private enableBreadcrumbResponsive() {\n    this.showDropdownToggle = true;\n    this.itemsView = this.items.slice(-2);\n    this.dropdownItems = this.items.slice(0, -2).reverse();\n  }\n\n  private disableBreadcrumbResponsive() {\n    this.showDropdownToggle = false;\n    this.itemsView = [].concat(this.items);\n    this.showDropdown = false;\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n\n      if (this.calculatedElement && !this.hiddenWithoutResize && this.breadcrumbElement.nativeElement.offsetWidth === 0) {\n        this.hiddenWithoutResize = true;\n      } else {\n        this.calcBreadcrumb();\n      }\n\n    }, 50);\n  }\n\n  private initBreadcrumbSize() {\n    this.calcBreadcrumbItemsWidth();\n    this.calcBreadcrumb();\n    this.calculatedElement = true;\n  }\n\n  private initializeClickoutListener() {\n    this.clickoutListener = this.renderer.listen('document', 'click', this.wasClickedonDropdown);\n  }\n\n  private initializeResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.debounceResize();\n    });\n  }\n\n  private removeClickoutListener() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n  }\n\n  private removeResizeListener() {\n    this.resizeListener();\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ThfBreadcrumbItem } from './../thf-breadcrumb-item.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza o dropdown do thf-breadcrumb.\n */\n@Component({\n  selector: 'thf-breadcrumb-dropdown',\n  templateUrl: './thf-breadcrumb-dropdown.component.html'\n})\nexport class ThfBreadcrumbDropdownComponent {\n\n  // Itens a serem apresentados na lista do dropdown.\n  @Input('t-items') items: Array<ThfBreadcrumbItem>;\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o utilizado para favoritar/desfavoritar uma url no componente thf-breadcrumb.\n * A API deve retornar um objeto no formato { isFavorite: booleano, url: string }. Em ambos os mÃ©todos, GET e POST este\n * objeto deve ser retornado.\n * Ao alterar o status de favorito, a API deve retornar o objeto acima, com o novo status atualizado.\n * No mÃ©todo POST, existe a possibilidade de ser enviado parÃ¢metros junto com a requisiÃ§Ã£o. Neste caso, o objeto enviado\n * para a API terÃ¡ o formato: { isFavorite: booleano, url: string, params: {} }, onde params Ã© o objeto que pode ser enviado\n * junto com a requisiÃ§Ã£o.\n *\n */\n@Injectable()\nexport class ThfBreadcrumbFavoriteService {\n\n  private _url: string;\n  private _bodyParams: object;\n\n  get url(): string { return this._url; }\n\n  get bodyParams(): object { return this._bodyParams; }\n\n  constructor(private http: HttpClient) { }\n\n  configService(url, params, item) {\n    this._url = url;\n    this._bodyParams = {\n      isFavorite: false,\n      url: item.link,\n      params: params\n    };\n  }\n\n  sendStatusFavorite(status): Observable<any> {\n    this.bodyParams['isFavorite'] = status;\n    return this.http.post(this.url, this.bodyParams);\n  }\n\n  getFavorite(): Observable<any> {\n    return this.http.get(this.url, { responseType: 'json', params: { url: this.bodyParams['url'] }});\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { ThfBreadcrumbItem } from './../thf-breadcrumb-item.interface';\nimport { ThfBreadcrumbFavoriteService } from './thf-breadcrumb-favorite.service';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza o serviÃ§o de favoritar do thf-breadcrumb.\n */\n@Component({\n  selector: 'thf-breadcrumb-favorite',\n  templateUrl: './thf-breadcrumb-favorite.component.html',\n  providers: [ThfBreadcrumbFavoriteService]\n})\nexport class ThfBreadcrumbFavoriteComponent implements OnInit, OnDestroy {\n\n  favorite: boolean = false;\n  private getSubscription: Subscription;\n  private setSubscription: Subscription;\n\n  // URL do serviÃ§o.\n  @Input('t-favorite-service') favoriteService: string;\n\n  // Item do breadcrumb ativo.\n  @Input('t-item-active') itemActive: ThfBreadcrumbItem;\n\n  // ParÃ¢metro que serÃ¡ enviado junto com o serviÃ§o de favoritar.\n  @Input('t-params-service') paramsService: object;\n\n  constructor(private service: ThfBreadcrumbFavoriteService) { }\n\n  ngOnInit() {\n    this.service.configService(this.favoriteService, this.paramsService, this.itemActive);\n    this.getStatusFavorite();\n  }\n\n  ngOnDestroy(): void {\n\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n\n    if (this.setSubscription) {\n      this.setSubscription.unsubscribe();\n    }\n  }\n\n  toggleFavoriteAction() {\n    this.favorite ? this.setStatusFavorite(false) : this.setStatusFavorite(true);\n  }\n\n  private getStatusFavorite() {\n    this.getSubscription = this.service.getFavorite().subscribe(result => this.favorite = result.isFavorite);\n  }\n\n  private setStatusFavorite(status) {\n    this.setSubscription = this.service.sendStatusFavorite(status).subscribe(result => this.favorite = result.isFavorite);\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza cada item do thf-breadcrumb.\n */\n@Component({\n  selector: 'thf-breadcrumb-item',\n  templateUrl: './thf-breadcrumb-item.component.html'\n})\nexport class ThfBreadcrumbItemComponent {\n\n  // AÃ§Ã£o que serÃ¡ executada ao clicar sobre o item.\n  @Input('t-action') action: Function;\n\n  // Label do item.\n  @Input('t-label') label: string;\n\n  // Link do item.\n  @Input('t-link') link: string;\n\n  // Especifica se item Ã© o link ativo.\n  @Input('t-item-active') itemActive: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ThfBreadcrumbComponent } from './thf-breadcrumb.component';\nimport { ThfBreadcrumbDropdownComponent } from './thf-breadcrumb-dropdown/thf-breadcrumb-dropdown.component';\nimport { ThfBreadcrumbFavoriteComponent } from './thf-breadcrumb-favorite/thf-breadcrumb-favorite.component';\nimport { ThfBreadcrumbItemComponent } from './thf-breadcrumb-item/thf-breadcrumb-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-breadcrumb.\n *\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    ThfBreadcrumbComponent,\n    ThfBreadcrumbDropdownComponent,\n    ThfBreadcrumbFavoriteComponent,\n    ThfBreadcrumbItemComponent\n  ],\n  exports: [ThfBreadcrumbComponent]\n})\nexport class ThfBreadcrumbModule { }\n","// Idiomas suportados pelas pÃ¡ginas\nexport const thfLocales = ['pt', 'en', 'es'];\n// Idioma padrÃ£o\nexport const thfLocaleDefault = 'pt';\n\n/**\n * @deprecated\n * Utilize o mÃ©todo `getShortBrowserLanguage`.\n *\n * @description\n * Retorna idioma do browser ou o idioma padrÃ£o.\n */\nexport function browserLanguage() {\n  return getShortBrowserLanguage();\n}\n\n/**\n * Retorna o idioma atual do navegador\n */\nexport function getBrowserLanguage(): string {\n  // navigator.userLanguage is the value for IE10\n  const language = navigator.language || navigator['userLanguage'];\n  const shortLanguage = getShortLanguage(language);\n\n  return thfLocales.includes(shortLanguage) ? language : thfLocaleDefault;\n}\n\n/**\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\n *\n * Caso o valor retornado pelo navegador nÃ£o estiver dentro dos idiomas suportados pelo THF,\n * serÃ¡ retornado a linguagem padrÃ£o (thfLocaleDefault).\n */\nexport function getShortBrowserLanguage(): string {\n  return getShortLanguage(getBrowserLanguage());\n}\n\n/**\n * Retorna o idioma com somente a abreviaÃ§Ã£o do idioma (duas primeiras letras).\n * Por exemplo: \"pt\" ou \"es\".\n *\n * @param language {string} linguagem.\n *\n * @returns sigla do idioma padrÃ£o {string}.\n *\n * @default pt\n */\nexport function getShortLanguage(language: string): string {\n  return (language || thfLocaleDefault).toLowerCase().substring(0, 2);\n}\n\nexport function isLanguage(value) {\n  const languageRegex = new RegExp('^[a-z]{2}(\\-[a-z]{2})?$', 'i');\n\n  return languageRegex.test(value);\n}\n\n/* istanbul ignore next */\nexport function reloadCurrentPage() {\n  window.location.assign(location.href);\n}\n\nexport function convertToBoolean(val: any): boolean {\n  if (typeof val === 'string') {\n    val = val.toLowerCase().trim();\n    return (val === 'true' || val === 'on' || val === '');\n  }\n\n  if (typeof val === 'number') {\n    return val === 1;\n  }\n\n  return !!val;\n}\n\nexport function convertToInt(value: any, valueDefault?: any): number {\n  const validNumber = parseInt(value, 10);\n  const validDefaultValue = parseInt(valueDefault, 10);\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\n\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\n}\n\nexport function isTypeof(object: any, type: any) {\n  return typeof object === type;\n}\n\n/**\n *\n * @param fn FunÃ§Ã£o que serÃ¡ executada dentro do contexto. Podendo ser o nome da funÃ§Ã£o\n * ou a referÃªncia da mesma.\n *\n * @param context Contexto do qual a funÃ§Ã£o serÃ¡ executada.\n */\nexport function callFunction(fn: any, context: any, param?): void {\n  if (isTypeof(fn, 'function')) {\n    fn.call(context, param);\n  } else {\n    context[fn](param);\n  }\n}\n\nexport function convertIsoToDate(value: string , start: boolean, end: boolean) {\n  if (value) {\n    const day = parseInt(value.substring(8, 10), 10);\n    const month = parseInt(value.substring(5, 7), 10);\n    const year = parseInt(value.substring(0, 4), 10);\n    if (start) {\n      const date = new Date(year, month - 1, day, 0, 0, 0);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else if (end) {\n      const date = new Date(year, month - 1, day, 23, 59, 59);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else {\n      const milliseconds = Date.parse(value);\n      const timezone = new Date().getTimezoneOffset() * 60000;\n      return new Date(milliseconds + timezone);\n    }\n  }\n}\n\nexport function convertDateToISODate(date: Date) {\n  if (date) {\n    const getMonth = date.getMonth() + 1;\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\n    const year = formatYear(date.getFullYear());\n\n    return year + '-' + month + '-' + day;\n  } else {\n    return null;\n  }\n}\n\nexport function convertDateToISOExtended(date: Date, time?: string) {\n  if (date) {\n\n  const getMonth = date.getMonth() + 1;\n  const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n  const month = getMonth < 10 ? '0' + getMonth : getMonth;\n  const year = formatYear(date.getFullYear());\n\n  const dateString = date.toString();\n\n  if (time !== null) {\n    return year + '-' + month + '-' + day + time;\n  } else {\n    return year + '-' + month + '-' + day + 'T' + dateString.substring(16, 24) +\n        dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\n  }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\n * @param year Ano\n */\nexport function formatYear(year: number) {\n\n  if (year >= 1000) {\n    return year.toString();\n  }\n\n  if (year > 99 && year < 1000) {\n    return `0${year}`;\n  }\n\n  if (year > 9 && year < 100) {\n    return `00${year}`;\n  }\n\n  if (year >= 0 && year < 10) {\n    return `000${year}`;\n  }\n\n}\n// Verifica se o navegador em que estÃ¡ sendo usado Ã© Internet Explorer ou Edge\nexport function isIEOrEdge() {\n  const userAgent = window.navigator.userAgent;\n\n  return /msie\\s|trident\\/|edge\\//i.test(userAgent);\n}\n\n// Verifica qual o dispositivo que estÃ¡ sendo usado\nexport function isMobile() {\n  const userAgent = window.navigator.userAgent;\n\n  return userAgent.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i);\n}\n\nexport function isEquals(value, comparedValue) {\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\n}\n\nexport function isKeyCodeEnter(event: any): boolean {\n  return event.keyCode === 13 || event.which === 13;\n}\n\n/**\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\n * @param date Data\n * @param year Ano original\n */\nexport function setYearFrom0To100(date: Date, year: number) {\n  if (year >= 0 && year < 100 ) {\n    date.setFullYear(year);\n  }\n}\n\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\n  options.sort((optionA, optionB) => {\n    optionA = optionA[property].toString().toLowerCase();\n    optionB = optionB[property].toString().toLowerCase();\n\n    if (optionA < optionB) {\n      return -1;\n    }\n    if (optionA > optionB) {\n      return 1;\n    }\n    return 0;\n  });\n}\n\nexport function removeDuplicatedOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (i === 0) { continue; }\n\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].value === undefined || list[i].value === null ) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function validValue(value: any) {\n  return (value !== null && value !== undefined && value !== '') || value === false;\n}\n\nexport function isExternalLink(url): boolean {\n  return url ? url.startsWith('http') : false;\n}\n\nexport function openExternalLink(url): void {\n  window.open(url, '_blank');\n}\n\nexport function  getFormattedLink(link: string): string {\n  let formattedLink = '';\n  // Retira todos os pontos no comeÃ§o da URL.\n  if (link) {\n    formattedLink = link.replace(/^(\\.)+/g, '');\n  }\n  // Verifica se foi utilizado uma rota que nÃ£o comece com barra.\n  if (!formattedLink.startsWith('/')) {\n    formattedLink = '/'.concat(formattedLink);\n  }\n  return formattedLink;\n}\n\n/**\n * MÃ©todo responsÃ¡vel por ordenar dois valores.\n *\n * @param leftSide Primeiro valor a ser comparado.\n * @param rightSide Segundo valor a ser comparado.\n * @param ascending Determina se serÃ¡ em ordem ascendente ou descendente.\n */\nexport function sortValues(leftSide: string, rightSide: string, ascending: boolean = true): number {\n  if (ascending) {\n    if (leftSide < rightSide) {\n      return -1;\n    } else if (leftSide > rightSide) {\n      return 1;\n    }\n  } else if (ascending === false) {\n    if (leftSide < rightSide) {\n      return 1;\n    } else if (leftSide > rightSide) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\n  if (dateStart && dateEnd) {\n    return (date >= dateStart && date <= dateEnd);\n  } else if (dateStart && !dateEnd) {\n    return (date >= dateStart);\n  } else if (!dateStart && dateEnd) {\n    return (date <= dateEnd);\n  } else {\n    return true;\n  }\n}\n\nexport function uuid() {\n  function hex4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  return hex4() + hex4() + '-' + hex4() + '-' + hex4() + '-' +\n  hex4() + '-' + hex4() + hex4() + hex4();\n}\n\nexport function capitalizeFirstLetter(text: string): string {\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\n}\n\n/**\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\n * origem.\n *\n * Exemplo:\n *\n * ```\n * const people = [\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 },\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapArrayByProperties(people, properties);\n *\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\n * ```\n *\n * Um outro uso para o mÃ©todo Ã© \"parear\" todos os objetos do array com as mesmas propriedades.\n *\n * ```\n * const customers = [\n *  { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', dependents: 2 }, // sem genre\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\n *\n * const pattern = mapArrayByProperties(customers, properties);\n * console.log(pattern);\n *\n * // [\n * //   { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', genre: undefined, dependents: 2 },\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\n * // ]\n * ```\n *\n * @param items {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\n  return items.map(item => mapObjectByProperties(item, properties));\n}\n\n/**\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\n *\n * Exemplo:\n *\n * ```\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 };\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapObjectByProperties(person, properties);\n *\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\n * ```\n *\n * @param object {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\n  const getSelectedProperties = (selectedProperties, property) => ({ ...selectedProperties, [property]: object[property] });\n\n  return properties.reduce(getSelectedProperties, {});\n}\n\n/**\n * Retorna os valores de um objeto dentro de um array.\n *\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versÃ£o typescrit for atualizada.\n *\n * @param object Objeto de onde serÃ¡ pego os valores.\n */\nexport function valuesFromObject(object: any = {}): Array<any> {\n  return Object.keys(object).map(property => object[property]);\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nconst THF_BUTTON_TYPES = ['default', 'primary', 'danger', 'link'];\nconst THF_BUTTON_TYPE_DEFAULT = 'default';\n\n/**\n * @description\n *\n * O `thf-button` permite que o usuÃ¡rio execute aÃ§Ãµes predefinidas pelo desenvolvedor.\n *\n * AtravÃ©s dos tipos, Ã© possÃ­vel identificar a importÃ¢ncia de cada aÃ§Ã£o, sendo ela primÃ¡ria (`primary`) ou atÃ© mesmo uma\n * aÃ§Ã£o irreversÃ­vel (`danger`), como a exclusÃ£o de um registro.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite `labels` extensos que quebram o layout do `thf-button`, use `labels` diretos, curtos e intuitivos.\n * - Utilize apenas um `thf-button` configurado como `primary` por pÃ¡gina.\n * - Para aÃ§Ãµes irreversÃ­veis use sempre o tipo `danger`.\n */\nexport class ThfButtonBaseComponent {\n\n  private _disabled?: boolean = false;\n  private _loading?: boolean = false;\n  private _small?: boolean = false;\n  private _type?: string = 'default';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Label do botÃ£o.\n   */\n  @Input('t-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Exibe um Ã­cone de carregamento Ã  esquerda do _label_ do botÃ£o.\n   *\n   * > Quando esta propriedade estiver habilitada, desabilitarÃ¡ o botÃ£o.\n   *\n   * @default `false`\n   */\n  @Input('t-loading') set loading(value: boolean) {\n    this._loading = convertToBoolean(value);\n  }\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  /**\n   * Ãcone exibido ao lado esquerdo do label do botÃ£o.\n   *\n   * Ã possÃ­vel usar qualquer uma dos Ã­cones da [Biblioteca de Ã­cones](/guides/icons).\n   */\n  @Input('t-icon') icon?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Deixa o botÃ£o menor.\n   *\n   * @default `false`\n   */\n  @Input('t-small') set small(value: boolean) {\n    this._small = <any>value === '' ? true : convertToBoolean(value);\n  }\n  get small(): boolean {\n    return this._small;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o estilo do `thf-button`.\n   *\n   * Valore vÃ¡lidos:\n   *  - `default`: estilo padrÃ£o do `thf-button`.\n   *  - `primary`: deixa o `thf-button` com destaque, deve ser usado para aÃ§Ãµes primÃ¡rias.\n   *  - `danger`: deve ser usado para aÃ§Ãµes que o usuÃ¡rio precisa ter cuidado ao executa-lÃ¡.\n   *  - `link`: o `thf-button` recebe o estilo de um link.\n   *\n   * @default `default`\n   */\n  @Input('t-type') set type(value: string) {\n    this._type = THF_BUTTON_TYPES.includes(value) ? value : THF_BUTTON_TYPE_DEFAULT;\n  }\n  get type(): string {\n    return this._type;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o `thf-button` e nÃ£o permite que o usuÃ¡rio interaja com o mesmo.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(value: boolean) {\n    this._disabled = <any>value === '' ? true : convertToBoolean(value);\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio clicar sobre o `thf-button`. */\n  @Output('t-click') click = new EventEmitter<null>();\n\n}\n","import { Component } from '@angular/core';\n\nimport { ThfButtonBaseComponent } from './thf-button-base.component';\n\n/**\n * @docsExtends ThfButtonBaseComponent\n *\n * @example\n *\n * <example name=\"thf-button-basic\" title=\"Totvs Button Basic\">\n *  <file name=\"sample-thf-button-basic/sample-thf-button-basic.component.html\"> </file>\n *  <file name=\"sample-thf-button-basic/sample-thf-button-basic.component.ts\"> </file>\n *  <file name=\"sample-thf-button-basic/sample-thf-button-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-thf-button-basic/sample-thf-button-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-button-labs\" title=\"Totvs Button Labs\">\n *  <file name=\"sample-thf-button-labs/sample-thf-button-labs.component.html\"> </file>\n *  <file name=\"sample-thf-button-labs/sample-thf-button-labs.component.ts\"> </file>\n *  <file name=\"sample-thf-button-labs/sample-thf-button-labs.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-thf-button-labs/sample-thf-button-labs.component.po.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-button',\n  templateUrl: './thf-button.component.html'\n})\nexport class ThfButtonComponent extends ThfButtonBaseComponent {\n\n  onClick() {\n    this.click.emit(null);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfButtonComponent } from './thf-button.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-button.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ThfButtonComponent\n  ],\n  exports: [\n    ThfButtonComponent\n  ]\n})\nexport class ThfButtonModule { }\n","import { ElementRef, Injectable } from '@angular/core';\n\n /**\n  * @docsPrivate\n  * @description\n  *\n  * ServiÃ§o responsÃ¡vel por gerenciar as posiÃ§Ãµes de um elemento em relaÃ§Ã£o a um elemento alvo. Ele pode receber as\n  * seguintes posiÃ§Ãµes:\n  *\n  * - `right`: Posiciona o elemento no lado direito do componente alvo.\n  * - `right-bottom`: Posiciona o elemento no lado direito inferior do componente alvo.\n  * - `right-top`: Posiciona o elemento no lado direito superior do componente alvo.\n  * - `bottom`: Posiciona o elemento abaixo do componente alvo.\n  * - `bottom-left`: Posiciona o elemento abaixo e Ã  esquerda do componente alvo.\n  * - `bottom-right`: Posiciona o elemento abaixo e Ã  direita do componente alvo.\n  * - `left`: Posiciona o elemento no lado esquerdo do componente alvo.\n  * - `left-top`: Posiciona o elemento no lado esquerdo superior do componente alvo.\n  * - `left-bottom`: Posiciona o elemento no lado esquerdo inferior do componente alvo.\n  * - `top`: Posiciona o elemento acima do componente alvo.\n  * - `top-right`: Posiciona o elemento acima e Ã  direita do componente alvo.\n  * - `top-left`: Posiciona o elemento acima e Ã  esquerda do componente alvo.\n  *\n  * Caso o elemento nÃ£o caiba na tela na posiÃ§Ã£o indicada ele serÃ¡ rotacionado automaticamente para se adequar,\n  * inicialmente no lado definido como padrÃ£o e em seguida seguindo o sentido horÃ¡rio.\n  */\n\nconst thfControlPositionSidesDefault: Array<string> = [\n  'bottom', 'bottom-left', 'bottom-right',\n  'left', 'left-top', 'left-bottom',\n  'top', 'top-right', 'top-left',\n  'right', 'right-bottom', 'right-top'\n];\n\n@Injectable()\nexport class ThfControlPositionService {\n\n  private arrowDirection: string;\n  private customPositions: Array<string>;\n  private differenceDiagonalToWidthArrow: number = 3;\n  private element: HTMLElement;\n  private elementOffset: number;\n  private isCornerAligned: boolean;\n  private isSetElementWidth: boolean = false;\n  // offset da seta em relaÃ§Ã£o ao canto do componente\n  private offsetArrow: number = 12;\n  private targetElement: HTMLElement;\n\n  /**\n   * @description Ajusta a posiÃ§Ã£o do elemento, caso nÃ£o couber em tela irÃ¡ para prÃ³xima posiÃ§Ã£o.\n   *\n   * @param value posiÃ§Ã£o para exibiÃ§Ã£o do elemento\n   */\n  adjustPosition(value: string) {\n    const position = value || 'bottom';\n    this.elementPosition(position);\n    this.customPositions && this.customPositions.length ? this.adjustCustomPosition(position) : this.adjustDefaultPosition(position);\n  }\n\n  /**\n   * @description Retorna a direÃ§Ã£o da seta, conforme a posiÃ§Ã£o do elemento.\n   */\n  getArrowDirection() {\n    return this.arrowDirection;\n  }\n\n  /**\n   * @description MÃ©todo responsÃ¡vel por definir as propriedades utilizadas para exibir o elemento na posiÃ§Ã£o correta.\n   *\n   * @param element elemento que serÃ¡ exibido\n   * @param elementOffset offSet do elemento\n   * @param targetElement elemento de onde deve partir a exibiÃ§Ã£o\n   * @param customPositions posiÃ§Ãµes que sobrescreve as posiÃ§Ãµes padrÃµes\n   * @param isSetElementWidth indica se deve definir o tamanho do elemento a ser exibido, caso for verdadeiro serÃ¡ igual do targetElement\n   * @param isCornerAligned indica se o elemento filho serÃ¡ alinhado nos cantos do elemneto pai.\n   */\n  setElements(element: ElementRef | HTMLElement, elementOffset: number, targetElement: ElementRef | HTMLElement,\n              customPositions?: Array<string>, isSetElementWidth: boolean = false, isCornerAligned: boolean = false) {\n\n    this.element = (element instanceof ElementRef) ? element.nativeElement : element;\n    this.targetElement = (targetElement instanceof ElementRef) ? targetElement.nativeElement : targetElement;\n\n    this.elementOffset = elementOffset;\n\n    this.customPositions = customPositions;\n    this.isSetElementWidth = isSetElementWidth;\n    this.isCornerAligned = isCornerAligned;\n  }\n\n  private adjustCustomPosition(position: string) {\n    const positionLength = this.customPositions.length;\n\n    let sidesCount = 0;\n\n    while (sidesCount++ < positionLength) {\n      if (this.overflowAllSides(position)) {\n        position = this.nextPosition(position, this.customPositions);\n        this.elementPosition(position);\n      }\n    }\n  }\n\n  private adjustDefaultPosition(position: string) {\n    const mainPositions = this.getMainPositions();\n    const mainPositionLength = mainPositions.length;\n\n    let mainSidesCount = 0;\n\n    while (mainSidesCount++ < mainPositionLength) {\n      const mainPosition = this.getMainPosition(position);\n      this.elementPosition(position);\n\n      if (this.overflowMain(mainPosition)) {\n        position = this.nextPosition(mainPosition, mainPositions);\n        continue;\n      } else if (this.overflowAllSides(position)) {\n        this.verifySubPositions(position);\n        return;\n      }\n\n      return;\n    }\n  }\n\n  private elementPosition(position: string) {\n    this.isCornerAligned ? this.setAlignedElementPosition(position) : this.setElementPosition(position);\n  }\n\n  private getMainPosition(position: string) {\n    return (position.indexOf('-') > -1) ? position.substring(0, position.indexOf('-')) : position;\n  }\n\n  private getMainPositions() {\n    const defaultMainPositions = ['top', 'right', 'bottom', 'left'];\n\n    return this.customPositions && this.customPositions.length ?\n      this.getMainPositionsByCustomPositions(this.customPositions) : defaultMainPositions;\n  }\n\n  private getMainPositionsByCustomPositions(customPositions: Array<string>) {\n    const mainPositions = [];\n    const customPositionsLength = customPositions.length;\n\n    for (let i = 0; i < customPositionsLength; i++) {\n      const position = customPositions[i];\n\n      const mainPosition = this.getMainPosition(position);\n\n      if (!mainPositions.includes(mainPosition)) {\n        mainPositions.push(mainPosition);\n      }\n    }\n\n    return mainPositions;\n  }\n\n  private getOverflows() {\n    const sizesAndPositions = this.getSizesAndPositions();\n\n    return {\n      right: (sizesAndPositions.element.right > sizesAndPositions.window.innerWidth),\n      top: (sizesAndPositions.element.top <= 0),\n      left: (sizesAndPositions.element.left <= 0),\n      bottom: (sizesAndPositions.element.bottom > sizesAndPositions.window.innerHeight)\n    };\n  }\n\n  private getSizesAndPositions() {\n    return {\n      window: {\n        scrollY: window.scrollY,\n        scrollX: window.scrollX,\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight\n      },\n      element: this.element.getBoundingClientRect(),\n      target: this.targetElement ? this.targetElement.getBoundingClientRect() : { top: 0, bottom: 0, right: 0, left: 0 }\n    };\n  }\n\n  private nextPosition(position: string, positions: Array<string> = []): string {\n    const index = positions.indexOf(position);\n    const nextIndex = index + 1;\n\n    if (index > -1 && nextIndex < positions.length) {\n\n      return positions[nextIndex];\n    } else {\n      return positions[0];\n    }\n\n  }\n\n  private overflowAllSides(position: string) {\n    const overflows = this.getOverflows();\n\n    switch (position) {\n      case 'top': return overflows.top || overflows.right || overflows.left;\n      case 'top-right': return overflows.top || overflows.right;\n      case 'top-left': return overflows.top || overflows.left;\n      case 'right': return overflows.right || overflows.top || overflows.bottom;\n      case 'right-top': return overflows.right || overflows.top;\n      case 'right-bottom': return overflows.right || overflows.bottom;\n      case 'bottom': return overflows.bottom || overflows.right || overflows.left;\n      case 'bottom-right': return overflows.bottom || overflows.right;\n      case 'bottom-left': return overflows.bottom || overflows.left;\n      case 'left': return overflows.left || overflows.top || overflows.bottom;\n      case 'left-top': return overflows.left || overflows.top;\n      case 'left-bottom': return overflows.left || overflows.bottom;\n    }\n  }\n\n  private overflowMain(position: string) {\n    const overflows = this.getOverflows();\n\n    switch (position) {\n      case 'top': return overflows.top;\n      case 'right': return overflows.right;\n      case 'bottom': return overflows.bottom;\n      case 'left': return overflows.left;\n    }\n  }\n\n  private setAlignedArrowDirection(elementPosition: string) {\n    switch (elementPosition) {\n      case 'top-left': return 'bottom-left';\n      case 'top-right': return 'bottom-right';\n      case 'bottom-right': return 'top-right';\n      case 'bottom-left': return 'top-left';\n    }\n  }\n\n  private setAlignedBottomPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.bottom + this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left - displacement + 'px';\n  }\n\n  private setAlignedElementPosition(position: string) {\n    this.setElementWidth();\n\n    const sizesAndPositions: any = this.getSizesAndPositions();\n\n    switch (position) {\n      case 'bottom-left':\n        this.setAlignedBottomPositions(0, sizesAndPositions);\n        break;\n      case 'bottom-right':\n        this.setAlignedBottomPositions(sizesAndPositions.element.width - sizesAndPositions.target.width, sizesAndPositions);\n        break;\n      case 'top-left':\n        this.setAlignedTopPositions(0, sizesAndPositions);\n        break;\n      case 'top-right':\n        this.setAlignedTopPositions(sizesAndPositions.element.width - sizesAndPositions.target.width, sizesAndPositions);\n        break;\n    }\n\n    this.arrowDirection = this.setAlignedArrowDirection(position);\n\n  }\n\n  private setAlignedTopPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - sizesAndPositions.element.height - this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left - displacement + 'px';\n  }\n\n  private setArrowDirection(elementPosition: string) {\n    switch (elementPosition) {\n      case 'top': return 'bottom';\n      case 'top-left': return 'bottom-right';\n      case 'top-right': return 'bottom-left';\n      case 'right': return 'left';\n      case 'right-top': return 'left-bottom';\n      case 'right-bottom': return 'left-top';\n      case 'bottom': return 'top';\n      case 'bottom-right': return 'top-left';\n      case 'bottom-left': return 'top-right';\n      case 'left': return 'right';\n      case 'left-bottom': return 'right-top';\n      case 'left-top': return 'right-bottom';\n    }\n  }\n\n  private setBottomPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.bottom + this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left + (sizesAndPositions.target.width / 2) - displacement + 'px';\n  }\n\n  private setElementPosition(position: string) {\n    this.setElementWidth();\n\n    const sizesAndPositions = this.getSizesAndPositions();\n\n    switch (position) {\n      case 'top':\n        this.setTopPositions((sizesAndPositions.element.width / 2), sizesAndPositions);\n        break;\n      case 'top-left':\n        this.setTopPositions((sizesAndPositions.element.width - this.offsetArrow - this.differenceDiagonalToWidthArrow), sizesAndPositions);\n        break;\n      case 'top-right':\n        this.setTopPositions((this.offsetArrow + this.differenceDiagonalToWidthArrow), sizesAndPositions);\n        break;\n      case 'right':\n        this.setRightPositions((sizesAndPositions.element.height / 2), sizesAndPositions);\n        break;\n      case 'right-top':\n        this.setRightPositions((sizesAndPositions.element.height - this.offsetArrow - this.differenceDiagonalToWidthArrow),\n          sizesAndPositions);\n        break;\n      case 'right-bottom':\n        this.setRightPositions(this.offsetArrow, sizesAndPositions);\n        break;\n      case 'bottom':\n        this.setBottomPositions((sizesAndPositions.element.width / 2), sizesAndPositions);\n        break;\n      case 'bottom-right':\n        this.setBottomPositions((this.offsetArrow + this.differenceDiagonalToWidthArrow), sizesAndPositions);\n        break;\n      case 'bottom-left':\n        this.setBottomPositions((sizesAndPositions.element.width - this.offsetArrow - this.differenceDiagonalToWidthArrow),\n          sizesAndPositions);\n        break;\n      case 'left':\n        this.setLeftPositions((sizesAndPositions.element.height / 2), sizesAndPositions);\n        break;\n      case 'left-bottom':\n        this.setLeftPositions(this.offsetArrow, sizesAndPositions);\n        break;\n      case 'left-top':\n        this.setLeftPositions((sizesAndPositions.element.height - this.offsetArrow), sizesAndPositions);\n        break;\n    }\n\n    this.arrowDirection = this.setArrowDirection(position);\n  }\n\n  private setElementWidth() {\n    if (this.isSetElementWidth && this.targetElement) {\n      this.element.style.width = `${this.targetElement.clientWidth}px`;\n    }\n  }\n\n  private setLeftPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - displacement + (sizesAndPositions.target.height / 2) + 'px';\n    this.element.style.left = sizesAndPositions.target.left - sizesAndPositions.element.width - this.elementOffset + 'px';\n  }\n\n  private setRightPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - displacement + (sizesAndPositions.target.height / 2) + 'px';\n    this.element.style.left = sizesAndPositions.target.right + this.elementOffset + 'px';\n  }\n\n  private setTopPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - sizesAndPositions.element.height - this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left + (sizesAndPositions.target.width / 2) - displacement + 'px';\n  }\n\n  private verifySubPositions(position: string) {\n    if (position.indexOf('-') > -1) {\n      position = position.substring(0, position.indexOf('-'));\n      this.elementPosition(position);\n    }\n\n    let align = 0;\n    while (align++ < 3) {\n      if (this.overflowAllSides(position)) {\n        position = this.nextPosition(position, thfControlPositionSidesDefault);\n        this.elementPosition(position);\n      } else {\n        return null;\n      }\n    }\n  }\n\n}\n","// Array de posiÃ§Ãµes.\nexport const THF_CONTROL_POSITIONS = [\n  'right',\n  'right-top',\n  'right-bottom',\n  'top',\n  'top-left',\n  'top-right',\n  'left',\n  'left-top',\n  'left-bottom',\n  'bottom',\n  'bottom-left',\n  'bottom-right'\n];\n","import { Input } from '@angular/core';\n\nimport { THF_CONTROL_POSITIONS } from './../../services/thf-control-position/thf-control-position.constants';\n\nconst CONTENT_MAX_LENGTH = 140;\nconst THF_TOOLTIP_POSITION_DEFAULT = 'bottom';\n\n/**\n * @description\n *\n * A diretiva thf-tooltip deve ser utilizada para oferecer informaÃ§Ãµes adicionais quando os usuÃ¡rios\n * passam o mouse sobre o elemento alvo ao qual ela estÃ¡ atribuÃ­da.\n *\n * O conteÃºdo Ã© formado por um pequeno texto que deve contribuir para uma tomada de decisÃ£o ou\n * orientaÃ§Ã£o do usuÃ¡rio. A ativaÃ§Ã£o dele pode estar em qualquer componente ou tag HTML.\n *\n * Para textos maiores ou no caso de haver a necessidade de utilizar algum outro elemento como\n * conteÃºdo deve-se utilizar o [**thf-popover**](https://thf.totvs.com.br/documentation/thf-popover?view=doc).\n */\n\nexport class ThfTooltipBaseDirective {\n\n  private _tooltip: string = '';\n  protected _tooltipPosition?: string = 'bottom';\n\n  /**\n   * @description\n   *\n   * Habilita e atribui um texto ao thf-tooltip, com limitaÃ§Ã£o de 140 caracteres.\n   */\n  @Input('t-tooltip') set tooltip(tooltip: string) {\n    if (tooltip && tooltip.length > CONTENT_MAX_LENGTH) {\n       this._tooltip = tooltip.substring(0, CONTENT_MAX_LENGTH);\n    } else {\n      this._tooltip = tooltip;\n    }\n  }\n  get tooltip() {\n    return this._tooltip;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o que o thf-tooltip abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o \"bottom\" (abaixo), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o thf-tooltip no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o thf-tooltip no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o thf-tooltip no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o thf-tooltip abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o thf-tooltip abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o thf-tooltip abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o thf-tooltip no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o thf-tooltip no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o thf-tooltip no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o thf-tooltip acima do componente alvo.\n   * - `top-right`: Posiciona o thf-tooltip acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o thf-tooltip acima e Ã  esquerda do componente alvo.\n   *\n   * @default bottom\n   */\n  @Input('t-tooltip-position') set tooltipPosition(position: string) {\n    this._tooltipPosition = THF_CONTROL_POSITIONS.includes(position) ? position : THF_TOOLTIP_POSITION_DEFAULT;\n  }\n  get tooltipPosition(): string {\n    return this._tooltipPosition;\n  }\n\n}\n","import { Directive, ElementRef, HostListener, OnInit, Renderer2 } from '@angular/core';\n\nimport { ThfControlPositionService } from './../../services/thf-control-position/thf-control-position.service';\nimport { ThfTooltipBaseDirective } from './thf-tooltip-base.directive';\n\n/**\n * @docsExtends ThfTooltipBaseDirective\n *\n * @example\n *\n * <example name=\"thf-tooltip-basic\" title=\"Totvs Tooltip Basic\" >\n *  <file name=\"sample-thf-tooltip-basic/sample-thf-tooltip-basic.component.html\"> </file>\n *  <file name=\"sample-thf-tooltip-basic/sample-thf-tooltip-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-tooltip-labs\" title=\"Totvs Tooltip Labs\" >\n *  <file name=\"sample-thf-tooltip-labs/sample-thf-tooltip-labs.component.html\"> </file>\n *  <file name=\"sample-thf-tooltip-labs/sample-thf-tooltip-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-tooltip-new-user\" title=\"Totvs Tooltip - New User\" >\n *  <file name=\"sample-thf-tooltip-new-user/sample-thf-tooltip-new-user.component.html\"> </file>\n *  <file name=\"sample-thf-tooltip-new-user/sample-thf-tooltip-new-user.component.ts\"> </file>\n * </example>\n *\n */\n@Directive({\n  selector: '[t-tooltip]',\n  providers: [ ThfControlPositionService ]\n})\nexport class ThfTooltipDirective extends ThfTooltipBaseDirective implements OnInit {\n\n  private arrowDirection: string;\n  private divArrow;\n  private divContent;\n  private isHidden: boolean;\n  private lastTooltipText: string;\n  private textContent;\n  private tooltipContent;\n  private tooltipOffset: number = 8;\n\n  private eventListenerFunction: () => void;\n\n  constructor(private elementRef: ElementRef,\n              private renderer: Renderer2,\n              private thfControlPosition: ThfControlPositionService) {\n\n    super();\n  }\n\n  ngOnInit() {\n    this.initScrollEventListenerFunction();\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    setTimeout(() => {\n      if (this.tooltip) {\n        this.tooltipContent ? this.showTooltip() : this.createTooltip();\n\n        this.removeArrow(this.arrowDirection);\n\n        this.thfControlPosition.adjustPosition(this.tooltipPosition);\n        this.arrowDirection = this.thfControlPosition.getArrowDirection();\n\n        this.addArrow(this.arrowDirection);\n\n        this.lastTooltipText = this.tooltip;\n      }\n    });\n\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.hideTooltip();\n  }\n\n  private addArrow(arrowDirection) {\n    this.renderer.addClass(this.divArrow, `thf-arrow-${arrowDirection}`);\n  }\n\n  private addScrollEventListener() {\n    window.addEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  // Monta a estrutura do tooltip\n  private createTooltip() {\n    this.tooltipContent = this.renderer.createElement('div');\n    this.renderer.addClass(this.tooltipContent, 'thf-tooltip');\n\n    this.divArrow = this.renderer.createElement('div');\n    this.renderer.addClass(this.divArrow, 'thf-tooltip-arrow');\n\n    this.divContent = this.renderer.createElement('div');\n    this.renderer.addClass(this.divContent, 'thf-tooltip-content');\n\n    this.textContent = this.renderer.createText(this.tooltip);\n\n    this.renderer.appendChild(this.divContent, this.textContent);\n    this.renderer.appendChild(this.tooltipContent, this.divArrow);\n    this.renderer.appendChild(this.tooltipContent, this.divContent);\n    this.renderer.appendChild(this.elementRef.nativeElement, this.tooltipContent);\n\n    this.thfControlPosition.setElements(this.tooltipContent, this.tooltipOffset, this.elementRef);\n\n    this.addScrollEventListener();\n  }\n\n  private initScrollEventListenerFunction() {\n    this.eventListenerFunction = () => {\n      if (!this.isHidden) {\n        setTimeout(() => {\n          this.thfControlPosition.adjustPosition(this.tooltipPosition);\n        });\n      }\n    };\n  }\n\n  private hideTooltip() {\n    if (this.tooltipContent) {\n      this.renderer.addClass(this.tooltipContent, 'thf-invisible');\n      this.isHidden = true;\n\n      this.removeScrollEventListener();\n    }\n  }\n\n  private removeArrow(arrowDirection) {\n    if (this.elementRef.nativeElement.querySelector(`.thf-arrow-${arrowDirection}`)) {\n      this.renderer.removeClass(this.divArrow, `thf-arrow-${arrowDirection}`);\n    }\n  }\n\n  private removeScrollEventListener() {\n    window.removeEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private showTooltip() {\n    this.renderer.removeClass(this.tooltipContent, 'thf-invisible');\n    this.updateTextContent();\n    this.isHidden = false;\n\n    this.addScrollEventListener();\n  }\n\n  private updateTextContent() {\n    if (this.lastTooltipText !== this.tooltip) {\n      this.renderer.removeChild(this.divContent, this.textContent);\n      this.textContent = this.renderer.createText(this.tooltip);\n      this.renderer.appendChild(this.divContent, this.textContent);\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfTooltipDirective } from './thf-tooltip.directive';\n\n/**\n * @description\n *\n * MÃ³dulo da diretiva Thf-Tooltip.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ThfTooltipDirective],\n  exports: [ThfTooltipDirective]\n})\n\nexport class ThfTooltipModule { }\n","/**\n * @usedBy ThfButtonGroupComponent\n *\n * @description\n *\n * Define o tipo de seleÃ§Ã£o dos botÃµes do `thf-button-group`.\n */\nexport enum ThfButtonGroupToggle {\n\n  /** SeleÃ§Ã£o mÃºltipla. */\n  Multiple = 'multiple',\n\n  /** SeleÃ§Ã£o desabilitada. */\n  None = 'none',\n\n  /** SeleÃ§Ã£o Ãºnica. */\n  Single = 'single'\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { ThfButtonGroupItem } from './thf-button-group-item.interface';\nimport { ThfButtonGroupToggle } from './thf-button-group-toggle.enum';\n\nconst THF_TOGGLE_TYPE_DEFAULT = 'none';\n\n/**\n * @description\n *\n * O componente `thf-button-group` Ã© formado por um conjunto de botÃµes distribuÃ­dos horizontalmente.\n * Cada botÃ£o do grupo Ã© tratado de forma individual, recebendo assim um rÃ³tulo, uma aÃ§Ã£o bem como se deverÃ¡ estar habilitado ou nÃ£o.\n *\n * Este componente alÃ©m de servir como um agrupador de botÃµes para aÃ§Ã£o, tambÃ©m permite que sejam utilizados\n * para seleÃ§Ãµes multiplas e Ãºnicas.\n *\n * O grupo de botÃµes deve ser utilizado para organizar as aÃ§Ãµes de maneira uniforme e transmitir a ideia de que os botÃµes fazem\n * parte de um mesmo contexto.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite usar o `thf-button-group` com apenas 1 aÃ§Ã£o, para isso utilize o `thf-button`.\n * - Procure utilizar no mÃ¡ximo 3 aÃ§Ãµes para cada `thf-button-group`.\n *\n * > As recomendaÃ§Ãµes do `thf-button` tambÃ©m valem para o `thf-button-group`.\n */\nexport class ThfButtonGroupBaseComponent {\n\n  private _small?: boolean = false;\n  private _toggle?: string = THF_TOGGLE_TYPE_DEFAULT;\n\n  /** Lista de botÃµes. */\n  @Input('t-buttons') buttons: Array<ThfButtonGroupItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Torna o grupo de botÃµes com tamanho minificado.\n   *\n   * @default `false`\n   */\n  @Input('t-small') set small(value: boolean) {\n    this._small = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get small(): boolean {\n    return this._small;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de seleÃ§Ã£o de botÃµes.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `ThfMultiselectFilterMode`.\n   *\n   * @default `none`\n   */\n  @Input('t-toggle') set toggle(value: string) {\n    this._toggle = (<any>Object).values(ThfButtonGroupToggle).includes(value) ? value : THF_TOGGLE_TYPE_DEFAULT;\n\n    this.checkSelecteds(this._toggle);\n  }\n\n  get toggle(): string {\n    return this._toggle;\n  }\n\n  onButtonClick(buttonClicked: ThfButtonGroupItem, buttonIndex: number) {\n    if (this.toggle === ThfButtonGroupToggle.Single) {\n      this.buttons.forEach((button, index) =>\n        button.selected = index === buttonIndex ? !buttonClicked.selected : false);\n    } else if (this.toggle === ThfButtonGroupToggle.Multiple) {\n      buttonClicked.selected = !buttonClicked.selected;\n    }\n  }\n\n  private checkSelecteds(toggleMode: string) {\n    if (toggleMode === ThfButtonGroupToggle.None) {\n      this.deselectAllButtons();\n    } else if (toggleMode === ThfButtonGroupToggle.Single) {\n      const hasMoreOneSelected = this.buttons.filter(button => button.selected).length > 1;\n      if (hasMoreOneSelected) {\n        this.deselectAllButtons();\n      }\n    }\n  }\n\n  private deselectAllButtons() {\n    this.buttons.forEach(button => button.selected = false);\n  }\n\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { ThfButtonGroupBaseComponent } from './thf-button-group-base.component';\n\n/**\n * @docsExtends ThfButtonGroupBaseComponent\n *\n * @example\n *\n * <example name=\"thf-button-group-basic\" title=\"Totvs Button Group Basic\">\n *  <file name=\"sample-thf-button-group-basic/sample-thf-button-group-basic.component.html\"> </file>\n *  <file name=\"sample-thf-button-group-basic/sample-thf-button-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-button-group-labs\" title=\"Totvs Button Group Labs\">\n *  <file name=\"sample-thf-button-group-labs/sample-thf-button-group-labs.component.html\"> </file>\n *  <file name=\"sample-thf-button-group-labs/sample-thf-button-group-labs.component.ts\"> </file>\n * </example>\n *\n *\n * <example name=\"thf-button-group-attendance\" title=\"Totvs Button Group - Attendance\">\n *  <file name=\"sample-thf-button-group-attendance/sample-thf-button-group-attendance.component.html\"> </file>\n *  <file name=\"sample-thf-button-group-attendance/sample-thf-button-group-attendance.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-button-group-post\" title=\"Totvs Button Group - Post\">\n *  <file name=\"sample-thf-button-group-post/sample-thf-button-group-post.component.html\"> </file>\n *  <file name=\"sample-thf-button-group-post/sample-thf-button-group-post.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-button-group',\n  templateUrl: './thf-button-group.component.html'\n})\nexport class ThfButtonGroupComponent extends ThfButtonGroupBaseComponent {\n  parentRef: any;\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n\n    // Get instance of parent to execute the actions\n    this.parentRef = viewRef['_view']['component'];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfButtonModule } from './../thf-button/index';\nimport { ThfTooltipModule } from '../../directives/thf-tooltip/index';\n\nimport { ThfButtonGroupComponent } from './thf-button-group.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-button-group.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ThfButtonModule,\n    ThfTooltipModule\n  ],\n  declarations: [\n    ThfButtonGroupComponent\n  ],\n  exports: [\n    ThfButtonGroupComponent\n  ]\n})\nexport class ThfButtonGroupModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { ThfCalendarLangService } from './services/thf-calendar.lang.service';\nimport { ThfDateService } from '../../services/thf-date';\n\nconst thfCalendarLocales = ['pt', 'en', 'es'];\nconst thfCalendarLocaleDefault = 'pt';\n\n/**\n * @description\n *\n * O `thf-calendar` Ã© um componente para seleÃ§Ã£o de datas. Ele permite uma fÃ¡cil navegaÃ§Ã£o clicando nas setas\n * de direcionamento e nos *labels* do ano ou mÃªs.\n *\n * Este componente pode receber os seguintes formatos de data:\n *\n * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n * ```\n * this.date = '2017-11-28T00:00:00-02:00';\n * ```\n *\n * - **Data (E8601DAw.): yyyy-mm-dd**\n * ```\n * this.date = '2017-11-28';\n * ```\n *\n * - **JavaScript Date Object:**\n * ```\n * this.date = new Date(2017, 10, 28);\n * ```\n *\n * > Independentemente do formato utilizado, o componente trata o valor do *model* internamente com o\n * formato **Data (E8601DAw.): yyyy-mm-dd**.\n *\n * Importante:\n *\n * - Caso seja definida uma data fora do range da data mÃ­nima e data mÃ¡xima via *ngModel* o componente mostrarÃ¡\n * a data desabilitada porÃ©m o *model* nÃ£o serÃ¡ alterado.\n * - Caso seja definida uma data invÃ¡lida a mesma nÃ£o serÃ¡ atribuÃ­da ao calendÃ¡rio porÃ©m o *model* manterÃ¡ a data invÃ¡lida.\n */\nexport class ThfCalendarBaseComponent {\n\n  private _locale: string;\n  private _maxDate: Date;\n  private _minDate: Date;\n\n  dayVisible: boolean = false;\n  displayDays: Array<number>;\n  displayDecade: Array<number>;\n  displayFinalDecade: number;\n  displayMonth: any;\n  displayMonths: Array<any> = Array();\n  displayStartDecade: number;\n  displayWeekDays: Array<any> = Array();\n  displayYear: number;\n  monthVisible: boolean = false;\n  yearVisible: boolean = false;\n\n  protected currentMonthNumber: number;\n  protected currentYear: number;\n  protected date: Date;\n  protected dateIso: string;\n  protected displayMonthNumber: number;\n  protected lastDisplay: string;\n  protected onTouched: any = null;\n  protected propagateChange: any = null;\n  protected today: Date = new Date();\n  protected validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do calendÃ¡rio.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   *\n   * @default `pt`\n   */\n  @Input('t-locale') set locale(locale: string) {\n    this._locale = thfCalendarLocales.includes(locale) ? locale : thfCalendarLocaleDefault;\n    this.initializeLanguage();\n  }\n  get locale() {\n    return this._locale;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a data mÃ¡xima possÃ­vel de ser selecionada.\n   *\n   * Pode receber os seguintes formatos de data:\n   *\n   * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n   * ```\n   * this.date = '2017-11-28T00:00:00-02:00';\n   * ```\n   *\n   * - **Data (E8601DAw.): yyyy-mm-dd**\n   * ```\n   * this.date = '2017-11-28';\n   * ```\n   *\n   * - **JavaScript Date Object:**\n   * ```\n   * this.date = new Date(2017, 10, 28);\n   * ```\n   */\n  @Input('t-max-date') set maxDate(maxDate: any) {\n    this._maxDate = this.thfDate.getDateForDateRange(maxDate, false);\n  }\n  get maxDate() {\n    return this._maxDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a data mÃ­nima possÃ­vel de ser selecionada.\n   *\n   * Pode receber os seguintes formatos de data:\n   *\n   * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n   * ```\n   * this.date = '2017-11-28T00:00:00-02:00';\n   * ```\n   *\n   * - **Data (E8601DAw.): yyyy-mm-dd**\n   * ```\n   * this.date = '2017-11-28';\n   * ```\n   *\n   * - **JavaScript Date Object:**\n   * ```\n   * this.date = new Date(2017, 10, 28);\n   * ```\n   */\n  @Input('t-min-date') set minDate(minDate: any) {\n    this._minDate = this.thfDate.getDateForDateRange(minDate, true);\n  }\n  get minDate() {\n    return this._minDate;\n  }\n\n  /** Evento disparado ao selecionar um dia do calendÃ¡rio. */\n  @Output('t-change') change = new EventEmitter<string>();\n\n  constructor(\n    public thfDate: ThfDateService,\n    public thfCalendarLangService: ThfCalendarLangService\n  ) { }\n\n  initializeLanguage() {\n    this.thfCalendarLangService.setLanguage(this.locale);\n    this.displayWeekDays = this.thfCalendarLangService.getWeekDaysArray();\n    this.displayMonths = this.thfCalendarLangService.getMonthsArray();\n    this.displayMonth = this.displayMonths[this.displayMonthNumber];\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ThfCalendarLangService {\n\n  private language = 'pt';\n\n  private months = [\n    {\n      pt: 'Janeiro',\n      en: 'January',\n      es: 'Enero'\n    },\n    {\n      pt: 'Fevereiro',\n      en: 'February',\n      es: 'Febrero'\n    },\n    {\n      pt: 'MarÃ§o',\n      en: 'March',\n      es: 'Marzo'\n    },\n    {\n      pt: 'Abril',\n      en: 'April',\n      es: 'Abril'\n    },\n    {\n      pt: 'Maio',\n      en: 'May',\n      es: 'Mayo'\n    },\n    {\n      pt: 'Junho',\n      en: 'June',\n      es: 'Junio'\n    },\n    {\n      pt: 'Julho',\n      en: 'July',\n      es: 'Julio'\n    },\n    {\n      pt: 'Agosto',\n      en: 'August',\n      es: 'Agosto'\n    },\n    {\n      pt: 'Setembro',\n      en: 'September',\n      es: 'Setiembre'\n    },\n    {\n      pt: 'Outubro',\n      en: 'October',\n      es: 'Octubre'\n    },\n    {\n      pt: 'Novembro',\n      en: 'November',\n      es: 'Noviembre'\n    },\n    {\n      pt: 'Dezembro',\n      en: 'December',\n      es: 'Diciembre'\n    }\n  ];\n\n  private shortWeekDays = [\n    {\n      pt: 'Dom',\n      en: 'Sun',\n      es: 'Dom'\n    },\n    {\n      pt: 'Seg',\n      en: 'Mon',\n      es: 'Lun'\n    },\n    {\n      pt: 'Ter',\n      en: 'Tue',\n      es: 'Mar'\n    },\n    {\n      pt: 'Qua',\n      en: 'Wed',\n      es: 'MiÃ©'\n    },\n    {\n      pt: 'Qui',\n      en: 'Thu',\n      es: 'Jue'\n    },\n    {\n      pt: 'Sex',\n      en: 'Fri',\n      es: 'Vie'\n    },\n    {\n      pt: 'SÃ¡b',\n      en: 'Sat',\n      es: 'SÃ¡b'\n    }\n  ];\n\n  private monthLabel = {\n    pt: 'MÃªs',\n    en: 'Month',\n    es: 'Mes'\n  };\n\n  private yearLabel = {\n    pt: 'Ano',\n    en: 'Year',\n    es: 'AÃ±o'\n  };\n\n  getMonth(month: number) {\n    return this.months[month][this.language];\n  }\n\n  getMonthLabel() {\n    return this.monthLabel[this.language];\n  }\n\n  getMonthsArray() {\n    const arrMonths = Array();\n    for (let i = 0; i < this.months.length; i++) {\n      arrMonths.push(this.months[i][this.language]);\n    }\n    return arrMonths;\n  }\n\n  getWeekDays(day: number) {\n    return this.shortWeekDays[day][this.language];\n  }\n\n  getWeekDaysArray() {\n    const arrWeekDays = Array();\n    for (let i = 0; i < this.shortWeekDays.length; i++) {\n      arrWeekDays.push(this.shortWeekDays[i][this.language]);\n    }\n    return arrWeekDays;\n  }\n\n  getYearLabel() {\n    return this.yearLabel[this.language];\n  }\n\n  setLanguage(language: string) {\n    if (language && language.length >= 2) {\n      language = language.toLowerCase().slice(0, 2);\n      this.language = (language === 'pt' || language === 'en' || language === 'es') ? language : 'pt';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nconst thfCalendarServiceFirstWeekDayDefault: number = 0;\n\n@Injectable()\nexport class ThfCalendarService {\n\n  monthDates(year: any, month: any, dayFormatter: any = null, weekFormatter: any = null) {\n    if ((typeof month !== 'number') || (month < 0) || (month > 11)) {\n      throw Error(('month must be a number (Jan is 0)'));\n    }\n\n    const weeks: Array<any> = [];\n    let week: Array<any> = [];\n    let i = 0;\n    let date = new Date(year, month, 1);\n\n    if (year >= 0 && year < 100) {\n      date.setFullYear(year);\n    }\n\n    date = this.weekStartDate(date);\n\n    do {\n      for (i = 0; i < 7; i++) {\n        week.push(dayFormatter ? dayFormatter(date) : date);\n        date = new Date(date.getTime());\n        date.setDate(date.getDate() + 1);\n      }\n      weeks.push(weekFormatter ? weekFormatter(week) : week);\n      week = [];\n    } while ((date.getMonth() <= month) && (date.getFullYear() === year));\n    return weeks;\n  }\n\n  monthDays(year: any, month: any) {\n    const getDayOrZero = function(date: any) {\n      return date.getMonth() === month ? date : 0;\n    };\n    return this.monthDates(year, month, getDayOrZero);\n  }\n\n  weekStartDate(date: any) {\n    const startDate = new Date(date.getTime());\n    while (startDate.getDay() !== thfCalendarServiceFirstWeekDayDefault) {\n      startDate.setDate(startDate.getDate() - 1);\n    }\n    return startDate;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { sortValues } from '../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o responsÃ¡vel por gerenciar o tratamento dos formatos de data e hora.\n */\n@Injectable()\nexport class ThfDateService {\n\n  private readonly dateRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])$');\n\n  private readonly isoRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])' +\n  'T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:Z|-0[1-9]|-1\\\\d|-2[0-3]|' +\n  '-00:?(?:0[1-9]|[0-5]\\\\d)|\\\\+[01]\\\\d|\\\\+2[0-3])' +\n  '(?:|:?[0-5]\\\\d)$');\n\n  /**\n   * MÃ©todo responsÃ¡vel por converter datas do formato `yyyy-mm-ddThh:mm:ss+|-hh:mm` para o formato `Date`.\n   *\n   * @param dateString Data no formato `yyyy-mm-ddThh:mm:ss+|-hh:mm`.\n   * @param minDate Definir `true` caso seja `minDate`.\n   * @param maxDate Definir `true` caso seja `maxDate`.\n   */\n  convertIsoToDate(dateString: string , minDate: boolean, maxDate: boolean): Date {\n    if (dateString) {\n      const { year, month, day } = this.getDateFromIso(dateString);\n\n      if (minDate) {\n        const date = new Date(year, month - 1, day, 0, 0, 0);\n        this.setYearFrom0To100(date, year);\n        return date;\n      } else if (maxDate) {\n        const date = new Date(year, month - 1, day, 23, 59, 59);\n        this.setYearFrom0To100(date, year);\n        return date;\n      } else {\n        const miliseconds = Date.parse(dateString);\n        const timezone = new Date().getTimezoneOffset() * 60000;\n        return new Date(miliseconds + timezone);\n      }\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por converter data do formato `Date` para o formato `yyyy-mm-dd`.\n   *\n   * @param date Data no formato `Date`.\n   */\n  convertDateToISO(date: Date) {\n    if (date) {\n      const fullYear = date.getFullYear();\n      const getMonth = date.getMonth() + 1;\n      const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n      const month = getMonth < 10 ? '0' + getMonth : getMonth;\n      const year = this.formatYear(fullYear);\n      return year + '-' + month + '-' + day;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por adicionar zeros a esquerda do anos em formato string.\n   *\n   * @param year Ano a ser validado.\n   */\n  formatYear(year: number) {\n\n    if (year > 999) {\n      return year.toString();\n    }\n\n    if (year > 99 && year < 1000) {\n      return `0${year}`;\n    }\n\n    if (year > 9 && year < 100) {\n      return `00${year}`;\n    }\n\n    if (year >= 0 && year < 10) {\n      return `000${year}`;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar o dia, mÃªs e ano separados em formato de objeto.\n   *\n   * @param isoDate Ano em formato string.\n   */\n  getDateFromIso(isoDate: string): { year: number, month: number, day: number } {\n    const day = parseInt(isoDate.substring(8, 10), 10);\n    const month = parseInt(isoDate.substring(5, 7), 10);\n    const year = parseInt(isoDate.substring(0, 4), 10);\n\n    return { year, month, day };\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar a data com a hora definida para `00:00:00` caso `isMinDate` for igual a `true` ou `23:59:59`\n   * caso `isMindate` seja igual a `false` .\n   *\n   * @param date Data no formato `Date` ou `yyyy-mm-ddThh:mm:ss+|-hh:mm`.\n   * @param isMinDate Caso `true` aplica `00:00:00`, caso `false` aplica `23:59:59` a hora da data informada.\n   */\n  getDateForDateRange(date: any, isMinDate: boolean) {\n    const lastHour = isMinDate ? [0, 0, 0] : [23, 59, 59];\n    if (date instanceof Date) {\n      const { year, month, day } = this.splitDate(date);\n      const validDate = new Date(year, month, day, ...lastHour);\n      this.setYearFrom0To100(validDate, year);\n      return validDate;\n    } else if (this.isValidIso(date)) {\n      return this.convertIsoToDate(date, isMinDate, !isMinDate);\n    }\n  }\n\n  /**\n   * Retorna `true` caso o perÃ­odo seja vÃ¡lido, para isso a primeira data deve ser maior que a segunda data.\n   * @param dateA primeira data\n   * @param dateB segunda data\n   */\n  isDateRangeValid(dateA: string = '', dateB: string = ''): boolean {\n    const dateASplitted = dateA.split('-').map(item => parseInt(item, 10));\n    const dateBSplitted = dateB.split('-').map(item => parseInt(item, 10));\n\n    for (let index = 0; index <= dateASplitted.length; index++) {\n\n      if (dateASplitted[index] > dateBSplitted[index]) {\n        return true;\n      } else if (dateASplitted[index] < dateBSplitted[index]) {\n        return false;\n      }\n\n    }\n\n    return true;\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se uma data estÃ¡ no formato `yyyy-mm-ddThh:mm:ss+|-hh:mm` ou `yyyy-mm-dd`.\n   *\n   * @param stringDate Data.\n   */\n  isValidIso(stringDate: string) {\n    return this.dateRegex.test(stringDate) || this.isoRegex.test(stringDate);\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por corrigir a data caso a mesma esteja entre os anos 0 e 99.\n   *\n   * @param date Data.\n   * @param year .\n   */\n  setYearFrom0To100(date: Date, year: number) {\n    if (year >= 0 && year < 100 ) {\n      date.setFullYear(year);\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por ordenar duas datas.\n   *\n   * @param leftSide Primeira data a ser comparada.\n   * @param rightSide Segunda data a ser comparada.\n   * @param ascending Determina se serÃ¡ em ordem crescente ou decrescente.\n   */\n  sortDate(leftSide: string | Date, rightSide: string | Date, ascending: boolean): number {\n    return sortValues(this.validateDate(leftSide), this.validateDate(rightSide), ascending);\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar o dia , mÃªs e ano de uma data informada.\n   *\n   * @param date Valor da data.\n   */\n  splitDate(date: Date) {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return { year, month, day };\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se uma data estÃ¡ entre a `minDate` e `maxDate`.\n   *\n   * @param date Data a ser validada.\n   * @param minDate Data inicial.\n   * @param maxDate Data final.\n   */\n  validateDateRange(date: Date, minDate: Date, maxDate: Date) {\n    if (minDate && maxDate) {\n      return (date >= minDate && date <= maxDate);\n    } else if (minDate && !maxDate) {\n      return (date >= minDate);\n    } else if (!minDate && maxDate) {\n      return (date <= maxDate);\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se a data foi informada nos padrÃµes 'yyyy-mm-dd', 'yyyy-mm-ddThh:mm:ss+|-hh:mm' ou\n   * 'Date' padrÃ£o do javascript.\n   *\n   * @param date Data que serÃ¡ validada.\n   */\n  private validateDate(date: string | Date) {\n    const validDate = date instanceof Date ? this.convertDateToISO(date) : date;\n\n    return this.isValidIso(validDate) ? validDate : undefined;\n  }\n\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThfCalendarBaseComponent } from './thf-calendar-base.component';\nimport { ThfCalendarLangService } from './services/thf-calendar.lang.service';\nimport { ThfCalendarService } from './services/thf-calendar.service';\nimport { ThfDateService } from '../../services/thf-date/thf-date.service';\n\n/**\n * @docsExtends ThfCalendarBaseComponent\n *\n * @example\n *\n * <example name=\"thf-calendar-basic\" title=\"Totvs Calendar Basic\" >\n *  <file name=\"sample-thf-calendar-basic/sample-thf-calendar-basic.component.html\"> </file>\n *  <file name=\"sample-thf-calendar-basic/sample-thf-calendar-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-calendar-labs\" title=\"Totvs Calendar Labs\" >\n *  <file name=\"sample-thf-calendar-labs/sample-thf-calendar-labs.component.html\"> </file>\n *  <file name=\"sample-thf-calendar-labs/sample-thf-calendar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-calendar-ticket-sales\" title=\"Totvs Calendar - Ticket Sales\" >\n *  <file name=\"sample-thf-calendar-ticket-sales/sample-thf-calendar-ticket-sales.component.html\"> </file>\n *  <file name=\"sample-thf-calendar-ticket-sales/sample-thf-calendar-ticket-sales.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-calendar',\n  templateUrl: './thf-calendar.component.html',\n  providers: [\n    ThfCalendarService,\n    ThfCalendarLangService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfCalendarComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfCalendarComponent),\n      multi: true,\n    }\n  ]\n})\nexport class ThfCalendarComponent extends ThfCalendarBaseComponent implements OnInit {\n\n  constructor(\n    private thfCalendarService: ThfCalendarService,\n    thfCalendarLangService: ThfCalendarLangService,\n    thfDate: ThfDateService) {\n    super(thfDate, thfCalendarLangService);\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  getBackgroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'thf-calendar-box-background-selected' : 'thf-calendar-box-background';\n  }\n\n  getDayBackgroundColor(date: Date) {\n    return this.getDayColor(date, 'background');\n  }\n\n  getDayForegroundColor(date: Date) {\n    return this.getDayColor(date, 'foreground');\n  }\n\n  getForegroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'thf-calendar-box-foreground-selected' : 'thf-calendar-box-foreground';\n  }\n\n  getMonthLabel() {\n    return this.thfCalendarLangService.getMonthLabel();\n  }\n\n  getYearLabel() {\n    return this.thfCalendarLangService.getYearLabel();\n  }\n\n  onNextMonth() {\n    this.displayMonthNumber < 11 ? this.updateDisplay(this.displayYear, this.displayMonthNumber + 1) :\n      this.updateDisplay(this.displayYear + 1, 0);\n  }\n\n  onPreviousMonth() {\n    this.displayMonthNumber > 0 ? this.updateDisplay(this.displayYear, this.displayMonthNumber - 1) :\n      this.updateDisplay(this.displayYear - 1, 11);\n  }\n\n  // Ao selecionar uma data\n  onSelectDate(date: Date) {\n    this.date = date;\n    this.dateIso = this.thfDate.convertDateToISO(date);\n    if (this.propagateChange) {\n      this.propagateChange(this.dateIso);\n    }\n    this.change.emit(this.dateIso);\n  }\n\n  // Ao selecionar um mÃªs\n  onSelectMonth(year: number, month: number) {\n    this.selectDay();\n    this.updateDisplay(year, month);\n  }\n\n  // Ao selecionar um ano\n  onSelectYear(year: number, month: number) {\n    // Se veio da tela de seleÃ§Ã£o de mÃªs\n    this.lastDisplay === 'month' ? this.selectMonth() : this.selectDay();\n\n    this.currentYear = year;\n    this.updateDisplay(year, month);\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  selectDay() {\n    this.dayVisible = true;\n    this.monthVisible = false;\n    this.yearVisible = false;\n    this.lastDisplay = 'day';\n  }\n\n  selectMonth() {\n    this.dayVisible = false;\n    this.monthVisible = true;\n    this.yearVisible = false;\n    this.lastDisplay = 'month';\n  }\n\n  selectYear() {\n    this.dayVisible = false;\n    this.monthVisible = false;\n    this.yearVisible = true;\n  }\n\n  updateYear(value: number) {\n    this.updateDisplay(this.displayYear + value, this.displayMonthNumber);\n  }\n\n  validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.writeDate(value);\n    } else {\n      this.date = undefined;\n      this.updateDate(this.today);\n    }\n  }\n\n  private addAllYearsInDecade(year: number) {\n    let i;\n    for (i = year; i < year + 10; i++) {\n      this.displayDecade.push(i);\n    }\n  }\n\n  private equalsDate(date1: Date, date2: Date): boolean {\n    try {\n      return date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate();\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // ObtÃ©m um array de todos os anos desta dÃ©cada\n  private getDecadeArray(year) {\n    this.displayDecade = Array();\n\n    if (year % 10 !== 0) {\n      while (year % 10 !== 0) {\n        year--;\n      }\n    }\n    this.updateDecade(year);\n  }\n\n  private getColorForDate(date: Date, local: string) {\n    return this.thfDate.validateDateRange(date, this.minDate, this.maxDate) ? `thf-calendar-box-${local}-selected` :\n      `thf-calendar-box-${local}-selected-disabled`;\n  }\n\n  private getColorForDateRange(date: Date, local: string) {\n    return this.thfDate.validateDateRange(date, this.minDate, this.maxDate) ? `thf-calendar-box-${local}` :\n      `thf-calendar-box-${local}-disabled`;\n  }\n\n  private getColorForToday(date: Date, local: string) {\n    return this.thfDate.validateDateRange(date, this.minDate, this.maxDate) ? `thf-calendar-box-${local}-today` :\n      `thf-calendar-box-${local}-today-disabled`;\n  }\n\n  private getDayColor(date: Date, local: string) {\n    if (this.equalsDate(date, this.date)) {\n      return this.getColorForDate(date, local);\n    } else if (this.equalsDate(date, this.today)) {\n      return this.getColorForToday(date, local);\n    } else {\n      return this.getColorForDateRange(date, local);\n    }\n  }\n\n  private init() {\n    this.date && this.thfDate.isValidIso(this.thfDate.convertDateToISO(this.date)) ?\n      this.updateDate(this.date) : this.updateDate(this.today);\n    this.initializeLanguage();\n    this.selectDay();\n  }\n\n  private selectDateFromDate(date: Date) {\n    this.date = date;\n    this.onSelectDate(this.date);\n  }\n\n  private selectDateFromIso(stringDate: string) {\n    const { year, month, day } = this.thfDate.getDateFromIso(stringDate);\n    const date = new Date(year, month - 1, day);\n    this.thfDate.setYearFrom0To100(date, year);\n    this.date = date;\n    this.onSelectDate(this.date);\n  }\n\n  private updateDate(date: Date) {\n    if (date) {\n      this.currentMonthNumber = date.getMonth();\n      this.currentYear = date.getFullYear();\n      this.updateDisplay(this.currentYear, this.currentMonthNumber);\n    }\n  }\n\n  private updateDecade(year: number) {\n    this.addAllYearsInDecade(year);\n    this.displayStartDecade = year;\n    this.displayFinalDecade = year + 9;\n  }\n\n  private updateDisplay(year: number, month: number) {\n    const calendarArray = this.thfCalendarService.monthDays(year, month);\n    this.displayDays = [].concat.apply([], calendarArray);\n    this.displayMonthNumber = month;\n    this.displayMonth = this.displayMonths[month];\n    this.displayYear = year;\n    this.getDecadeArray(year);\n  }\n\n  private writeDate(value: any) {\n    value instanceof Date ? this.selectDateFromDate(value) : this.writeDateIso(value);\n    this.updateDate(this.date);\n  }\n\n  private writeDateIso(value: any) {\n    this.thfDate.isValidIso(value) ? this.selectDateFromIso(value) : this.date = undefined;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfCalendarComponent } from './thf-calendar.component';\nimport { ThfCalendarLangService } from './services/thf-calendar.lang.service';\nimport { ThfCalendarService } from './services/thf-calendar.service';\n\n/**\n * @description\n * MÃ³dulo do componente `thf-calendar`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ThfCalendarComponent],\n  exports: [ThfCalendarComponent],\n  providers: [\n    ThfCalendarLangService,\n    ThfCalendarService\n  ]\n})\nexport class ThfCalendarModule { }\n","/**\n * @usedBy ThfChartComponent\n *\n * @description\n *\n * *Enum* `ThfChartType` para os tipos de grÃ¡ficos.\n */\nexport enum ThfChartType {\n\n  /**\n   * **GrÃ¡fico pizza:** utilizado para exibir proporÃ§Ãµes de valores a partir de um todo.\n   */\n  Pie = 'pie'\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToInt, isTypeof } from '../../utils/util';\n\nimport { ThfChartType } from './enums/thf-chart-type.enum';\nimport { ThfPieChartSeries } from './interfaces/thf-chart-series.interface';\n\nconst thfChartDefaultHeight = 400;\nconst thfChartTypeDefault = ThfChartType.Pie;\nconst thfChartMinHeight = 200;\n\n/**\n * @description\n *\n * O `thf-chart` Ã© um componente para renderizaÃ§Ã£o de dados atravÃ©s de grÃ¡ficos, com isso facilitando a compreensÃ£o e tornando a\n * visualizaÃ§Ã£o destes dados mais agradÃ¡vel.\n *\n * Este componente tambÃ©m possibilita a definiÃ§Ã£o das seguintes propriedades: altura do grÃ¡fico; sÃ©rie(s) que irÃ£o compor o grÃ¡fico;\n * tÃ­tulo do grÃ¡fico; e tipo de grÃ¡fico.\n *\n * AlÃ©m das definiÃ§Ãµes de propriedades, tambÃ©m Ã© possÃ­vel definir uma aÃ§Ã£o que serÃ¡ executada ao clicar em determinado elemento do grÃ¡fico\n * e outra que serÃ¡ executada ao passar o *mouse* sobre o elemento.\n *\n * #### Boas prÃ¡ticas\n *\n * - Para que o grÃ¡fico nÃ£o fique ilegÃ­vel e incompreensÃ­vel, evite uma quantia excessiva de sÃ©ries.\n *\n */\nexport abstract class ThfChartBaseComponent {\n\n  private _height?: number = thfChartDefaultHeight;\n  private _type: ThfChartType = thfChartTypeDefault;\n\n  public readonly thfChartType = ThfChartType;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do grÃ¡fico.\n   *\n   * > O valor mÃ­nimo que pode ser informado Ã© 200.\n   *\n   * @default `400px`\n   */\n  @Input('t-height') set height(value: number) {\n    const intValue = convertToInt(value);\n    let height: number;\n\n    if (isTypeof(value, 'number')) {\n      height = intValue <= thfChartMinHeight ? thfChartMinHeight : intValue;\n    } else {\n      height = thfChartDefaultHeight;\n    }\n\n    this._height = height;\n\n    this.rebuildComponent();\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * ColeÃ§Ã£o de objetos que implementam a interface `ThfPieChartSeries`, para definiÃ§Ã£o dos elementos do grÃ¡fico que serÃ£o criados\n   * dinÃ¢micamente.\n   */\n  @Input('t-series') series: Array<ThfPieChartSeries>;\n\n  /** Define o tÃ­tulo do grÃ¡fico. */\n  @Input('t-title') title?: string;\n\n  // TODO quando houver a necessidade de informar um type.\n  // /**\n  //  * @optional\n  //  *\n  //  * @description\n  //  *\n  //  * Define o tipo de grÃ¡fico.\n  //  *\n  //  * > Veja os valores vÃ¡lidos no *enum* `ThfChartType`.\n  //  *\n  //  * @default `ThfChartType.Pie`\n  //  */\n  // @Input('t-type') set type(value: ThfChartType) {\n  //   this._type = (<any>Object).values(ThfChartType).includes(value) ? value : thfChartTypeDefault;\n  // }\n\n  get type(): ThfChartType {\n    return this._type;\n  }\n\n  /**\n   * Evento executado quando o usuÃ¡rio clicar sobre um elemento do grÃ¡fico.\n   *\n   * > SerÃ¡ passado por parÃ¢metro um objeto contendo a categoria e valor da sÃ©rie.\n   */\n  @Output('t-series-click')\n  seriesClick?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento executado quando o usuÃ¡rio passar o *mouse* sobre um elemento do grÃ¡fico.\n   *\n   * > SerÃ¡ passado por parÃ¢metro um objeto contendo a categoria e valor da sÃ©rie.\n   */\n  @Output('t-series-hover')\n  seriesHover?: EventEmitter<any> = new EventEmitter<any>();\n\n  onSeriesClick(event: any): void {\n    this.seriesClick.emit(event);\n  }\n\n  onSeriesHover(event: any): void {\n    this.seriesHover.emit(event);\n  }\n\n  abstract rebuildComponent(): void;\n\n}\n","// Array de cores para grÃ¡ficos definido pela equipe de UX Totvs.\nexport const ThfChartColors = [\n  ['#29B6C5'],\n  ['#0C6C94', '#29B6C5'],\n  ['#0C6C94', '#29B6C5', '#C9ECF0'],\n  ['#0C6C94', '#0B92B4', '#29B6C5', '#94DAE2'],\n  ['#0C6C94', '#0B92B4', '#29B6C5', '#94DAE2', '#C9ECF0'],\n  ['#0C6C94', '#00A5C5', '#0082A8', '#31628D', '#364473', '#32285C'],\n  ['#0C6C94', '#00AACB', '#018DAE', '#277099', '#325783', '#35426E', '#32285D'],\n  ['#0C6C94', '#00AFCE', '#0194B6', '#117FA2', '#0088AC', '#23789F', '#2B6992', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#36436F', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#36436F', '#333565', '#32285C'],\n];\n","const thfChartAnimationDurationTime = 1500;\n\nexport const thfChartAngleStepInterval = Math.PI * 2 / Math.floor( thfChartAnimationDurationTime / 60 );\nexport const thfChartCompleteCircle = 0.0001;\nexport const thfChartPadding: number = 24;\nexport const thfChartStartAngle = -Math.PI / 2;\n","import { ElementRef, ViewChild } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { ThfPieChartSeries } from '../interfaces/thf-chart-series.interface';\n\nconst Padding: number = 24;\n\nexport abstract class ThfChartDynamicTypeComponent {\n\n  protected windowResizeListener: () => void;\n  protected windowScrollListener: () => void;\n\n  centerX: number;\n  chartElementCategory: any;\n  chartElementValue: any;\n  chartHeader: number;\n  chartLegend: number;\n  chartWrapper: number;\n  colors: Array<string>;\n  height: number;\n  onSerieClick: Subject<ThfPieChartSeries> = new Subject();\n  onSerieHover: Subject<ThfPieChartSeries> = new Subject();\n  series: Array<any> = [];\n  svgElement: HTMLObjectElement;\n  svgHeight: number;\n  target: HTMLInputElement & EventTarget;\n  tooltipElement: HTMLObjectElement;\n  tooltipText: string;\n  totalValue: number;\n\n  @ViewChild('chartBody', { static: true }) chartBody: ElementRef;\n\n  @ViewChild('svgContainer', { static: true }) svgContainer: ElementRef;\n\n  calculateSVGContainerDimensions(chartWrapperElement: number, chartHeaderElement: number, chartLegendElement: number) {\n    const svgContainerHeightCalc = this.height - chartHeaderElement - chartLegendElement - (Padding * 2);\n\n    this.svgHeight = svgContainerHeightCalc <= 0 ? 0 : svgContainerHeightCalc;\n    this.centerX = chartWrapperElement / 2;\n  }\n\n  calculateTotalValue() {\n    this.totalValue = this.series.reduce(\n      (previousValue, serie) => previousValue + serie.value, 0);\n  }\n\n}\n","import { Component, ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\n\nimport { thfChartAngleStepInterval, thfChartCompleteCircle, thfChartPadding, thfChartStartAngle } from './thf-chart-pie.constant';\nimport { ThfChartDynamicTypeComponent } from '../thf-chart-dynamic-type.component';\nimport { ThfPieChartSeries } from '../../interfaces/thf-chart-series.interface';\n\n@Component({\n  selector: 'thf-chart-pie',\n  templateUrl: './thf-chart-pie.component.html'\n})\nexport class ThfChartPieComponent extends ThfChartDynamicTypeComponent implements OnDestroy, OnInit {\n\n  private animationRunning: boolean;\n  private chartItemEndAngle: number;\n  private chartItemStartAngle: number;\n  private chartItemsEndAngleList: Array<number> = [];\n  private svgPathElementsList: Array<string> = [];\n\n  private static calculateEndAngle(value: number, totalValue: number): number {\n    return value / totalValue * (Math.PI * 2);\n  }\n\n  constructor(private el: ElementRef, private ngZone: NgZone, private renderer: Renderer2) {\n    super();\n  }\n\n  ngOnDestroy() {\n    this.removeWindowResizeListener();\n    this.removeWindowScrollListener();\n    this.animationRunning = false;\n  }\n\n  ngOnInit() {\n    this.chartInitSetup();\n    this.setEventListeners();\n  }\n\n  private animationSetup() {\n    this.chartItemStartAngle = thfChartStartAngle;\n    this.chartItemEndAngle = this.chartItemsEndAngleList[0];\n    this.animationRunning = true;\n    this.drawPathInit();\n  }\n\n  private calculateAngleRadians() {\n    this.series.forEach((serie, index) =>\n      this.chartItemsEndAngleList[index] = ThfChartPieComponent.calculateEndAngle(serie.value, this.totalValue)\n    );\n  }\n\n  private calculateCurrentEndAngle(angleCurrentPosition: number) {\n    const isSerieDrawCompleted = this.chartItemStartAngle + angleCurrentPosition > this.chartItemStartAngle + this.chartItemEndAngle;\n\n    if (isSerieDrawCompleted) {\n      return (this.chartItemStartAngle + this.chartItemEndAngle) - thfChartCompleteCircle;\n    } else {\n      return this.chartItemStartAngle + angleCurrentPosition;\n    }\n  }\n\n  private changeTooltipPosition(event: MouseEvent) {\n    if (this.tooltipElement && this.tooltipElement.classList.contains('thf-invisible')) {\n      this.showTooltip();\n    }\n\n    const tooltipPositions = this.setTooltipPositions(event);\n    this.renderer.setStyle(this.tooltipElement, 'left', `${tooltipPositions.left}px`);\n    this.renderer.setStyle(this.tooltipElement, 'top', `${tooltipPositions.top}px`);\n  }\n\n  private chartInitSetup() {\n    this.calculateSVGContainerDimensions(this.chartWrapper, this.chartHeader, this.chartLegend);\n    this.calculateTotalValue();\n    this.calculateAngleRadians();\n    this.createSVGElements();\n    this.animationSetup();\n  }\n\n  private createPath(index: number, serie: ThfPieChartSeries, svgPathsWrapper: any) {\n    const svgPath = this.renderer.createElement('svg:path', 'svg');\n\n    this.renderer.setAttribute(svgPath, 'class', 'thf-path-item');\n    this.renderer.setAttribute(svgPath, 'fill', this.colors[index]);\n    this.renderer.setAttribute(svgPath, 'data-tooltip-category', serie.category);\n    this.renderer.setAttribute(svgPath, 'data-tooltip-value', serie.value.toString());\n    this.renderer.setAttribute(svgPath, 'data-tooltip-text', serie.tooltip || `${serie.category}: ${serie.value}`);\n\n    svgPathsWrapper.appendChild(svgPath);\n\n    this.renderer.appendChild(this.svgElement, svgPathsWrapper);\n    this.svgPathElementsList.push(svgPath);\n  }\n\n  private createPaths() {\n    const svgPathsWrapper = this.renderer.createElement('svg:g', 'svg');\n\n    this.series.forEach((serie, index) => this.createPath(index, serie, svgPathsWrapper));\n  }\n\n  private createSVGElements() {\n    this.svgElement = this.renderer.createElement('svg:svg', 'svg');\n\n    this.renderer.setAttribute(this.svgElement, 'viewBox', `0 0 ${this.chartWrapper} ${this.centerX * 2}`);\n    this.renderer.setAttribute(this.svgElement, 'preserveAspectRatio', 'xMidYMin meet');\n    this.renderer.setAttribute(this.svgElement, 'class', 'thf-chart-svg-element');\n    this.renderer.setAttribute(this.svgElement, 'width', `${this.chartWrapper - thfChartPadding * 2}`);\n    this.renderer.setAttribute(this.svgElement, 'height', `${this.svgHeight}`);\n\n    this.svgContainer.nativeElement.appendChild(this.svgElement);\n\n    this.createPaths();\n  }\n\n  private drawPath(path, chartItemStartAngle, chartItemEndAngle) {\n\n    const largeArc = (chartItemEndAngle - chartItemStartAngle) % (Math.PI * 2) > Math.PI ? 1 : 0;\n    const startX = this.centerX + Math.cos(chartItemStartAngle) * this.centerX;\n    const startY = this.centerX + Math.sin(chartItemStartAngle) * this.centerX;\n    const endX = this.centerX + Math.cos(chartItemEndAngle) * this.centerX;\n    const endY = this.centerX + Math.sin(chartItemEndAngle) * this.centerX;\n\n    const pathCoordinates = [\n      'M', startX, startY,\n      'A', this.centerX, this.centerX, 0, largeArc, 1, endX, endY,\n      'L', this.centerX, this.centerX,\n      'Z'\n    ].join(' ');\n\n    return path.setAttribute('d', pathCoordinates);\n  }\n\n  private drawPathInit() {\n\n    if (!this.animationRunning) {\n      return;\n    } else {\n      this.ngZone.runOutsideAngular(() => this.drawSeries());\n    }\n  }\n\n  private drawSeries(currentSerieIndex: number = 0, angleCurrentPosition: number = 0) {\n    const isFinishedDrawingCurrentSeries = angleCurrentPosition > this.chartItemEndAngle;\n    const isFinishedDrawingAllSeries = currentSerieIndex === this.svgPathElementsList.length;\n\n    if ( isFinishedDrawingAllSeries ) {\n      return;\n    }\n\n    if ( isFinishedDrawingCurrentSeries ) {\n\n      this.chartItemStartAngle = this.chartItemStartAngle + this.chartItemEndAngle;\n      currentSerieIndex++;\n      this.chartItemEndAngle = this.chartItemsEndAngleList[currentSerieIndex];\n      angleCurrentPosition = 0;\n\n    } else {\n      angleCurrentPosition += thfChartAngleStepInterval;\n\n      this.drawPath(\n        this.svgPathElementsList[currentSerieIndex],\n        this.chartItemStartAngle,\n        this.calculateCurrentEndAngle(angleCurrentPosition)\n      );\n    }\n\n    window.requestAnimationFrame(this.drawSeries.bind(this, currentSerieIndex, angleCurrentPosition));\n\n  }\n\n  private emitEventOnEnter(event: ThfPieChartSeries) {\n    this.onSerieHover.next(event);\n  }\n\n  private onMouseClick() {\n    const serieOnClick: ThfPieChartSeries = { category: this.chartElementCategory, value: this.chartElementValue };\n\n    this.onSerieClick.next(serieOnClick);\n  }\n\n  private onMouseEnter(event) {\n    this.tooltipElement = this.chartBody.nativeElement.lastChild;\n    this.chartElementCategory = event.target.getAttributeNS(null, 'data-tooltip-category');\n    this.chartElementValue = event.target.getAttributeNS(null, 'data-tooltip-value');\n    this.tooltipText = event.target.getAttributeNS(null, 'data-tooltip-text');\n    this.showTooltip();\n    this.changeTooltipPosition(event);\n\n    const serieOnEnter = { category: this.chartElementCategory, value: this.chartElementValue };\n    this.emitEventOnEnter(serieOnEnter);\n  }\n\n  private onWindowResize() {\n    this.calculateSVGContainerDimensions(this.chartWrapper, this.chartHeader, this.chartLegend);\n    this.renderer.setAttribute(this.svgElement, 'width', `${this.chartWrapper - thfChartPadding * 2}`);\n    this.renderer.setAttribute(this.svgElement, 'height', `${this.svgHeight}`);\n  }\n\n  private removeTooltip() {\n    if (this.tooltipElement) {\n      this.renderer.addClass(this.tooltipElement, 'thf-invisible');\n    }\n  }\n\n  private removeWindowResizeListener() {\n    if (this.windowResizeListener) {\n      this.windowResizeListener();\n    }\n  }\n\n  private removeWindowScrollListener() {\n    if (this.windowScrollListener) {\n      this.windowScrollListener();\n    }\n  }\n\n  private setEventListeners() {\n    let chartSeries: Array<string> = this.el.nativeElement.querySelectorAll('.thf-path-item');\n    chartSeries = Array.from(chartSeries);\n\n    chartSeries.forEach(serie => {\n      this.renderer.listen(serie, 'click', this.onMouseClick.bind(this));\n      this.renderer.listen(serie, 'mouseenter', this.onMouseEnter.bind(this));\n      this.renderer.listen(serie, 'mousemove', this.changeTooltipPosition.bind(this));\n      this.renderer.listen(serie, 'mouseleave', this.removeTooltip.bind(this));\n    });\n\n    this.windowResizeListener = this.renderer.listen(window, 'resize', this.onWindowResize.bind(this));\n    this.windowScrollListener = this.renderer.listen(this.checkingIfScrollsWithThfPage(), 'scroll', this.removeTooltip.bind(this));\n  }\n\n  private checkingIfScrollsWithThfPage() {\n    const thfPageContent = document.getElementsByClassName('thf-page-content');\n\n    return thfPageContent.length ? thfPageContent[0] : window;\n  }\n\n  private setTooltipPositions(event: MouseEvent) {\n    const displacement: number = 8;\n\n    return {\n      left: event.clientX - this.tooltipElement.offsetWidth / 2,\n      top: event.clientY - this.tooltipElement.offsetHeight - displacement\n    };\n  }\n\n  private showTooltip() {\n    this.renderer.removeClass(this.tooltipElement, 'thf-invisible');\n  }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, ComponentRef, DoCheck, ElementRef, HostListener,\n  IterableDiffers, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild, ViewContainerRef } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { ThfChartBaseComponent } from './thf-chart-base.component';\nimport { ThfChartColors } from './thf-chart-colors.constant';\nimport { ThfChartDynamicTypeComponent } from './thf-chart-types/thf-chart-dynamic-type.component';\nimport { ThfChartPieComponent } from './thf-chart-types/thf-chart-pie/thf-chart-pie.component';\nimport { ThfChartType } from './enums/thf-chart-type.enum';\n\n/**\n * @docsExtends ThfChartBaseComponent\n *\n * @example\n *\n * <example name=\"thf-chart-basic\" title=\"Totvs Chart Basic\">\n *  <file name=\"sample-thf-chart-basic/sample-thf-chart-basic.component.html\"> </file>\n *  <file name=\"sample-thf-chart-basic/sample-thf-chart-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-chart-labs\" title=\"Totvs Chart Labs\">\n *  <file name=\"sample-thf-chart-labs/sample-thf-chart-labs.component.html\"> </file>\n *  <file name=\"sample-thf-chart-labs/sample-thf-chart-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-chart-coffee-ranking\" title=\"Totvs Chart - Coffee Ranking\">\n *  <file name=\"sample-thf-chart-coffee-ranking/sample-thf-chart-coffee-ranking.component.html\"> </file>\n *  <file name=\"sample-thf-chart-coffee-ranking/sample-thf-chart-coffee-ranking.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-chart',\n  templateUrl: './thf-chart.component.html'\n})\nexport class ThfChartComponent extends ThfChartBaseComponent implements AfterViewInit, DoCheck, OnDestroy, OnInit {\n\n  private calculatedElement: boolean = false;\n  private componentRef: ComponentRef<{}>;\n  private differ: any;\n  private initialized: boolean = false;\n  private windowResizeListener: Subject<any> = new Subject();\n\n  private mappings = {\n    [ThfChartType.Pie]: ThfChartPieComponent,\n  };\n\n  colors: Array<string>;\n\n  @ViewChild('chartContainer', { read: ViewContainerRef, static: true })\n  chartContainer: ViewContainerRef;\n\n  @ViewChild('chartHeader', { static: true }) chartHeader: ElementRef;\n  @ViewChild('chartLegend', { static: true }) chartLegend: ElementRef;\n  @ViewChild('chartWrapper', { static: true }) chartWrapper: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize = () => this.windowResizeListener.next()\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private differs: IterableDiffers) {\n      super();\n\n      this.differ = this.differs.find([]).create(null);\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n  }\n\n  ngDoCheck() {\n    const charWrapperWidth = this.chartWrapper.nativeElement.offsetWidth;\n\n    // Permite que o chart seja calculado na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (charWrapperWidth && !this.calculatedElement && this.initialized) {\n      this.calculatedElement = true;\n      this.getSeriesColor();\n      this.dynamicComponentSetting();\n    }\n\n    this.checkingForSerieChanges();\n  }\n\n  ngOnDestroy() {\n    this.removeWindowResizeListener();\n  }\n\n  ngOnInit() {\n    this.getSeriesColor();\n  }\n\n  rebuildComponent() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n      this.dynamicComponentSetting();\n    }\n  }\n\n  private checkingForSerieChanges() {\n    if (this.componentRef && this.differ) {\n      const changeSeries = this.differ.diff(this.series);\n      if (changeSeries) {\n        this.getSeriesColor();\n        this.rebuildComponent();\n      }\n    }\n  }\n\n  private createComponent() {\n    const componentType = this.getComponentType(this.type);\n    const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n\n    this.componentRef = this.chartContainer.createComponent(factory);\n\n    const instance = <ThfChartDynamicTypeComponent>this.componentRef.instance;\n\n    this.setChartProperties(instance);\n\n    return instance;\n  }\n\n  private dynamicComponentSetting() {\n    const instance = this.createComponent();\n\n    this.setResizeListenerSubscribe(instance);\n    this.changeDetector.detectChanges();\n    this.setClickSubscribe(instance);\n    this.setHoverSubscribe(instance);\n  }\n\n  private getComponentType(typeName) {\n    return this.mappings[typeName];\n  }\n\n  private getSeriesColor() {\n    const colorsLength = ThfChartColors.length - 1;\n\n    if (!this.series) {\n      return this.colors = ThfChartColors[colorsLength];\n    }\n\n    const seriesLength = this.series.length - 1;\n\n    if (seriesLength > colorsLength) {\n      let colors = ThfChartColors[colorsLength];\n\n      // recupera o resultado da divisao entre tamanho das series e o numero de cores disponiveis\n      const quantityDuplicates = seriesLength / colorsLength;\n\n      for (let i = 1; i <= quantityDuplicates; i++) {\n        colors = colors.concat(ThfChartColors[colorsLength]);\n      }\n\n      return this.colors = colors;\n    }\n\n    return this.colors = ThfChartColors[seriesLength];\n  }\n\n  private removeWindowResizeListener() {\n    if (this.onResize) {\n      this.onResize = () => {};\n    }\n  }\n\n  private setChartProperties(instance: ThfChartDynamicTypeComponent) {\n    instance.chartHeader = this.chartHeader.nativeElement.offsetHeight;\n    instance.chartLegend = this.chartLegend.nativeElement.offsetHeight;\n    instance.chartWrapper = this.chartWrapper.nativeElement.offsetWidth;\n    instance.colors = this.colors;\n    instance.height = this.height;\n    instance.series = this.series || [];\n  }\n\n  private setClickSubscribe(instance: ThfChartDynamicTypeComponent) {\n    instance.onSerieClick.subscribe(event => {\n      this.onSeriesClick(event);\n    });\n  }\n\n  private setHoverSubscribe(instance: ThfChartDynamicTypeComponent) {\n    instance.onSerieHover.subscribe(event => {\n      this.onSeriesHover(event);\n    });\n  }\n\n  private setResizeListenerSubscribe(instance: ThfChartDynamicTypeComponent) {\n    this.windowResizeListener.subscribe(() => {\n      instance.chartHeader = this.chartHeader.nativeElement.offsetHeight;\n      instance.chartLegend = this.chartLegend.nativeElement.offsetHeight;\n      instance.chartWrapper = this.chartWrapper.nativeElement.offsetWidth;\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfChartComponent } from './thf-chart.component';\nimport { ThfChartPieComponent } from './thf-chart-types/thf-chart-pie/thf-chart-pie.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `thf-chart`.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    ThfChartComponent,\n    ThfChartPieComponent,\n  ],\n  entryComponents: [\n    ThfChartPieComponent\n  ],\n  exports: [\n    ThfChartComponent,\n  ]\n})\nexport class ThfChartModule { }\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../utils/util';\n\n/**\n * @description\n *\n * O `thf-container` Ã© um componente que visa facilitar o agrupamento de conteÃºdos.\n * Por padrÃ£o o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaÃ§amento em sua parte interna, os quais\n * podem ser desabilitados. Ao remover sua borda a sombra tambÃ©m serÃ¡ removida. AlÃ©m disso, sua altura acompanha a\n * quantidade do conteÃºdo, porÃ©m pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),\n * assim possibilitando o tratamento para diferentes resoluÃ§Ãµes.\n */\nexport class ThfContainerBaseComponent {\n\n  private _height?: number;\n  private _noBorder?: boolean = false;\n  private _noPadding?: boolean = false;\n  private _noShadow?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `thf-container`.\n   *\n   * > Caso nÃ£o seja definido um valor, a altura se ajustarÃ¡ de acordo com o conteÃºdo.\n   */\n  @Input('t-height') set height(value: number) {\n    this._height = convertToInt(value);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a borda e a sombra em torno do `thf-container`.\n   *\n   * @default `false`\n   */\n  @Input('t-no-border') set noBorder(value: boolean) {\n    this._noBorder = convertToBoolean(value);\n  }\n\n  get noBorder(): boolean {\n    return this._noBorder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o espaÃ§amento interno do `thf-container`.\n   *\n   * @default `false`\n   */\n  @Input('t-no-padding') set noPadding(value: boolean) {\n    this._noPadding = convertToBoolean(value);\n  }\n\n  get noPadding(): boolean {\n    return this._noPadding;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o sombreamento em torno do `thf-container`.\n   *\n   * @default `false`\n   */\n  @Input('t-no-shadow') set noShadow(value: boolean) {\n    this._noShadow = convertToBoolean(value);\n  }\n\n  get noShadow(): boolean {\n    return this._noShadow;\n  }\n\n}\n","import { Component } from '@angular/core';\n\nimport { ThfContainerBaseComponent } from './thf-container-base.component';\n\n/**\n * @docsExtends ThfContainerBaseComponent\n *\n * @example\n *\n * <example name=\"thf-container-basic\" title=\"Totvs Container Basic\">\n *  <file name=\"sample-thf-container-basic/sample-thf-container-basic.component.html\"> </file>\n *  <file name=\"sample-thf-container-basic/sample-thf-container-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-container-labs\" title=\"Totvs Container Labs\">\n *  <file name=\"sample-thf-container-labs/sample-thf-container-labs.component.html\"> </file>\n *  <file name=\"sample-thf-container-labs/sample-thf-container-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-container-dashboard\" title=\"Totvs Container - Dashboard\">\n *  <file name=\"sample-thf-container-dashboard/sample-thf-container-dashboard.component.html\"> </file>\n *  <file name=\"sample-thf-container-dashboard/sample-thf-container-dashboard.component.ts\"> </file>\n *  <file name=\"sample-thf-container-dashboard/sample-thf-container-dashboard.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-container',\n  templateUrl: './thf-container.component.html'\n})\nexport class ThfContainerComponent extends ThfContainerBaseComponent { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfContainerComponent } from './thf-container.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `thf-container`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ThfContainerComponent\n  ],\n  declarations: [\n    ThfContainerComponent\n  ]\n})\nexport class ThfContainerModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nconst THF_DISCLAIMER_TYPES = ['default', 'danger'];\nconst THF_DISCLAIMER_DEFAULT_TYPE = 'default';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente thf-disclaimer Ã© responsÃ¡vel por representar tags.\n * Seu uso Ã© recomendado em buscas e em campos onde Ã© necessÃ¡rio representar objetos selecionados,\n * como por exemplo, no thf-multi-select.\n *\n */\nexport class ThfDisclaimerBaseComponent {\n  private _type: string = 'default';\n  private _hideClose?: boolean = false;\n\n  showDisclaimer = true;\n\n  /**\n   * Label que aparecerÃ¡ dentro do thf-disclaimer.\n   * Quando nÃ£o for definido um label serÃ¡ apresentada a propriedade t-value.\n   */\n  @Input('t-label') label?: string;\n\n  /** Valor do thf-disclaimer. */\n  @Input('t-value') value: string;\n\n  /** Nome da propriedade vinculada Ã  este thf-disclaimer. */\n  @Input('t-property') property?: string;\n\n  /**\n   * @description\n   *\n   * Esta propriedade esconde o botÃ£o para fechamento do thf-disclaimer, ao utilizar esta propriedade\n   * sem passar valor a mesma Ã© setada como false, onde o botÃ£o de fechamento estÃ¡ visÃ­vel.\n   *\n   * @default false\n   */\n  @Input('t-hide-close') set hideClose(value: boolean) {\n    this._hideClose = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get hideClose(): boolean {\n    return this._hideClose;\n  }\n\n  /**\n   * Evento disparado ao fechar o disclaimer.\n   * Para este evento serÃ¡ passado como parÃ¢metro um objeto com value, label e property.\n   */\n  @Output('t-close-action') closeAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * @description\n   *\n   * Tipo do thf-disclaimer. Pode ser 'default' ou 'danger'.\n   *\n   * @default default\n   * @optional\n   */\n  @Input('t-type') set type(type: string) {\n    this._type = THF_DISCLAIMER_TYPES.includes(type) ? type : THF_DISCLAIMER_DEFAULT_TYPE;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  close(): void {\n    this.showDisclaimer = false;\n    this.closeAction.emit({value: this.value, label: this.label, property: this.property});\n  }\n\n  getLabel() {\n    return this.label ? this.label : this.value;\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { isKeyCodeEnter } from '../../utils/util';\n\nimport { ThfDisclaimerBaseComponent } from './thf-disclaimer-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends ThfDisclaimerBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"thf-disclaimer\" title=\"Totvs Disclaimer\">\n *   <file name=\"sample-thf-disclaimer.component.html\"> </file>\n *   <file name=\"sample-thf-disclaimer.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'thf-disclaimer',\n  templateUrl: './thf-disclaimer.component.html'\n})\nexport class ThfDisclaimerComponent extends ThfDisclaimerBaseComponent {\n\n  onKeyPress(event: any) {\n\n    if (isKeyCodeEnter(event)) {\n      this.close();\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfDisclaimerComponent } from './thf-disclaimer.component';\n\n/**\n * @description\n * MÃ³dulo do componente thf-disclaimer.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ThfDisclaimerComponent],\n  exports: [ThfDisclaimerComponent]\n})\nexport class ThfDisclaimerModule { }\n","import { DoCheck, EventEmitter, Input, IterableDiffers, Output } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { browserLanguage, convertToBoolean, isKeyCodeEnter, thfLocaleDefault } from '../../utils/util';\n\nimport { ThfDisclaimer } from '../thf-disclaimer/thf-disclaimer.interface';\n\nexport const thfDisclaimerGroupLiteralsDefault = {\n  en: { removeAll: 'Remove all' },\n  es: { removeAll: 'Eliminar todos' },\n  pt: { removeAll: 'Remover todos' }\n};\n\n/**\n * @description\n *\n * O componente `thf-disclaimer-group` Ã© recomendado para manipular palavras-chave de filtros aplicados em uma pesquisa.\n *\n * Ã partir de dois *disclaimers* com o botÃ£o **fechar** habilitado, o componente renderiza de forma automÃ¡tica um novo e destacado\n * *disclaimer* que possibilita **remover todos**, mas que tambÃ©m pode ser desabilitado.\n *\n * TambÃ©m Ã© possÃ­vel navegar entre os *disclaimers* atravÃ©s do teclado utilizando a tecla *tab* e, para remoÃ§Ã£o do *disclaimer* selecionado,\n * basta pressionar a tecla *enter*. Esta funcionalidade nÃ£o se aplica caso a propriedade `hideClose` estiver habilitada.\n *\n * > Veja a integraÃ§Ã£o destas funcionalidade no componente [thf-page-list](/documentation/thf-page-list).\n */\nexport class ThfDisclaimerGroupBaseComponent implements DoCheck {\n\n  private _disclaimers: Array<ThfDisclaimer> = [];\n  private _hideRemoveAll: boolean = false;\n\n  private differ;\n  private previousDisclaimers: Array<ThfDisclaimer> = [];\n\n  readonly literals = {\n      ...thfDisclaimerGroupLiteralsDefault[thfLocaleDefault],\n      ...thfDisclaimerGroupLiteralsDefault[browserLanguage()]\n  };\n\n  /** Lista de *disclaimers*. */\n\n  /**\n   * @description\n   *\n   * Lista de *disclaimers*.\n   *\n   * Para que a lista de *disclaimers* seja atualizada dinamicamente deve-se passar uma nova referÃªncia do array de `ThfDisclaimer`.\n   *\n   * Exemplo adicionando um *disclaimer* no array:\n   *\n   * ```\n   * this.disclaimers = [...this.disclaimers, disclaimer];\n   * ```\n   *\n   * ou\n   *\n   * ```\n   * this.disclaimers = this.disclaimers.concat(disclaimer);\n   * ```\n   */\n  @Input('t-disclaimers') set disclaimers(value: Array<ThfDisclaimer>) {\n\n    this.previousDisclaimers = [...this.disclaimers];\n    this._disclaimers = this.checkDisclaimers(value);\n\n  }\n\n  get disclaimers() {\n    return this._disclaimers;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta o botÃ£o para remover todos os *disclaimers* do grupo.\n   *\n   * > Por padrÃ£o, o mesmo Ã© exibido Ã  partir de dois ou mais *disclaimers* com a opÃ§Ã£o `hideClose` habilitada.\n   *\n   * @default `false`\n   */\n  @Input('t-hide-remove-all')\n  set hideRemoveAll(value: boolean) {\n    this._hideRemoveAll = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get hideRemoveAll() {\n    return this._hideRemoveAll;\n  }\n\n  /** TÃ­tulo do grupo de *disclaimers*. */\n  @Input('t-title') title?: string;\n\n  /** FunÃ§Ã£o que serÃ¡ disparada quando a lista de *disclaimers* for modificada. */\n  @Output('t-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(differs: IterableDiffers) {\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngDoCheck() {\n    this.checkChanges();\n  }\n\n  closeItem(disclaimer: any, emitChange: boolean = true) {\n    const itemIndex = this.disclaimers.findIndex(d => d['$id'] === disclaimer['$id']);\n    this.disclaimers.splice(itemIndex, 1);\n\n    if (emitChange) {\n      this.emitChangeDisclaimers();\n    }\n  }\n\n  isRemoveAll() {\n    return !this.hideRemoveAll && this.disclaimers.filter(c => !c.hideClose).length > 1;\n  }\n\n  onKeyPress(event: any) {\n\n    if (isKeyCodeEnter(event)) {\n      this.removeAllItems();\n    }\n\n  }\n\n  removeAllItems() {\n    const removeItems = [];\n\n    this.disclaimers.forEach(disclaimer => {\n      if (!disclaimer.hideClose) {\n        removeItems.push(disclaimer);\n      }\n    });\n\n    removeItems.forEach(disclaimer => this.closeItem(disclaimer, false));\n\n    this.emitChangeDisclaimers();\n  }\n\n  private checkChanges() {\n\n    if (this.differ) {\n      const changes = this.differ.diff(this.disclaimers);\n\n      if (changes && this.disclaimersAreChanged(this.disclaimers)) {\n        this.emitChangeDisclaimers();\n      }\n\n    }\n\n  }\n\n  private checkDisclaimers(disclaimers: Array<ThfDisclaimer>) {\n    if (Array.isArray(disclaimers)) {\n\n      for (let i = 0; i < disclaimers.length; i++) {\n        const disclaimer = disclaimers[i];\n\n        if (disclaimer.value || disclaimer.value === 0 || disclaimer.value === false) {\n\n          disclaimer['$id'] = uuid();\n\n        } else {\n\n          disclaimers.splice(i, 1);\n          i--;\n        }\n      }\n\n      return disclaimers;\n    }\n\n    return [];\n  }\n\n  private disclaimersAreChanged(disclaimers: Array<ThfDisclaimer>): boolean {\n    const currentValues: Array<ThfDisclaimer> = disclaimers;\n\n    if (currentValues.length !== this.previousDisclaimers.length) {\n      return true;\n    }\n\n    return currentValues.some((disclaimer, index) => disclaimer.value !== this.previousDisclaimers[index].value\n      || disclaimer.property !== this.previousDisclaimers[index].property);\n  }\n\n  private emitChangeDisclaimers() {\n    setTimeout(() => {\n      this.change.emit(this.disclaimers);\n    });\n    this.previousDisclaimers = [...this._disclaimers];\n  }\n\n}\n","import { Component, IterableDiffers } from '@angular/core';\n\nimport { ThfDisclaimerGroupBaseComponent } from './thf-disclaimer-group-base.component';\n\n/**\n * @docsExtends ThfDisclaimerGroupBaseComponent\n *\n * @example\n *\n * <example name=\"thf-disclaimer-group-basic\" title=\"Totvs Disclaimer Group Basic\">\n *   <file name=\"sample-thf-disclaimer-group-basic/sample-thf-disclaimer-group-basic.component.html\"> </file>\n *   <file name=\"sample-thf-disclaimer-group-basic/sample-thf-disclaimer-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-disclaimer-group-labs\" title=\"Totvs Disclaimer Group Labs\">\n *   <file name=\"sample-thf-disclaimer-group-labs/sample-thf-disclaimer-group-labs.component.html\"> </file>\n *   <file name=\"sample-thf-disclaimer-group-labs/sample-thf-disclaimer-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-disclaimer-group-sw-planets\" title=\"Totvs Disclaimer Group - Star Wars Planets\">\n *   <file name=\"sample-thf-disclaimer-group-sw-planets/sample-thf-disclaimer-group-sw-planets.component.html\"> </file>\n *   <file name=\"sample-thf-disclaimer-group-sw-planets/sample-thf-disclaimer-group-sw-planets.component.ts\"> </file>\n *   <file name=\"sample-thf-disclaimer-group-sw-planets/sample-thf-disclaimer-group-sw-planets.service.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'thf-disclaimer-group',\n  templateUrl: './thf-disclaimer-group.component.html'\n})\nexport class ThfDisclaimerGroupComponent extends ThfDisclaimerGroupBaseComponent {\n\n  constructor(differs: IterableDiffers) {\n    super(differs);\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n/**\n * @docsPrivate\n *\n * @description\n *\n * Este Ã© um componente interno utilizado pelo thf-disclaimer-group, se comporta como um botÃ£o e recebe uma aÃ§Ã£o para remover todos os\n * thf-disclaimers do grupo.\n */\n@Component({\n  selector: 'thf-disclaimer-remove',\n  templateUrl: './thf-disclaimer-remove.component.html'\n})\nexport class ThfDisclaimerRemoveComponent {\n\n  /** Texto exibido.  */\n  @Input('t-label') label?: string;\n\n  /** AÃ§Ã£o para remover todos.  */\n  @Output('t-remove-all-action') removeAllAction = new EventEmitter();\n\n  // Emite a aÃ§Ã£o de remover todos.\n  removeAction() {\n    this.removeAllAction.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfDisclaimerModule } from '../thf-disclaimer/thf-disclaimer.module';\n\nimport { ThfDisclaimerGroupComponent } from './thf-disclaimer-group.component';\nimport { ThfDisclaimerRemoveComponent } from './thf-disclaimer-remove/thf-disclaimer-remove.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-disclaimer-group.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ThfDisclaimerModule\n  ],\n  declarations: [ThfDisclaimerGroupComponent, ThfDisclaimerRemoveComponent],\n  exports: [ThfDisclaimerGroupComponent]\n})\nexport class ThfDisclaimerGroupModule { }\n","import { Input } from '@angular/core';\n\n/**\n * @description\n *\n * Este componente apresenta uma linha demarcadora de blocos e pode conter um *label*. Seu uso Ã© indicado para definiÃ§Ã£o\n * e organizaÃ§Ã£o de informaÃ§Ãµes em uma tela e sua caracterÃ­stica Ã© semelhante Ã  tag `<hr>`.\n */\nexport class ThfDividerBaseComponent {\n\n  /** Valor do rÃ³tulo a ser exibido. */\n  @Input('t-label') label?: string;\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { ThfDividerBaseComponent } from './thf-divider-base.component';\n\n/**\n * @docsExtends ThfDividerBaseComponent\n *\n * @example\n *\n * <example name=\"thf-divider-basic\" title=\"Totvs Divider Basic\" >\n *  <file name=\"sample-thf-divider-basic/sample-thf-divider-basic.component.html\"> </file>\n *  <file name=\"sample-thf-divider-basic/sample-thf-divider-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-divider-labs\" title=\"Totvs Divider Labs\" >\n *  <file name=\"sample-thf-divider-labs/sample-thf-divider-labs.component.html\"> </file>\n *  <file name=\"sample-thf-divider-labs/sample-thf-divider-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-divider-user-detail\" title=\"Totvs Divider - User Detail\" >\n *  <file name=\"sample-thf-divider-user-detail/sample-thf-divider-user-detail.component.html\"> </file>\n *  <file name=\"sample-thf-divider-user-detail/sample-thf-divider-user-detail.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-divider',\n  templateUrl: './thf-divider.component.html',\n})\nexport class ThfDividerComponent extends ThfDividerBaseComponent { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfDividerComponent } from './thf-divider.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-divider.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ThfDividerComponent\n  ],\n  exports: [\n    ThfDividerComponent\n  ]\n})\nexport class ThfDividerModule { }\n","import { ElementRef, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { THF_CONTROL_POSITIONS } from './../../services/thf-control-position/thf-control-position.constants';\n\nimport { ThfPopupAction } from './thf-popup-action.interface';\n\nconst thfPopupDefaultPosition = 'bottom-left';\n\n/**\n * @description\n *\n * O componente `thf-popup` Ã© um container pequeno recomendado para aÃ§Ãµes de navegaÃ§Ã£o:\n * Ele abre sobreposto aos outros componentes.\n *\n * Ã possÃ­vel escolher as posiÃ§Ãµes do `thf-popup` em relaÃ§Ã£o ao componente alvo, para isto veja a propriedade `t-position`.\n *\n * TambÃ©m Ã© possÃ­vel informar um _template_ _header_ para o `thf-popup`, que serÃ¡ exibido acima das aÃ§Ãµes.\n * Para funcionar corretamente Ã© preciso adicionar a propriedade `t-popup-header-template` no elemento que servirÃ¡ de template, por exemplo:\n *\n * ```\n * <thf-popup [t-target]=\"target\">\n *   <div t-popup-header-template>\n *     <div>\n *       Dev Totvs\n *     </div>\n *     <div>\n *       dev.totvs@totvs.com.br\n *     </div>\n *   </div>\n * </thf-popup >\n * ```\n */\nexport class ThfPopupBaseComponent {\n\n  private _actions: Array<ThfPopupAction>;\n  private _customPositions?: Array<string>;\n  private _hideArrow: boolean = false;\n  private _isCornerAlign: boolean = false;\n  private _position?: string = thfPopupDefaultPosition;\n  private _target: any;\n\n  arrowDirection: string = 'top-right';\n  showPopup: boolean = false;\n\n  protected oldTarget;\n  protected param;\n  protected parentRef;\n\n  /** Lista de aÃ§Ãµes que serÃ£o exibidas no componente. */\n  @Input('t-actions') set actions(value: Array<ThfPopupAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta a seta do componente *popup*.\n   *\n   * @default `false`\n   */\n  @Input('t-hide-arrow') set hideArrow(value: boolean) {\n    this._hideArrow = convertToBoolean(value);\n  }\n\n  get hideArrow(): boolean {\n    return this._hideArrow;\n  }\n\n  // Define se o `thf-popup` serÃ¡ alinhado pelos cantos do elemento target.\n  @Input('t-is-corner-align') set isCornerAlign(value: boolean) {\n    this._isCornerAlign = convertToBoolean(value);\n  }\n\n  get isCornerAlign(): boolean {\n    return this._isCornerAlign;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o inicial que o `thf-popup` abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o `bottom-left` (abaixo e a esquerda), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * > Caso seja definido um `t-custom-positions` o componente irÃ¡ abrir na posiÃ§Ã£o definida na propriedade `t-position`\n   * e caso nÃ£o caiba na posiÃ§Ã£o inicial ele irÃ¡ rotacionar seguindo a ordem de posiÃ§Ãµes definidas no `t-custom-positions`.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o thf-popup no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o thf-popup no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o thf-popup no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o thf-popup abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o thf-popup abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o thf-popup abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o thf-popup no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o thf-popup no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o thf-popup no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o thf-popup acima do componente alvo.\n   * - `top-right`: Posiciona o thf-popup acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o thf-popup acima e Ã  esquerda do componente alvo.\n   *\n   * @default `bottom-left`\n   */\n  @Input('t-position') set position(value: string) {\n    this._position = THF_CONTROL_POSITIONS.includes(value) ? value : thfPopupDefaultPosition;\n  }\n\n  get position(): string {\n    return this._position;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define as posiÃ§Ãµes e a sequÃªncia que o `thf-popup` poderÃ¡ rotacionar. A sequÃªncia serÃ¡ definida pela ordem passada\n   * no *array*. Caso nÃ£o seja definido, o `thf-popup` irÃ¡ rotacionar em todas as posiÃ§Ãµes vÃ¡lidas.\n   *\n   * > O componente sempre irÃ¡ abrir na posiÃ§Ã£o definida no `t-position` e caso nÃ£o caiba na posiÃ§Ã£o definida o mesmo\n   * irÃ¡ rotacionar seguindo a ordem definida pelo `t-custom-position`.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o thf-popup no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o thf-popup no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o thf-popup no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o thf-popup abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o thf-popup abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o thf-popup abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o thf-popup no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o thf-popup no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o thf-popup no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o thf-popup acima do componente alvo.\n   * - `top-right`: Posiciona o thf-popup acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o thf-popup acima e Ã  esquerda do componente alvo.\n   */\n  @Input('t-custom-positions') set customPositions(value: Array<string>) {\n    this._customPositions = Array.isArray(value) ? value : [];\n  }\n\n  get customPositions() {\n    return this._customPositions;\n  }\n\n  /**\n   * @description\n   *\n   * Para utilizar o `thf-popup` deve-se colocar uma variÃ¡vel local no componente que dispararÃ¡ o evento\n   * de abertura no mesmo e com isso, invocarÃ¡ a funÃ§Ã£o `toggle`, por exemplo:\n   *\n   * ```\n   * <span #icon class=\"thf-icon thf-icon-credit-payment\" (click)=\"popup.toggle()\">\n   *   Credit Actions\n   * </span>\n   *\n   * <thf-popup #popup\n   *   [t-actions]=\"actions\"\n   *   [t-target]=\"icon\">\n   * </thf-popup>\n   * ```\n   *\n   * Caso o elemento alvo for um componente, serÃ¡ preciso obter o `ElementRef` do mesmo e passÃ¡-lo Ã  propriedade, por exemplo:\n   *\n   * ```\n   * // component.html\n   *\n   * <thf-button #thfButton\n   *   t-label=\"Open Popover\"\n   *   (t-click)=\"popup.toggle()\">\n   * </thf-button>\n   *\n   * <thf-popup #popup\n   *   [t-actions]=\"actions\"\n   *   [t-target]=\"thfButtonRef\">\n   * </thf-popup>\n   *\n   * // component.ts\n   *\n   * @ViewChild('thfButton', { read: ElementRef }) thfButtonRef: ElementRef;\n   * ```\n   */\n  @Input('t-target') set target(value: any) {\n    this._target = (value instanceof ElementRef) ? value.nativeElement : value;\n  }\n\n  get target() {\n    return this._target;\n  }\n\n  protected clickoutListener: () => void;\n  protected resizeListener: () => void;\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../utils/util';\nimport { ThfControlPositionService } from '../../services/thf-control-position/thf-control-position.service';\n\nimport { ThfPopupAction } from './thf-popup-action.interface';\nimport { ThfPopupBaseComponent } from './thf-popup-base.component';\n\n/**\n *\n * @docsExtends ThfPopupBaseComponent\n *\n * @example\n *\n * <example name=\"thf-popup-basic\" title=\"Totvs Popup - Basic\">\n *   <file name=\"sample-thf-popup-basic/sample-thf-popup-basic.component.html\"> </file>\n *   <file name=\"sample-thf-popup-basic/sample-thf-popup-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-popup-labs\" title=\"Totvs Popup - Labs\">\n *   <file name=\"sample-thf-popup-labs/sample-thf-popup-labs.component.html\"> </file>\n *   <file name=\"sample-thf-popup-labs/sample-thf-popup-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-popup-email\" title=\"Totvs Popup Email\">\n *   <file name=\"sample-thf-popup-email/sample-thf-popup-email.component.html\"> </file>\n *   <file name=\"sample-thf-popup-email/sample-thf-popup-email.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'thf-popup',\n  templateUrl: './thf-popup.component.html',\n  providers: [ ThfControlPositionService ]\n})\nexport class ThfPopupComponent extends ThfPopupBaseComponent {\n\n  @ViewChild('popupRef', { read: ElementRef, static: false }) popupRef: ElementRef;\n\n  constructor(\n    viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private router: Router,\n    private thfControlPosition: ThfControlPositionService,\n    public changeDetector: ChangeDetectorRef) {\n    super();\n    this.parentRef = viewContainerRef['_view']['component'];\n  }\n\n  /**\n   * Fecha o componente *popup*.\n   *\n   * > Por padrÃ£o, este comportamento Ã© acionado somente ao clicar fora do componente ou em determinada aÃ§Ã£o / url.\n   */\n  close() {\n    this.removeListeners();\n\n    this.showPopup = false;\n  }\n\n  onActionClick(popupAction: ThfPopupAction) {\n    const actionNoDisabled = popupAction && !this.returnBooleanValue(popupAction, 'disabled');\n\n    if (popupAction && popupAction.action && actionNoDisabled) {\n      this.close();\n      return callFunction(popupAction.action, this.parentRef, this.param || popupAction);\n    }\n\n    if (popupAction && popupAction.url && actionNoDisabled) {\n      this.close();\n      return this.openUrl(popupAction.url);\n    }\n  }\n\n  /**\n   * Abre o componente *popup*.\n   *\n   * > Ã possÃ­vel informar um parÃ¢metro que serÃ¡ utilizado na execuÃ§Ã£o da aÃ§Ã£o do item e na funÃ§Ã£o de desabilitar.\n   */\n  open(param?) {\n    this.oldTarget = this.target;\n    this.param = param;\n    this.showPopup = true;\n    this.changeDetector.detectChanges();\n    this.validateInitialContent();\n  }\n\n  returnBooleanValue(popupAction: any, property: string) {\n    return isTypeof(popupAction[property], 'function') ? popupAction[property](this.param || popupAction) : popupAction[property];\n  }\n\n  /**\n   * ResponsÃ¡vel por abrir e fechar o *popup*.\n   *\n   * Quando disparado abrirÃ¡ o *popup* e caso o mesmo jÃ¡ estiver aberto e possuir o mesmo `target` irÃ¡ fecha-lo.\n   *\n   * Ã possÃ­vel informar um parÃ¢metro que serÃ¡ utilizado na execuÃ§Ã£o da aÃ§Ã£o do item e na funÃ§Ã£o de desabilitar.\n   */\n  toggle(param?) {\n    this.showPopup && this.oldTarget === this.target ? this.close() : this.open(param);\n  }\n\n  private clickedOutDisabledItem(event) {\n    const containsItemDisabled = this.elementContains(event.target, 'thf-popup-item-disabled') ||\n      this.elementContains(event.target.parentElement, 'thf-popup-item-disabled');\n\n    return !containsItemDisabled;\n  }\n\n  private clickedOutHeaderTemplate(event) {\n    const popupHeaderTemplate = this.popupRef && this.popupRef.nativeElement.querySelector('[t-popup-header-template]');\n    return !(popupHeaderTemplate && popupHeaderTemplate.contains(event.target));\n  }\n\n  private clickedOutTarget(event) {\n    return this.target && !this.target.contains(event.target);\n  }\n\n  private closePopupOnClickout(event: MouseEvent) {\n\n    if (this.clickedOutTarget(event) && this.clickedOutDisabledItem(event) && this.clickedOutHeaderTemplate(event)) {\n\n      this.close();\n    }\n\n  }\n\n  private elementContains(element: HTMLElement, className: string) {\n    return element && element.classList.contains(className);\n  }\n\n  private hasContentToShow() {\n    return !!(this.popupRef.nativeElement && this.popupRef.nativeElement.clientHeight);\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.close();\n    });\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.closePopupOnClickout(event);\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    if (this.showPopup) {\n      this.close();\n    }\n  }\n\n  private openUrl(url: string) {\n    if (isExternalLink(url)) {\n      return openExternalLink(url);\n    }\n\n    if (url) {\n      return this.router.navigate([url]);\n    }\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPosition() {\n    this.thfControlPosition.setElements(this.popupRef.nativeElement, 8, this.target, this.customPositions, false, this.isCornerAlign);\n    this.thfControlPosition.adjustPosition(this.position);\n    this.arrowDirection = this.thfControlPosition.getArrowDirection();\n  }\n\n  private validateInitialContent() {\n    if (this.hasContentToShow()) {\n      this.setPosition();\n      this.initializeListeners();\n    } else {\n      this.close();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfPopupComponent } from './thf-popup.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-popup.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    ThfPopupComponent,\n  ],\n  exports: [\n    ThfPopupComponent\n  ],\n  providers: [],\n  schemas: []\n})\nexport class ThfPopupModule { }\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from './../../utils/util';\n\nimport { ThfDropdownAction } from './thf-dropdown-action.interface';\n\n/**\n * @description\n *\n * O componente `thf-dropdown` pode ser utilizado como um agrupador de aÃ§Ãµes e / ou opÃ§Ãµes.\n *\n * > Caso nÃ£o haja configuraÃ§Ã£o de rotas em sua aplicaÃ§Ã£o, se faz necessÃ¡rio importar o `RouterModule`\n * no mÃ³dulo principal para o correto funcionamento deste componente:\n *\n * ```\n * import { RouterModule } from '@angular/router';\n *\n * @NgModule({\n *   imports: [\n *     ...\n *     RouterModule.forRoot([]),\n *     ThfModule\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   exports: [],\n *   providers: [],\n *   bootstrap: [\n *     AppComponent\n *   ]\n * })\n * export class AppModule { }\n * ```\n * > Para maiores dÃºvidas referente Ã  configuraÃ§Ã£o de rotas, acesse em nosso portal /Guias /ComeÃ§ando\n * [/Configurando as rotas do thf-menu](/guides/getting-started).\n */\n\nexport class ThfDropdownBaseComponent {\n\n  private _actions: Array<ThfDropdownAction>;\n  private _disabled: boolean = false;\n\n  icon: string = 'thf-icon-arrow-down';\n  open: boolean = false;\n\n  /** Lista de aÃ§Ãµes que serÃ£o exibidas no componente. */\n  @Input('t-actions') set actions(value: Array<ThfDropdownAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o campo.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Adiciona um rÃ³tulo ao `dropdown`. */\n  @Input('t-label') label: string;\n\n}\n","import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\n\nimport { isKeyCodeEnter } from './../../utils/util';\n\nimport { ThfDropdownBaseComponent } from './thf-dropdown-base.component';\n\n/**\n * @docsExtends ThfDropdownBaseComponent\n *\n * @example\n *\n * <example name=\"thf-dropdown-basic\" title=\"Totvs Dropdown Basic\" >\n *  <file name=\"sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.html\"> </file>\n *  <file name=\"sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.ts\"> </file>\n *  <file name=\"sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-dropdown-labs\" title=\"Totvs Dropdown Labs\" >\n *  <file name=\"sample-thf-dropdown-labs/sample-thf-dropdown-labs.component.html\"> </file>\n *  <file name=\"sample-thf-dropdown-labs/sample-thf-dropdown-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-dropdown-social-network\" title=\"Totvs Dropdown - Social Network\" >\n *  <file name=\"sample-thf-dropdown-social-network/sample-thf-dropdown-social-network.component.html\"> </file>\n *  <file name=\"sample-thf-dropdown-social-network/sample-thf-dropdown-social-network.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-dropdown',\n  templateUrl: './thf-dropdown.component.html'\n})\nexport class ThfDropdownComponent extends ThfDropdownBaseComponent {\n\n  private clickoutListener: () => void;\n  private resizeListener: () => void;\n\n  @ViewChild('dropdownRef', { read: ElementRef, static: true }) dropdownRef: ElementRef;\n  @ViewChild('popupRef', { static: false }) popupRef: any;\n\n  constructor(private renderer: Renderer2) {\n    super();\n  }\n\n  onKeyDown(event: any) {\n    if (isKeyCodeEnter(event)) {\n      this.toggleDropdown();\n    }\n  }\n\n  toggleDropdown(): void {\n    this.dropdownRef && !this.open && !this.disabled ? this.showDropdown() : this.hideDropdown();\n  }\n\n  private checkClickArea(event: MouseEvent) {\n    return this.dropdownRef && this.dropdownRef.nativeElement.contains(event.target);\n  }\n\n  private hideDropdown() {\n    this.icon = 'thf-icon-arrow-down';\n    this.removeListeners();\n    this.popupRef.close();\n    this.open = false;\n  }\n\n  private initializeListeners() {\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnDropdown(event);\n    });\n\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.hideDropdown();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    if (this.open) {\n      this.hideDropdown();\n    }\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private showDropdown() {\n    this.icon = 'thf-icon-arrow-up';\n    this.initializeListeners();\n    this.popupRef.open();\n    this.open = true;\n  }\n\n  private wasClickedOnDropdown(event: MouseEvent) {\n    const clickedOnDropdown = this.checkClickArea(event);\n\n    if (!clickedOnDropdown) {\n      this.hideDropdown();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfPopupModule } from '../thf-popup/thf-popup.module';\n\nimport { ThfDropdownComponent } from './thf-dropdown.component';\n/**\n * @description\n * MÃ³dulo do componente thf-dropdown.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ThfPopupModule\n  ],\n  declarations: [ThfDropdownComponent],\n  exports: [ThfDropdownComponent]\n})\nexport class ThfDropdownModule { }\n","import { Injectable } from '@angular/core';\n\nimport { getBrowserLanguage, getShortLanguage, isLanguage, thfLocaleDefault, thfLocales } from '../../utils/util';\n\nconst thfDefaultLanguage = 'THF_DEFAULT_LANGUAGE';\nconst thfLocaleKey = 'THF_USER_LOCALE';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o responsÃ¡vel por gerenciar as linguagens da aplicaÃ§Ã£o.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThfLanguageService {\n\n  set languageDefault(language: string) {\n    if (language && isLanguage(language)) {\n      localStorage.setItem(thfDefaultLanguage, language);\n    }\n  }\n\n  get languageDefault(): string {\n    return localStorage.getItem(thfDefaultLanguage);\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar o idioma ativo.\n   *\n   * A busca do idioma serÃ¡ feita na seguinte ordem:\n   *\n   *   1 - o idioma que foi armazenado no *localStorage*, atravÃ©s do mÃ©todo `setLanguage()` utilizado pelo i18n.\n   *\n   *   2 - o valor inserido nas configuraÃ§Ãµes do mÃ³dulo do i18n atravÃ©s do parÃ¢metro `config`, sendo o idioma inserido\n   * na propriedade `language` da interface `ThfI18nConfigDefault`.\n   *\n   *   3 - o idioma do navegador utilizado.\n   *\n   * > Caso o idioma do navegador nÃ£o seja suportado pelo THF (`pt`, `en` ou `es`), serÃ¡ retornado valor `pt`.\n   *\n   * **Retorno:** `string` com a sigla do idioma ativo.\n   */\n  getLanguage(): string {\n    const language = localStorage.getItem(thfLocaleKey) || this.languageDefault || getBrowserLanguage();\n\n    return language && language.toLowerCase();\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar o idioma *default* da aplicaÃ§Ã£o definido nas configuraÃ§Ãµes do mÃ³dulo do i18n atravÃ©s\n   * do parÃ¢metro `config`.\n   *\n   * **Retorno:** `string` com a sigla do idioma *default*.\n   */\n  getLanguageDefault(): string {\n    return this.languageDefault;\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar a abreviaÃ§Ã£o do idioma ativo na aplicaÃ§Ã£o.\n   *\n   * @default `pt`\n   *\n   * **Retorno:** `string` com a sigla abreviada do idioma ativo.\n   */\n  getShortLanguage(): string {\n    const language = this.getLanguage();\n    const shortLanguage = getShortLanguage(language);\n\n    return thfLocales.includes(shortLanguage) ? shortLanguage : thfLocaleDefault;\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo para salvar o idioma da aplicaÃ§Ã£o no *storage*, utilizado pelo serviÃ§o do i18n.\n   *\n   * > Ao definir um idioma por este mÃ©todo, todos os mÃ³dulos da aplicaÃ§Ã£o utilizarÃ£o o idioma definido.\n   *\n   * @param language sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   */\n  setLanguage(language: string): void {\n    if (!isLanguage(language)) {\n      return;\n    }\n\n    localStorage.setItem(thfLocaleKey, language.toLowerCase());\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo que define o idioma configurado a partir do parÃ¢metro `config` utilizado pelo mÃ³dulo do i18n.\n   *\n   * > Ao definir um idioma por este serviÃ§o, apenas o mÃ³dulo do i18n referente a esta configuraÃ§Ã£o utilizarÃ¡ o idioma definido.\n   *\n   * @param language sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   */\n  setLanguageDefault(language: string): void {\n    this.languageDefault = language;\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from './../../../utils/util';\n\nimport { ThfLanguageService } from '../../../services/thf-language/thf-language.service';\n\nimport { ThfLoadingOverlayLiterals } from './interfaces/thf-loading-overlay-literals.interface';\n\nexport const thfLoadingOverlayLiteralsDefault = {\n  en: <ThfLoadingOverlayLiterals> {\n    loading: 'Loading',\n  },\n  es: <ThfLoadingOverlayLiterals> {\n    loading: 'Cargando',\n  },\n  pt: <ThfLoadingOverlayLiterals> {\n    loading: 'Carregando',\n  }\n};\n\n/**\n *\n * @description\n *\n * Este componente mostra ao usuÃ¡rio uma imagem de _loading_ e bloqueia a pÃ¡gina inteira ou o container escolhido,\n * enquanto aguarda a resposta de alguma requisiÃ§Ã£o.\n */\nexport class ThfLoadingOverlayBaseComponent {\n\n  private _screenLock?: boolean = false;\n  private _text?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se o _overlay_ serÃ¡ aplicado a um container ou a pÃ¡gina inteira.\n   *\n   * @default `false`\n   */\n  @Input('t-screen-lock') set screenLock(screenLock: boolean) {\n    this._screenLock = convertToBoolean(screenLock);\n  }\n\n  get screenLock() {\n    return this._screenLock;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto a ser exibido no componente.\n   *\n   * > O valor padrÃ£o serÃ¡ traduzido acordo com o idioma configurado no [**ThfI18n**](/documentation/thf-i18n) ou navegador.\n   *\n   * @default `Carregando`\n   */\n  @Input('t-text') set text(value: string) {\n    this._text = value || this.getTextDefault();\n  }\n\n  get text(): string {\n    return this._text;\n  }\n\n  constructor(private languageService: ThfLanguageService) {\n    if (!this.text) {\n      this.text = this.getTextDefault();\n    }\n  }\n\n  private getTextDefault(): string {\n    const language = this.languageService.getShortLanguage();\n\n    return thfLoadingOverlayLiteralsDefault[language].loading;\n  }\n\n}\n","import { Component, ChangeDetectorRef } from '@angular/core';\n\nimport { ThfLanguageService } from './../../../services/thf-language/thf-language.service';\n\nimport { ThfLoadingOverlayBaseComponent } from './thf-loading-overlay-base.component';\n\n/**\n *\n * @docsExtends ThfLoadingOverlayBaseComponent\n *\n * @example\n *\n * <example name=\"thf-loading-overlay-basic\" title=\"Totvs Loading Overlay Basic\">\n *  <file name=\"sample-thf-loading-overlay-basic/sample-thf-loading-overlay-basic.component.html\"> </file>\n *  <file name=\"sample-thf-loading-overlay-basic/sample-thf-loading-overlay-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-loading-overlay-labs\" title=\"Totvs Loading Overlay Labs\">\n *  <file name=\"sample-thf-loading-overlay-labs/sample-thf-loading-overlay-labs.component.html\"> </file>\n *  <file name=\"sample-thf-loading-overlay-labs/sample-thf-loading-overlay-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-loading-overlay-connection-test\" title=\"Totvs Loading Overlay - Connection Test\">\n *  <file name=\"sample-thf-loading-overlay-connection-test/sample-thf-loading-overlay-connection-test.component.html\"> </file>\n *  <file name=\"sample-thf-loading-overlay-connection-test/sample-thf-loading-overlay-connection-test.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-loading-overlay',\n  templateUrl: 'thf-loading-overlay.component.html'\n})\nexport class ThfLoadingOverlayComponent extends ThfLoadingOverlayBaseComponent {\n\n  constructor(public changeDetector: ChangeDetectorRef, languageService: ThfLanguageService) {\n    super(languageService);\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { ThfLanguageService } from './thf-language.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `thf-language`.\n */\n@NgModule({\n  providers: [\n    ThfLanguageService\n  ]\n})\nexport class ThfLanguageModule { }\n","import { Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Este componente tem o objetivo de mostrar visualmente aos usuÃ¡rios que a aplicaÃ§Ã£o estÃ¡ processando\n * ou aguardando a resposta de alguma requisiÃ§Ã£o.\n */\nexport class ThfLoadingBaseComponent {\n\n  /**\n   * Texto a ser exibido no componente.\n   */\n  @Input('t-text') text?: string = 'Carregando';\n\n}\n","import { Component } from '@angular/core';\n\nimport { ThfLoadingBaseComponent } from './thf-loading-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends ThfLoadingBaseComponent\n */\n@Component({\n  selector: 'thf-loading',\n  templateUrl: 'thf-loading.component.html'\n})\nexport class ThfLoadingComponent extends ThfLoadingBaseComponent { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfLanguageModule } from './../../services/thf-language/thf-language.module';\n\nimport { ThfLoadingComponent } from './thf-loading.component';\nimport { ThfLoadingOverlayComponent } from './thf-loading-overlay/thf-loading-overlay.component';\n\n/**\n *\n * @description\n *\n * MÃ³dulo do componente thf-loading-overlay.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ThfLanguageModule\n  ],\n  declarations: [\n    ThfLoadingComponent,\n    ThfLoadingOverlayComponent\n  ],\n  exports: [\n    ThfLoadingComponent,\n    ThfLoadingOverlayComponent\n  ]\n})\nexport class ThfLoadingModule { }\n","import { Input, EventEmitter } from '@angular/core';\n\nimport { convertToBoolean } from './../../utils/util';\nimport { ThfModalAction } from './thf-modal-action.interface';\n\n/**\n * @description\n *\n * O componente `thf-modal` Ã© utilizado para incluir conteÃºdos rÃ¡pidos e informativos.\n *\n * No cabeÃ§alho do componente Ã© possÃ­vel definir um tÃ­tulo e como tambÃ©m permite ocultar o Ã­cone de fechamento da modal.\n *\n * Em seu corpo Ã© possÃ­vel definir um conteÃºdo informativo, podendo utilizar componentes como por exemplo `thf-chart`,\n * `thf-table` e os demais componentes do THF.\n *\n * No rodapÃ© encontram-se os botÃµes de aÃ§Ã£o primÃ¡ria e secundÃ¡ria, no qual permitem definir uma aÃ§Ã£o e um rÃ³tulo, bem como\n * definir um estado de carregando e / ou desabilitado. TambÃ©m Ã© possÃ­vel definir o botÃ£o com o tipo *danger*.\n *\n * > Ã possÃ­vel fechar a modal atravÃ©s da tecla *ESC*, quando a propriedade `t-hide-close` nÃ£o estiver habilitada.\n */\nexport class ThfModalBaseComponent {\n\n  private _hideClose?: boolean = false;\n  private _size?: string = 'md';\n\n  /** TÃ­tulo da modal. */\n  @Input('t-title') title: string;\n\n  /**\n   * Deve ser definido um objeto que implementa a interface `ThfModalAction` contendo a label e a funÃ§Ã£o da primeira aÃ§Ã£o.\n   * Caso esta propriedade nÃ£o seja definida ou esteja incompleta, automaticamente serÃ¡ adicionado um botÃ£o de aÃ§Ã£o com\n   * a funÃ§Ã£o de fechar a modal.\n   */\n  @Input('t-primary-action') primaryAction?: ThfModalAction;\n\n  /** Deve ser definido um objeto que implementa a interface `ThfModalAction` contendo a label e a funÃ§Ã£o da segunda aÃ§Ã£o. */\n  @Input('t-secondary-action') secondaryAction?: ThfModalAction;\n\n  /**\n   * Define o tamanho da modal.\n   *\n   * Valores vÃ¡lidos:\n   *  - `sm` (pequeno)\n   *  - `md` (mÃ©dio)\n   *  - `lg` (grande)\n   *  - `xl` (extra grande)\n   *  - `auto` (automÃ¡tico)\n   *\n   * > Quando informado `auto` a modal calcularÃ¡ automaticamente seu tamanho baseado em seu conteÃºdo.\n   * Caso nÃ£o seja informado um valor, a modal terÃ¡ o tamanho definido como `md`.\n   *\n   * > Todas as opÃ§Ãµes de tamanho possuem uma largura mÃ¡xima de **768px**.\n   */\n  @Input('t-size') set size(value: string) {\n    const sizes = ['sm', 'md', 'lg', 'xl', 'auto'];\n    this._size = sizes.indexOf(value) > -1 ? value : 'md';\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  /**\n   * Define o fechamento da modal ao clicar fora da mesma.\n   * Informe o valor `true` para ativar o fechamento ao clicar fora da modal.\n   */\n  clickOut?: boolean = false;\n  @Input('t-click-out') set setClickOut(value: boolean | string) {\n    this.clickOut = (value === '') ? false : convertToBoolean(value);\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta o Ã­cone de fechar do cabeÃ§alho da modal.\n   *\n   * > Caso a propriedade estiver habilitada, nÃ£o serÃ¡ possÃ­vel fechar a modal atravÃ©s da tecla *ESC*.\n   *\n   * @default `false`\n   */\n  @Input('t-hide-close') set hideClose(value: boolean) {\n    this._hideClose = convertToBoolean(value);\n  }\n\n  get hideClose() {\n    return this._hideClose;\n  }\n\n  // Controla se a modal fica oculto ou visÃ­vel, por padrÃ£o Ã© oculto\n  isHidden = true;\n\n  // Event emmiter para quando a modal Ã© fechada pelo 'X'.\n  public onXClosed = new EventEmitter<boolean>();\n\n  /** FunÃ§Ã£o para fechar a modal. */\n  close(xClosed = false): void {\n    this.isHidden = true;\n    if (xClosed) {\n      this.onXClosed.emit(xClosed);\n    }\n  }\n\n  /** FunÃ§Ã£o para abrir a modal. */\n  open(): void {\n    this.validPrimaryAction();\n\n    this.isHidden = false;\n  }\n\n  validPrimaryAction() {\n    if (!this.primaryAction) {\n      this.primaryAction = {\n        action: () => this.close(),\n        label: 'Ok',\n      };\n    }\n\n    if (!this.primaryAction['action']) {\n      this.primaryAction['action'] = () => this.close();\n    }\n    if (!this.primaryAction['label']) {\n      this.primaryAction['label'] = 'Ok';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ThfModalService {\n\n  modalActive: string;\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { ThfModalBaseComponent } from './thf-modal-base.component';\nimport { ThfModalService } from './thf-modal-service';\n\n/**\n * @docsExtends ThfModalBaseComponent\n *\n * @example\n *\n * <example name=\"thf-modal-basic\" title=\"Totvs Modal Basic\">\n *  <file name=\"sample-thf-modal-basic/sample-thf-modal-basic.component.html\"> </file>\n *  <file name=\"sample-thf-modal-basic/sample-thf-modal-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-modal-labs\" title=\"Totvs Modal Labs\">\n *  <file name=\"sample-thf-modal-labs/sample-thf-modal-labs.component.html\"> </file>\n *  <file name=\"sample-thf-modal-labs/sample-thf-modal-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-modal-fruits-salad\" title=\"Totvs Modal - Fruits Salad\">\n *  <file name=\"sample-thf-modal-fruits-salad/sample-thf-modal-fruits-salad.component.html\"> </file>\n *  <file name=\"sample-thf-modal-fruits-salad/sample-thf-modal-fruits-salad.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'thf-modal',\n  templateUrl: './thf-modal.component.html'\n})\nexport class ThfModalComponent extends ThfModalBaseComponent {\n\n  @ViewChild('modalContent', { read: ElementRef, static: false }) modalContent: ElementRef;\n\n  private firstElement;\n  private focusFunction;\n  private focusableElements = 'input, select, textarea, button:not([disabled]), a';\n  private id: string = uuid();\n  private sourceElement;\n\n  onResizeListener: () => void;\n\n  constructor(private thfModalService: ThfModalService, private renderer: Renderer2, private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  close(xClosed = false) {\n    this.thfModalService.modalActive = undefined;\n\n    super.close(xClosed);\n\n    this.removeEventListeners();\n\n    if (this.sourceElement) {\n      this.sourceElement.focus();\n    }\n  }\n\n  closeModalOnEscapeKey(event) {\n    if (!this.hideClose) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.close();\n    }\n  }\n\n  getPrimaryActionButtonType() {\n    return this.primaryAction.danger ? 'danger' : 'primary';\n  }\n\n  getSecondaryActionButtonType() {\n    return this.secondaryAction && this.secondaryAction.danger && !this.primaryAction.danger ? 'danger' : 'default';\n  }\n\n  onClickOut(event) {\n    if (this.clickOut && !this.modalContent.nativeElement.contains(event.target)) {\n      this.close();\n    }\n  }\n\n  open() {\n    this.sourceElement = document.activeElement;\n\n    super.open();\n\n    this.handleFocus();\n  }\n\n  private handleFocus(): any {\n    this.thfModalService.modalActive = this.id;\n\n    setTimeout(() => {\n      if (this.modalContent) {\n        this.initFocus();\n        document.addEventListener('focus', this.focusFunction, true);\n      }\n    });\n  }\n\n  private initFocus() {\n    this.focusFunction = (event: any) => {\n      this.thfModalService.modalActive = this.thfModalService.modalActive || this.id;\n      const modalElement = this.modalContent.nativeElement;\n\n      if (!modalElement.contains(event.target) && this.thfModalService.modalActive === this.id) {\n        event.stopPropagation();\n        this.firstElement.focus();\n      }\n    };\n\n    this.setFirstElement();\n\n    if (this.hideClose) {\n      this.firstElement.focus();\n    } else {\n      const firstFieldElement =\n        this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1] ||\n        this.modalContent.nativeElement;\n      firstFieldElement.focus();\n    }\n  }\n\n  private removeEventListeners() {\n    document.removeEventListener('focus', this.focusFunction, true);\n  }\n\n  private setFirstElement() {\n    this.firstElement = this.modalContent.nativeElement.querySelector(this.focusableElements) || this.modalContent.nativeElement;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfButtonModule } from './../thf-button/thf-button.module';\nimport { ThfModalComponent } from './thf-modal.component';\nimport { ThfModalService } from './thf-modal-service';\n\n/**\n * @description\n * MÃ³dulo do componente thf-modal\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ThfButtonModule\n  ],\n  declarations: [\n    ThfModalComponent\n  ],\n  exports: [ ThfModalComponent ],\n  providers: [ThfModalService]\n})\nexport class ThfModalModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { isTypeof } from '../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Pipe responsÃ¡vel por apresentar um horÃ¡rio baseado no formato de entrada definido na API da Totvs.\n */\n@Pipe({\n  name: 'thf_time'\n})\nexport class ThfTimePipe implements PipeTransform {\n\n  transform(time: string, format?: string): string {\n\n    const hourRegex = /^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9][\\.]?([0-9]{1,6})?$/g;\n\n    if (isTypeof(time, 'string') && hourRegex.test(time)) {\n\n      const amountOfF = format ? format.lastIndexOf('f') - format.indexOf('f') + 1 : 0;\n\n      const miliseconds = this.addDotMiliseconds(time.substring(9, 9 + amountOfF), amountOfF);\n      const formatMiliseconds: string = this.getFormatMiliseconds(amountOfF);\n\n      return this.formatValue(time, format, formatMiliseconds, miliseconds);\n    }\n    return null;\n  }\n\n  private addDotMiliseconds(miliseconds: string, amountOfF: number): string {\n    if (miliseconds && amountOfF) {\n      miliseconds = '.' + miliseconds;\n    }\n    return miliseconds;\n  }\n\n  private formatValue(time: string, format: string, formatMiliseconds: string, miliseconds: string): string {\n    if (time && format) {\n      const hour = time.substring(0, 2);\n      const minutes = time.substring(3, 5);\n      const seconds = time.substring(6, 8);\n\n      format = format.replace('HH', hour);\n      format = format.replace('mm', minutes);\n      format = format.replace('ss', seconds);\n      format = format.replace(`.${formatMiliseconds}`, miliseconds);\n\n      return format;\n    } else {\n      return time;\n    }\n  }\n\n  private getFormatMiliseconds(amountOfF: number): string {\n    let formatMiliseconds: string = '';\n\n    for (let i = 0; i < amountOfF; i++) {\n      formatMiliseconds += 'f';\n    }\n\n    return formatMiliseconds;\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { ThfTimePipe } from './thf-time.pipe';\n\n/**\n * @description\n *\n * MÃ³dulo do pipe `thf-time`.\n */\n@NgModule({\n  declarations: [\n    ThfTimePipe\n  ],\n  imports: [],\n  exports: [\n    ThfTimePipe\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class ThfTimeModule { }\n","import { Component, Input } from '@angular/core';\n\nimport { ThfTableColumn } from '../interfaces/thf-table-column.interface';\nimport { ThfTableColumnIcon } from './thf-table-column-icon.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir Ã­cones nas colunas.\n */\n@Component({\n  selector: 'thf-table-column-icon',\n  templateUrl: './thf-table-column-icon.component.html'\n})\n\nexport class ThfTableColumnIconComponent {\n\n  tooltipText: string;\n\n  private _icons: Array<ThfTableColumnIcon>;\n\n  @Input('t-column') column: ThfTableColumn;\n\n  /** Lista de um ou mais Ã­cones que serÃ£o exibidos em sua respectiva coluna. */\n  @Input('t-icons') set icons(value: Array<ThfTableColumnIcon> | Array<string> | string) {\n    this._icons = this.convertToColumnIcon(value);\n  }\n\n  get icons() {\n    return this._icons;\n  }\n\n  @Input('t-row') row;\n\n  checkDisabled(iconColumn: ThfTableColumnIcon) {\n    return iconColumn.disabled ? iconColumn.disabled(this.row) : false;\n  }\n\n  getIconColorClass(columnIcon: ThfTableColumnIcon) {\n    const color = this.getIconColor(columnIcon) || this.getIconColor(this.column);\n\n    return color ? `thf-text-${color}` : '';\n  }\n\n  onIconClick(iconColumn: ThfTableColumnIcon) {\n    const isAbleAction = !this.checkDisabled(iconColumn);\n\n    if (iconColumn.action && isAbleAction) {\n      iconColumn.action(this.row, iconColumn);\n    } else if (this.column.action && isAbleAction) {\n      this.column.action(this.row, iconColumn || this.column);\n    }\n  }\n\n  tooltipMouseEnter(text: string, iconColumn: ThfTableColumnIcon) {\n    if (this.checkDisabled(iconColumn)) {\n      this.tooltipText = undefined;\n    } else {\n      this.tooltipText = text;\n    }\n  }\n\n  tooltipMouseLeave() {\n    this.tooltipText = undefined;\n  }\n\n  private convertToColumnIcon(value: any): Array<ThfTableColumnIcon> {\n\n    if (value instanceof Array) {\n      return value.map(val => {\n        return typeof val === 'string' ? { value: val } : val;\n      });\n    }\n\n    if (typeof value === 'string') {\n      return [{ value }];\n    }\n\n    return [];\n  }\n\n  private getIconColor(column: ThfTableColumnIcon | ThfTableColumn) {\n    return typeof column.color === 'function' ? column.color(this.row, column) : column.color;\n  }\n\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum que contÃ©m paleta de 12 cores.\n */\nexport enum ThfColorPaletteEnum {\n\n  /** #0c9abe */\n  Color01 = 'color-01' ,\n\n  /** #2c85c8 */\n  Color02 = 'color-02',\n\n  /** #2c43c8 */\n  Color03 = 'color-03',\n\n  /** #5843c8 */\n  Color04 = 'color-04',\n\n  /** #ab43c8 */\n  Color05 = 'color-05',\n\n  /** #ab4391 */\n  Color06 = 'color-06',\n\n  /** #c64840 */\n  Color07 = 'color-07',\n\n  /** #ea9b3e */\n  Color08 = 'color-08',\n\n  /** #abc249 */\n  Color09 = 'color-09',\n\n  /** #56b96b */\n  Color10 = 'color-10',\n\n  /** #00b28e */\n  Color11 = 'color-11',\n\n  /** #06a6a5 */\n  Color12 = 'color-12'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ThfColorPaletteEnum } from '../../enums/thf-color-palette.enum';\n\n@Injectable()\nexport class ThfColorPaletteService {\n\n  getColor(value: { color?: string, type?: string }): string {\n    return (<any>Object).values(ThfColorPaletteEnum).includes(value.color) ?\n      value.color : this.getColorFromType(value.type || value.color);\n  }\n\n  private getColorFromType(type: string): ThfColorPaletteEnum {\n    switch (type) {\n      case 'danger':\n        return ThfColorPaletteEnum.Color07;\n      case 'success':\n        return ThfColorPaletteEnum.Color11;\n      case 'warning':\n        return ThfColorPaletteEnum.Color08;\n      default:\n        return ThfColorPaletteEnum.Color01;\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ThfColorPaletteService } from './../../../services/thf-color-palette/thf-color-palette.service';\nimport { ThfTableColumnLabel } from './thf-table-column-label.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o da representaÃ§Ã£o da legenda, em formato de texto .\n */\n\n@Component({\n  selector: 'thf-table-column-label',\n  templateUrl: './thf-table-column-label.component.html'\n})\nexport class ThfTableColumnLabelComponent {\n\n  private _value: ThfTableColumnLabel;\n\n  /** Objeto com os dados do label */\n  @Input('t-value') set value(value: ThfTableColumnLabel) {\n    if (value) {\n      value.color = this.thfColorPaletteService.getColor(value);\n    }\n\n    this._value = value;\n  }\n  get value(): ThfTableColumnLabel {\n    return this._value;\n  }\n\n  constructor(private thfColorPaletteService: ThfColorPaletteService) { }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { isExternalLink } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir link nas colunas.\n */\n@Component({\n  selector: 'thf-table-column-link',\n  templateUrl: './thf-table-column-link.component.html'\n})\n\nexport class ThfTableColumnLinkComponent {\n\n  @Input('t-action') action: Function;\n\n  @Input('t-disabled') disabled: boolean;\n\n  @Input('t-link') link: string;\n\n  @Input('t-row') row;\n\n  @Input('t-value') value: string;\n\n  get type() {\n\n    if (this.disabled) {\n      return 'disabled';\n    }\n\n    if (this.action) {\n       return 'action';\n    }\n\n    if (isExternalLink(this.link)) {\n      return 'externalLink';\n    }\n\n    return 'internalLink';\n\n  }\n\n}\n","import { EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { browserLanguage, capitalizeFirstLetter, convertToBoolean, isTypeof, sortValues, thfLocaleDefault } from '../../utils/util';\nimport { ThfDateService } from '../../services/thf-date/thf-date.service';\n\nimport { ThfTableAction } from './interfaces/thf-table-action.interface';\nimport { ThfTableColumn } from './interfaces/thf-table-column.interface';\nimport { ThfTableLiterals } from './interfaces/thf-table-literals.interface';\n\nexport const thfTableContainer = ['border', 'shadow'];\nexport const thfTableContainerDefault = 'border';\n\nexport const thfTableLiteralsDefault = {\n  en: <ThfTableLiterals> {\n    noColumns: 'Columns are not defined',\n    noData: 'No data found',\n    loadingData: 'Loading',\n    loadMoreData: 'Load more data',\n    seeCompleteSubtitle: 'See complete subtitle',\n    completeSubtitle: 'Complete subtitle'\n  },\n  es: <ThfTableLiterals> {\n    noColumns: 'Columnas no definidas',\n    noData: 'Datos no encontrados',\n    loadingData: 'Cargando datos',\n    loadMoreData: 'Cargar mÃ¡s resultados',\n    seeCompleteSubtitle: 'Ver subtitulo completo',\n    completeSubtitle: 'Subtitulo completo'\n  },\n  pt: <ThfTableLiterals> {\n    noColumns: 'Nenhuma definiÃ§Ã£o de colunas',\n    noData: 'Nenhum dado encontrado',\n    loadingData: 'Carregando',\n    loadMoreData: 'Carregar mais resultados',\n    seeCompleteSubtitle: 'Ver legenda completa',\n    completeSubtitle: 'Legenda completa'\n  }\n};\n\n/**\n * @description\n *\n * Este componente de tabela Ã© utilizado para exibiÃ§Ã£o de listas, com diferentes tipos de dados que podem ser texto,\n * data, horÃ¡rio e nÃºmero com formato personalizado.\n *\n * Ã possivel criar uma tabela com ordenaÃ§Ã£o de dados, linhas com detalhes, coluna de seleÃ§Ã£o de linhas,\n * coluna com aÃ§Ãµes e tambÃ©m carregamento por demanda com o botÃ£o \"Carregar mais resultados\".\n *\n * TambÃ©m existe a possibilidade de utilizar _template_ para os detalhes das linhas,\n * veja mais em **[t-table-row-template](/documentation/thf-table-row-template)**.\n *\n * Quando a largura de todas as colunas for definida, caso o tamanho total delas seja maior que a tabela, serÃ¡ exibido um scroll horizontal.\n *\n */\nexport abstract class ThfTableBaseComponent implements OnChanges {\n\n  private _actions?: Array<ThfTableAction> = [];\n  private _checkbox?: boolean;\n  private _columns: Array<ThfTableColumn> = [];\n  private _container?: string;\n  private _height?: number;\n  private _hideDetail?: boolean = false;\n  private _hideTextOverflow?: boolean = false;\n  private _items: Array<ThfTableColumn>;\n  private _literals: ThfTableLiterals;\n  private _loading?: boolean = false;\n\n  /**\n   * @description\n   *\n   * Lista de itens da tabela.\n   * > Se falso, serÃ¡ inicializado como um *array* vazio.\n   */\n  @Input('t-items') set items(items: Array<any>) {\n    this._items = Array.isArray(items) ? items : [];\n\n    // when haven't items, selectAll should be unchecked.\n    if (!this.hasItems()) {\n      this.selectAll = false;\n    } else if (!this.hasColumns()) {\n      this.columns = this.getDefaultColumns(items[0]);\n    }\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista das colunas da tabela, deve receber um *array* de objetos que implementam a interface `ThfTableColumn`.\n   * Por padrÃ£o receberÃ¡ como valor a primeira coluna da lista de itens da tabela.\n   * > Caso nÃ£o encontre valor, a mensagem 'Nenhuma definiÃ§Ã£o de colunas' serÃ¡ exibida.\n   *\n   */\n  @Input('t-columns') set columns(columns: Array<ThfTableColumn>) {\n\n    this._columns = columns || [];\n\n    if (this._columns.length) {\n      this.setColumnLink();\n      this.calculateWidthHeaders();\n    } else if (this.hasItems()) {\n      this._columns =  this.getDefaultColumns(this.items[0]);\n    }\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Adiciona um contorno arredondado ao `thf-table`, as opÃ§Ãµes sÃ£o:\n   * - `border`: com bordas/linhas.\n   * - `shadow`: com sombras.\n   *\n   * @default `border`\n   */\n  @Input('t-container') set container(value: string) {\n    this._container = thfTableContainer.includes(value) ? value : thfTableContainerDefault;\n    this.showContainer(this._container);\n  }\n\n  get container(): string {\n    return this._container;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Se verdadeiro, habilita a quebra de texto ao transborda-lo dentro de qualquer coluna.\n   * > Quando ocorrer a quebra de texto, ao passar o mouse no conteÃºdo da cÃ©lula,\n   * o mesmo serÃ¡ exibido atravÃ©s do [`thf-tooltip`](/documentation/thf-tooltip).\n   */\n  @Input('t-hide-text-overflow') set hideTextOverflow(hideTextOverflow: boolean) {\n    this._hideTextOverflow = convertToBoolean(hideTextOverflow);\n  }\n\n  get hideTextOverflow() {\n    return this._hideTextOverflow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura da tabela em *pixels* e fixa o cabeÃ§alho.\n   */\n  @Input('t-height') set height(height: number) {\n    this._height = height;\n    this.calculateHeightTableContainer(height);\n    this.calculateWidthHeaders();\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita a visualizaÃ§Ã£o da lista de detalhes de cada linha da coluna.\n   *\n   * @default `false`\n   */\n  @Input('t-hide-detail') set hideDetail(hideDetail: boolean) {\n    this._hideDetail = hideDetail != null && hideDetail.toString() === '' ? true : convertToBoolean(hideDetail);\n    this.calculateWidthHeaders();\n  }\n\n  get hideDetail() {\n    return this._hideDetail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `thf-table`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: ThfTableLiterals = {\n   *    loadMoreData: 'Buscar mais dados',\n   *    loadingData: 'Processando',\n   *    noColumns: 'Sem colunas',\n   *    noData: 'Sem dados',\n   *    seeCompleteSubtitle: 'Mostrar legenda completa',\n   *    completeSubtitle: 'Todas legendas'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: ThfTableLiterals = {\n   *    noData: 'Sem dados'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <thf-table\n   *   [t-literals]=\"customLiterals\">\n   * </thf-table>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('t-literals') set literals(value: ThfTableLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfTableLiteralsDefault[thfLocaleDefault],\n        ...thfTableLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = thfTableLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || thfTableLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Bloqueia interaÃ§Ã£o do usuÃ¡rio com os dados da _table_, apresentando um _loading_ ao centro da mesma.\n   *\n   * @default `false`\n   */\n  @Input('t-loading') set loading(loading: boolean) {\n    this._loading = convertToBoolean(loading);\n    this.calculateWidthHeaders();\n  }\n\n  get loading() {\n    return this._loading;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita na primeira coluna a opÃ§Ã£o de selecionar linhas,\n   * todos os itens da lista possuem a propriedade dinÃ¢mica `$selected` para identificar se a linha estÃ¡ selecionada.\n   * > Exemplo: `item.$selected` ou `item['$selected']`.\n   * > Os itens filhos possuem comportamento independente do item pai.\n   *\n   * @default `false`\n   */\n  @Input('t-checkbox') set checkbox(checkbox: boolean) {\n    this._checkbox = <any>checkbox === '' ? true : convertToBoolean(checkbox);\n    this.calculateWidthHeaders();\n  }\n\n  get checkbox() {\n    return this._checkbox;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes.\n   *\n   * Quando houver apenas uma aÃ§Ã£o definida ela serÃ¡ exibida diretamente na coluna, caso contrÃ¡rio, o componente\n   * se encarrega de agrupÃ¡-las exibindo o Ã­cone [**thf-icon-more**](/guides/icons) que listarÃ¡ as aÃ§Ãµes ao ser clicado.\n   *\n   * **A coluna de aÃ§Ãµes nÃ£o serÃ¡ exibida quando:**\n   *  - a lista conter valores invÃ¡lidos ou indefinidos.\n   *  - tenha uma Ãºnica aÃ§Ã£o e a mesma nÃ£o for visÃ­vel.\n   */\n  @Input('t-actions') set actions(actions: Array<ThfTableAction>) {\n    this._actions = actions;\n    this.calculateWidthHeaders();\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita em todas as colunas a opÃ§Ã£o de ordenaÃ§Ã£o de dados. Caso a coluna seja do tipo 'data' ou 'dateTime' a\n   * mesma deve respeitar os tipos de entrada definidos para que sejam ordenadas.\n   *\n   * @default `false`\n   */\n  sort?: boolean;\n  @Input('t-sort') set setSort(sort: string) {\n    this.sort = sort === '' ? false : convertToBoolean(sort);\n  }\n\n  /**\n   * @description\n   *\n   * Se verdadeiro, torna habilitado o botÃ£o \"Carregar mais resultados\".\n   *\n   * @default `false`\n   */\n  showMoreDisabled?: boolean;\n  @Input('t-show-more-disabled') set setShowMoreDisabled(showMoreDisabled: string) {\n    this.showMoreDisabled = showMoreDisabled === '' ? false : convertToBoolean(showMoreDisabled);\n  }\n\n  /**\n   * @description\n   *\n   * Habilita ou desabilita o estilo listrado da tabela (`striped`).\n   * > Recomendado para tabelas com maior nÃºmero de dados, facilitando a sua visualizaÃ§Ã£o na tabela.\n   *\n   * @default `false`\n   */\n  striped?: boolean;\n  @Input('t-striped') set setStriped(striped: string) {\n    this.striped = striped === '' ? false : convertToBoolean(striped);\n  }\n\n  /**\n   * @description\n   *\n   * Esconde o *checkbox* para seleÃ§Ã£o de todas as linhas.\n   *\n   * > Sempre receberÃ¡ *true* caso a seleÃ§Ã£o de apenas uma linha esteja ativa.\n   *\n   * @default `false`\n   */\n  hideSelectAll?: boolean;\n  @Input('t-hide-select-all') set setHideSelectAll(hideSelectAll: string) {\n    this.hideSelectAll = hideSelectAll === '' ? false : convertToBoolean(hideSelectAll);\n  }\n\n  /**\n   * @description\n   *\n   * Define que somente uma linha da tabela pode ser selecionada.\n   *\n   * > Esta definiÃ§Ã£o nÃ£o se aplica aos itens filhos, os mesmos possuem comportamento independente do item pai.\n   */\n  singleSelect?: boolean;\n  @Input('t-single-select') set setSingleSelect(value: string) {\n    this.singleSelect = value === '' ? true : convertToBoolean(value);\n  }\n\n  /**\n   * AÃ§Ã£o executada quando todas as linhas sÃ£o selecionadas por meio do *checkbox* que seleciona todas as linhas.\n   */\n  @Output('t-all-selected') allSelected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * AÃ§Ã£o executada quando a seleÃ§Ã£o das linhas Ã© desmarcada por meio do *checkbox* que seleciona todas as linhas.\n   */\n  @Output('t-all-unselected') allUnselected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * AÃ§Ã£o executada ao selecionar uma linha do `thf-table`.\n   */\n  @Output('t-selected') selected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Recebe uma aÃ§Ã£o de clique para o botÃ£o \"Carregar mais resultados\", caso nenhuma aÃ§Ã£o for definida o mesmo\n   * nÃ£o Ã© visÃ­vel.\n   */\n  @Output('t-show-more') showMore?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * AÃ§Ã£o executada ao desmarcar a seleÃ§Ã£o de uma linha do `thf-table`.\n   */\n  @Output('t-unselected') unselected?: EventEmitter<any> = new EventEmitter<any>();\n\n  selectAll = false;\n  sortedColumn = { property: <ThfTableColumn>null, ascending: true };\n\n  constructor(private thfDate: ThfDateService) { }\n\n  ngOnChanges(): void {\n    if (this.singleSelect || this.hideSelectAll) {\n      this.selectAll = false;\n      this.hideSelectAll = true;\n    }\n  }\n\n  abstract calculateHeightTableContainer(height);\n\n  abstract calculateWidthHeaders();\n\n  protected abstract showContainer(container);\n\n  selectAllRows() {\n    if (!this.hideSelectAll) {\n      this.selectAll = !this.selectAll;\n\n      this.items.forEach(item => {\n        item.$selected = this.selectAll;\n      });\n\n      this.emitSelectAllEvents(this.selectAll, this.items);\n    }\n  }\n\n  selectRow(row: any) {\n    row.$selected = !row.$selected;\n\n    this.emitSelectEvents(row);\n\n    this.configAfterSelectRow(this.items, row);\n  }\n\n  selectDetailRow(row: any) {\n    this.emitSelectEvents(row);\n  }\n\n  // Colunas que sÃ£o inseridas no <head> da tabela\n  getMainColumns() {\n    const typesValid = ['string', 'number', 'boolean', 'date', 'time', 'dateTime', 'currency', 'subtitle', 'link', 'label', 'icon'];\n\n    return this.columns.filter(col => !col.type || typesValid.includes(col.type));\n  }\n\n  // Retorna a coluna da lista de colunas que Ã© do tipo detail\n  getColumnMasterDetail() {\n    return this.columns.find(col => col.type === 'detail');\n  }\n\n  getClassColor(row, column) {\n    return column.color ? `thf-text-${this.getColumnColor(row, column)}` : '' ;\n  }\n\n  getColumnColor(row, column) {\n    const columnColor = column.color;\n\n    return isTypeof(columnColor, 'function') ? columnColor(row, column.property) : columnColor;\n  }\n\n  // Retorna as colunas com status\n  getSubtitleColumns() {\n    return this.columns.filter(col => col.type === 'subtitle');\n  }\n\n  // Retorna as colunas com Ã­cones\n  getIconColumns() {\n    return this.columns.filter(col => col.type === 'icon');\n  }\n\n  // Retorna o nome da coluna do tipo detail\n  getNameColumnDetail() {\n    const detail = this.getColumnMasterDetail();\n    return detail ? detail.property : null;\n  }\n\n  /**\n   * Retorna as linhas do `thf-table` que estÃ£o selecionadas.\n   */\n  getSelectedRows() {\n    return this.items.filter(item => item.$selected);\n  }\n\n  /**\n   * Retorna as linhas do `thf-table` que nÃ£o estÃ£o selecionadas.\n   */\n  getUnselectedRows() {\n    return this.items.filter(item => !item.$selected);\n  }\n\n  hasColumns(): boolean {\n    return this.columns && this.columns.length > 0;\n  }\n\n  hasItems(): boolean {\n    return this.items && this.items.length > 0;\n  }\n\n  toggleRowAction(row: any) {\n    const toggleShowAction = row.$showAction;\n\n    this.items.forEach(item => {\n      if (item.$showAction) {\n        item.$showAction = false;\n      }\n    });\n    row.$showAction = !toggleShowAction;\n  }\n\n  sortColumn(column: ThfTableColumn) {\n    if (!this.sort || column.type === 'detail') {\n      return;\n    }\n\n    this.sortedColumn.ascending = this.sortedColumn.property === column ? !this.sortedColumn.ascending : true;\n\n    this.sortArray(column, this.sortedColumn.ascending);\n    this.sortedColumn.property = column;\n  }\n\n  sortArray(column: ThfTableColumn, ascending: boolean) {\n\n    this.items.sort((leftSide, rightSide): number => {\n\n      if (column.type === 'date' || column.type === 'dateTime' ) {\n        return this.thfDate.sortDate(leftSide[column.property], rightSide[column.property], ascending);\n      } else {\n        return sortValues(leftSide[column.property], rightSide[column.property], ascending);\n      }\n\n    });\n\n  }\n\n  onShowMore(): void {\n    this.showMore.emit(null);\n  }\n\n  protected getDefaultColumns(item: any) {\n    const keys = Object.keys(item);\n\n    return keys.filter(key => (typeof item[key] !== 'object')).map(key => {\n      return { label: capitalizeFirstLetter(key) , property: key };\n    });\n  }\n\n  private configAfterSelectRow(rows: Array<any>, row) {\n    if (this.singleSelect) {\n\n      this.unselectOtherRows(rows, row);\n\n    } else if (!this.hideSelectAll) {\n\n      this.selectAll = this.isEverySelected(rows);\n    }\n  }\n\n  private emitSelectAllEvents(selectAll: boolean, rows: any) {\n    selectAll ? this.allSelected.emit(rows) : this.allUnselected.emit(rows);\n  }\n\n  private emitSelectEvents(row: any) {\n    row.$selected ? this.selected.emit(row) : this.unselected.emit(row);\n  }\n\n  private isEverySelected(items: Array<any>): boolean {\n    const someCheckedOrIndeterminate = item => item.$selected || item.$selected === null;\n    const everyChecked = item => item.$selected;\n\n    if (items.every(everyChecked)) {\n      return true;\n    }\n\n    if (items.some(someCheckedOrIndeterminate)) {\n      return null;\n    }\n\n    return false;\n  }\n\n  private setColumnLink() {\n    this.columns.forEach(column => {\n      if (column['type'] === 'link' && !column['link']) {\n        column['link'] = 'link';\n      }\n    });\n  }\n\n  private unselectOtherRows(rows: Array<any>, row) {\n    rows.forEach(item => {\n      if (item !== row) {\n        item.$selected = false;\n      }\n    });\n  }\n\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy ThfTableComponent\n *\n * @description\n *\n * Esta diretiva permite que seja apresentada informaÃ§Ãµes adicionais a respeito de uma determinada linha de\n * dados, de forma que possam ser exibidas e ocultadas atravÃ©s do botÃ£o de acionamento.\n *\n * > Quando utilizada, sobrepÃµe as funcionalidade bÃ¡sicas do *master-detail*.\n *\n * Em seu uso, deve-se utilizar como parÃ¢metro a referÃªncia da _linha_ e/ou _Ã­ndice_, sendo por padrÃ£o linha. Caso nÃ£o seja declarado,\n * o componente nÃ£o exibirÃ¡ conteÃºdo.\n *  - Linha: `row` determina o item da linha corrente.\n *  - Ãndice: `rowIndex` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <thf-table\n *   [t-columns]=\"columns\"\n *   [t-items]=\"items\">\n *     <ng-template t-table-row-template let-rowItem let-i=\"rowIndex\" [t-table-row-template-show]=\"isShow\">\n *       <detail-row [row]=\"rowItem\"></detail-row>\n *     </ng-template>\n * ...\n * ```\n *\n * ```\n * ...\n * <thf-table\n *   [t-columns]=\"columns\"\n *   [t-items]=\"items\">\n *     <div *t-table-row-template=\"let rowItem, let i=rowIndex\">\n *       <detail-row [row]=\"rowItem\"></detail-row>\n *     </div>\n * ...\n *\n * ```\n *\n * A diretiva **t-table-row-template**, possibilita tambÃ©m que determinada linha apresente ou nÃ£o seu _template_. Para isto,\n * Ã© necessÃ¡rio atribuir a referÃªncia da funÃ§Ã£o que faz esta verificaÃ§Ã£o, Ã  propriedade `t-table-row-template-show`,\n * a mesma deve retornar um valor do tipo *boolean*. Veja o exemplo a seguir:\n *\n * ```\n * ...\n * @Component({\n *    selector: 'app-root',\n *    templateUrl: `\n *      ...\n *      <thf-table\n *        [t-columns]=\"columns\"\n *        [t-items]=\"items\">\n *          <ng-template t-table-row-template let-rowItem let-i=\"rowIndex\" [t-table-row-template-show]=\"isUndelivered\">\n *            <detail-row [row]=\"rowItem\"> </detail-row>\n *          </div>\n *      ...\n *    `\n * })\n * export class AppComponent {\n *    public dataTable = [{\n *      code: 1200,\n *      product: 'Rice',\n *      costumer: 'Supermarket 1',\n *      quantity: 3,\n *      status: 'delivered',\n *      license_plate: 'MDJD9191',\n *      batch_product: 18041822,\n *      driver: 'JosÃ© Oliveira'\n *    }, {\n *      code: 1355,\n *      product: 'Bean',\n *      costumer: 'Supermarket 2',\n *      quantity: 1,\n *      status: 'transport',\n *      license_plate: 'XXA5454',\n *      batch_product: 18041821,\n *      driver: 'Francisco Pereira'\n *    }];\n *\n *    isUndelivered(row, index: number) {\n *      return row.status !== 'delivered';\n *    }\n * }\n * ```\n * > No exemplo acima, somente serÃ¡ disponibilizado os detalhes de informaÃ§Ãµes nas linhas cujo o valor de `status`\n * nÃ£o correspondam Ã  *delivered*.\n */\n@Directive({\n  selector: '[t-table-row-template]'\n})\nexport class ThfTableRowTemplateDirective {\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor booleano, informando se apresentarÃ¡ o template da linha.\n   * SerÃ£o passados o objeto da linha e o indice da mesma por parÃ¢metro, para que seja possÃ­vel\n   * tomar uma decisÃ£o a partir do objeto da linha corrente.\n   *\n   * Caso nÃ£o ser utilizado esta propriedade, serÃ£o apresentados todos os detalhes das linhas.\n   *\n   * @default `true`\n   */\n  @Input('t-table-row-template-show') thfTableRowTemplateShow: (row: any, index: number) => boolean;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import {\n  AfterViewInit, ChangeDetectorRef, Component, ContentChild, DoCheck, ElementRef, IterableDiffers,\n  OnDestroy, QueryList, Renderer2, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { capitalizeFirstLetter, convertToBoolean } from '../../utils/util';\nimport { ThfDateService } from '../../services/thf-date/thf-date.service';\nimport { ThfPopupComponent } from '../thf-popup/thf-popup.component';\n\nimport { ThfTableAction } from './interfaces/thf-table-action.interface';\nimport { ThfTableBaseComponent } from './thf-table-base.component';\nimport { ThfTableColumn } from './interfaces/thf-table-column.interface';\nimport { ThfTableColumnIcon } from './thf-table-column-icon/thf-table-column-icon.interface';\nimport { ThfTableColumnLabel } from './thf-table-column-label/thf-table-column-label.interface';\nimport { ThfTableRowTemplateDirective } from './thf-table-row-template/thf-table-row-template.directive';\nimport { ThfTableSubtitleColumn } from './thf-table-subtitle-footer/thf-table-subtitle-column.interface';\n\n/**\n * @docsExtends ThfTableBaseComponent\n *\n * @example\n *\n * <example name=\"thf-table-basic\" title=\"Totvs Table Basic\">\n *  <file name=\"sample-thf-table-basic/sample-thf-table-basic.component.ts\"> </file>\n *  <file name=\"sample-thf-table-basic/sample-thf-table-basic.component.html\"> </file>\n * </example>\n *\n * <example name=\"thf-table-labs\" title=\"Totvs Table Labs\">\n *  <file name=\"sample-thf-table-labs/sample-thf-table-labs.component.ts\"> </file>\n *  <file name=\"sample-thf-table-labs/sample-thf-table-labs.component.html\"> </file>\n *  <file name=\"sample-thf-table-labs/sample-thf-table-labs.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-thf-table-labs/sample-thf-table-labs.component.po.ts\"> </file>\n *  <file name=\"sample-thf-table-labs/sample-thf-table-labs.service.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-table-transport\" title=\"Totvs Table - Transport\">\n *  <file name=\"sample-thf-table-transport/sample-thf-table-transport.component.ts\"> </file>\n *  <file name=\"sample-thf-table-transport/sample-thf-table-transport.component.html\"> </file>\n *  <file name=\"sample-thf-table-transport/sample-thf-table-transport.service.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-table-airfare\" title=\"Totvs Table - Airfare\">\n *  <file name=\"sample-thf-table-airfare/sample-thf-table-airfare.component.ts\"> </file>\n *  <file name=\"sample-thf-table-airfare/sample-thf-table-airfare.component.html\"> </file>\n *  <file name=\"sample-thf-table-airfare/sample-thf-table-airfare.service.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-table-components\" title=\"Totvs Table - Thf Field Components\">\n *  <file name=\"sample-thf-table-components/sample-thf-table-components.component.ts\"> </file>\n *  <file name=\"sample-thf-table-components/sample-thf-table-components.component.html\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-table',\n  templateUrl: './thf-table.component.html',\n  providers: [ThfDateService]\n})\nexport class ThfTableComponent extends ThfTableBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  @ContentChild(ThfTableRowTemplateDirective, { static: true }) tableRowTemplate: ThfTableRowTemplateDirective;\n\n  @ViewChild('popup', { static: false }) thfPopupComponent: ThfPopupComponent;\n\n  @ViewChild('tableContainer', { read: ElementRef, static: true }) tableContainerElement;\n  @ViewChild('tableFooter', { read: ElementRef, static: true }) tableFooterElement;\n  @ViewChild('tableWrapper', { read: ElementRef, static: true }) tableWrapperElement;\n\n  @ViewChildren('actionsIconElement', { read: ElementRef }) actionsIconElement: QueryList<any>;\n  @ViewChildren('actionsElement', { read: ElementRef }) actionsElement: QueryList<any>;\n  @ViewChildren('headersTable') headersTable: QueryList<any>;\n\n  heightTableContainer;\n  parentRef: any;\n  popupTarget;\n  tableOpacity: number = 0;\n  tooltipText: string;\n\n  private differ;\n  private footerHeight;\n  private initialized = false;\n  private timeoutResize;\n  private visibleElement = false;\n\n  private clickListener: () => void;\n  private resizeListener: () => void;\n\n  constructor(\n    thfDate: ThfDateService,\n    differs: IterableDiffers,\n    viewRef: ViewContainerRef,\n    renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private decimalPipe: DecimalPipe,\n    // tslint:disable-next-line\n    private router: Router){\n\n    super(thfDate);\n\n    this.parentRef = viewRef['_view']['component'];\n    this.differ = differs.find([]).create(null);\n\n    // TODO: #5550 ao remover este listener, no portal, quando as colunas forem fixas nÃ£o sofrem\n    // alteraÃ§Ã£o de largura, pois o ngDoCheck nÃ£o Ã© executado.\n    this.clickListener = renderer.listen('document', 'click', () => { });\n\n    this.resizeListener = renderer.listen('window', 'resize', (event: any) => {\n      this.debounceResize();\n    });\n\n  }\n\n  get detailHideSelect() {\n    const masterDetail = this.getColumnMasterDetail();\n    return masterDetail && masterDetail.detail ? masterDetail.detail.hideSelect : false;\n  }\n\n  get firstAction(): ThfTableAction {\n    return this.visibleActions && this.visibleActions[0];\n  }\n\n  get hasRowTemplate(): boolean {\n    return !!this.tableRowTemplate;\n  }\n\n  get visibleActions() {\n    return this.actions && this.actions.filter(action => action.visible !== false);\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n\n    if (!this.container) {\n      this.hideContainer();\n    }\n  }\n\n  ngDoCheck() {\n    this.checkChangesItems();\n    this.verifyCalculateHeightTableContainer();\n    // Permite que os cabeÃ§alhos sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (this.tableWrapperElement.nativeElement.offsetWidth && !this.visibleElement && this.initialized) {\n      this.debounceResize();\n      this.visibleElement = true;\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  checkDisabled(row, column: ThfTableColumn) {\n    return column.disabled ? column.disabled(row) : false;\n  }\n\n  executeTableAction(row: any, tableAction: any) {\n    if (!row.disabled && !this.validateTableAction(row, tableAction)) {\n      tableAction.action.call(this.parentRef, row);\n      this.toggleRowAction(row);\n    }\n  }\n\n  columnCountForMasterDetail() {\n    return (this.getMainColumns().length + 1) + (this.actions.length > 0 ? 1 : 0) + (this.checkbox ? 1 : 0);\n  }\n\n  columnCount() {\n    return (\n      this.getMainColumns().length +\n      (this.actions.length > 0 ? 1 : 0) +\n      (this.checkbox ? 1 : 0) +\n      (!this.hideDetail && this.getColumnMasterDetail() !== undefined ? 1 : 0)\n    );\n  }\n\n  formatNumber(value: any, format: string) {\n    if (!format) {\n      return value;\n    }\n\n    return this.decimalPipe.transform(value, format);\n  }\n\n  getSubtitleColumn(row: any, subtitleColumn: ThfTableColumn): ThfTableSubtitleColumn {\n    return subtitleColumn.subtitles.find(subtitleItem => row[subtitleColumn.property] === subtitleItem.value);\n  }\n\n  getBooleanLabel(rowValue: any, columnBoolean: ThfTableColumn): string {\n\n    if (rowValue || rowValue === false || rowValue === 0) {\n      rowValue = convertToBoolean(rowValue);\n\n      if (columnBoolean.boolean) {\n        return rowValue ? columnBoolean.boolean.trueLabel || 'Sim' : columnBoolean.boolean.falseLabel || 'NÃ£o';\n      } else {\n        return rowValue ? 'Sim' : 'NÃ£o';\n      }\n    }\n\n    return rowValue;\n  }\n\n  getColumnIcons(row: any, columnIcon: ThfTableColumn): any {\n    const columnValues = row[columnIcon.property];\n\n    if (columnIcon.icons) {\n\n      if (columnValues instanceof Array) {\n        return this.mergeCustomIcons(columnValues, columnIcon.icons);\n      }\n\n      if (typeof columnValues === 'string') {\n        const customIcon = columnIcon.icons.find(icon => columnValues === icon.value);\n        if (customIcon) {\n          return [ customIcon ];\n        }\n      }\n\n    }\n\n    return columnValues;\n  }\n\n  getColumnLabel(row: any, columnLabel: ThfTableColumn): ThfTableColumnLabel {\n    return columnLabel.labels.find(labelItem => row[columnLabel.property] === labelItem.value);\n  }\n\n  getColumnTitleLabel(column: ThfTableColumn) {\n    return column.label || capitalizeFirstLetter(column.property);\n  }\n\n  verifyWidthColumnsPixels() {\n    const columns = this.getMainColumns();\n    return columns.length ? columns.every(column => column.width && column.width.includes('px')) : false;\n  }\n\n  calculateWidthHeaders() {\n    setTimeout(() => {\n      if (this.height) {\n        this.headersTable.forEach(header => {\n          const divHeader = header.nativeElement.querySelector('.thf-table-header-fixed-inner');\n          if (divHeader) {\n            divHeader.style.width = `${header.nativeElement.offsetWidth}px`;\n          }\n        });\n      }\n    });\n  }\n\n  containsMasterDetail(row) {\n    return row[this.getNameColumnDetail()] && row[this.getNameColumnDetail()].length;\n  }\n\n  isShowRowTemplate(row, index: number): boolean {\n\n    if (this.tableRowTemplate && this.tableRowTemplate.thfTableRowTemplateShow) {\n      return this.tableRowTemplate.thfTableRowTemplateShow(row, index);\n    }\n\n    return true;\n  }\n\n  isShowMasterDetail(row) {\n    return !this.hideDetail &&\n      this.getNameColumnDetail() &&\n      row.$showDetail &&\n      this.containsMasterDetail(row) &&\n      !this.hasRowTemplate;\n  }\n\n  tooltipMouseEnter(event: any, column?: ThfTableColumn, row?: any) {\n    this.tooltipText = undefined;\n\n    if (this.hideTextOverflow &&\n        event.target.offsetWidth < event.target.scrollWidth &&\n        event.target.innerText.trim()) {\n      return this.tooltipText = event.target.innerText;\n    }\n\n    if (column) {\n      this.checkingIfColumnHasTooltip(column, row);\n    }\n  }\n\n  tooltipMouseLeave() {\n    this.tooltipText = undefined;\n  }\n\n  verifyChangeHeightInFooter() {\n    return this.footerHeight !== this.getHeightTableFooter();\n  }\n\n  verifyCalculateHeightTableContainer() {\n    if (this.height && this.verifyChangeHeightInFooter()) {\n      this.footerHeight = this.getHeightTableFooter();\n      this.calculateHeightTableContainer(this.height);\n    }\n  }\n\n  calculateHeightTableContainer(height) {\n    const value = parseFloat(height);\n    this.heightTableContainer = value ? (value - this.getHeightTableFooter()) : undefined;\n    this.setTableOpacity(1);\n    this.changeDetector.detectChanges();\n  }\n\n  togglePopup(row, targetRef) {\n    this.popupTarget = targetRef;\n    this.changeDetector.detectChanges();\n\n    this.thfPopupComponent.toggle(row);\n  }\n\n  protected showContainer(container: string) {\n\n    const containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;\n\n    containerClassList.add('thf-container');\n\n    container === 'border' ? containerClassList.add('thf-container-no-shadow') : containerClassList.remove('thf-container-no-shadow');\n  }\n\n  private checkChangesItems() {\n    const changesItems = this.differ.diff(this.items);\n\n    if (changesItems && this.selectAll) {\n      this.selectAll = null;\n    }\n\n    if (changesItems && !this.hasColumns() && this.hasItems()) {\n      this.columns = this.getDefaultColumns(this.items[0]);\n    }\n  }\n\n  private checkingIfColumnHasTooltip(column, row) {\n    if (column.type === 'link' && column.tooltip && !this.checkDisabled(row, column)) {\n      return this.tooltipText = column.tooltip;\n    }\n\n    if (column.type === 'label') {\n      const columnLabel = this.getColumnLabel(row, column);\n      return this.tooltipText = columnLabel.tooltip;\n    }\n  }\n\n  private getHeightTableFooter() {\n    return this.tableFooterElement ? this.tableFooterElement.nativeElement.offsetHeight : 0;\n  }\n\n  private hideContainer() {\n    const containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;\n    containerClassList.remove('thf-container');\n  }\n\n  private mergeCustomIcons(columnValues: Array<string>, customIcons: Array<ThfTableColumnIcon>) {\n    const icons = [];\n\n    columnValues.forEach(columnValue => {\n\n      const foundCustomIcon = customIcons.find(customIcon => columnValue === customIcon.icon || columnValue === customIcon.value);\n      foundCustomIcon ? icons.push(foundCustomIcon) : icons.push(columnValue);\n\n    });\n\n    return icons;\n  }\n\n  private validateTableAction(row: any, tableAction: any) {\n    if (typeof tableAction.disabled === 'function') {\n      return tableAction.disabled.call(this.parentRef, row);\n    } else {\n      return tableAction.disabled;\n    }\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.calculateWidthHeaders();\n\n      // show the table\n      this.setTableOpacity(1);\n    });\n  }\n\n  private removeListeners() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    if (this.clickListener) {\n      this.clickListener();\n    }\n  }\n\n  private setTableOpacity(value: number) {\n    this.tableOpacity = value;\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\nimport { capitalizeFirstLetter, isTypeof } from '../../../utils/util';\n\nimport { ThfTableDetail } from './thf-table-detail.interface';\nimport { ThfTableDetailColumn } from './thf-table-detail-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por apresentar o detalhe de cada linha da tabela.\n */\n@Component({\n  selector: 'thf-table-detail',\n  templateUrl: './thf-table-detail.component.html'\n})\nexport class ThfTableDetailComponent {\n\n  private _detail: ThfTableDetail;\n\n  /**\n   * Define se a tabela possui a opÃ§Ã£o de `checkbox` habilitada.\n   */\n  @Input('t-checkbox') hasCheckbox?: boolean = false;\n\n  /**\n   * ConfiguraÃ§Ã£o da linha de detalhes.\n   */\n  @Input('t-detail') set detail(value: ThfTableDetail) {\n    this._detail = this.returnThfTableDetailObject(value);\n  }\n\n  get detail() {\n    return this._detail;\n  }\n\n  /**\n   * Lista de itens do _detail_ da tabela.\n   */\n  @Input('t-items') items: Array<any>;\n\n  /**\n   * AÃ§Ã£o executada ao selecionar ou desmarcar a seleÃ§Ã£o de uma linha de detalhe do `thf-table`.\n   */\n  @Output('t-select-row') selectRow?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private decimalPipe: DecimalPipe) {}\n\n  get detailColumns(): Array<ThfTableDetailColumn> {\n    return this.detail && this.detail.columns || [];\n  }\n\n  get typeHeaderInline(): boolean {\n    return this.detail && !this.detail['typeHeader'] || this.detail['typeHeader'] === 'inline';\n  }\n\n  get typeHeaderTop(): boolean {\n    return this.detail && this.detail['typeHeader'] === 'top';\n  }\n\n  formatNumberDetail(value: any, format: string) {\n    if (!format) {\n      return value;\n    }\n\n    return this.decimalPipe.transform(value, format);\n  }\n\n  getColumnTitleLabel(detail: ThfTableDetailColumn) {\n    return detail.label || capitalizeFirstLetter(detail.property);\n  }\n\n  onSelectRow(item) {\n    item.$selected = !item.$selected;\n    this.selectRow.emit(item);\n  }\n\n  private returnThfTableDetailObject(value: any) {\n    if (value && isTypeof(value, 'object')) {\n\n      if (value.columns) {\n        value.columns.forEach(column => column.property = column.property || column.column);\n      }\n\n      if (Array.isArray(value)) {\n        return { columns: value };\n      }\n\n      if (value.columns) {\n        return value;\n      }\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ThfTableSubtitleColumn } from '../thf-table-subtitle-footer/thf-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o de um botÃ£o e modal para visualizaÃ§Ã£o de todas as legendas.\n */\n@Component({\n  selector: 'thf-table-show-subtitle',\n  templateUrl: './thf-table-show-subtitle.component.html'\n})\nexport class ThfTableShowSubtitleComponent {\n\n  /** Objeto com os dados da legenda. */\n  @Input('t-subtitles') subtitles: Array<ThfTableSubtitleColumn>;\n\n  /** Propriedade que recebe as literais definidas no `thf-table`. */\n  @Input('t-literals') literals;\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ThfColorPaletteService } from './../../../services/thf-color-palette/thf-color-palette.service';\nimport { ThfTableSubtitleColumn } from './../thf-table-subtitle-footer/thf-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o da representaÃ§Ã£o da legenda, em formato de cÃ­rculo.\n */\n@Component({\n  selector: 'thf-table-subtitle-circle',\n  templateUrl: './thf-table-subtitle-circle.component.html'\n})\nexport class ThfTableSubtitleCircleComponent {\n\n  private _subtitle: ThfTableSubtitleColumn;\n\n  /** Objeto com os dados da legenda. */\n  @Input('t-subtitle') set subtitle(subtitle: ThfTableSubtitleColumn) {\n    if (subtitle) {\n      subtitle.color = this.thfColorPaletteService.getColor(subtitle);\n    }\n    this._subtitle = subtitle;\n  }\n  get subtitle(): ThfTableSubtitleColumn {\n    return this._subtitle;\n  }\n\n  /** Esconde a tooltip. */\n  @Input('t-hide-title')\n  hideTitle: boolean = false;\n\n  constructor(private thfColorPaletteService: ThfColorPaletteService) { }\n\n}\n","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { ThfTableSubtitleColumn } from './thf-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o de um conjunto de legendas.\n */\n@Component({\n  selector: 'thf-table-subtitle-footer',\n  templateUrl: './thf-table-subtitle-footer.component.html'\n})\nexport class ThfTableSubtitleFooterComponent implements AfterViewInit, OnDestroy {\n\n  showSubtitle: boolean;\n\n  private timeoutResize;\n  protected resizeListener: () => void;\n\n  /** Propriedade que recebe as literais definidas no `thf-table`. */\n  @Input('t-literals') literals;\n\n  /** Propriedade que recebe as legendas definidas no `ThfTableSubtitleCircleComponent`. */\n  @Input('t-subtitles') subtitles: Array<ThfTableSubtitleColumn>;\n\n  constructor(private element: ElementRef, public renderer: Renderer2) { }\n\n  ngAfterViewInit() {\n    this.initializeResizeListener();\n    this.debounceResize();\n  }\n\n  ngOnDestroy() {\n    this.removeResizeListener();\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.toggleShowCompleteSubtitle();\n    });\n  }\n\n  private getContainerSize() {\n    return this.element.nativeElement.querySelector('.thf-table-subtitle-footer-container').offsetWidth;\n  }\n\n  private getItemsSize() {\n    const items = this.element.nativeElement.querySelectorAll('.thf-table-subtitle-footer');\n\n    return Array.from(items).map(item => item['offsetWidth']).reduce((a, b) => a + b, 16);\n  }\n\n  private initializeResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.debounceResize();\n    });\n  }\n\n  private removeResizeListener() {\n    this.resizeListener();\n  }\n\n  private toggleShowCompleteSubtitle() {\n    const containerSize = this.getContainerSize();\n    const itemsSize = this.getItemsSize();\n\n    this.showSubtitle = itemsSize > containerSize;\n  }\n\n}\n","import { CommonModule, DecimalPipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ThfButtonModule } from './../thf-button/thf-button.module';\nimport { ThfContainerModule } from '../thf-container/thf-container.module';\nimport { ThfLoadingModule } from '../thf-loading/thf-loading.module';\nimport { ThfModalModule } from '../thf-modal/thf-modal.module';\nimport { ThfPopupModule } from './../thf-popup/thf-popup.module';\nimport { ThfTimeModule } from '../../pipes/thf-time/index';\nimport { ThfTooltipModule } from '../../directives/thf-tooltip/index';\n\nimport { ThfTableColumnIconComponent } from './thf-table-column-icon/thf-table-column-icon.component';\nimport { ThfTableColumnLabelComponent } from './thf-table-column-label/thf-table-column-label.component';\nimport { ThfTableColumnLinkComponent } from './thf-table-column-link/thf-table-column-link.component';\nimport { ThfTableComponent } from './thf-table.component';\nimport { ThfTableDetailComponent } from './thf-table-detail/thf-table-detail.component';\nimport { ThfTableRowTemplateDirective } from './thf-table-row-template/thf-table-row-template.directive';\nimport { ThfTableShowSubtitleComponent } from './thf-table-show-subtitle/thf-table-show-subtitle.component';\nimport { ThfTableSubtitleCircleComponent } from './thf-table-subtitle-circle/thf-table-subtitle-circle.component';\nimport { ThfTableSubtitleFooterComponent } from './thf-table-subtitle-footer/thf-table-subtitle-footer.component';\n\n/**\n * @description\n * MÃ³dulo do componente thf-table\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ThfButtonModule,\n    ThfContainerModule,\n    ThfLoadingModule,\n    ThfModalModule,\n    ThfPopupModule,\n    ThfTimeModule,\n    ThfTooltipModule\n  ],\n  declarations: [\n    ThfTableComponent,\n    ThfTableColumnIconComponent,\n    ThfTableColumnLabelComponent,\n    ThfTableColumnLinkComponent,\n    ThfTableDetailComponent,\n    ThfTableRowTemplateDirective,\n    ThfTableShowSubtitleComponent,\n    ThfTableSubtitleCircleComponent,\n    ThfTableSubtitleFooterComponent\n  ],\n  exports: [\n    ThfTableComponent,\n    ThfTableRowTemplateDirective\n  ],\n  providers: [DecimalPipe]\n})\nexport class ThfTableModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ThfCalendarLangService {\n\n  months = [\n    {\n      pt: 'Janeiro',\n      en: 'January',\n      es: 'Enero'\n    },\n    {\n      pt: 'Fevereiro',\n      en: 'February',\n      es: 'Febrero'\n    },\n    {\n      pt: 'MarÃ§o',\n      en: 'March',\n      es: 'Marzo'\n    },\n    {\n      pt: 'Abril',\n      en: 'April',\n      es: 'Abril'\n    },\n    {\n      pt: 'Maio',\n      en: 'May',\n      es: 'Mayo'\n    },\n    {\n      pt: 'Junho',\n      en: 'June',\n      es: 'Junio'\n    },\n    {\n      pt: 'Julho',\n      en: 'July',\n      es: 'Julio'\n    },\n    {\n      pt: 'Agosto',\n      en: 'August',\n      es: 'Agosto'\n    },\n    {\n      pt: 'Setembro',\n      en: 'September',\n      es: 'Setiembre'\n    },\n    {\n      pt: 'Outubro',\n      en: 'October',\n      es: 'Octubre'\n    },\n    {\n      pt: 'Novembro',\n      en: 'November',\n      es: 'Noviembre'\n    },\n    {\n      pt: 'Dezembro',\n      en: 'December',\n      es: 'Diciembre'\n    }\n  ];\n\n  shortWeekDays = [\n    {\n      pt: 'Dom',\n      en: 'Sun',\n      es: 'Dom'\n    },\n    {\n      pt: 'Seg',\n      en: 'Mon',\n      es: 'Lun'\n    },\n    {\n      pt: 'Ter',\n      en: 'Tue',\n      es: 'Mar'\n    },\n    {\n      pt: 'Qua',\n      en: 'Wed',\n      es: 'MiÃ©'\n    },\n    {\n      pt: 'Qui',\n      en: 'Thu',\n      es: 'Jue'\n    },\n    {\n      pt: 'Sex',\n      en: 'Fri',\n      es: 'Vie'\n    },\n    {\n      pt: 'SÃ¡b',\n      en: 'Sat',\n      es: 'SÃ¡b'\n    }\n  ];\n\n  wordMonth = {\n    pt: 'MÃªs',\n    en: 'Month',\n    es: 'Mes'\n  };\n\n  wordYear = {\n    pt: 'Ano',\n    en: 'Year',\n    es: 'AÃ±o'\n  };\n\n  lang = 'pt';\n\n  constructor() { }\n\n  setLanguage(lang: string) {\n    if (lang && lang.length >= 2) {\n      lang = lang.toLowerCase().slice(0, 2);\n      this.lang = (lang === 'pt' || lang === 'en' || lang === 'es') ? lang : 'pt';\n    }\n  }\n\n  getWordMonth() {\n    return this.wordMonth[this.lang];\n  }\n\n  getWordYear() {\n    return this.wordYear[this.lang];\n  }\n\n  getMonth(month: number) {\n    return this.months[month][this.lang];\n  }\n\n  getArrayMonths() {\n    const arrMonths = Array();\n    for (let i = 0; i < this.months.length; i++) {\n      arrMonths.push(this.months[i][this.lang]);\n    }\n    return arrMonths;\n  }\n\n  getWeedDays(day: number) {\n    return this.shortWeekDays[day][this.lang];\n  }\n\n  getArrayWeekDays() {\n    const arrWeekDays = Array();\n    for (let i = 0; i < this.shortWeekDays.length; i++) {\n      arrWeekDays.push(this.shortWeekDays[i][this.lang]);\n    }\n    return arrWeekDays;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { setYearFrom0To100 } from '../../../../utils/util';\n\n@Injectable()\nexport class ThfCalendarService {\n  firstWeekDay: number;\n\n  constructor() {\n    this.firstWeekDay = 0; // 0 = sunday\n  }\n\n  weekStartDate(date: any) {\n    const startDate = new Date(date.getTime());\n    while (startDate.getDay() !== this.firstWeekDay) {\n      startDate.setDate(startDate.getDate() - 1);\n    }\n    return startDate;\n  }\n\n  monthDates(year: any, month: any, dayFormatter: any = null, weekFormatter: any = null) {\n    if ((typeof month !== 'number') || (month < 0) || (month > 11)) {\n      throw Error(('month must be a number (Jan is 0)'));\n    }\n\n    const weeks: Array<any> = [];\n    let week: Array<any> = [];\n    let i = 0;\n    let date = new Date(year, month, 1);\n    setYearFrom0To100(date, year);\n    date = this.weekStartDate(date);\n\n    do {\n      for (i = 0; i < 7; i++) {\n        week.push(dayFormatter ? dayFormatter(date) : date);\n        date = new Date(date.getTime());\n        date.setDate(date.getDate() + 1);\n      }\n      weeks.push(weekFormatter ? weekFormatter(week) : week);\n      week = [];\n    } while ((date.getMonth() <= month) && (date.getFullYear() === year));\n    return weeks;\n  }\n\n  monthDays(year: any, month: any) {\n    const getDayOrZero = function(date: any) {\n      return date.getMonth() === month ? date : 0;\n    };\n    return this.monthDates(year, month, getDayOrZero);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isMobile, setYearFrom0To100, validateDateRange } from '../../../../utils/util';\nimport { ThfCalendarLangService } from './thf-calendar.lang.service';\nimport { ThfCalendarService } from './thf-calendar.service';\n\nconst thfCalendarLocaleDefault = 'pt';\nconst thfCalendarLocales = ['pt', 'en', 'es'];\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de calendÃ¡rio de uso interno\n */\n@Component({\n  selector: 'thf-calendar',\n  templateUrl: './thf-calendar.component.html',\n  providers: [ThfCalendarService, ThfCalendarLangService ]\n})\nexport class ThfCalendarComponent {\n\n  private _dateEnd: Date;\n  private _dateStart: Date;\n  private _locale: string;\n  private _selectedDate?: Date;\n\n  dayVisible: boolean = false;\n  displayDays: Array<number>;\n  displayDecade: Array<number>;\n  displayFinalDecade: number;\n  displayMonth: any;\n  displayMonths: Array<any> = Array();\n  displayStartDecade: number;\n  displayWeedDays: Array<any> = Array();\n  displayYear: number;\n  monthVisible: boolean = false;\n  overlayInvisible: boolean = true;\n  visible: boolean = false;\n  yearVisible: boolean = false;\n\n  private currentMonthNumber: number;\n  private currentYear: number;\n  private displayMonthNumber: number;\n  private isMobile: any = isMobile;\n  private lastDisplay: string;\n  private today: Date = new Date();\n\n  @ViewChild('days', { read: ElementRef, static: true }) elDays: ElementRef;\n  @ViewChild('months', { read: ElementRef, static: true }) elMonths: ElementRef;\n  @ViewChild('years', { read: ElementRef, static: true }) elYears: ElementRef;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data mÃ¡xima possÃ­vel de ser selecionada no calendÃ¡rio.\n   */\n  @Input('t-date-end') set dateEnd(val: Date) {\n    if (val && val instanceof Date) {\n      const year = val.getFullYear();\n      const month = val.getMonth();\n      const day = val.getDate();\n\n      const date = new Date(year, month, day, 23, 59, 59);\n      setYearFrom0To100(date, year);\n\n      this._dateEnd = date;\n    } else {\n      this._dateEnd = undefined;\n    }\n  }\n  get dateEnd() {\n    return this._dateEnd;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do calendÃ¡rio.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   */\n  @Input('t-locale') set locale(locale: string) {\n    this._locale = thfCalendarLocales.includes(locale) ? locale : thfCalendarLocaleDefault;\n    this.initializeLanguage();\n  }\n  get locale() {\n    return this._locale;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data selecionada no calendÃ¡rio.\n   */\n  @Input('t-selected-date') set selectedDate(selectedDate: Date) {\n    this._selectedDate  = selectedDate && selectedDate instanceof Date ? selectedDate : undefined;\n  }\n  get selectedDate(): Date {\n    return this._selectedDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data mÃ­nima possÃ­vel de ser selecionada no calendÃ¡rio.\n   */\n  @Input('t-date-start') set dateStart(val: Date) {\n    if (val && val instanceof Date) {\n      const year = val.getFullYear();\n      const month = val.getMonth();\n      const day = val.getDate();\n\n      const date = new Date(year, month, day, 0, 0, 0);\n      setYearFrom0To100(date, year);\n\n      this._dateStart = date;\n    } else {\n      this._dateStart = undefined;\n    }\n  }\n  get dateStart() {\n    return this._dateStart;\n  }\n\n  @Output('t-selected-dateChange') selectedDateChange = new EventEmitter<Date>();\n  @Output('t-submit') submit = new EventEmitter<Date>();\n\n  constructor(\n    private thfCalendarService: ThfCalendarService,\n    private thfCalendarLangService: ThfCalendarLangService) {\n  }\n\n  close() {\n    this.overlayInvisible = true;\n    this.visible = false;\n  }\n\n  // ObtÃ©m um array de todos os anos desta dÃ©cada\n  getArrayDecade(year) {\n    this.displayDecade = Array();\n\n    if (year % 10 !== 0) {\n      while (year % 10 !== 0) {\n        year--;\n      }\n    }\n    this.updateDecade(year);\n  }\n\n  getBackgroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'thf-calendar-box-background-selected' : 'thf-calendar-box-background';\n  }\n\n  getDayBackgroundColor(date: Date) {\n    if (this.equalsDate(date, this.selectedDate)) {\n      return 'thf-calendar-box-background-selected';\n    } else if (this.equalsDate(date, this.today)) {\n      return 'thf-calendar-box-background-today';\n    } else if (date) {\n      if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n        return 'thf-calendar-box-background';\n      } else {\n        return 'thf-calendar-box-background-disabled';\n      }\n    } else {\n      return '';\n    }\n  }\n\n  getDayForegroundColor(date: Date) {\n    if (this.equalsDate(date, this.selectedDate)) {\n      return 'thf-calendar-box-foreground-selected';\n    } else if (this.equalsDate(date, this.today)) {\n      return 'thf-calendar-box-foreground-today';\n    } else {\n      if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n        return 'thf-calendar-box-foreground';\n      } else {\n        return 'thf-calendar-box-foreground-disabled';\n      }\n    }\n  }\n\n  getForegroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'thf-calendar-box-foreground-selected' : 'thf-calendar-box-foreground';\n  }\n\n  getWordMonth() {\n    return this.thfCalendarLangService.getWordMonth();\n  }\n\n  getWordYear() {\n    return this.thfCalendarLangService.getWordYear();\n  }\n\n  init() {\n    this.selectedDate ? this.updateDate(this.selectedDate) : this.updateDate(this.today);\n\n    this.initializeLanguage();\n\n    this.selectDay();\n\n    if (this.isMobile()) {\n      this.overlayInvisible = false;\n    }\n\n    this.visible = true;\n  }\n\n  initializeLanguage() {\n    this.thfCalendarLangService.setLanguage(this.locale);\n    this.displayWeedDays = this.thfCalendarLangService.getArrayWeekDays();\n    this.displayMonths = this.thfCalendarLangService.getArrayMonths();\n  }\n\n  onNextMonth() {\n    if (this.displayMonthNumber < 11) {\n      this.updateDisplay(this.displayYear, this.displayMonthNumber + 1);\n    } else {\n      this.updateDisplay(this.displayYear + 1, 0);\n    }\n  }\n\n  onPrevMonth() {\n    if (this.displayMonthNumber > 0) {\n      this.updateDisplay(this.displayYear, this.displayMonthNumber - 1);\n    } else {\n      this.updateDisplay(this.displayYear - 1, 11);\n    }\n  }\n\n  // Ao selecionar uma data\n  onSelectDate(date: Date) {\n    if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n      this.selectedDate = date;\n      this.selectedDateChange.emit(date);\n      this.submit.emit(date);\n    }\n  }\n\n  // Ao selecionar um mÃªs\n  onSelectMonth(year: number, month: number) {\n    this.selectDay();\n    this.updateDisplay(year, month);\n  }\n\n  // Ao selecionar um ano\n  onSelectYear(year: number, month: number) {\n    // Se veio da tela de seleÃ§Ã£o de mÃªs\n    this.lastDisplay === 'month' ? this.selectMonth() : this.selectDay();\n\n    this.currentYear = year;\n    this.updateDisplay(year, month);\n  }\n\n  selectDay() {\n    this.dayVisible = true;\n    this.monthVisible = false;\n    this.yearVisible = false;\n    this.lastDisplay = 'day';\n  }\n\n  selectMonth() {\n    this.dayVisible = false;\n    this.monthVisible = true;\n    this.yearVisible = false;\n    this.lastDisplay = 'month';\n  }\n\n  selectYear() {\n    this.dayVisible = false;\n    this.monthVisible = false;\n    this.yearVisible = true;\n  }\n\n  setMobileVisualization() {\n    return this.isMobile() ? 'thf-calendar thf-calendar-mobile' : 'thf-calendar';\n  }\n\n  updateYear(value: number) {\n    this.updateDisplay(this.displayYear + value, this.displayMonthNumber);\n  }\n\n  private addAllYearsInDecade(year: number) {\n    let i;\n    for (i = year; i < year + 10; i++) {\n      this.displayDecade.push(i);\n    }\n  }\n\n  private equalsDate(date1: Date, date2: Date): boolean {\n    try {\n      return date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate();\n    } catch (error) {\n      return false;\n    }\n  }\n\n  private updateDate(date: Date) {\n    this.currentMonthNumber = date.getMonth();\n    this.currentYear = date.getFullYear();\n    this.updateDisplay(this.currentYear, this.currentMonthNumber);\n  }\n\n  private updateDecade(year: number) {\n    this.addAllYearsInDecade(year);\n    this.displayStartDecade = year;\n    this.displayFinalDecade = year + 9;\n  }\n\n  private updateDisplay(year: number, month: number) {\n    const calendarArray = this.thfCalendarService.monthDays(year, month);\n    this.displayDays = [].concat.apply([], calendarArray);\n    this.displayMonthNumber = month;\n    this.displayMonth = this.displayMonths[month];\n    this.displayYear = year;\n    this.getArrayDecade(year);\n  }\n\n}\n","\nexport function requiredFailed(required: boolean, disabled: boolean, value: string | Array<any> | number | boolean) {\n  const valid = ((typeof value === 'string' && value) || (typeof value === 'object' && value && value.length)\n                || (typeof value === 'number' && (value || value === 0)) || (typeof value === 'boolean' && value));\n  return (required && !disabled && !valid);\n}\n\nexport function maxlengthFailed(maxlength: number, value: string | number) {\n  const validMaxlength = maxlength || maxlength === 0;\n  const validValue = (value || value === 0) && value.toString();\n  return validMaxlength && validValue && validValue.length > Number(maxlength);\n}\n\nexport function minlengthFailed(minlength: number, value: string | number) {\n  const validMinlength = minlength || minlength === 0;\n  const validValue = (value || value === 0) && value.toString();\n  return validMinlength && validValue && validValue.length < Number(minlength);\n}\n\nexport function patternFailed(pattern: string, value: string) {\n  let reg;\n  try {\n    reg = new RegExp(pattern);\n  } catch (e) {\n    return true;\n  }\n  return (pattern && value && !reg.test(value));\n}\n\nexport function minFailed(min: number, value: number) {\n  const validValue = value || value === 0;\n  const validMin = min || min === 0;\n  return validValue && validMin && value < min;\n}\n\nexport function maxFailed(max: number, value: number) {\n  const validValue = value || value === 0;\n  const validMax = max || max === 0;\n  return validValue && validMax && value > max;\n}\n\nexport function dateFailed(value: string) {\n  return (value && isNaN(Date.parse(value)));\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from './../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { ThfCheckboxGroupOption } from './thf-checkbox-group-option.interface';\n\nconst thfCheckboxGroupColumnsDefaultLength: number = 6;\nconst thfCheckboxGroupColumnsTotalLength: number = 12;\n\n/**\n * @description\n *\n * O componente `thf-checkbox-group` exibe uma lista de mÃºltipla escolha onde o usuÃ¡rio pode marcar e desmarcar,\n * utilizando a tecla de espaÃ§o ou o clique do mouse, vÃ¡rias opÃ§Ãµes.\n *\n * > Para seleÃ§Ã£o Ãºnica, utilize o [**Totvs Radio Group**](/documentation/thf-radio-group).\n *\n * Por padrÃ£o, o thf-checkbox-group retorna um array com os valores dos itens selecionados para o model.\n *\n * ```\n * favorites = ['THF', 'Angular'];\n * ```\n *\n * Na maioria das situaÃ§Ãµes, o array com os objetos setados jÃ¡ atende as necessidades mas, caso o desenvolvedor\n * tenha necessidade de usar um valor indeterminado (`null`), ou seja, nem marcado (`true`) e nem desmarcado (`false`),\n * deve setar a propriedade `t-indeterminate` como `true`.\n *\n * Nesse caso, o thf-checkbox-group vai retornar um objeto com todas as opÃ§Ãµes disponÃ­veis e seus valores.\n *\n * ```\n * favorites = {\n *  THF: true,\n *  Angular: true,\n *  VueJS: false,\n *  React: null // indeterminado\n * };\n * ```\n */\nexport class ThfCheckboxGroupBaseComponent implements ControlValueAccessor, Validator {\n\n  checkedOptions: any = {};\n  checkedOptionsList: any = [];\n  mdColumns: number = thfCheckboxGroupColumnsDefaultLength;\n  propagateChange: any;\n  validatorChange: any;\n\n  private _columns: number = thfCheckboxGroupColumnsDefaultLength;\n  private _disabled?: boolean = false;\n  private _indeterminate?: boolean = false;\n  private _options?: Array<ThfCheckboxGroupOption>;\n  private _required?: boolean = false;\n\n  /** Nome dos checkboxes */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Possibilita definir a quantidade de colunas para exibiÃ§Ã£o dos itens do *checkbox*.\n   * - Ã possÃ­vel exibir as opÃ§Ãµes entre `1` e `4` colunas.\n   * - Para resoluÃ§Ã£o `sm` a colunagem invariavelmente passa para `1` coluna.\n   * - Quando se trata de resoluÃ§Ã£o `md` e o valor estabelecido para colunas for superior a `2`,\n   * o *grid system* serÃ¡ composto por `2` colunas.\n   *\n   * @default `2`\n   *\n   */\n  @Input('t-columns') set columns(value: number) {\n    const columns = convertToInt(value, thfCheckboxGroupColumnsDefaultLength);\n\n    this._columns = this.getGridSystemColumns(columns, 4);\n    this.mdColumns = this.getGridSystemColumns(columns, 2);\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita todos os itens do checkbox.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.validateModel(this.checkIndeterminate());\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Texto de apoio do campo */\n  @Input('t-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso exista a necessidade de usar o valor indeterminado (`null`) dentro da lista de opÃ§Ãµes, Ã© necessÃ¡rio setar\n   * a propriedade `t-indeterminate` como `true`, por padrÃ£o essa propriedade vem desabilitada (`false`).\n   *\n   * Quando essa propriedade Ã© setada como `true`, o *thf-checkbox-group* passa a devolver um objeto completo para o\n   * `ngModel`, diferente do array que contÃ©m apenas os valores selecionados.\n   *\n   * @default `false`\n   */\n  @Input('t-indeterminate') set indeterminate(indeterminate: boolean) {\n    this._indeterminate = convertToBoolean(indeterminate);\n  }\n\n  get indeterminate() {\n    return this._indeterminate;\n  }\n\n  /** Label do campo */\n  @Input('t-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Lista de opÃ§Ãµes que serÃ£o exibidas\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface ThfCheckboxGroupOption\n   */\n  @Input('t-options') set options(value: Array<ThfCheckboxGroupOption>) {\n    this._options = Array.isArray(value) ? value : [];\n    this.removeDuplicatedOptions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('t-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.checkIndeterminate());\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  // FunÃ§Ã£o para atualizar o `ngModel` do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do campo */\n  @Output('t-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  changeValue() {\n\n    const value = this.checkIndeterminate();\n\n    if (this.propagateChange) {\n      this.propagateChange(value);\n    } else {\n      this.ngModelChange.emit(value);\n    }\n\n    this.change.emit(value);\n  }\n\n  checkIndeterminate() {\n    return this.indeterminate ? this.checkedOptions : this.checkedOptionsList;\n  }\n\n  checkOption(value: ThfCheckboxGroupOption) {\n    if (!this._disabled && !value.disabled) {\n      this.checkOptionModel(value);\n      this.changeValue();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  writeValue(optionsModel: any) {\n    if (optionsModel && this.checkedOptions !== optionsModel) {\n      this.generateCheckOptions(optionsModel);\n    } else {\n      this.checkedOptionsList = [];\n      this.checkedOptions = {};\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if ((!this.indeterminate && requiredFailed(this.required, this.disabled, abstractControl.value)) || this.isInvalidIndeterminate()) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private checkColumnsRange(columns, maxColumns): boolean {\n    const minColumns = 1;\n\n    return columns >= minColumns && columns <= maxColumns;\n  }\n\n  private checkOptionModel(optionChecked: ThfCheckboxGroupOption) {\n    this.checkedOptions[optionChecked.value] = !this.checkedOptions[optionChecked.value];\n\n    if (!this.indeterminate && this.checkedOptionsList.includes(optionChecked.value)) {\n      this.checkedOptionsList.splice(this.checkedOptionsList.indexOf(optionChecked.value), 1);\n\n    } else if (!this.indeterminate) {\n      this.checkedOptionsList.push(optionChecked.value);\n    }\n  }\n\n  private generateCheckOptions(optionsModel: any) {\n\n    this.checkedOptions = {};\n\n    if (optionsModel instanceof Array) {\n      this.checkedOptionsList = optionsModel;\n\n      this.options.forEach((option: ThfCheckboxGroupOption) => {\n        this.checkedOptions[option.value] = optionsModel.includes(option.value);\n      });\n    } else {\n      this.options.forEach((option: ThfCheckboxGroupOption) => {\n        optionsModel[option.value] = optionsModel[option.value] === undefined ? false : optionsModel[option.value];\n        this.checkedOptions = optionsModel;\n      });\n    }\n  }\n\n  private getGridSystemColumns(columns: number, maxColumns: number): number {\n    const gridSystemColumns = thfCheckboxGroupColumnsTotalLength / columns;\n\n    return this.checkColumnsRange(columns, maxColumns) ? gridSystemColumns : thfCheckboxGroupColumnsDefaultLength;\n  }\n\n  private isInvalidIndeterminate() {\n    if (this.indeterminate && this.required && this.checkedOptions) {\n      return (<any>Object).values(this.checkedOptions).every(value => value === false);\n    }\n    return false;\n  }\n\n  private removeDuplicatedOptions() {\n    this.options.forEach((option, index) => {\n      const duplicatedIndex = this.options.findIndex((optionFind: any) => optionFind.value === option.value) === index;\n      if (!duplicatedIndex) {\n        this.options.splice(this.options.indexOf(option), 1);\n      }\n    });\n  }\n\n}\n","import { AfterViewChecked, ChangeDetectorRef, Component, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThfCheckboxGroupBaseComponent } from './thf-checkbox-group-base.component';\nimport { ThfCheckboxGroupOption } from './thf-checkbox-group-option.interface';\n\n/**\n * @docsExtends ThfCheckboxGroupBaseComponent\n *\n * @example\n *\n * <example name=\"thf-checkbox-group-basic\" title=\"Totvs Checkbox Group Basic\">\n *  <file name=\"sample-thf-checkbox-group-basic/sample-thf-checkbox-group-basic.component.html\"> </file>\n *  <file name=\"sample-thf-checkbox-group-basic/sample-thf-checkbox-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-checkbox-group-labs\" title=\"Totvs Checkbox Group Labs\">\n *  <file name=\"sample-thf-checkbox-group-labs/sample-thf-checkbox-group-labs.component.html\"> </file>\n *  <file name=\"sample-thf-checkbox-group-labs/sample-thf-checkbox-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-checkbox-group-password-policy\" title=\"Totvs Checkbox Group â Security policy\">\n *  <file name=\"sample-thf-checkbox-group-password-policy/sample-thf-checkbox-group-password-policy.component.html\"> </file>\n *  <file name=\"sample-thf-checkbox-group-password-policy/sample-thf-checkbox-group-password-policy.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-checkbox-group',\n  templateUrl: './thf-checkbox-group.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfCheckboxGroupComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfCheckboxGroupComponent),\n      multi: true,\n    }\n  ]\n})\nexport class ThfCheckboxGroupComponent extends ThfCheckboxGroupBaseComponent implements AfterViewChecked {\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetector.detectChanges();\n  }\n\n  onKeyDown(event: KeyboardEvent, option: ThfCheckboxGroupOption) {\n    const spaceBar = 32;\n\n    if (event.which === spaceBar || event.keyCode === spaceBar) {\n      this.checkOption(option);\n\n      event.preventDefault();\n    }\n  }\n\n}\n","import { ElementRef, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * Este componente Ã© de uso interno utilizado por componentes de entrada de dados com o objetivo de resetar as informaÃ§Ãµes do model.\n *\n * Por padrÃ£o limpa o valor do campo e executa o mÃ©todo onChangePropagate, caso tenha a necessidade de tratar a funÃ§Ã£o de limpar o campo,\n * deve implementar a interface ThfClean.\n */\nexport abstract class ThfCleanBaseComponent {\n\n  /** Nesta propriedade deve-se informar o elementRef do campo de entrada que utilizarÃ¡ o thf-clean. */\n  @Input('t-element-ref') inputRef: ElementRef;\n\n  /** Valor que serÃ¡ atribuÃ­do ao campo quando for clicado no thf-clean. */\n  @Input('t-default-value') defaultValue?: string = '';\n\n  /**\n   * Evento disparado quando executada aÃ§Ã£o do thf-clean.\n   * Este evento deve ser usado para avisar para o componente que estÃ¡ usando o thf-clean, que o botÃ£o foi disparado,\n   * e provavelmente serÃ¡ preciso emitir o evento para atualizar o model.\n   */\n  @Output('t-change-event') changeEvent?: EventEmitter<any> = new EventEmitter<any>();\n\n  protected parentComponent: any;\n\n  clear() {\n    this.setInputValue(this.defaultValue);\n    this.changeEvent.emit(this.defaultValue);\n  }\n\n  showIcon() {\n    return this.defaultValue !== this.getInputValue() && this.hasCleanAttr() && !this.isDisabled() && !this.isReadonly();\n  }\n\n  // Este mÃ©todo verifica se o componente pai possui a propriedade clean diferente de vazio,\n  // ou seja, se o thf-clean deve ser usado.\n  private hasCleanAttr(): boolean {\n    return this.parentComponent.clean;\n  }\n\n  // Este mÃ©todo verifica se o componente pai estÃ¡ desabilitado.\n  private isDisabled(): boolean {\n    return this.parentComponent.disabled;\n  }\n\n  // Este mÃ©todo verifica se o componente pai estÃ¡ somente leitura.\n  private isReadonly(): boolean {\n    return this.parentComponent.readonly;\n  }\n\n  abstract setInputValue(value: string): void;\n\n  abstract getInputValue(): string;\n\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { ThfCleanBaseComponent } from './thf-clean-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends ThfCleanBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"thf-clean-labs\" title=\"Totvs Clean Labs\">\n *   <file name=\"sample-thf-clean-labs.component.html\"> </file>\n *   <file name=\"sample-thf-clean-labs.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'thf-clean',\n  templateUrl: './thf-clean.component.html'\n})\nexport class ThfCleanComponent extends ThfCleanBaseComponent {\n\n  constructor(private viewRef: ViewContainerRef) {\n    super();\n    this.parentComponent = this.viewRef['_view']['component'];\n  }\n\n  setInputValue(value?: string) {\n    if (this.inputRef && this.inputRef.nativeElement) {\n      this.inputRef.nativeElement.value = value;\n    }\n  }\n\n  getInputValue() {\n    if (this.inputRef && this.inputRef.nativeElement) {\n      return this.inputRef.nativeElement.value;\n    }\n  }\n\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum que contÃ©m os valores numÃ©ricos dos *keyCodes*.\n */\nexport enum ThfKeyCodeEnum {\n\n    /** Seta para baixo */\n    arrowDown = 40,\n\n    /** Seta para cima */\n    arrowUp = 38,\n\n    /** Backspace */\n    backspace = 8,\n\n    /** Delete */\n    delete = 46,\n\n    /** Enter */\n    enter = 13,\n\n    /** Esc */\n    esc = 27,\n\n    /** EspaÃ§o */\n    space = 32,\n\n    /** Tab */\n    tab = 9\n\n}\n","/**\n * @usedBy ThfComboComponent\n *\n * @description\n *\n * Define o tipo de busca usado no thf-combo.\n */\nexport enum ThfComboFilterMode {\n  /** Verifica se o texto *inicia* com o valor pesquisado. Caso nÃ£o seja especificado um tipo, serÃ¡ esse o utilizado. */\n  startsWith,\n  /** Verifica se o texto *contÃ©m* o valor pesquisado. */\n  contains,\n  /** Verifica se o texto *finaliza* com o valor pesquisado. */\n  endsWith\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isTypeof, removeDuplicatedOptions, thfLocaleDefault, validValue } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { ThfComboFilter } from './interfaces/thf-combo-filter.interface';\nimport { ThfComboFilterMode } from './thf-combo-filter-mode.enum';\nimport { ThfComboFilterService } from './thf-combo-filter.service';\nimport { ThfComboLiterals } from './interfaces/thf-combo-literals.interface';\nimport { ThfComboOption } from './interfaces/thf-combo-option.interface';\n\nconst THF_COMBO_DEBOUNCE_TIME_DEFAULT = 400;\nconst THF_COMBO_FIELD_LABEL_DEFAULT = 'label';\nconst THF_COMBO_FIELD_VALUE_DEFAULT = 'value';\n\nexport const thfComboLiteralsDefault = {\n  en: <ThfComboLiterals> {\n    noData: 'No data found'\n  },\n  es: <ThfComboLiterals> {\n    noData: 'Datos no encontrados'\n  },\n  pt: <ThfComboLiterals> {\n    noData: 'Nenhum dado encontrado'\n  }\n};\n\n/**\n * @description\n *\n * O thf-combo, semelhante ao thf-select, exibe uma lista de valores e permite ao usuÃ¡rio fazer a seleÃ§Ã£o de um desses valores,\n * mas no caso do thf-combo, o usuÃ¡rio ainda consegue filtrar os valores disponibilizados para seleÃ§Ã£o.\n *\n * TambÃ©m hÃ¡ a possibilidade de usar serviÃ§o no thf-combo, atravÃ©s da propriedade t-filter-service.\n *\n * O comportamento do thf-combo permite ao usuÃ¡rio:\n *  - selecionar um item atravÃ©s do mouse;\n *  - navegar pelos itens utilizando as setas do teclado confirmando a seleÃ§Ã£o com \"Enter\";\n *  - pesquisar os itens da lista de seleÃ§Ã£o e em seguida navegar com as setas ou com o mouse;\n *  - digitar a descriÃ§Ã£o completa.\n *\n * O thf-combo guarda o Ãºltimo valor caso o usuÃ¡rio desista de uma busca, deixando o campo ou teclando \"ESC\".\n * Caso seja digitado no campo de busca a descriÃ§Ã£o completa de um item, entÃ£o a seleÃ§Ã£o serÃ¡ automaticamente efetuada\n * ao deixar o campo ou pressionando \"Enter\".\n *\n * Ã necessÃ¡rio que os itens da lista de selecÃ£o contenham sempre valor (value) e descriÃ§Ã£o (label) para que os itens apareÃ§am corretamente\n * no thf-combo, itens que nÃ£o estejam implementando corretamenta a interface ThfComboOption, serÃ£o descartados.\n *\n * O thf-combo ainda permite definir o modo que serÃ¡ feito o filtro, atravÃ©s da propriedade t-filter-mode.\n */\nexport abstract class ThfComboBaseComponent implements ControlValueAccessor, OnInit, Validator {\n\n  private _changeOnEnter?: boolean = false;\n  private _debounceTime?: number = 400;\n  private _disabled?: boolean = false;\n  private _disabledInitFilter?: boolean = false;\n  private _fieldLabel?: string = 'label';\n  private _fieldValue?: string = 'value';\n  private _filterMinlength?: number = 0;\n  private _filterMode?: ThfComboFilterMode = ThfComboFilterMode.startsWith;\n  private _filterParams?: any;\n  private _filterService?: ThfComboFilter | string;\n  private _literals?: ThfComboLiterals;\n  private _options: Array<ThfComboOption> = [];\n  private _required?: boolean = false;\n\n  cacheOptions: Array<ThfComboOption> = [];\n  cacheStaticOptions: Array<ThfComboOption> = [];\n  defaultService: ThfComboFilterService;\n  firstInWriteValue: boolean = true;\n  isFirstFilter: boolean = true;\n  isFiltering: boolean = false;\n  keyupSubscribe: any;\n  onModelChange: any;\n  onModelTouched: any;\n  previousSearchValue: string = '';\n  selectedOption: ThfComboOption;\n  selectedValue: any;\n  selectedView: any;\n  service: ThfComboFilterService;\n  visibleOptions: Array<ThfComboOption> = [];\n\n  private validatorChange: any;\n\n  /** Label no componente. */\n  @Input('t-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('t-help') help?: string;\n\n  /** Mensagem apresentada enquanto o campo estiver vazio. */\n  @Input('t-placeholder') placeholder?: string = '';\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Nesta propriedade deve ser informada a URL do serviÃ§o em que serÃ¡ realizado o filtro para carregamento da lista de\n   * itens no componente.\n   * Caso haja a necessidade de customizaÃ§Ã£o, entÃ£o pode ser informado um serviÃ§o implementando a interface ThfComboFilter.\n   *\n   * Caso utilizado uma URL, o serviÃ§o deve ser retornado no padrÃ£o API TOTVS e utiliza as propriedades\n   * `t-field-label` e `t-field-value` para a construÃ§Ã£o da lista de itens.\n   *\n   * Quando utilizada uma URL de serviÃ§o, entÃ£o serÃ¡ concateanada nesta URL o valor que deseja-se filtrar da seguinte forma:\n   * ```\n   * url + ?filter=Peter\n   * ```\n   */\n  @Input('t-filter-service') set filterService(service: ThfComboFilter | string) {\n    this._filterService = service;\n\n    this.configAfterSetFilterService(service);\n  }\n\n  get filterService(): ThfComboFilter | string {\n    return this._filterService;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Esta propriedade define em quanto tempo (em milissegundos), aguarda para acionar o evento de filtro apÃ³s cada pressionamento de tecla.\n   * SerÃ¡ utilizada apenas quando houver serviÃ§o (`t-filter-service`).\n   *\n   * @default `400`\n   */\n  @Input('t-debounce-time') set debounceTime(value: number) {\n    const parsedValue = parseInt(<any> value, 10);\n\n    this._debounceTime = !isNaN(parsedValue) && parsedValue > 0 ? parsedValue : THF_COMBO_DEBOUNCE_TIME_DEFAULT;\n\n    this.unsubscribeKeyupObservable();\n    this.initInputObservable();\n  }\n\n  get debounceTime(): number {\n    return this._debounceTime;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Desabilita o filtro inicial no serviÃ§o, que Ã© executado no primeiro clique no campo.\n   *\n   * @default `false`\n   *\n   */\n  @Input('t-disabled-init-filter') set disabledInitFilter(value: boolean) {\n    this._disabledInitFilter = convertToBoolean(value);\n  }\n\n  get disabledInitFilter(): boolean {\n    return this._disabledInitFilter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Deve ser informado o nome da propriedade do objeto que serÃ¡ utilizado para a conversÃ£o dos itens apresentados na lista do componente\n   * (`t-options`), esta propriedade serÃ¡ responsÃ¡vel pelo valor de cada item da lista.\n   *\n   * NecessÃ¡rio quando informar o serviÃ§o como URL e o mesmo nÃ£o estiver retornando uma lista de objetos no padrÃ£o da interface\n   * ThfComboOption.\n   *\n   * @default `value`\n   */\n  @Input('t-field-value') set fieldValue(value: string) {\n    this._fieldValue = value || THF_COMBO_FIELD_VALUE_DEFAULT;\n\n    if (isTypeof(this.filterService, 'string') && this.service) {\n      this.service.fieldValue = this._fieldValue;\n    }\n  }\n\n  get fieldValue() {\n    return this._fieldValue;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Deve ser informado o nome da propriedade do objeto que serÃ¡ utilizado para a conversÃ£o dos itens apresentados na lista do componente\n   * (`t-options`), esta propriedade serÃ¡ responsÃ¡vel pelo texto de apresentaÃ§Ã£o de cada item da lista.\n   *\n   * NecessÃ¡rio quando informar o serviÃ§o como URL e o mesmo nÃ£o estiver retornando uma lista de objetos no padrÃ£o da interface\n   * ThfComboOption.\n   *\n   * @default `label`\n   */\n  @Input('t-field-label') set fieldLabel(value: string) {\n    this._fieldLabel = value || THF_COMBO_FIELD_LABEL_DEFAULT;\n\n    if (isTypeof(this.filterService, 'string') && this.service) {\n      this.service.fieldLabel = this._fieldLabel;\n    }\n  }\n\n  get fieldLabel() {\n    return this._fieldLabel;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Valor mÃ­nimo de caracteres para realizar o filtro no serviÃ§o.\n   *\n   * @default `0`\n   */\n  @Input('t-filter-minlength') set filterMinlength(value: number) {\n    const parseValue = (typeof value === 'string') ? parseInt(value, 10) : value;\n\n    this._filterMinlength = Number.isInteger(parseValue) ? parseValue : 0;\n  }\n\n  get filterMinlength() {\n    return this._filterMinlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('t-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.selectedValue);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o evento `t-change` sÃ³ serÃ¡ disparado ao clicar ou pressionar a tecla \"Enter\" sobre uma opÃ§Ã£o selecionada.\n   *\n   * @default `false`\n   */\n  @Input('t-change-on-enter') set changeOnEnter(changeOnEnter: boolean) {\n    this._changeOnEnter = convertToBoolean(changeOnEnter);\n  }\n\n  get changeOnEnter() {\n    return this._changeOnEnter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel(this.selectedValue);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o Ã­cone que serÃ¡ exibido no inÃ­cio do campo.\n   *\n   * > Veja a disponibilidade de Ã­cones em [biblioteca de Ã­cones](guides/icons).\n   */\n  @Input('t-icon') icon?: string;\n\n  /**\n   * Nesta propriedade deve ser definida uma lista de objetos que implementam a interface ThfComboOption.\n   * Esta lista conterÃ¡ os valores e as descriÃ§Ãµes que serÃ£o apresentados na tela.\n   */\n  @Input('t-options') set options(options: Array<ThfComboOption>) {\n    this._options = Array.isArray(options) ? options : [];\n\n    this.cacheStaticOptions = this.options;\n\n    this.validAndSortOptions();\n    removeDuplicatedOptions(this.options);\n    this.updateComboList();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /** Indica que a lista definida na propriedade t-options serÃ¡ ordenada pela descriÃ§Ã£o. */\n  sort?: boolean = false;\n  @Input('t-sort') set setSort(sort: string) {\n    this.sort = sort === '' ? true : convertToBoolean(sort);\n\n    this.validAndSortOptions();\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de pesquisa utilizado no filtro da lista de seleÃ§Ã£o: `startsWith`, `contains` ou `endsWith`.\n   *\n   * > Quando utilizar a propriedade `t-filter-service` esta propriedade serÃ¡ ignorada.\n   *\n   * @default `startsWith`\n   */\n  @Input('t-filter-mode') set filterMode(filterMode: ThfComboFilterMode) {\n    this._filterMode = (filterMode in ThfComboFilterMode) ? filterMode : ThfComboFilterMode.startsWith;\n    switch (this._filterMode.toString()) {\n      case 'startsWith':\n        this._filterMode = ThfComboFilterMode.startsWith;\n        break;\n      case 'contains':\n        this._filterMode = ThfComboFilterMode.contains;\n        break;\n      case 'endsWith':\n        this._filterMode = ThfComboFilterMode.endsWith;\n        break;\n    }\n  }\n\n  get filterMode(): ThfComboFilterMode {\n    return this._filterMode;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor que serÃ¡ repassado como parÃ¢metro aos mÃ©todos do serviÃ§o que implementam a interface *ThfComboFilter*.\n   */\n  @Input('t-filter-params') set filterParams(filterParams: any) {\n    this._filterParams = (filterParams || filterParams === 0 || filterParams === false) ? filterParams : undefined;\n  }\n\n  get filterParams() {\n    return this._filterParams;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `thf-combo`.\n   *\n   * Para utilizar basta passar a literal que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: ThfComboLiterals = {\n   *    noData: 'Nenhum valor'\n   *  };\n   * ```\n   *\n   * E para carregar a literal customizada, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <thf-combo\n   *   [t-literals]=\"customLiterals\">\n   * </thf-combo>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('t-literals') set literals(value: ThfComboLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfComboLiteralsDefault[thfLocaleDefault],\n        ...thfComboLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = thfComboLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || thfComboLiteralsDefault[browserLanguage()];\n  }\n\n  /** Deve ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('t-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  abstract setInputValue(value: any): void;\n\n  abstract applyFilter(value: string): void;\n\n  abstract getObjectByValue(value: string): void;\n\n  abstract getInputValue(): string;\n\n  abstract initInputObservable(): void;\n\n  ngOnInit() {\n    this.updateComboList();\n  }\n\n  onInitService() {\n    if (this.filterService) {\n      this.setService(this.filterService);\n      this.initInputObservable();\n    }\n  }\n\n  setService(service: ThfComboFilter | string) {\n    if (service) {\n      if (isTypeof(service, 'object')) {\n        this.service = <ThfComboFilterService> service;\n      } else {\n        this.service = this.defaultService;\n        this.service.configProperties(<string>service, this.fieldLabel, this.fieldValue);\n      }\n    }\n  }\n\n  validAndSortOptions() {\n    if (this.options && this.options.length > 0) {\n      // Remove os objetos que nÃ£o contÃ©m valor e atribui o valor ao label caso este esteja vazio\n      for (let i = 0; i < this.options.length; i++) {\n        if (!validValue(this.options[i]['value'])) {\n          this.options.splice(i, 1);\n        } else if (!this.options[i]['label']) {\n          this.options[i]['label'] = this.options[i]['value'].toString();\n        }\n      }\n    }\n    this.sortOptions();\n  }\n\n  sortOptions() {\n    if (this.options && this.options.length > 0 && this.sort) {\n      this.options.sort(this.compareOptions);\n    }\n  }\n\n  compareOptions(a: any, b: any) {\n    if (a.label.toString().toLowerCase() < b.label.toString().toLowerCase()) {\n      return -1;\n    }\n    if (a.label.toString().toLowerCase() > b.label.toString().toLowerCase()) {\n      return 1;\n    }\n    return 0;\n  }\n\n  compareMethod(search: string, option: ThfComboOption, filterMode: ThfComboFilterMode) {\n    switch (filterMode) {\n      case ThfComboFilterMode.startsWith:\n        return this.startsWith(search, option);\n      case ThfComboFilterMode.contains:\n        return this.contains(search, option);\n      case ThfComboFilterMode.endsWith:\n        return this.endsWith(search, option);\n    }\n  }\n\n  startsWith(search: string, option: ThfComboOption) {\n    return option.label.toLowerCase().startsWith(search.toLowerCase());\n  }\n\n  contains(search: string, option: ThfComboOption) {\n    return option.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n  }\n\n  endsWith(search: string, option: ThfComboOption) {\n    return option.label.toLowerCase().endsWith(search.toLowerCase());\n  }\n\n  getOptionFromValue(value: any, options: any) {\n    return (options) ? options.find((option: any) => this.isEqual(option.value, value)) : null;\n  }\n\n  getOptionFromLabel(label: any, options: any) {\n    if (options) {\n      return options.find((option: any) => {\n        return option.label.toString().toLowerCase() === label.toString().toLowerCase();\n      });\n    } else {\n      return null;\n    }\n  }\n\n  updateSelectedValue(option: ThfComboOption, isUpdateModel: boolean = true, isWriteValue = false) {\n    const optionLabel = option && option.label || '';\n\n    this.updateInternalVariables(option);\n\n    // atualiza o valor do input quando for changeOnEnter apenas se for para atualizar o model.\n    if (this.changeOnEnter && isUpdateModel) {\n      this.setInputValue(optionLabel);\n    } else if (!this.changeOnEnter) {\n      this.setInputValue(optionLabel);\n    }\n\n    if (isUpdateModel) {\n      const optionValue = option && option.value || undefined;\n\n      this.updateModel(optionValue, isWriteValue);\n    }\n  }\n\n  callModelChange(value: any) {\n    // Caso o componente estiver dentro de um form, terÃ¡ acesso ao mÃ©todo onModelChange.\n    return (this.onModelChange) ? this.onModelChange(value) : this.ngModelChange.emit(value);\n  }\n\n  isEqual(value: any, inputValue: any): boolean {\n    if ((value || value === 0) && inputValue) {\n      return value.toString() === inputValue.toString();\n    }\n\n    if ((value === null && inputValue !== null) ||\n        (value === undefined && inputValue !== undefined)) {\n      value = `${value}`; // Transformando em string\n    }\n\n    return value === inputValue;\n  }\n\n  searchForLabel(search: string, options: Array<ThfComboOption>, filterMode: ThfComboFilterMode) {\n    if (search && options && options.length) {\n      const newOptions: Array<ThfComboOption> = [];\n\n      options.forEach(option => {\n        if (option.label && (this.compareMethod(search, option, filterMode) || this.service)) {\n          newOptions.push(option);\n        }\n      });\n\n      this.selectedView = newOptions[0];\n      this.updateComboList(newOptions);\n    } else {\n      this.updateComboList();\n    }\n  }\n\n  updateComboList(options?: Array<ThfComboOption>) {\n    const copyOptions = options || [...this.options];\n\n    const newOptions = !options && this.selectedValue ? [{ ...this.selectedOption }] : copyOptions;\n\n    if (newOptions) {\n      this.visibleOptions = newOptions;\n\n      if (!this.selectedView && this.visibleOptions.length) {\n        this.selectedView = this.visibleOptions[0];\n      }\n    }\n  }\n\n  getNextOption(value: any, options: Array<ThfComboOption>, reverse: boolean = false) {\n    const newOptions = [].concat(options);\n    let optionFound = null;\n    let found = false;\n\n    if (reverse) {\n      newOptions.reverse();\n    }\n\n    for (let i = 0; i < newOptions.length; i++) {\n      const option = newOptions [i];\n      if (!optionFound) {\n        optionFound = option;\n      }\n      if (found) {\n        return option;\n      }\n      if (this.isEqual(option.value, value)) {\n        found = true;\n      }\n    }\n    return optionFound;\n  }\n\n  getIndexSelectedView() {\n    for (let i = 0; i < this.visibleOptions.length; i++) {\n      if (this.compareObjects(this.visibleOptions[i], this.selectedView)) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  compareObjects(obj1: any, obj2: any) {\n    return JSON.stringify(obj1) === JSON.stringify(obj2);\n  }\n\n  verifyValidOption() {\n    const inputValue = this.getInputValue();\n\n    const optionFound = this.getOptionFromLabel(inputValue, this.options);\n\n    if (optionFound && optionFound.value !== this.selectedValue) {\n\n      this.updateSelectedValue(optionFound);\n\n      this.previousSearchValue = optionFound.label;\n      return;\n\n    } else if (this.selectedValue && this.selectedOption && this.selectedOption.label !== inputValue) {\n      this.updateSelectedValueWithOldOption();\n\n      this.previousSearchValue = this.selectedOption.label;\n      return;\n\n    } else if (inputValue && !optionFound) {\n      const isInputValueDiffSelectedLabel = !!(this.selectedOption && this.selectedOption.label !== inputValue);\n\n      this.updateSelectedValue(null, isInputValueDiffSelectedLabel || this.changeOnEnter);\n\n      this.previousSearchValue = '';\n      return;\n    }\n\n  }\n\n  // Recebe as alteraÃ§Ãµes do model\n  writeValue(value: any) {\n\n    if (validValue(value) && !this.service && this.options && this.options.length) {\n      const option = this.getOptionFromValue(value, this.options);\n      this.updateSelectedValue(option);\n      this.updateComboList();\n      return;\n    }\n\n    // Se houver serviÃ§o busca pelo model.\n    if (value && this.service) {\n      return this.getObjectByValue(value);\n    }\n\n    if (!validValue(value)) {\n      this.updateSelectedValue(null, true, true);\n      this.updateComboList();\n    }\n\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if ((requiredFailed(this.required, this.disabled, abstractControl.value))) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private configAfterSetFilterService(service: ThfComboFilter | string) {\n    if (service) {\n      this.options = [];\n      this.unsubscribeKeyupObservable();\n      this.onInitService();\n    } else {\n      this.service = undefined;\n      this.options = this.cacheStaticOptions;\n    }\n\n    this.visibleOptions = [];\n    this.isFirstFilter = true;\n  }\n\n  private unsubscribeKeyupObservable() {\n    if (this.keyupSubscribe) {\n      this.keyupSubscribe.unsubscribe();\n    }\n  }\n\n  private updateInternalVariables(option: ThfComboOption) {\n    if (option) {\n      this.selectedView = option;\n      this.selectedOption = option;\n    } else {\n      this.selectedView = undefined;\n      this.selectedOption = undefined;\n    }\n  }\n\n  private updateModel(value: any, fromWriteValue = false): void {\n    if (value !== this.selectedValue) {\n\n      if (!fromWriteValue) {\n        this.callModelChange(value);\n      }\n\n      this.change.emit(value);\n    }\n\n    this.selectedValue = value;\n  }\n\n  private updateSelectedValueWithOldOption() {\n    const oldOption = this.getOptionFromValue(this.selectedValue, this.options);\n\n    if (oldOption && oldOption.label) {\n      return this.updateSelectedValue(oldOption);\n    }\n  }\n\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ThfComboFilter } from './interfaces/thf-combo-filter.interface';\nimport { ThfComboOption } from './interfaces/thf-combo-option.interface';\nimport { ThfResponse } from './interfaces/thf-response.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o padrÃ£o utilizado para filtrar os dados do componente thf-combo.\n */\n@Injectable()\nexport class ThfComboFilterService implements ThfComboFilter {\n\n  private _url: string;\n\n  fieldLabel: string = 'label';\n  fieldValue: string = 'value';\n\n  get url(): string { return this._url; }\n\n  constructor(private http: HttpClient) { }\n\n  getFilteredData(param: any, filterParams?: any): Observable<Array<ThfComboOption>> {\n    const value = param.value;\n\n    const params = new HttpParams({\n      fromString: `filter=${value}`\n    });\n\n    return this.http.get(`${this.url}`, {responseType: 'json', params: params})\n      .pipe(map((response: ThfResponse) => this.parseToArrayComboOption(response.items)));\n  }\n\n  getObjectByValue(value: string | number, filterParams?: any): Observable<ThfComboOption> {\n    return this.http.get(`${this.url}/${value}`).pipe(map(item => this.parseToComboOption(item)));\n  }\n\n  configProperties(url: string, fieldLabel: string, fieldValue: string) {\n    this._url = url;\n    this.fieldLabel = fieldLabel;\n    this.fieldValue = fieldValue;\n  }\n\n  private parseToArrayComboOption(items: Array<any>): Array<ThfComboOption> {\n    if (items && items.length > 0) {\n\n      return items.map(item => {\n        return this.parseToComboOption(item);\n      });\n\n    }\n\n    return [];\n  }\n\n  private parseToComboOption(item: any): ThfComboOption {\n    if (item && item[this.fieldValue]) {\n\n      const label = item[this.fieldLabel];\n      const value = item[this.fieldValue];\n\n      return { label, value };\n    }\n  }\n\n}\n","import { ChangeDetectorRef, Component, DoCheck, ElementRef, forwardRef,\n  IterableDiffers, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\n\nimport { removeDuplicatedOptions } from '../../../utils/util';\nimport { ThfControlPositionService } from '../../../services/thf-control-position/thf-control-position.service';\nimport { ThfKeyCodeEnum } from './../../../enums/thf-key-code.enum';\n\nimport { ThfComboBaseComponent } from './thf-combo-base.component';\nimport { ThfComboFilterMode } from './thf-combo-filter-mode.enum';\nimport { ThfComboFilterService } from './thf-combo-filter.service';\nimport { ThfComboOption } from './interfaces/thf-combo-option.interface';\n\nconst thfComboContainerOffset = 8;\nconst thfComboContainerPositionDefault = 'bottom';\n\n/**\n * @docsExtends ThfComboBaseComponent\n *\n * @description\n * Utilizando thf-combo com serviÃ§o, Ã© possivel digitar um valor no campo de entrada e pressionar a tecla 'tab' para que o componente\n * faÃ§a uma requisiÃ§Ã£o Ã  URL informada passando o valor digitado no campo. Se encontrado o valor, entÃ£o o mesmo serÃ¡ selecionado, caso\n * nÃ£o seja encontrado, entÃ£o a lista de itens voltarÃ¡ para o estado inicial.\n *\n * @example\n *\n * <example name=\"thf-combo-basic\" title=\"Totvs Combo Basic\">\n *   <file name=\"sample-thf-combo-basic/sample-thf-combo-basic.component.html\"> </file>\n *   <file name=\"sample-thf-combo-basic/sample-thf-combo-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-combo-labs\" title=\"Totvs Combo Labs\">\n *   <file name=\"sample-thf-combo-labs/sample-thf-combo-labs.component.html\"> </file>\n *   <file name=\"sample-thf-combo-labs/sample-thf-combo-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-combo-scheduling\" title=\"Totvs Combo - Scheduling\">\n *   <file name=\"sample-thf-combo-scheduling/sample-thf-combo-scheduling.component.html\"> </file>\n *   <file name=\"sample-thf-combo-scheduling/sample-thf-combo-scheduling.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-combo-transfer\" title=\"Totvs Combo - Banking Transfer\">\n *   <file name=\"sample-thf-combo-transfer/sample-thf-combo-transfer.component.html\"> </file>\n *   <file name=\"sample-thf-combo-transfer/sample-thf-combo-transfer.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-combo-heroes\" title=\"Totvs Combo - Heroes\">\n *   <file name=\"sample-thf-combo-heroes/sample-thf-combo-heroes.component.html\"> </file>\n *   <file name=\"sample-thf-combo-heroes/sample-thf-combo-heroes.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-combo-heroes-reactive-form\" title=\"Totvs Combo - Heroes Reactive Form\">\n *   <file name=\"sample-thf-combo-heroes-reactive-form/sample-thf-combo-heroes-reactive-form.component.html\"> </file>\n *   <file name=\"sample-thf-combo-heroes-reactive-form/sample-thf-combo-heroes-reactive-form.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-combo-hotels\" title=\"Totvs Combo - Booking Hotel\">\n *   <file name=\"sample-thf-combo-hotels/sample-thf-combo-hotels.component.html\"> </file>\n *   <file name=\"sample-thf-combo-hotels/sample-thf-combo-hotels.component.ts\"> </file>\n *   <file name=\"sample-thf-combo-hotels/sample-thf-combo-hotels.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-combo',\n  templateUrl: './thf-combo.component.html',\n  providers: [\n    ThfComboFilterService,\n    ThfControlPositionService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfComboComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfComboComponent),\n      multi: true,\n    }\n  ]\n})\nexport class ThfComboComponent extends ThfComboBaseComponent implements DoCheck, OnDestroy {\n\n  private _isServerSearching: boolean = false;\n\n  comboIcon: string = 'thf-icon-arrow-down';\n  comboOpen: boolean = false;\n  differ: any;\n  isProcessingGetObjectByValue: boolean = false;\n  scrollTop = 0;\n  service: ThfComboFilterService;\n  shouldMarkLetters: boolean = true;\n\n  private clickoutListener: () => void;\n  private eventResizeListener: () => void;\n\n  private filterSubscription: Subscription;\n  private getSubscription: Subscription;\n\n  @ViewChild('containerElement', { read: ElementRef, static: false }) containerElement: ElementRef;\n  @ViewChild('contentElement', { read: ElementRef, static: false }) contentElement: ElementRef;\n  @ViewChild('iconArrow', { read: ElementRef, static: true }) iconElement: ElementRef;\n  @ViewChild('inputElement', { read: ElementRef, static: true }) inputElement: ElementRef;\n\n  constructor(\n    public element: ElementRef,\n    public differs: IterableDiffers,\n    public defaultService: ThfComboFilterService,\n    public renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private controlPosition: ThfControlPositionService,\n    private sanitized: DomSanitizer) {\n\n    super();\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  set isServerSearching(value: boolean) {\n    if (value) {\n      this._isServerSearching = value;\n\n      this.changeDetector.detectChanges();\n\n      this.setContainerPosition();\n      this.initializeListeners();\n    } else {\n      this._isServerSearching = value;\n\n      this.removeListeners();\n    }\n  }\n\n  get isServerSearching() {\n    return this._isServerSearching;\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this.options);\n    if (change) {\n      this.validAndSortOptions();\n      removeDuplicatedOptions(this.options);\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n\n    if (this.filterSubscription) {\n      this.filterSubscription.unsubscribe();\n    }\n\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n  }\n\n  onKeyDown(event?: any) {\n    const key = event.keyCode;\n    const inputValue = event.target.value;\n\n    // busca um registro quando acionar o tab\n    if (this.service && key === ThfKeyCodeEnum.tab && inputValue) {\n      this.controlComboVisibility(false);\n      return this.getObjectByValue(inputValue);\n    }\n\n    // Teclas \"up\" e \"down\"\n    if (key === ThfKeyCodeEnum.arrowUp || key === ThfKeyCodeEnum.arrowDown) {\n      event.preventDefault();\n\n      if (this.comboOpen) {\n        if (key === ThfKeyCodeEnum.arrowUp) {\n          this.selectPreviousOption();\n        } else {\n          this.selectNextOption();\n        }\n      }\n\n      this.controlComboVisibility(true);\n      this.isFiltering = this.changeOnEnter ? this.isFiltering : false;\n      this.shouldMarkLetters = this.changeOnEnter ? this.shouldMarkLetters : false;\n      return;\n    }\n\n    // Teclas \"tab\" ou \"esc\"\n    if (key === ThfKeyCodeEnum.tab || key === ThfKeyCodeEnum.esc) {\n\n      if (key === ThfKeyCodeEnum.esc && this.comboOpen) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      this.controlComboVisibility(false);\n      this.verifyValidOption();\n\n      if (!this.service) {\n        // caso for changeOnEnter e nao ter selectedValue deve limpar o selectedView para reinicia-lo.\n        this.selectedView = this.changeOnEnter && !this.selectedValue ? undefined : this.selectedView;\n\n        this.updateComboList();\n      }\n\n      return;\n    }\n\n    // Tecla \"enter\"\n    if (key === ThfKeyCodeEnum.enter && this.selectedView && this.comboOpen) {\n      const isUpdateModel = (this.selectedView.value !== this.selectedValue) || (inputValue !== this.selectedView.label);\n\n      this.controlComboVisibility(false);\n\n      this.updateSelectedValue(this.selectedView, isUpdateModel);\n      this.isFiltering = false;\n\n      this.updateComboList();\n      return;\n    }\n\n    if (key === ThfKeyCodeEnum.enter) {\n      this.controlComboVisibility(true);\n    }\n  }\n\n  onKeyUp(event?: any) {\n    const key = event.keyCode || event.which;\n    const inputValue = event.target.value;\n\n    const isValidKey = (key !== ThfKeyCodeEnum.arrowUp && key !== ThfKeyCodeEnum.arrowDown && key !== ThfKeyCodeEnum.enter);\n\n    if (isValidKey) {\n\n      if (inputValue) {\n        if (!this.service && this.previousSearchValue !== inputValue) {\n          this.shouldMarkLetters = true;\n          this.isFiltering = true;\n          this.searchForLabel(inputValue, this.options, this.filterMode);\n        }\n\n      } else {\n        // quando apagar rapido o campo e conter serviÃ§o, valor, nÃ£o disparava o keyup observable\n        // necessario este tratamento para retornar a lista 'default'.\n        const useDefaultOptionsService = this.service && this.selectedValue && this.selectedOption.label === this.previousSearchValue;\n\n        this.updateSelectedValue(null);\n\n        if (!this.service) {\n          this.updateComboList();\n        } else if (useDefaultOptionsService) {\n          this.updateComboList([...this.cacheOptions]);\n        }\n\n        this.isFiltering = false;\n      }\n\n      // caso o valor pesquisado for diferente do anterior deve abrir o combo\n      if (this.previousSearchValue !== inputValue) {\n        this.changeDetector.detectChanges();\n\n        this.controlComboVisibility(true);\n      }\n\n    }\n\n    this.previousSearchValue = inputValue;\n  }\n\n  initInputObservable() {\n    if (this.service) {\n      const keyupObservable = fromEvent(this.inputElement.nativeElement, 'keyup')\n                                .pipe(\n                                  filter((e: any) => this.isValidCharacterToSearch(e.keyCode)),\n                                  map((e: any) => e.currentTarget.value),\n                                  distinctUntilChanged(),\n                                  tap(() => {\n                                    this.shouldMarkLetters = false;\n                                  }),\n                                  debounceTime(this.debounceTime)\n                                );\n\n      this.keyupSubscribe = keyupObservable.subscribe(value => {\n        if (value.length >= this.filterMinlength || !value) {\n          this.controlApplyFilter(value);\n        }\n      });\n    }\n  }\n\n  controlApplyFilter(value) {\n    if (!this.isProcessingGetObjectByValue && (!this.selectedOption || value !== this.selectedOption.label)) {\n      this.applyFilter(value);\n    }\n  }\n\n  applyFilter(value: string) {\n    this.controlComboVisibility(false);\n    this.isServerSearching = true;\n\n    const param = { property: this.fieldLabel, value };\n\n    this.filterSubscription = this.service.getFilteredData(param, this.filterParams)\n      .subscribe(items => this.setOptionsByApplyFilter(value, items));\n  }\n\n  setOptionsByApplyFilter(value, items) {\n    this.shouldMarkLetters = true;\n    this.isServerSearching = false;\n    this.options = items;\n\n    this.searchForLabel(value, items, this.filterMode);\n\n    this.changeDetector.detectChanges();\n\n    this.controlComboVisibility(true);\n\n    if (this.isFirstFilter) {\n      this.isFirstFilter = !this.isFirstFilter;\n\n      this.cacheOptions = this.options;\n    }\n  }\n\n  getObjectByValue(value) {\n    if (!this.selectedValue) {\n      this.isProcessingGetObjectByValue = true;\n\n      this.getSubscription = this.service.getObjectByValue(value, this.filterParams)\n        .subscribe(item => this.updateOptionByFilteredValue(item));\n    }\n  }\n\n  updateOptionByFilteredValue(item) {\n    if (item) {\n      this.options = [item];\n      this.onOptionClick(item);\n    } else {\n      this.updateSelectedValue(null);\n    }\n\n    setTimeout(() => { this.isProcessingGetObjectByValue = false; }, this.debounceTime);\n  }\n\n  selectPreviousOption() {\n    const currentViewValue = this.selectedView && this.selectedView.value;\n\n    if (currentViewValue) {\n      const nextOption = this.getNextOption(currentViewValue, this.visibleOptions, true);\n\n      this.updateSelectedValue(nextOption, nextOption && nextOption.value !== currentViewValue && !this.changeOnEnter);\n    } else if (this.visibleOptions.length) {\n      const visibleOption = this.visibleOptions[this.visibleOptions.length - 1];\n\n      this.updateSelectedValue(visibleOption, visibleOption.value !== currentViewValue && !this.changeOnEnter);\n    }\n  }\n\n  selectNextOption() {\n    const currentViewValue = this.selectedView && this.selectedView.value;\n\n    if (currentViewValue) {\n      const nextOption = this.getNextOption(currentViewValue, this.visibleOptions);\n\n      this.updateSelectedValue(nextOption, nextOption && nextOption.value !== currentViewValue && !this.changeOnEnter);\n    } else if (this.visibleOptions.length) {\n      const index = this.changeOnEnter ? 1 : 0;\n\n      const visibleOption = this.visibleOptions[index];\n\n      this.updateSelectedValue(visibleOption, visibleOption.value !== currentViewValue && !this.changeOnEnter);\n    }\n  }\n\n  toggleComboVisibility(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.service && !this.disabledInitFilter) {\n      this.applyFilterInFirstClick();\n    }\n\n    this.controlComboVisibility(!this.comboOpen);\n  }\n\n  applyFilterInFirstClick() {\n    if (this.isFirstFilter && !this.selectedValue) {\n      this.applyFilter('');\n    }\n  }\n\n  controlComboVisibility(toOpen: boolean) {\n    toOpen ? this.open() : this.close();\n  }\n\n  onOptionClick(option: ThfComboOption) {\n    const inputValue = this.getInputValue();\n    const isUpdateModel = (option.value !== this.selectedValue) || !!(this.selectedView && inputValue !== this.selectedView.label);\n\n    this.updateSelectedValue(option, isUpdateModel);\n    this.controlComboVisibility(false);\n    this.updateComboList([{ ...this.selectedView }]);\n\n    this.previousSearchValue = this.selectedView.label;\n  }\n\n  scrollTo(index) {\n    const scrollTop = (index <= 2) ? 0 : (index * 44) - 88;\n\n    this.setScrollTop(scrollTop);\n  }\n\n  getInputValue() {\n    return this.inputElement.nativeElement.value;\n  }\n\n  setInputValue(value: string): void {\n    this.inputElement.nativeElement.value = value;\n  }\n\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (this.comboOpen &&\n        !this.inputElement.nativeElement.contains(event.target) &&\n        !this.iconElement.nativeElement.contains(event.target) &&\n        (!this.contentElement || !this.contentElement.nativeElement.contains(event.target))) {\n      // Esconde Content do Combo quando for clicado fora\n      this.controlComboVisibility(false);\n\n      this.verifyValidOption();\n\n      // caso for changeOnEnter deve limpar o selectedView para reinicia-lo\n      this.selectedView = this.changeOnEnter && !this.selectedValue ? undefined : this.selectedView;\n\n      this.updateComboList();\n    } else {\n      if (this.service && !this.getInputValue() && !this.isFirstFilter) {\n        this.applyFilter('');\n      }\n    }\n  }\n\n  getLabelFormatted(label): SafeHtml {\n    let format = label;\n\n    if (this.isFiltering ||\n      (this.service && this.getInputValue() && !this.compareObjects(this.cacheOptions, this.visibleOptions) && this.shouldMarkLetters)) {\n\n      const labelInput = this.getInputValue().toString().toLowerCase();\n      const labelLowerCase = label.toLowerCase();\n\n      const openTagBold = '<span class=\"thf-font-text-large-bold\">';\n      const closeTagBold = '</span>';\n\n      let startString;\n      let middleString;\n      let endString;\n\n      switch (this.filterMode) {\n        case ThfComboFilterMode.startsWith:\n        case ThfComboFilterMode.contains:\n          startString = label.substring(0, labelLowerCase.indexOf(labelInput));\n          middleString = label.substring(labelLowerCase.indexOf(labelInput),\n            labelLowerCase.indexOf(labelInput) + labelInput.length);\n          endString = label.substring(labelLowerCase.indexOf(labelInput) + labelInput.length);\n\n          format = startString + openTagBold + middleString + closeTagBold + endString;\n          break;\n        case ThfComboFilterMode.endsWith:\n          startString = label.substring(0, labelLowerCase.lastIndexOf(labelInput));\n          middleString = label.substring(labelLowerCase.lastIndexOf(labelInput));\n\n          format = startString + openTagBold + middleString + closeTagBold;\n          break;\n      }\n    }\n\n    return this.safeHtml(format);\n  }\n\n  safeHtml(value): SafeHtml {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n\n  isValidCharacterToSearch(keyCode) {\n    return (keyCode !== 9 && // tab\n            keyCode !== 13 && // entet\n            keyCode !== 16 && // shift\n            keyCode !== 17 && // ctrl\n            keyCode !== 18 && // alt\n            keyCode !== 20 && // capslock\n            keyCode !== 27 && // esc\n            keyCode !== 37 && // seta\n            keyCode !== 38 && // seta\n            keyCode !== 39 && // seta\n            keyCode !== 40 && // seta\n            keyCode !== 93); // windows menu\n  }\n\n  searchOnEnter(value: string) {\n    if (this.service && !this.selectedView && value.length >= this.filterMinlength) {\n      this.controlApplyFilter(value);\n    }\n  }\n\n  private adjustContainerPosition() {\n    this.controlPosition.adjustPosition(thfComboContainerPositionDefault);\n  }\n\n  private close() {\n    this.comboOpen = false;\n\n    this.changeDetector.detectChanges();\n\n    this.comboIcon = 'thf-icon-arrow-down';\n\n    this.removeListeners();\n\n    this.isFiltering = false;\n  }\n\n  private initializeListeners() {\n    this.removeListeners();\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      // timeout necessario pois a animaÃ§Ã£o do thf-menu impacta no ajuste da posiÃ§Ã£o do container.\n      setTimeout(() => this.adjustContainerPosition(), 250);\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.adjustContainerPosition();\n  }\n\n  private open() {\n    this.comboOpen = true;\n\n    this.changeDetector.detectChanges();\n\n    this.comboIcon = 'thf-icon-arrow-up';\n\n    this.initializeListeners();\n\n    this.inputElement.nativeElement.focus();\n    this.scrollTo(this.getIndexSelectedView());\n\n    this.setContainerPosition();\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.eventResizeListener) {\n      this.eventResizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setContainerPosition() {\n    this.controlPosition.setElements(\n      this.containerElement.nativeElement,\n      thfComboContainerOffset,\n      this.inputElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.adjustContainerPosition();\n  }\n\n  private setScrollTop(scrollTop: number) {\n    if (this.contentElement) {\n      this.contentElement.nativeElement.scrollTop = scrollTop;\n    }\n  }\n\n}\n","/**\n * Para usar o thf-mask Ã© preciso instanciar esta classe passando a mÃ¡scara como\n * primeiro parÃ¢metro, e no segundo parÃ¢metro, deve se informado true, caso queira\n * que o model seja formatado ou false para o que o model seja limpo.\n */\nexport class ThfMask {\n  mask: string = '';\n  formatModel: boolean = false;\n  // controle de posiÃ§Ã£o\n  initialPosition: number = 0;\n  finalPosition: number = 0;\n\n  pattern: string = '';\n  get getPattern(): string {\n    return this.pattern;\n  }\n\n  valueToInput: string;\n  get getValueToInput(): string {\n    return this.valueToInput;\n  }\n  set setValueToInput(value: string) {\n    this.valueToInput = value;\n  }\n\n  valueToModel: string;\n  get getValueToModel(): string {\n    return this.valueToModel;\n  }\n  set setValueToModel(value: string) {\n    this.valueToModel = value;\n  }\n\n  formattingEnds: boolean;\n\n  constructor(mask: string, formatModel: boolean) {\n    this.mask = mask;\n    this.formatModel = formatModel;\n    this.pattern = this.getRegexFromMask(mask);\n  }\n\n  keyup($event: any) {\n    if (this.mask) {\n      const value = $event.target.value;\n      // formata o valor quando for colado com control + v e reposiciona o cursor\n      if ($event.keyCode === 17 || $event.keyCode === 91) {\n        $event.target.value = this.controlFormatting(value);\n        this.resetPositions($event);\n      }\n\n      $event.preventDefault();\n\n      switch ($event.keyCode) {\n        case 37: // seta esquerda\n          if (this.initialPosition > 0) {\n            this.initialPosition--;\n          }\n          this.setPositionNotShiftKey($event);\n          this.setSelectionRange($event);\n          break;\n\n        case 39: // seta direita\n          if (this.initialPosition < value.toString().length) {\n            this.initialPosition++;\n          }\n          this.setPositionNotShiftKey($event);\n          this.setSelectionRange($event);\n          break;\n\n        case 35: // end\n          this.finalPosition = value.toString().length;\n          if ($event.shiftKey) {\n            this.setPositions($event);\n          } else {\n            this.initialPosition = this.finalPosition;\n            this.setPositions($event);\n          }\n          break;\n\n        case 36: // HOME\n          if ($event.shiftKey) {\n            this.finalPosition = this.initialPosition;\n            this.initialPosition = 0;\n            this.setPositions($event);\n          } else {\n            this.initialPosition = 0;\n            this.finalPosition = 0;\n            this.setPositions($event);\n          }\n          break;\n      }\n    }\n  }\n\n  setPositionNotShiftKey($event: any) {\n    if (!$event.shiftKey) {\n      this.finalPosition = this.initialPosition;\n    }\n  }\n\n  setSelectionRange($event: any) {\n    if (this.initialPosition > this.finalPosition) {\n      $event.target.setSelectionRange(this.finalPosition, this.initialPosition);\n    } else {\n      $event.target.setSelectionRange(this.initialPosition, this.finalPosition);\n    }\n  }\n\n  keydown($event: any) {\n    if (this.mask) {\n      let value: string = $event.target.value;\n      if ($event.keyCode === 9) {\n        return;\n      }\n\n      if (!$event.ctrlKey && !$event.metaKey) {\n        $event.preventDefault();\n      }\n\n      // NÃ£o faz nada quando for digitado CTRL ou COMMAND e V\n      // JÃ¡ estÃ¡ sendo tratado no evento keyup\n      if ($event.ctrlKey || $event.metaKey && ($event.keyCode !== 86) ||\n        ($event.keyCode >= 37 && $event.keyCode <= 40) || $event.keyCode === 16 || $event.keyCode === 9 ) {\n        return;\n      }\n\n      // Valida a tecla digitada\n      if (this.isKeyValid($event.keyCode)) {\n        if (this.finalPosition === null) {\n          this.finalPosition = this.initialPosition;\n        }\n        this.revertPositions(this.initialPosition, this.finalPosition);\n\n        switch ($event.keyCode) {\n          case 8: // backspace\n            this.getPosition($event);\n            if (this.initialPosition < 0) {\n              this.initialPosition = 0;\n              this.setPositions($event);\n            }\n            if (this.initialPosition === this.finalPosition) {\n              this.checkMaskBefore($event, -1);\n              if (this.initialPosition !== 0) {\n                value = value.slice(0, this.initialPosition - 1) + value.slice(this.finalPosition);\n                value = this.controlFormatting(value);\n                $event.target.value = value;\n                this.changePosition($event , -1);\n                this.checkMaskBefore($event, -1);\n                this.setPositions($event);\n                this.resetPositions($event);\n              }\n            } else {\n              this.clearRangeSelection(value, $event, true);\n            }\n            this.setPositions($event);\n            break;\n\n          case 46: // delete\n            this.getPosition($event);\n            if (this.initialPosition === this.finalPosition) {\n              this.checkMaskAfter($event, 1);\n              value = value.slice(0, this.initialPosition) + value.slice(this.finalPosition + 1);\n              value = this.controlFormatting(value);\n              $event.target.value = value;\n              this.setPositions($event);\n              this.resetPositions($event);\n            } else {\n              this.clearRangeSelection(value, $event, false);\n            }\n            this.setPositions($event);\n            break;\n\n          default: // qualquer outra tecla vÃ¡lida\n            value = value.slice(0, this.initialPosition) + $event.key + value.slice(this.finalPosition);\n            value = this.controlFormatting(value);\n            $event.target.value = value;\n            this.changePosition($event, 1);\n            this.checkMaskBefore($event, 1);\n            this.setPositions($event);\n            this.resetPositions($event);\n            this.setPositions($event);\n        }\n      }\n    }\n  }\n\n  clearRangeSelection(value: string, $event: any, isBackspace: boolean) {\n    value = value.slice(0, this.initialPosition) + value.slice(this.finalPosition);\n    value = this.controlFormatting(value);\n    $event.target.value = value;\n\n    if (isBackspace) {\n      this.checkMaskBefore($event, -1);\n    }\n\n    this.setPositions($event);\n    this.resetPositions($event);\n  }\n\n  // passa a posiÃ§Ã£o do click para o controle de posiÃ§Ã£o\n  click($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = $event.target.selectionEnd;\n  }\n\n  blur($event: any) {\n    // Se houver algum valor definido na mÃ¡scara\n    if (this.mask) {\n      // pega o valor do campo, formata e passa para o model\n      let value = $event.target.value;\n      value = this.controlFormatting(value);\n      $event.target.value = value;\n    }\n  }\n\n  revertPositions(initialPosition: number, finalPosition: number) {\n    if (initialPosition > finalPosition) {\n      // inverte o controle de posiÃ§Ã£o caso o inicial esteja maior que o final\n      let tempPosition;\n      tempPosition = initialPosition;\n      this.initialPosition = finalPosition;\n      this.finalPosition = tempPosition;\n    }\n  }\n\n  // reseta o controle de posiÃ§Ã£o\n  resetPositions($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = this.initialPosition;\n  }\n\n  // posiciona o cursor de acordo com o controle de posiÃ§Ã£o\n  setPositions($event: any) {\n    $event.target.setSelectionRange(this.initialPosition, this.finalPosition);\n  }\n\n  // muda a posiÃ§Ã£o do cursor e atualiza o controle de posiÃ§Ã£o\n  changePosition($event: any, value: number) {\n    this.initialPosition = this.initialPosition + value;\n    this.finalPosition = this.finalPosition + value;\n    this.setPositions($event);\n  }\n\n  getPosition($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = $event.target.selectionEnd;\n    this.setPositions($event);\n  }\n\n  // MÃ©todo responsÃ¡vel por controlar a formataÃ§Ã£o e aplicar todas as mÃ¡scara possÃ­veis\n  // quando houver valores opcionais (?)\n  controlFormatting(value: string) {\n    // Se o valor for vazio, retorna vazio\n    if (!value) {\n      this.valueToInput = '';\n      this.valueToModel = '';\n      return '';\n    }\n    let valueProcessed;\n    let maskTmp = this.mask;\n\n    // Array que serÃ¡ usado para armazenar todas as mÃ¡scaras possÃ­veis para\n    // quando houver um valor opcional (?)\n    const arrMasks: Array<any> = [];\n    let contMasks = 0;\n\n    // Enquanto houver algum 9? na mÃ¡scara\n    while (this.hasOptionalNumber(maskTmp)) {\n      arrMasks.push(maskTmp);\n      maskTmp = this.replaceOptionalNumber(maskTmp);\n    }\n    arrMasks.push(maskTmp);\n\n    // Inverte o array\n    arrMasks.reverse();\n\n    // Informa que a formataÃ§Ã£o ainda nÃ£o chegou ao fim\n    this.formattingEnds = false;\n\n    while (!this.formattingEnds) {\n      // Seta a formataÃ§Ã£o como terminada\n      // EntÃ£o o mÃ©todo formatValue irÃ¡ setar como nÃ£o terminado caso haja\n      this.formattingEnds = true;\n\n      // Se nÃ£o existe mais nenhuma mÃ¡scara possÃ­vel, entÃ£o encerra a formataÃ§Ã£o\n      if (!arrMasks[contMasks]) {\n        break;\n      }\n\n      // Chama a formataÃ§Ã£o passando a mÃ¡scara e o valor\n      valueProcessed = this.formatValue(value, arrMasks[contMasks]);\n      contMasks++;\n    }\n\n    return valueProcessed;\n  }\n\n  // FunÃ§Ã£o que formata a mÃ¡scara com o valor passado\n  formatValue(value: string, mask: string) {\n\n    // Remove as marcas de valor opciona (?)\n    mask = mask.replace(/\\?/g, '');\n\n    // Substitui todos os caracteres que nÃ£o sÃ£o fixos da mÃ¡scara por _\n    const guide = mask.replace(this.listValidKeys(), '_');\n\n    // Contador usado para percorrer o guide\n    let contGuide: number = 0;\n\n    // String final formatada\n    let valueProcessed: string = '';\n\n    // Remove do valor todos os caracteres fixos como ()/-+\n    value = this.removeFormattingValue(value);\n\n    // Percorre todo o valor e coloca a formataÃ§Ã£o de acordo com a mÃ¡scara\n    for (let i = 0; i < value.length; i++) {\n      const charValue = value[i];\n\n      // Se o guide acabou, seta a formataÃ§Ã£o como nÃ£o terminada para que o mÃ©todo controlFormatting\n      // tente formatar com outra possÃ­vel mÃ¡scara\n      if (!guide[contGuide]) {\n        this.formattingEnds = false;\n        break;\n      }\n\n      // Percorre o Guide enquanto tem caracteres fixos\n      while (this.isFixedCharacterGuide(guide[contGuide]) && guide[contGuide]) {\n        valueProcessed += guide[contGuide];\n        contGuide++;\n      }\n\n      // Ã um caracter vÃ¡lido de acordo com a mÃ¡scara\n      if (this.isKeyValidMask(charValue, mask[contGuide])) {\n        valueProcessed += charValue;\n        contGuide++;\n      } else {\n        // Se nÃ£o Ã© um caracter vÃ¡lido, deve interromper.\n        break;\n      }\n    }\n\n    if (this.formatModel) {\n      this.valueToInput = valueProcessed;\n      this.valueToModel = valueProcessed;\n    } else {\n      this.valueToInput = valueProcessed;\n      this.valueToModel = this.removeFormattingValue(valueProcessed);\n    }\n    return valueProcessed;\n  }\n  // verifica se tem algum caracter de mascara antes do cursor\n  checkMaskBefore($event: any, position: number) {\n    if (this.isFixedCharacterGuide($event.target.value.toString().charAt(this.initialPosition - 1))) {\n      this.changePosition($event, position);\n      this.checkMaskBefore($event, position);\n    }\n  }\n\n  // verifica se tem algum caracter de mascara depois do cursor\n  checkMaskAfter($event: any, position: number) {\n    if (this.isFixedCharacterGuide($event.target.value.toString().charAt(this.initialPosition))) {\n      this.changePosition($event, position);\n      this.checkMaskAfter($event, position);\n    }\n  }\n\n  // Retorna a mÃ¡scara sem um valor opcional\n  replaceOptionalNumber(mask: string) {\n    let i = 9;\n    while (i >= 0) {\n      if (mask.indexOf(i + '?') > -1) {\n        return mask.replace(i + '?', '');\n      }\n      i--;\n    }\n    return mask;\n  }\n\n  // Verifica se contÃ©m caracteres permitidos somente na mÃ¡scara \\/() +-\n  isFixedCharacterGuide(key: any) {\n    return this.testRegex(key, this.getFixedCharacterGuide());\n  }\n\n  // Retorna caracteres permitidos somente na mÃ¡scara \\/() +-\n  getFixedCharacterGuide() {\n    return /[\\\\\\/() +-.\\:]/g;\n  }\n\n  // Caracteres permitidos de serem digitados\n  listValidKeys() {\n    return /[a-zA-Z0-9]/g;\n  }\n\n  // Se Ã© um dÃ­gito vÃ¡lido\n  isKeyValid(keyCode: any) {\n    return this.isKeyCodeValid(keyCode);\n  }\n\n  // Verifica se a tecla digitada Ã© permitida\n  // Permite apenas nÃºmeros, letras, backspace e del\n  isKeyCodeValid(keyCode: number) {\n    return (\n      (keyCode >= 48 && keyCode <= 57) ||\n      (keyCode >= 65 && keyCode <= 90) ||\n      (keyCode >= 96 && keyCode <= 105) ||\n      (keyCode === 8) || keyCode === 9 ||\n      (keyCode === 46)\n    );\n  }\n\n  // Se estÃ¡ de acordo com a mÃ¡scara\n  isKeyValidMask(key: any, keyMask: any) {\n    return this.testRegex(key, this.replaceMask(keyMask));\n  }\n\n  // Retorna se a chave foi aprovada pela expressÃ£o regular\n  testRegex(key: any, regex: any) {\n    return regex.test(key);\n  }\n\n  // Remove a formatacÃ£o do valor\n  // Ã possÃ­vel ser melhorado para remover pontualmente os caracteres fixos de acordo com a mÃ¡scara\n  removeFormattingValue(value: string) {\n    return value.replace(this.getFixedCharacterGuide(), '');\n  }\n\n  // Verifica se contÃ©m valor opcional na mÃ¡scara 0-9?\n  hasOptionalNumber(mask: string) {\n    return mask.match(/\\d\\?/g);\n  }\n\n  // Retorna a expressÃ£o regular correspondente ao comando passado\n  replaceMask(char: string) {\n    let regex = /./;\n    switch (char) {\n      case '0': regex = /[0]/;\n                break;\n      case '1': regex = /[0-1]/;\n                break;\n      case '2': regex = /[0-2]/;\n                break;\n      case '3': regex = /[0-3]/;\n                break;\n      case '4': regex = /[0-4]/;\n                break;\n      case '5': regex = /[0-5]/;\n                break;\n      case '6': regex = /[0-6]/;\n                break;\n      case '7': regex = /[0-7]/;\n                break;\n      case '8': regex = /[0-8]/;\n                break;\n      case '9': regex = /[0-9]/;\n                break;\n      case ' ': regex = /\\s/;\n                break;\n      case '@': regex = /[a-zA-Z]/;\n                break;\n      case 'w': regex = /[a-zA-Z0-9]/;\n                break;\n    }\n    return regex;\n  }\n\n  getRegexFromMask(mask: string) {\n    if (mask) {\n      let pattern;\n      if (this.formatModel) {\n        pattern = mask.replace(/\\\\/g, '\\\\\\\\');\n        pattern = pattern.replace(/\\+/g, '\\\\+');\n        pattern = pattern.replace(/\\./g, '\\\\.');\n        pattern = pattern.replace(/-/g, '-');\n        pattern = pattern.replace(/\\(/g, '\\\\(');\n        pattern = pattern.replace(/\\)/g, '\\\\)');\n        pattern = pattern.replace(/\\//g, '\\\\/');\n        pattern = pattern.replace(/\\s/g, '\\\\s');\n        pattern = pattern.replace(/:/g, '\\\\:');\n        pattern = pattern.replace(/\\@(?!\\s)/g, '\\\\w');\n        pattern = pattern.replace(/\\d/g, '\\\\w');\n      } else {\n        pattern = mask.replace(/\\\\/g, '');\n        pattern = pattern.replace(/\\+/g, '');\n        pattern = pattern.replace(/\\./g, '');\n        pattern = pattern.replace(/-/g, '');\n        pattern = pattern.replace(/\\(/g, '');\n        pattern = pattern.replace(/\\)/g, '');\n        pattern = pattern.replace(/\\//g, '');\n        pattern = pattern.replace(/\\s/g, '');\n        pattern = pattern.replace(/:/g, '');\n        pattern = pattern.replace(/\\@/g, '\\\\w');\n        pattern = pattern.replace(/\\d/g, '\\\\w');\n      }\n      return pattern;\n    } else {\n      return null;\n    }\n  }\n\n}\n","import { EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport { convertDateToISODate, convertDateToISOExtended, convertIsoToDate, convertToBoolean, formatYear,\n  getShortBrowserLanguage, isTypeof, setYearFrom0To100, validateDateRange } from '../../../utils/util';\nimport { dateFailed, requiredFailed } from './../validators';\nimport { ThfMask } from '../thf-input/thf-mask';\n\nconst thfDatepickerFormatDefault: string = 'dd/mm/yyyy';\n\n/**\n * @description\n *\n * O `thf-datepicker` Ã© um componente especÃ­fico para manipulaÃ§Ã£o de datas permitindo a digitaÃ§Ã£o e / ou seleÃ§Ã£o.\n *\n * O formato de exibiÃ§Ã£o da data, ou seja, o formato que Ã© apresentado ao usuÃ¡rio Ã© o dd/mm/yyyy,\n * mas podem ser definidos outros padrÃµes (veja mais na propriedade `t-format`).\n *\n * O idioma padrÃ£o do calendÃ¡rio serÃ¡ exibido de acordo com o navegador, caso tenha necessidade de alterar\n * use a propriedade `t-locale`.\n *\n * O datepicker aceita trÃªs formatos de data: o E8601DZw (yyyy-mm-ddThh:mm:ss+|-hh:mm), o E8601DAw (yyyy-mm-dd) e o\n * Date padrÃ£o do Javascript.\n *\n * > O formato de saÃ­da do *model* se ajusta conforme o formato de entrada, veja abaixo:\n *\n * - Formato de entrada e saÃ­da (E8601DZw) - `'2017-11-28T00:00:00-02:00'`;\n *\n * - Formato de entrada e saÃ­da (E8601DAw) - `'2017-11-28'`;\n *\n * - Formato de entrada (Date) - `new Date(2017, 10, 28)` e saÃ­da (E8601DAw) - `'2017-11-28'`;\n *\n * **Importante:**\n *\n * - Para utilizar datas com ano inferior a 100, verificar o comportamento do [`new Date`](https://www.w3schools.com/js/js_dates.asp)\n * e utilizar o mÃ©todo [`setFullYear`](https://www.w3schools.com/jsref/jsref_setfullyear.asp).\n * - Caso a data esteja invÃ¡lida, o `model` receberÃ¡ **'Data invÃ¡lida'**.\n * - Caso o `input` esteja passando um `[(ngModel)]`, mas nÃ£o tenha um `name`, entÃ£o irÃ¡ ocorrer um erro\n * do prÃ³prio Angular (`[ngModelOptions]=\"{standalone: true}\"`).\n *\n * Exemplo:\n *\n * ```\n * <thf-datepicker\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\"\n * </thf-datepicker>\n * ```\n *\n * > NÃ£o esqueÃ§a de importar o `FormsModule` em seu mÃ³dulo, tal como para utilizar o `input default`.\n */\nexport abstract class ThfDatepickerBaseComponent implements ControlValueAccessor, OnInit, Validator {\n\n  private _format?: string = thfDatepickerFormatDefault;\n  private _maxDate: Date;\n  private _minDate: Date;\n  private _placeholder?: string = '';\n\n  protected date: Date;\n  protected firstStart = true;\n  protected hour: string = 'T00:00:01-00:00';\n  protected isExtendedISO: boolean = false;\n  protected objMask: any;\n  protected onChangeModel: any = null;\n  protected onTouchedModel: any = null;\n  protected validatorChange: any;\n\n  /* Nome do componente datepicker. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   */\n  @Input('t-placeholder') set placeholder(placeholder: string) {\n    this._placeholder = isTypeof(placeholder, 'string') ? placeholder : '';\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /** Desabilita o campo. */\n  disabled?: boolean = false;\n  @Input('t-disabled') set setDisabled(disabled: string) {\n    this.disabled = disabled === '' ? true : convertToBoolean(disabled);\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  /** Torna o elemento somente leitura. */\n  readonly?: boolean = false;\n  @Input('t-readonly') set setReadonly(readonly: string) {\n    this.readonly = readonly === '' ? true : convertToBoolean(readonly);\n  }\n\n  /** Faz com que o campo seja obrigatÃ³rio. */\n  required?: boolean = false;\n  @Input('t-required') set setRequired(required: string) {\n    this.required = required === '' ? true : convertToBoolean(required);\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  /** Aplica foco ao elemento ao ser iniciado. */\n  focus?: boolean = false;\n  @Input('t-focus') set setFocus(focus: string) {\n    this.focus = focus === '' ? true : convertToBoolean(focus);\n  }\n\n  /** Habilita aÃ§Ã£o para limpar o campo. */\n  clean?: boolean = false;\n  @Input('t-clean') set setClean(clean: string) {\n    this.clean = clean === '' ? true : convertToBoolean(clean);\n  }\n\n  /**\n   * Mensagem apresentada quando a data for invÃ¡lida ou fora do perÃ­odo.\n   *\n   * > Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja obrigatÃ³rio.\n   */\n  @Input('t-error-pattern') errorPattern?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma data mÃ­nima para o `thf-datepicker`.\n   */\n  @Input('t-min-date') set minDate(value: string | Date) {\n    if (value instanceof Date) {\n      const year = value.getFullYear();\n\n      const date = new Date(year, value.getMonth(), value.getDate(), 0, 0, 0);\n      setYearFrom0To100(date, year);\n\n      this._minDate = date;\n    } else {\n      this._minDate = convertIsoToDate(value, true , false);\n    }\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  get minDate() {\n    return this._minDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma data mÃ¡xima para o `thf-datepicker`.\n   */\n  @Input('t-max-date') set maxDate(value: string | Date) {\n    if (value instanceof Date) {\n      const year = value.getFullYear();\n\n      const date = new Date(year, value.getMonth(), value.getDate(), 23, 59, 59);\n      setYearFrom0To100(date, year);\n\n      this._maxDate = date;\n    } else {\n      this._maxDate = convertIsoToDate(value, false , true);\n    }\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  get maxDate() {\n    return this._maxDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Formato de exibiÃ§Ã£o da data.\n   *\n   * Valores vÃ¡lidos:\n   *  - `dd/mm/yyyy`\n   *  - `mm/dd/yyyy`\n   *  - `yyyy/mm/dd`\n   *\n   * @default `dd/mm/yyyy`\n   */\n  @Input('t-format') set format(value: string) {\n    if (value) {\n      value = value.toLowerCase();\n      if (value.match(/dd/) && value.match(/mm/) && value.match(/yyyy/)) {\n        this._format = value;\n        this.objMask = this.buildMask();\n        this.refreshValue(this.date);\n        return;\n      }\n    }\n    this._format = thfDatepickerFormatDefault;\n    this.objMask = this.buildMask();\n  }\n\n  get format() {\n    return this._format;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do Datepicker.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   */\n  _locale?: string;\n  @Input('t-locale') set locale(value: string) {\n    if (value) {\n      this._locale = value.length >= 2 ? value : 'pt';\n    } else {\n      this._locale = getShortBrowserLanguage();\n    }\n  }\n  get locale() {\n    return this._locale || getShortBrowserLanguage();\n  }\n\n  /** Evento disparado ao sair do campo. */\n  @Output('t-blur') onblur?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do campo. */\n  @Output('t-change') onchange?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n  abstract writeValue(value: any): void;\n\n  abstract refreshValue(value: Date): void;\n\n  ngOnInit() {\n    // Classe de mÃ¡scara\n    this.objMask = this.buildMask();\n  }\n\n  // Converte um objeto string em Date\n  getDateFromString(dateString: string) {\n    const day = parseInt(dateString.substring(this.format.indexOf('d'), this.format.indexOf('d') + 2), 10);\n    const month = parseInt(dateString.substring(this.format.indexOf('m'), this.format.indexOf('m') + 2), 10) - 1;\n    const year = parseInt(dateString.substring(this.format.indexOf('y'), this.format.indexOf('y') + 4), 10);\n\n    const date = new Date(year, month, day);\n\n    setYearFrom0To100(date, year);\n\n    return (date.getFullYear() === year && date.getMonth() === month && date.getDate() === day) ? date : null;\n  }\n\n  // Formata a data.\n  formatToDate(value: Date) {\n    let dateFormatted = this.format;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + value.getDate()).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (value.getMonth() + 1)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', formatYear(value.getFullYear()));\n\n    return dateFormatted;\n  }\n\n  // MÃ©todo responsÃ¡vel por controlar o modelo.\n  controlModel(date: Date) {\n    this.date = date;\n    if (date && this.isExtendedISO) {\n      this.callOnChange(convertDateToISOExtended(this.date, this.hour));\n    } else if (date && !this.isExtendedISO) {\n      this.callOnChange(convertDateToISODate(this.date));\n    } else {\n      date === undefined ? this.callOnChange('') : this.callOnChange('Data invÃ¡lida');\n    }\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  callOnChange(value: any, retry: boolean = true) {\n    if (this.onChangeModel) {\n      this.onChangeModel(value);\n    } else if (retry) {\n      setTimeout(() => this.callOnChange(value, false));\n    }\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouchedModel = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  // Retorna um objeto do tipo ThfMask com a mascara configurada.\n  protected buildMask() {\n    let mask = this.format.toUpperCase();\n\n    mask = mask.replace(/DD/g, '99');\n    mask = mask.replace(/MM/g, '99');\n    mask = mask.replace(/YYYY/g, '9999');\n\n    return new ThfMask(mask, true);\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n    // Verifica se jÃ¡ possui algum error pattern padrÃ£o.\n    this.errorPattern = this.errorPattern !== 'Data invÃ¡lida' && this.errorPattern !== 'Data fora do perÃ­odo' ? this.errorPattern : '';\n\n    if (dateFailed(c.value)) {\n      this.errorPattern = this.errorPattern || 'Data invÃ¡lida';\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    if (requiredFailed(this.required, this.disabled, c.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if ((this.date && !validateDateRange(this.date, this._minDate, this._maxDate))) {\n      this.errorPattern = this.errorPattern || 'Data fora do perÃ­odo';\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, HostListener, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { formatYear, isMobile, setYearFrom0To100 } from '../../../utils/util';\nimport { ThfControlPositionService } from './../../../services/thf-control-position/thf-control-position.service';\n\nimport { ThfCalendarComponent } from './thf-calendar/thf-calendar.component';\nimport { ThfDatepickerBaseComponent } from './thf-datepicker-base.component';\n\nconst thfCalendarContentOffset = 8;\nconst thfCalendarPositionDefault = 'bottom-left';\n\n/**\n * @docsExtends ThfDatepickerBaseComponent\n *\n * @example\n *\n * <example name=\"thf-datepicker-basic\" title=\"Totvs Datepicker Basic\">\n *  <file name=\"sample-thf-datepicker-basic/sample-thf-datepicker-basic.component.html\"> </file>\n *  <file name=\"sample-thf-datepicker-basic/sample-thf-datepicker-basic.component.ts\"> </file>\n *  <file name=\"sample-thf-datepicker-basic/sample-thf-datepicker-basic.component.po.ts\"> </file>\n *  <file name=\"sample-thf-datepicker-basic/sample-thf-datepicker-basic.component.e2e-spec.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-datepicker-labs\" title=\"Totvs Datepicker Labs\">\n *  <file name=\"sample-thf-datepicker-labs/sample-thf-datepicker-labs.component.html\"> </file>\n *  <file name=\"sample-thf-datepicker-labs/sample-thf-datepicker-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-datepicker-airfare\" title=\"Totvs Datepicker - Airfare\">\n *  <file name=\"sample-thf-datepicker-airfare/sample-thf-datepicker-airfare.component.html\"> </file>\n *  <file name=\"sample-thf-datepicker-airfare/sample-thf-datepicker-airfare.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-datepicker-airfare-reactive-form\" title=\"Totvs Datepicker - Airfare Reactive Form\">\n *  <file name=\"sample-thf-datepicker-airfare-reactive-form/sample-thf-datepicker-airfare-reactive-form.component.html\"> </file>\n *  <file name=\"sample-thf-datepicker-airfare-reactive-form/sample-thf-datepicker-airfare-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-datepicker',\n  templateUrl: './thf-datepicker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfDatepickerComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfDatepickerComponent),\n      multi: true,\n    },\n    ThfControlPositionService\n  ]\n})\nexport class ThfDatepickerComponent extends ThfDatepickerBaseComponent implements AfterViewInit, OnDestroy {\n\n  date;\n  el: ElementRef;\n  hour: string;\n\n  private clickListener;\n  private readonly dateRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])$');\n  private readonly isoRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])' +\n  'T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:Z|-0[1-9]|-1\\\\d|-2[0-3]|' +\n  '-00:?(?:0[1-9]|[0-5]\\\\d)|\\\\+[01]\\\\d|\\\\+2[0-3])' +\n  '(?:|:?[0-5]\\\\d)$');\n  private timeoutChange: any;\n  private valueBeforeChange: string;\n\n  eventListenerFunction: () => void;\n  eventResizeListener: () => void;\n\n  @ViewChild('calendar', { static: true }) calendar: ThfCalendarComponent;\n  @ViewChild('dialogPicker', { read: ElementRef, static: true }) dialogPicker: ElementRef;\n  @ViewChild('iconDatepicker', { read: ElementRef, static: true }) iconDatepicker: ElementRef;\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\n\n  /** RÃ³tulo do campo. */\n  @Input('t-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('t-help') help?: string;\n\n  constructor(private controlPosition: ThfControlPositionService, private renderer: Renderer2, el: ElementRef) {\n    super();\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    this.setDialogPickerStyleDisplay('none');\n    // PÃµe o foco no Input, setado pelo t-focus\n    if (this.focus) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  togglePicker() {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    if (!this.calendar.visible) {\n      this.calendar.init();\n      this.setCalendarPosition();\n      this.initializeListeners();\n\n    } else {\n      this.inputEl.nativeElement.disabled = false;\n      this.closeCalendar();\n    }\n  }\n\n  dateSelected() {\n    this.inputEl.nativeElement.focus();\n    this.inputEl.nativeElement.value = this.formatToDate(this.date);\n    this.controlModel(this.date);\n    this.closeCalendar();\n  }\n\n  // Esconde Picker quando for clicado fora\n  wasClickedOnPicker(event: any): void {\n    if (!this.dialogPicker || !this.iconDatepicker) {\n      return;\n    }\n\n    if ((!this.dialogPicker.nativeElement.contains(event.target) || this.hasOverlayClass(event.target)) &&\n      !this.iconDatepicker.nativeElement.contains(event.target) && !this.hasAttrCalendar(event.target)) {\n        this.closeCalendar();\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup($event: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.objMask.keyup($event);\n    // Controla a atualizaÃ§Ã£o do model, verificando se a data Ã© valida\n    if (this.objMask.valueToModel || this.objMask.valueToModel === '') {\n      if (this.objMask.valueToModel.length >= 10) {\n        this.controlModel(this.getDateFromString(this.inputEl.nativeElement.value));\n        this.date = this.getDateFromString(this.inputEl.nativeElement.value);\n      } else {\n        this.date = undefined;\n        this.controlModel(this.date);\n      }\n    } else {\n      this.date = undefined;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown($event?: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.objMask.keydown($event);\n  }\n\n  hasInvalidClass() {\n    return (this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.inputEl.nativeElement.value !== '');\n  }\n\n  getErrorPattern() {\n    return (this.errorPattern !== '' && this.hasInvalidClass()) ? this.errorPattern : '';\n  }\n\n  clear() {\n    this.valueBeforeChange = this.formatToDate(this.date);\n    this.date = undefined;\n    this.controlModel(this.date);\n\n    this.controlChangeEmitter();\n  }\n\n  eventOnBlur($event: any) {\n\n    const date = this.inputEl.nativeElement.value;\n    const newDate = date ? this.getDateFromString(date) : undefined;\n    this.objMask.blur($event);\n    this.onblur.emit();\n\n    if (this.objMask.valueToModel) {\n      if (this.objMask.valueToModel.length >= 10) {\n        this.controlModel(newDate);\n        this.date = newDate;\n      } else {\n        this.date = undefined;\n        this.controlModel(this.date);\n      }\n\n    } else {\n      this.date = undefined;\n      this.callOnChange(this.date);\n    }\n\n    this.controlChangeEmitter();\n\n  }\n\n  eventOnChange($event) {\n    const elementValue = this.inputEl.nativeElement.value;\n    if (this.verifyMobile()) {\n      this.controlModel(elementValue);\n      this.callOnChange(elementValue);\n    }\n    this.onchange.emit(elementValue);\n  }\n\n  eventOnClick($event) {\n    if (this.verifyMobile()) {\n      $event.target.blur();\n\n      // abre o calendar quando clicar no input somente no mobile\n      setTimeout(() => this.togglePicker(), 0);\n    } else {\n      // Atualiza a posiÃ§Ã£o do cursor ao clicar\n      this.objMask.click($event);\n    }\n  }\n\n  formatToDate(value: Date) {\n    if (!value) {\n      return undefined;\n    }\n\n    let dateFormatted = this.format;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + value.getDate()).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (value.getMonth() + 1)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', formatYear(value.getFullYear()));\n\n    return dateFormatted;\n  }\n\n  refreshValue(value: Date) {\n    if (value) {\n      this.inputEl.nativeElement.value = this.formatToDate(value);\n    }\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    if (this.inputEl && value) {\n      if (value instanceof Date) {\n        const dateString = value.toString();\n        this.hour = 'T' + dateString.substring(16, 24) + dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\n        this.date = value;\n        this.inputEl.nativeElement.value = this.formatToDate(value);\n\n      } else if (this.isValidDateIso(value) || this.isValidExtendedIso(value)) {\n\n        if (this.isValidDateIso(value)) {\n          this.isExtendedISO = false;\n        } else {\n          this.hour = value.substring(10, 25);\n          this.isExtendedISO = true;\n        }\n        const day = parseInt(value.substring(8, 10), 10);\n        const month = parseInt(value.substring(5, 7), 10) - 1;\n        const year = parseInt(value.substring(0, 4), 10);\n\n        const dateTemp = new Date(year, month, day);\n\n        setYearFrom0To100(dateTemp, year);\n\n        this.date = dateTemp;\n        this.inputEl.nativeElement.value = this.formatToDate(dateTemp);\n      } else {\n        this.inputEl.nativeElement.value = '';\n        this.date = undefined;\n      }\n      this.controlModel(this.date);\n    } else if (this.inputEl) {\n      this.inputEl.nativeElement.value = '';\n      this.date = undefined;\n    }\n\n    this.valueBeforeChange = this.formatToDate(this.date);\n  }\n\n  isValidDateIso(value: string) {\n    return this.dateRegex.test(value);\n  }\n\n  isValidExtendedIso(value) {\n    return this.isoRegex.test(value);\n  }\n\n  hasOverlayClass(element: any) {\n    return element.classList.contains('thf-calendar-overlay');\n  }\n\n  /* istanbul ignore next */\n  verifyMobile() {\n    return isMobile();\n  }\n\n  private closeCalendar() {\n    this.calendar.close();\n    this.removeListeners();\n    this.setDialogPickerStyleDisplay('none');\n  }\n\n  private controlChangeEmitter() {\n    const dateModelFormatted = this.formatToDate(this.date);\n\n    if (dateModelFormatted !== this.valueBeforeChange) {\n      this.valueBeforeChange = dateModelFormatted;\n\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.onchange.emit(dateModelFormatted);\n      }, 200);\n    }\n  }\n\n  private hasAttrCalendar(element: any) {\n    const attrCalendar = 'attr-calendar';\n\n    return (element && element.hasAttribute(attrCalendar)) || (element.parentElement && element.parentElement.hasAttribute(attrCalendar));\n  }\n\n  private initializeListeners() {\n    this.clickListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnPicker(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      this.closeCalendar();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.controlPosition.adjustPosition(thfCalendarPositionDefault);\n  }\n\n  private removeListeners() {\n    if (this.clickListener) {\n      this.clickListener();\n    }\n\n    if (this.eventResizeListener) {\n      this.eventResizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setDialogPickerStyleDisplay(value) {\n    this.dialogPicker.nativeElement.style.display = value;\n  }\n\n  private setCalendarPosition() {\n    this.setDialogPickerStyleDisplay('block');\n\n    this.controlPosition.setElements(\n      this.dialogPicker.nativeElement,\n      thfCalendarContentOffset,\n      this.inputEl,\n      ['top-left', 'bottom-left'],\n      false,\n      true\n    );\n\n    this.controlPosition.adjustPosition(thfCalendarPositionDefault);\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, ValidationErrors, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, thfLocaleDefault } from './../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { ThfDatepickerRange } from './interfaces/thf-datepicker-range.interface';\nimport { ThfDatepickerRangeLiterals } from './interfaces/thf-datepicker-range-literals.interface';\nimport { ThfDateService } from './../../../services/thf-date/thf-date.service';\n\nexport const thfDatepickerRangeLiteralsDefault = {\n  en: <ThfDatepickerRangeLiterals> {\n    invalidFormat: 'Date in invalid format',\n    startDateGreaterThanEndDate: 'Start date greater than end date',\n  },\n  es: <ThfDatepickerRangeLiterals> {\n    invalidFormat: 'Fecha en formato no vÃ¡lido',\n    startDateGreaterThanEndDate: 'Fecha de inicio mayor que fecha final',\n  },\n  pt: <ThfDatepickerRangeLiterals> {\n    invalidFormat: 'Data no formato invÃ¡lido',\n    startDateGreaterThanEndDate: 'Data inicial maior que data final',\n  }\n};\n\n/**\n * @description\n *\n * O `thf-datepicker-range` Ã© um componente para seleÃ§Ã£o de um perÃ­odo entre duas datas, onde Ã© possÃ­vel informar apenas\n * a data inicial ou a data final.\n *\n * O componente `[(ngModel)]` do `thf-datepicker-range` trabalha com um objeto que implementa a interface\n * `ThfDatepickerRange`, contendo as seguintes propriedades:\n * ```\n * { \"start\": '2017-11-28', \"end\": '2017-11-30' }\n * ```\n *\n * <a id=\"accepted-formats\"></a>\n * Este componente pode receber os seguintes formatos de data:\n *\n * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n * ```\n * '2017-11-28T00:00:00-02:00';\n * ```\n *\n * - **Data (E8601DAw.): yyyy-mm-dd**\n * ```\n * '2017-11-28';\n * ```\n *\n * - **JavaScript Date Object:**\n * ```\n * new Date(2017, 10, 28);\n * ```\n *\n * > O componente respeitarÃ¡ o formato passado para o *model* via codificaÃ§Ã£o. PorÃ©m, caso seja feita alteraÃ§Ã£o em algum\n * dos valores de data em tela, o componente atribuirÃ¡ o formato **Data (E8601DAw.): yyyy-mm-dd** ao model.\n *\n * Importante:\n *\n * - Quando preenchidas a data inicial e final, a data inicial deve ser sempre menor ou igual a data final;\n * - Ao passar uma data invÃ¡lida via codificaÃ§Ã£o, o valor serÃ¡ mantido no *model* e o `input` da tela aparecerÃ¡ vazio;\n * - Permite trabalhar com as duas datas separadamente atravÃ©s das propriedades `t-start-date` e `t-end-date` no lugar do\n * `[(ngModel)]`, no entanto sem a validaÃ§Ã£o do formulÃ¡rio;\n * - Para a validaÃ§Ã£o do formulÃ¡rio, utilize o `[(ngModel)]`.\n */\nexport abstract class ThfDatepickerRangeBaseComponent implements ControlValueAccessor, Validator {\n\n  errorMessage: string = '';\n\n  private _clean?: boolean = false;\n  private _disabled?;\n  private _endDate?;\n  private _literals?: any;\n  private _readonly: boolean = false;\n  private _required?: boolean = false;\n  private _startDate?;\n  private onChangeModel: any;\n  private validatorChange: any;\n\n  protected dateRange: ThfDatepickerRange = { start: '', end: '' };\n  protected format: any = 'dd/mm/yyyy';\n  protected isDateRangeInputFormatValid: boolean = true;\n  protected isStartDateRangeInputValid: boolean = true;\n  protected onTouchedModel: any;\n\n  get isDateRangeInputValid() {\n    return this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita aÃ§Ã£o para limpar o campo.\n   *\n   * @default `false`\n   */\n  @Input('t-clean') set clean(clean: boolean) {\n    this._clean = convertToBoolean(clean);\n  }\n\n  get clean() {\n    return this._clean;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o campo.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data final.\n   */\n  @Input('t-end-date') set endDate(date: string | Date) {\n    this._endDate = this.convertPatternDateFormat(date);\n    this.dateRange.end = this.endDate;\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  get endDate() {\n    return this._endDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto de apoio do campo.\n   */\n  @Input('t-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * RÃ³tulo do campo.\n   */\n  @Input('t-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `thf-datepicker-range`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: ThfDatepickerRangeLiterals = {\n   *    invalidFormat: 'Date in inconsistent format',\n   *    startDateGreaterThanEndDate: 'End date less than start date'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: ThfDatepickerRangeLiterals = {\n   *    invalidFormat: 'Date in inconsistent format'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <thf-datepicker-range\n   *   [t-literals]=\"customLiterals\">\n   * </thf-datepicker-range>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('t-literals') set literals(value: ThfDatepickerRangeLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfDatepickerRangeLiteralsDefault[thfLocaleDefault],\n        ...thfDatepickerRangeLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = thfDatepickerRangeLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || thfDatepickerRangeLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('t-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('t-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data inicial.\n   */\n  @Input('t-start-date') set startDate(date: string | Date) {\n    this._startDate = this.convertPatternDateFormat(date);\n    this.dateRange.start = this.startDate;\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  get startDate() {\n    return this._startDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado ao alterar valor do campo.\n   */\n  @Output('t-change') onChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(protected thfDateService: ThfDateService) { }\n\n  protected abstract resetDateRangeInputValidation(): void;\n\n  protected abstract updateScreenByModel(dateRange: ThfDatepickerRange);\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouchedModel = func;\n  }\n\n  registerOnValidatorChange?(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n\n    const value: ThfDatepickerRange = control.value || {};\n    const startDate = value.start ? this.convertPatternDateFormat(value.start) : '';\n    const endDate = value.end ? this.convertPatternDateFormat(value.end) : '';\n\n    if (this.requiredDateRangeFailed(startDate, endDate)) {\n      this.errorMessage = '';\n\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if (this.dateRangeObjectFailed(control.value) || this.dateRangeFormatFailed(startDate, endDate)) {\n      this.errorMessage = this.literals.invalidFormat;\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    if (this.dateRangeFailed(startDate, endDate)) {\n      this.errorMessage = this.literals.startDateGreaterThanEndDate;\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n  writeValue(dateRange: ThfDatepickerRange): void {\n    this.resetDateRangeInputValidation();\n\n    if (!dateRange || this.dateRangeObjectFailed(dateRange)) {\n      this.dateRange = { start: '', end: '' };\n    }\n\n    if (!dateRange) {\n      this.validateModel(this.dateRange);\n    }\n\n    if (this.dateRangeObjectFailed(dateRange)) {\n      this.updateModel(dateRange);\n    }\n\n    if (this.isDateRangeObject(dateRange)) {\n      this.dateRange = {\n        start: this.convertPatternDateFormat(dateRange.start),\n        end: this.convertPatternDateFormat(dateRange.end)\n      };\n\n      this.updateModel(this.dateRange);\n    }\n\n    this.updateScreenByModel(this.dateRange);\n  }\n\n  protected dateFormatFailed(value: string): boolean {\n    return value && !this.thfDateService.isValidIso(value);\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  protected updateModel(value: any) {\n    const model = typeof(value) === 'object' ? { ...value } : value;\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangeModel) {\n      this.onChangeModel(model);\n    }\n\n  }\n\n  protected validateModel(value: any) {\n    const model = { ...value };\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private convertPatternDateFormat(value: any) {\n\n    if (value instanceof Date) {\n      return this.thfDateService.convertDateToISO(value);\n    }\n\n    return value;\n  }\n\n  private dateRangeFailed(startDate: string, endDate: string): boolean {\n    return !this.thfDateService.isDateRangeValid(endDate, startDate) || !this.isStartDateRangeInputValid;\n  }\n\n  private dateRangeFormatFailed(startDate: string, endDate: string): boolean {\n    return this.dateFormatFailed(endDate) || this.dateFormatFailed(startDate) || !this.isDateRangeInputFormatValid;\n  }\n\n  private dateRangeObjectFailed(value): boolean {\n    return value && !this.isDateRangeObject(value);\n  }\n\n  private isDateRangeObject(value): boolean {\n    return value && value.hasOwnProperty('start') && value.hasOwnProperty('end');\n  }\n\n  private requiredDateRangeFailed(startDate: string, endDate: string): boolean {\n    return this.isDateRangeInputValid &&\n      requiredFailed(this.required, this.disabled, startDate) &&\n      requiredFailed(this.required, this.disabled, endDate);\n  }\n\n}\n","import { Component, ElementRef, forwardRef, OnInit, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThfDatepickerRange } from './interfaces/thf-datepicker-range.interface';\nimport { ThfDatepickerRangeBaseComponent } from './thf-datepicker-range-base.component';\nimport { ThfDateService } from './../../../services/thf-date/thf-date.service';\nimport { ThfMask } from '../thf-input/thf-mask';\n\nconst arrowLeftKey = 37;\nconst arrowRightKey = 39;\nconst backspaceKey = 8;\nconst thfDatepickerRangeDateLengthDefault = 10;\n\n/**\n * @docsExtends ThfDatepickerRangeBaseComponent\n *\n * @example\n *\n * <example name=\"thf-datepicker-range-basic\" title=\"Totvs Datepicker Range Basic\">\n *  <file name=\"sample-thf-datepicker-range-basic/sample-thf-datepicker-range-basic.component.html\"> </file>\n *  <file name=\"sample-thf-datepicker-range-basic/sample-thf-datepicker-range-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-datepicker-range-labs\" title=\"Totvs Datepicker Range Labs\">\n *  <file name=\"sample-thf-datepicker-range-labs/sample-thf-datepicker-range-labs.component.html\"> </file>\n *  <file name=\"sample-thf-datepicker-range-labs/sample-thf-datepicker-range-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-datepicker-range-vacations\" title=\"Totvs Datepicker Range - Vacations Suggestion\">\n *  <file name=\"sample-thf-datepicker-range-vacations/sample-thf-datepicker-range-vacations.component.html\"> </file>\n *  <file name=\"sample-thf-datepicker-range-vacations/sample-thf-datepicker-range-vacations.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-datepicker-range-vacations-reactive-form\" title=\"Totvs Datepicker Range - Vacations Reactive Form\">\n *  <file name=\"sample-thf-datepicker-range-vacations-reactive-form/sample-thf-datepicker-range-vacations-reactive-form.component.html\">\n *  </file>\n *  <file name=\"sample-thf-datepicker-range-vacations-reactive-form/sample-thf-datepicker-range-vacations-reactive-form.component.ts\">\n *  </file>\n * </example>\n */\n@Component({\n  selector: 'thf-datepicker-range',\n  templateUrl: './thf-datepicker-range.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThfDatepickerRangeComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => ThfDatepickerRangeComponent),\n    multi: true,\n  }]\n})\nexport class ThfDatepickerRangeComponent extends ThfDatepickerRangeBaseComponent implements OnInit {\n\n  private thfDatepickerRangeElement: ElementRef<any>;\n  private thfMaskObject: ThfMask;\n\n  @ViewChild('dateRangeField', { read: ElementRef, static: true }) dateRangeField: ElementRef;\n  @ViewChild('endDateInput', { read: ElementRef, static: true }) endDateInput: ElementRef;\n  @ViewChild('startDateInput', { read: ElementRef, static: true }) startDateInput: ElementRef;\n\n  get enableCleaner(): boolean {\n    return (this.startDateInputValue || this.endDateInputValue) && !this.disabled && !this.readonly;\n  }\n\n  get endDateInputName(): string {\n    return 'end-date';\n  }\n\n  get endDateInputValue(): string {\n    return this.endDateInput.nativeElement.value;\n  }\n\n  get getErrorMessage(): string {\n    return (this.errorMessage !== '' && this.hasInvalidClass()) ? this.errorMessage : '';\n  }\n\n  get isDateRangeInputUncompleted(): boolean {\n    return this.endDateInputValue.length < thfDatepickerRangeDateLengthDefault\n      && this.startDateInputValue.length < thfDatepickerRangeDateLengthDefault;\n  }\n\n  get isDirtyDateRangeInput(): boolean {\n    return this.endDateInputValue.length > 0 || this.startDateInputValue.length > 0;\n  }\n\n  get startDateInputName(): string {\n    return 'start-date';\n  }\n\n  get startDateInputValue(): string {\n    return this.startDateInput.nativeElement.value;\n  }\n\n  static getKeyCode(event: KeyboardEvent) {\n    return event.keyCode || event.which;\n  }\n\n  static getTargetElement(event: any) {\n    return event.target || event.srcElement;\n  }\n\n  static isValidKey(keyCode: number): boolean {\n    const isNumericKey = keyCode >= 48 && keyCode <= 57;\n    const isNumericNumpadKey = keyCode >= 96 && keyCode <= 105;\n\n    return isNumericKey || isNumericNumpadKey;\n  }\n\n  constructor(thfDateService: ThfDateService, thfDatepickerRangeElement: ElementRef) {\n    super(thfDateService);\n    this.thfDatepickerRangeElement = thfDatepickerRangeElement;\n  }\n\n  ngOnInit() {\n    // Classe de mÃ¡scara\n    this.thfMaskObject = this.buildMask();\n  }\n\n  clear() {\n    this.resetDateRangeInputValidation();\n    this.dateRange = { start: '', end: '' };\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  onBlur() {\n    this.removeFocusFromDatePickerRangeField();\n  }\n\n  onFocus() {\n    this.applyFocusOnDatePickerRangeField();\n  }\n\n  onKeydown(event?: any) {\n\n    if (this.readonly) {\n      return;\n    }\n\n    if (this.isSetFocusOnBackspace(event)) {\n      event.preventDefault();\n      this.setFocusOnBackspace();\n    } else {\n      this.thfMaskObject.keydown(event);\n    }\n\n  }\n\n  onKeyup(event: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    const isStartDateTargetEvent = event.target.name === this.startDateInputName;\n\n    this.setFocus(event);\n    this.thfMaskObject.keyup(event);\n    this.updateModelByScreen(isStartDateTargetEvent);\n  }\n\n  resetDateRangeInputValidation() {\n    this.isStartDateRangeInputValid = true;\n    this.isDateRangeInputFormatValid = true;\n  }\n\n  updateScreenByModel(model: ThfDatepickerRange) {\n    const dateRange = { start: model.start as string, end: model.end as string };\n    const isStartDateValid = this.thfDateService.isDateRangeValid(dateRange.end, dateRange.start);\n    const isDateValid = date => !this.dateFormatFailed(date) && isStartDateValid;\n\n    const endDateFormated = isDateValid(dateRange.end) ? this.formatModelToScreen(dateRange.end) : '';\n    const startDateFormated = isDateValid(dateRange.start) ? this.formatModelToScreen(dateRange.start) : '';\n\n    this.endDateInput.nativeElement.value = endDateFormated;\n    this.startDateInput.nativeElement.value = startDateFormated;\n  }\n\n  private applyFocusOnDatePickerRangeField() {\n    this.dateRangeField.nativeElement.classList.add('thf-datepicker-range-field-focused');\n  }\n\n  // Retorna um objeto do tipo ThfMask com a mascara configurada.\n  private buildMask(): ThfMask {\n    let mask = this.format.toUpperCase();\n\n    mask = mask.replace(/DD/g, '99');\n    mask = mask.replace(/MM/g, '99');\n    mask = mask.replace(/YYYY/g, '9999');\n\n    return new ThfMask(mask, true);\n  }\n\n  private formatDate(format: string, day: string = '', month: string = '', year: string = ''): string {\n    let dateFormatted = format;\n\n    day = day && day.includes('T') ? day.slice(0, 2) : day;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + day).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (month)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', String(year));\n\n    return dateFormatted;\n  }\n\n  private formatScreenToModel(value: string = ''): string {\n    const [day, month, year] = value.split('/');\n\n    return value ? this.formatDate('yyyy-mm-dd', day, month, year) : '';\n  }\n\n  private formatModelToScreen(value: string = ''): string {\n    const [year, month, day] = value.split('-');\n\n    return value ? this.formatDate(this.format, day, month, year) : '';\n  }\n\n  private getDateRangeFormatValidation(startDate: string, endDate: string, isStartDateTargetEvent: boolean):\n    { isValid: boolean, dateRangeModel: ThfDatepickerRange } {\n\n    this.setDateRangeInputValidation(startDate, endDate);\n\n    return {\n      isValid: this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid,\n      dateRangeModel: this.getValidatedModel(startDate, endDate, isStartDateTargetEvent)\n    };\n\n  }\n\n  private getValidatedModel(startDate: string, endDate: string, isStartDateTargetEvent: boolean): ThfDatepickerRange {\n    const dateRangeModel = { start: '', end: '' };\n\n    dateRangeModel.end = (isStartDateTargetEvent || this.isStartDateRangeInputValid)\n      && !this.dateFormatFailed(endDate) ? endDate : '' ;\n\n    dateRangeModel.start = (!isStartDateTargetEvent || this.isStartDateRangeInputValid)\n      && !this.dateFormatFailed(startDate) ? startDate : '';\n\n    return dateRangeModel;\n  }\n\n  private hasInvalidClass(): boolean {\n    return (this.thfDatepickerRangeElement.nativeElement.classList.contains('ng-invalid') &&\n      this.thfDatepickerRangeElement.nativeElement.classList.contains('ng-dirty'));\n  }\n\n  private isEqualBeforeValue(startDate: string, endDate: string): boolean {\n    return this.isDateRangeInputFormatValid && endDate === this.dateRange.end && startDate === this.dateRange.start;\n  }\n\n  private isSetFocusOnBackspace(event: any) {\n    return event.target.name === this.endDateInputName &&\n      this.endDateInput.nativeElement.selectionStart === 0 && this.endDateInput.nativeElement.selectionEnd === 0 &&\n      event.keyCode === backspaceKey;\n  }\n\n  private removeFocusFromDatePickerRangeField() {\n    this.dateRangeField.nativeElement.classList.remove('thf-datepicker-range-field-focused');\n  }\n\n  private setDateRangeInputValidation(startDate: string, endDate: string) {\n    this.isStartDateRangeInputValid = this.thfDateService.isDateRangeValid(endDate, startDate);\n\n    this.isDateRangeInputFormatValid = !this.dateFormatFailed(startDate) && !this.dateFormatFailed(endDate);\n  }\n\n  private setFocus(event: any) {\n    const inputElement = ThfDatepickerRangeComponent.getTargetElement(event);\n    const keyCode = ThfDatepickerRangeComponent.getKeyCode(event);\n    const inputName = inputElement['name'];\n\n    this.setFocusOnArrowLeft(keyCode, inputName);\n    this.setFocusOnArrowRight(keyCode, inputName, inputElement);\n    this.setFocusOnStartDateCompleted(keyCode, inputName);\n  }\n\n  private setFocusAndPosition(position: number, inputElement: ElementRef, selectionRange: number) {\n    this.focusOnElement(inputElement);\n\n    setTimeout(() => {\n      inputElement.nativeElement.setSelectionRange(selectionRange, selectionRange);\n      this.thfMaskObject.initialPosition = position;\n      this.thfMaskObject.finalPosition = position;\n    });\n  }\n\n  private focusOnElement(inputElement: ElementRef) {\n    inputElement.nativeElement.focus();\n  }\n\n  private setFocusOnArrowLeft(keyCode: number, inputName: string) {\n    const isCursorAtStartOfInput = this.endDateInput.nativeElement.selectionStart === 0;\n\n    if (inputName === this.endDateInputName && isCursorAtStartOfInput && keyCode === arrowLeftKey) {\n      const inputLength = this.startDateInput.nativeElement.value.length;\n      this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);\n    }\n  }\n\n  private setFocusOnArrowRight(keyCode: number, inputName: string, inputElement: any) {\n    const isCursorAtEndOfInput = this.startDateInput.nativeElement.selectionStart === inputElement.value.length;\n\n    if (inputName === this.startDateInputName && isCursorAtEndOfInput && keyCode === arrowRightKey) {\n      this.setFocusAndPosition(0, this.endDateInput, 0);\n    }\n  }\n\n  private setFocusOnBackspace() {\n    const inputLength = this.startDateInput.nativeElement.value.length;\n\n    this.startDateInput.nativeElement.value = this.startDateInputValue.slice(0, -1);\n    this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);\n  }\n\n  private setFocusOnStartDateCompleted(keyCode: number, inputName: string) {\n    const isLastKeyPressed = this.startDateInput.nativeElement.selectionStart === thfDatepickerRangeDateLengthDefault;\n    const isNewDateCompleted = this.startDateInputValue.length === thfDatepickerRangeDateLengthDefault && isLastKeyPressed;\n    const isValidKey = ThfDatepickerRangeComponent.isValidKey(keyCode);\n\n    if (inputName === this.startDateInputName && isNewDateCompleted && isValidKey) {\n      this.setFocusAndPosition(0, this.endDateInput, 0);\n    }\n  }\n\n  private updateModelByScreen(isStartDateTargetEvent: boolean) {\n    const endDateFormatted = this.formatScreenToModel(this.endDateInputValue);\n    const startDateFormatted = this.formatScreenToModel(this.startDateInputValue);\n\n    if (this.isDateRangeInputUncompleted && this.isDirtyDateRangeInput) {\n      this.updateModel(this.dateRange);\n      return;\n    }\n\n    if (this.isEqualBeforeValue(startDateFormatted, endDateFormatted)) {\n      this.resetDateRangeInputValidation();\n      this.validateModel(this.dateRange);\n      return;\n    }\n\n    const dateFormatValidation = this.getDateRangeFormatValidation(startDateFormatted, endDateFormatted, isStartDateTargetEvent);\n\n    if (dateFormatValidation.isValid) {\n      this.dateRange = { start: startDateFormatted, end: endDateFormatted };\n      this.updateModel(this.dateRange);\n      this.onChange.emit({ ...this.dateRange });\n    }\n\n    if (!dateFormatValidation.isValid) {\n      this.dateRange = { ...dateFormatValidation.dateRangeModel };\n      this.updateModel(dateFormatValidation.dateRangeModel);\n    }\n\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { requiredFailed, maxlengthFailed, minlengthFailed, patternFailed } from './../validators';\nimport { ThfMask } from './thf-mask';\n\n/**\n * @description\n *\n * Este Ã© um componente baseado em input, com vÃ¡rias propriedades do input nativo e outras\n * propriedades extras como: mÃ¡scara, pattern, mensagem de erro e etc.\n * VocÃª deve informar a variÃ¡vel que contÃ©m o valor como [(ngModel)]=\"variavel\", para que o\n * input receba o valor da variÃ¡vel e para que ela receba as alteraÃ§Ãµes do valor (two-way-databinding).\n * A propriedade name Ã© obrigatÃ³ria para que o formulÃ¡rio e o model funcionem corretamente.\n *\n * Importante:\n *\n * - Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerÃ¡ um erro de angular.\n * EntÃ£o vocÃª precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\n * Exemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\"\n */\nexport abstract class ThfInputBaseComponent implements ControlValueAccessor, Validator {\n\n  private _maxlength?: number;\n  private _minlength?: number;\n  private _placeholder?: string = '';\n\n  protected passedWriteValue: boolean = false;\n  protected validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o Ã­cone que serÃ¡ exibido no inÃ­cio do campo.\n   *\n   * > Veja a disponibilidade de Ã­cones em [biblioteca de Ã­cones](guides/icons).\n   */\n  @Input('t-icon') icon?: string;\n\n  /** RÃ³tulo do campo. */\n  @Input('t-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('t-help') help?: string;\n\n  /** Nome e identificador do campo. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   *\n   * @default ''\n   */\n  @Input('t-placeholder') set placeholder(value: string) {\n    this._placeholder = value || '';\n  }\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @description\n   *\n   * Se verdadeiro, desabilita o campo.\n   *\n   * @default `false`\n   */\n  disabled?: boolean = false;\n  @Input('t-disabled') set setDisabled(disabled: string) {\n    this.disabled = disabled === '' ? true : convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n\n  /** Indica que o campo serÃ¡ somente leitura. */\n  readonly?: boolean = false;\n  @Input('t-readonly') set setReadonly(readonly: string) {\n    this.readonly = readonly === '' ? true : convertToBoolean(readonly);\n  }\n\n  /**\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * > Esta propriedade Ã© desconsiderada quando o input estÃ¡ desabilitado `(t-disabled)`.\n   *\n   * @default `false`\n   */\n  required?: boolean = false;\n  @Input('t-required') set setRequired(required: string) {\n    this.required = required === '' ? true : convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  /** Se verdadeiro, o campo iniciarÃ¡ com foco. */\n  focus?: boolean = false;\n  @Input('t-focus') set setFocus(focus: string) {\n    this.focus = focus === '' ? true : convertToBoolean(focus);\n  }\n\n  /** Se verdadeiro, o campo receberÃ¡ um botÃ£o para ser limpo. */\n  clean?: boolean = false;\n  @Input('t-clean') set setClean(clean: string) {\n    this.clean = clean === '' ? true : convertToBoolean(clean);\n  }\n\n  /**\n   * @description\n   *\n   * ExpressÃ£o regular para validar o campo.\n   * Quando o campo possuir uma mÃ¡scara `(t-mask)` serÃ¡ automaticamente validado por ela, porÃ©m\n   * Ã© possÃ­vel definir um t-pattern para substituir a validaÃ§Ã£o da mÃ¡scara.\n   */\n  pattern?: string;\n  @Input('t-pattern') set setPattern(pattern: string) {\n    this.pattern = pattern;\n\n    this.validateModel();\n  }\n\n  /**\n   * @description\n   *\n   * Mensagem que serÃ¡ apresentada quando o `pattern` ou a mÃ¡scara nÃ£o for satisfeita.\n   *\n   * > Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\n   */\n  @Input('t-error-pattern') errorPattern?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ¡xima de caracteres que o campo aceita.\n   */\n  @Input('t-maxlength') set maxlength(value: number) {\n    if (!isNaN(parseInt(<any> value, 10))) {\n      this._maxlength = parseInt(<any> value, 10);\n\n      this.validateModel();\n    } else if (!value) {\n      this._maxlength = undefined;\n\n      this.validateModel();\n    }\n  }\n\n  get maxlength() {\n    return this._maxlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ­nima de caracteres que o campo aceita.\n   */\n  @Input('t-minlength') set minlength(value: number) {\n    if (!isNaN(parseInt(<any> value, 10))) {\n      this._minlength = parseInt(<any> value, 10);\n\n      this.validateModel();\n    } else if (!value) {\n      this._minlength = undefined;\n\n      this.validateModel();\n    }\n  }\n\n  get minlength() {\n    return this._minlength;\n  }\n\n  /**\n   * @description\n   *\n   * Indica uma mÃ¡scara para o campo. Exemplos: (+99) (99) 99999?-9999, 99999-999, 999.999.999-99.\n   * A mÃ¡scara gera uma validaÃ§Ã£o automÃ¡tica do campo, podendo esta ser substituÃ­da por um REGEX especÃ­fico\n   * atravÃ©s da propriedade t-pattern.\n   * O campo serÃ¡ sinalizado e o formulÃ¡rio ficarÃ¡ invÃ¡lido quando o valor informado estiver fora do padrÃ£o definido,\n   * mesmo quando desabilitado.\n   */\n  mask?: string = '';\n  @Input('t-mask') set setMask(mask: string) {\n    this.mask = mask;\n\n    // Atualiza MÃ¡scara do Campo\n    this.objMask = new ThfMask(this.mask, this.maskFormatModel);\n\n    this.validateModel();\n  }\n\n  /**\n   * @description\n   *\n   * Indica se o `model` receberÃ¡ o valor formatado pela mÃ¡scara ou apenas o valor puro (sem formataÃ§Ã£o).\n   *\n   * @default `false`\n   */\n  maskFormatModel?: boolean = false;\n  @Input('t-mask-format-model') set setMaskFormatModel(maskFormatModel: string) {\n    this.maskFormatModel = maskFormatModel === '' ? true : convertToBoolean(maskFormatModel);\n\n    if (this.objMask instanceof ThfMask) {\n      this.objMask.formatModel = this.maskFormatModel;\n\n      this.validateModel();\n    }\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /** Evento disparado ao sair do campo. */\n  @Output('t-blur') blur?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao entrar do campo. */\n  @Output('t-enter') enter?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao alterar valor e deixar o campo. */\n  @Output('t-change') change?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao alterar valor do model. */\n  @Output('t-change-model') changeModel?: EventEmitter<any> = new EventEmitter();\n\n  type: string;\n\n  onChangePropagate: any = null;\n  onTouched: any = null;\n  objMask: any;\n  modelLastUpdate: any;\n\n  callOnChange(value: any) {\n    this.updateModel(value);\n\n    this.controlChangeModelEmitter(value);\n  }\n\n  callUpdateModelWithTimeout(value) {\n    setTimeout(() => this.updateModel(value));\n  }\n\n  controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  updateModel(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this.required, this.disabled, this.getScreenValue())) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if (maxlengthFailed(this.maxlength, this.getScreenValue())) {\n      return { maxlength: {\n        valid: false,\n      }};\n    }\n\n    if (minlengthFailed(this.minlength, this.getScreenValue())) {\n      return { minlength: {\n        valid: false,\n      }};\n    }\n\n    if (patternFailed(this.pattern, c.value)) {\n      this.validatePatternOnWriteValue(c.value);\n      return { pattern: {\n        valid: false,\n      }};\n    }\n\n    return this.extraValidation(c);\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    this.writeValueModel(value);\n  }\n\n  protected validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n  // MÃ©todo que receberÃ¡ o valor do model\n  abstract writeValueModel(value: any): void;\n\n  // ValidaÃ§Ãµes do campo\n  abstract extraValidation(c: AbstractControl): { [key: string]: any; };\n\n  // Deve retornar o valor do campo\n  abstract getScreenValue(): string;\n\n  // utilizado para validar o pattern na inicializacao, fazendo dessa forma o campo fica sujo (dirty).\n  private validatePatternOnWriteValue(value: string) {\n    if (value && this.passedWriteValue) {\n\n      setTimeout(() => {\n        this.updateModel(value);\n      });\n\n      this.passedWriteValue = false;\n    }\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { convertToInt } from '../../../utils/util';\nimport { ThfInputBaseComponent } from '../thf-input/thf-input-base.component';\n\nconst THF_DECIMAL_DEFAULT_DECIMALS_LENGTH = 2;\nconst THF_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH = 13;\n\n/**\n *\n * @docsExtends ThfInputBaseComponent\n *\n * @description\n *\n * thf-decimal Ã© um input especÃ­fico para receber apenas nÃºmeros decimais.\n * Quando utilizado, o componente terÃ¡ comportamento de um campo de 'text' com algumas caracterÃ­sticas:\n *\n * - Aceita apenas nÃºmeros;\n * - Utiliza ',' como separador de decimal;\n * - Utiliza '.' para separaÃ§Ã£o de milhar;\n * - Ã possÃ­vel configurar a quantidade de casas decimais e a quantidade de digitos do campo.\n *\n * @example\n *\n * <example name=\"thf-decimal-basic\" title=\"Totvs Decimal Basic\">\n *  <file name=\"sample-thf-decimal-basic/sample-thf-decimal-basic.component.html\"> </file>\n *  <file name=\"sample-thf-decimal-basic/sample-thf-decimal-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-decimal-labs\" title=\"Totvs Decimal Labs\">\n *  <file name=\"sample-thf-decimal-labs/sample-thf-decimal-labs.component.html\"> </file>\n *  <file name=\"sample-thf-decimal-labs/sample-thf-decimal-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-decimal-hourly-wage\" title=\"Totvs Decimal - Hourly Wage\">\n *  <file name=\"sample-thf-decimal-hourly-wage/sample-thf-decimal-hourly-wage.component.html\"> </file>\n *  <file name=\"sample-thf-decimal-hourly-wage/sample-thf-decimal-hourly-wage.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-decimal-hourly-wage-reactive-form\" title=\"Totvs Decimal - Hourly Wage Reactive Form\">\n *  <file name=\"sample-thf-decimal-hourly-wage-reactive-form/sample-thf-decimal-hourly-wage-reactive-form.component.html\"> </file>\n *  <file name=\"sample-thf-decimal-hourly-wage-reactive-form/sample-thf-decimal-hourly-wage-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-decimal',\n  templateUrl: './thf-decimal.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThfDecimalComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => ThfDecimalComponent),\n    multi: true,\n  }\n  ]\n})\nexport class ThfDecimalComponent extends ThfInputBaseComponent implements AfterViewInit {\n\n  private _decimalsLength?: number = THF_DECIMAL_DEFAULT_DECIMALS_LENGTH;\n  private _thousandMaxlength?: number = THF_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH;\n\n  private decimalSeparator: string = ',';\n  private fireChange: boolean = false;\n  private isKeyboardAndroid: boolean = false;\n  private minusSign: string = '-';\n  private oldDotsLength = null;\n  private thousandSeparator: string = '.';\n  private valueBeforeChange: any;\n\n  private regex = {\n    thousand: new RegExp('\\\\' + '.' , 'g'),\n    decimal: new RegExp('\\\\' + ',' , 'g')\n  };\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Quantidade mÃ¡xima de casas decimais.\n   *\n   * @default `2`\n   */\n  @Input('t-decimals-length') set decimalsLength(value: number) {\n    this._decimalsLength = convertToInt(value, THF_DECIMAL_DEFAULT_DECIMALS_LENGTH);\n\n  }\n\n  get decimalsLength() {\n    return this._decimalsLength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * NÃºmero mÃ¡ximo de dÃ­gitos antes do separador de decimal. O valor mÃ¡ximo possÃ­vel deve ser menor ou igual a 13.\n   *\n   * @default `13`\n   */\n  @Input('t-thousand-maxlength') set thousandMaxlength(value: number) {\n    const thousandMaxlength = convertToInt(value, THF_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH);\n\n    this._thousandMaxlength = thousandMaxlength <= THF_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH ?\n    thousandMaxlength : THF_DECIMAL_DEFAULT_THOUSAND_MAXLENGTH;\n  }\n\n  get thousandMaxlength() {\n    return this._thousandMaxlength;\n  }\n\n  constructor(private el: ElementRef) {\n    super();\n    this.isKeyboardAndroid = !!navigator.userAgent.match(/Android/i);\n  }\n\n  ngAfterViewInit() {\n    this.putFocus();\n    this.setPaddingInput();\n  }\n\n  clear(value) {\n    this.callOnChange(value);\n    this.controlChangeEmitter();\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n  getScreenValue() {\n    return (this.inputEl) ? this.inputEl.nativeElement.value : '';\n  }\n\n  hasInvalidClass() {\n    return (\n      this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.getScreenValue() !== ''\n    );\n  }\n\n  hasLetters(value: string = '') {\n    return value.match(/[a-zA-Z:;+=_Â´^~\"'@#$%Â¨&*()/\\\\|]+/);\n  }\n\n  isValidNumber(event: any): boolean {\n    // - event.key nÃ£o existia em alguns browsers, como Samsung browser e Firefox.\n    const keyValue = <any> String.fromCharCode(event.which);\n    const validKey = event.which !== 8 && event.which !== 0;\n\n    return !this.hasLetters(keyValue) && validKey;\n  }\n\n  // funÃ§Ã£o responsÃ¡vel por adicionar os zeroes com as casa decimais ao sair do campo.\n  onBlur(event: any) {\n    const value = event.target.value;\n\n    if (value) {\n\n      if (this.hasLetters(value) || this.containsMoreThanOneComma(value)) {\n        this.setViewValue('');\n        this.callOnChange(undefined);\n        return;\n      }\n\n      const valueWithoutThousandSeparator = this.formatValueWithoutThousandSeparator(value);\n      this.setViewValue(this.formatToViewValue(valueWithoutThousandSeparator));\n    }\n\n    this.blur.emit();\n    this.controlChangeEmitter();\n  }\n\n  onFocus(event: FocusEvent) {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.getScreenValue();\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  onInput(event: any) {\n    const selectionStart = event.target.selectionStart;\n    const selectionEnd = event.target.selectionEnd;\n\n    let modelValue;\n    let viewValue;\n\n    // - Browsers nativos do Android ex: Samsung Browser.\n    if (this.isKeyboardAndroid) {\n      this.onInputKeyboardAndroid(event);\n    }\n\n    modelValue = this.formatValueWithoutThousandSeparator(event.target.value);\n    modelValue = this.addZeroBefore(modelValue);\n    viewValue = this.formatMask(modelValue);\n\n    // validaÃ§Ã£o para nÃ£o quebrar IE com placeholder definido e Input vazio\n    if (viewValue) {\n      this.setViewValue(viewValue);\n      this.setCursorInput(event, selectionStart, selectionEnd);\n    }\n\n    this.callOnChange(this.formatToModelValue(modelValue));\n  }\n\n  onInputKeyboardAndroid(event: any) {\n    const inputValue = event.target.value;\n    const selectionStart = event.target.selectionStart;\n    const hasLetters = this.hasLetters(inputValue);\n\n    if (hasLetters) {\n      this.setViewValue(inputValue.replace(hasLetters[0], ''));\n\n      return event.preventDefault();\n    } else {\n      const position = selectionStart - 1;\n      const key = inputValue.charAt(position);\n\n      this.setPositionValue(event);\n\n      if (this.isValidKey(event, key)) {\n        this.setViewValue(inputValue);\n      }\n    }\n  }\n\n  onKeyPress(event: KeyboardEvent) {\n    this.isValidKey(event);\n  }\n\n  setPaddingInput() {\n    setTimeout(() => {\n      const selectorIcons = '.thf-field-icon-container:not(.thf-field-icon-container-left) > .thf-icon';\n      let icons = this.el.nativeElement.querySelectorAll(selectorIcons).length;\n      if (this.clean) {\n        icons++;\n      }\n      if (icons) {\n        this.inputEl.nativeElement.style.paddingRight = `${icons * 36}px`;\n      }\n    });\n  }\n\n  writeValueModel(value) {\n    if (this.inputEl) {\n      if (value || value === 0) {\n        const formatedViewValue = this.formatToViewValue(value);\n        this.setViewValue(formatedViewValue);\n      } else {\n        this.setViewValue('');\n      }\n    }\n\n    if (value) {\n      this.change.emit(value);\n    }\n  }\n\n  // reponsÃ¡vel por adicionar 0 antes da virgula (decimalSeparator).\n  private addZeroBefore(value) {\n    const isDecimalSeparator = value === this.decimalSeparator;\n\n    return isDecimalSeparator ? `0${value}` : value;\n  }\n\n  private containsComma(value) {\n    return value.includes(this.decimalSeparator);\n  }\n\n  private containsMoreThanOneComma(value: string = '') {\n    const foundComma = value.match(/,/g);\n\n    return !!(foundComma && foundComma.length > 1);\n  }\n\n  private controlChangeEmitter() {\n    const elementValue = this.getScreenValue();\n\n    // Emite o evento change manualmente quando o campo Ã© alterado\n    // Este evento Ã© controlado manualmente devido ao preventDefault existente na mÃ¡scara\n    // e devido ao controle do t-clean, que tambÃ©m precisa emitir change\n    if (elementValue !== this.valueBeforeChange) {\n      this.fireChange = true;\n      setTimeout(() => {\n        if (this.fireChange) {\n          this.change.emit(elementValue);\n        }\n      }, 200);\n    }\n  }\n\n  private formatMask(value: string) {\n    // necessÃ¡rio para nÃ£o adicionar . nas casa decimais.\n    // por exemplo: 12.345,123.45 (errado)\n    // 12.345,12345 (correto)\n\n    if (value.match(this.regex.decimal)) {\n      const regex = new RegExp('(\\\\d)(?=(\\\\d{3})+(?!\\\\d),)', 'g');\n      return value.toString().replace(regex, '$1.');\n    }\n\n    return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\n  }\n\n  private formatToModelValue(value: string) {\n    const formattedValue = this.replaceCommaToDot(value);\n    const parsedValue = formattedValue ? parseFloat(Number(formattedValue).toFixed(this.decimalsLength)) : undefined;\n\n    return parsedValue === 0 || parsedValue ? parsedValue : undefined;\n  }\n\n  private formatToViewValue(value: string) {\n    let formatedNumber;\n    let numberValue;\n    let valueBeforeDot;\n    let valueAfterDot;\n\n    // - NecessÃ¡rio para tratar valores que contenham decimalSeparator\n    value = this.replaceCommaToDot(value);\n\n    numberValue = Number(value).toFixed(this.decimalsLength);\n\n    valueBeforeDot = this.getValueBeforeSeparator(numberValue, this.thousandSeparator);\n    valueAfterDot = this.getValueAfterSeparator(numberValue, this.thousandSeparator);\n\n    formatedNumber = this.formatMask(valueBeforeDot);\n\n    if (this.decimalsLength === 0) {\n      return formatedNumber;\n    } else {\n      return formatedNumber + this.decimalSeparator + valueAfterDot;\n    }\n\n  }\n\n  private formatValueWithoutThousandSeparator(value: string = '') {\n    return value.toString().replace(this.regex.thousand, '');\n  }\n\n  private getValueAfterSeparator(value = '', separator) {\n    return value.split(separator)[1] || '';\n  }\n\n  private getValueBeforeSeparator(value = '', separator) {\n    return value.split(separator)[0] || '';\n  }\n\n  private hasLessDot(value) {\n    if (value) {\n      const dots = value.match(this.regex.thousand);\n      const dotsLength = dots && dots.length;\n\n      if (dotsLength < this.oldDotsLength) {\n        this.oldDotsLength = dotsLength;\n        return true;\n      }\n    }\n\n    if (!value) { this.oldDotsLength = null; }\n\n    return false;\n  }\n\n  private hasMoreDot(value) {\n    if (value) {\n      const dots = value.match(this.regex.thousand);\n      const dotsLength = dots && dots.length;\n\n      if (dotsLength > this.oldDotsLength) {\n          this.oldDotsLength = dotsLength;\n          return true;\n      }\n    }\n\n    if (!value) { this.oldDotsLength = null; }\n\n    return false;\n  }\n\n  private hasMinusSignInvalidPosition(event: any): boolean {\n    const keyIsMinusSign = event.key === this.minusSign;\n    const selectionStart = event.target.selectionStart;\n\n    return keyIsMinusSign && selectionStart !== 0;\n  }\n\n  private isInvalidKey(event: any, charCode: any) {\n    const isInvalidNumber = !this.isValidNumber(event);\n\n    return this.verifyInsertComma(event) || this.verifyThousandLength(event) ||\n      this.verifyValueAfterComma(event) || this.verifyInsertMinusSign(event) ||\n      this.hasMinusSignInvalidPosition(event) || isInvalidNumber ||\n      this.validateCursorPositionBeforeSeparator(event) || this.verifyDecimalLengthIsZeroAndKeyPressedIsComma(charCode);\n  }\n\n  private isKeyDecimalSeparator(event) {\n    return event.key === this.decimalSeparator || event.char === this.decimalSeparator;\n  }\n\n  private isPositionAfterDecimalSeparator(positionCursor, value) {\n    const indexComma = value && value.indexOf(this.decimalSeparator);\n\n    if (indexComma && this.decimalsLength > 0) {\n      return positionCursor > indexComma;\n    }\n  }\n\n  private isSelectionStartDifferentSelectionEnd(target: any) {\n    return target.selectionStart !== target.selectionEnd;\n  }\n\n  private isValidKey(event: any, key?: string) {\n    const charCode = event.which || event.keyCode;\n    const validKey = event.which === 8 || event.which === 0;\n\n    if (validKey && !this.isKeyboardAndroid) {\n      return;\n    }\n\n    if (key) {\n      event.key = key;\n    }\n\n    if (this.isInvalidKey(event, charCode)) {\n      event.preventDefault();\n      return false;\n    }\n    return true;\n  }\n\n  // Quando decimalsLength for 0 nÃ£o deve permitir informar vÃ­rgula (decimalSeparator)\n  private verifyDecimalLengthIsZeroAndKeyPressedIsComma(charCode: number) {\n    return (charCode === 44 && this.decimalsLength === 0);\n  }\n\n  private putFocus() {\n    if (this.focus) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  private setInitialSelectionRange(target: any, selectionStart, selectionEnd) {\n    if (selectionStart === 1 && selectionEnd === 1) {\n      return target.setSelectionRange(selectionStart + 1, selectionEnd + 1);\n    }\n    return target.setSelectionRange(selectionStart - 1, selectionEnd - 1);\n  }\n\n  private replaceAt(value, index, replace) {\n    return value.substring(0, index) + replace + value.substring(index + 1);\n  }\n\n  private replaceCommaToDot(value: string = '') {\n    return value.toString().replace(this.regex.decimal, '.');\n  }\n\n  private setCursorInput(event, selectionStart, selectionEnd) {\n    const target = event.target;\n    const viewValue = target.value;\n\n    // Caso houver mais . do que anteriormente soma o valor com 1.\n    if (this.hasMoreDot(viewValue) || viewValue === ('0' + this.decimalSeparator)) {\n      return target.setSelectionRange(selectionStart + 1, selectionEnd + 1);\n    }\n\n    // Caso houver menos . do que anteriormente subtrai o valor por 1.\n    if (this.hasLessDot(viewValue)) {\n      this.setInitialSelectionRange(target, selectionStart, selectionEnd);\n    }\n    return target.setSelectionRange(selectionStart, selectionEnd);\n  }\n\n  private setPositionValue(event: any) {\n    const value = event.target.value;\n    const position = event.target.selectionStart - 1;\n\n    if (position > 0 && event.key === this.minusSign) {\n      event.target.value = value.substring(0, position) + value.substr(position + 1);\n    }\n  }\n\n  private setViewValue(value: string) {\n    this.inputEl.nativeElement.value = value;\n  }\n\n  private validateCursorPositionBeforeSeparator(event: any): boolean {\n    const target = event.target;\n    const originalValue = this.formatValueWithoutThousandSeparator(target.value);\n    const valueBeforeSeparator = this.getValueBeforeSeparator(target.value, this.decimalSeparator);\n    const valueBeforeSeparatorOriginal = this.getValueBeforeSeparator(originalValue, this.decimalSeparator);\n\n    if (this.isSelectionStartDifferentSelectionEnd(target)) {\n      return false;\n    }\n    return target.selectionStart <= valueBeforeSeparator.length &&\n    valueBeforeSeparatorOriginal.length === this.thousandMaxlength &&\n    !this.isKeyDecimalSeparator(event);\n  }\n\n  private verifyThousandLength(event: any): boolean {\n    const target = event.target;\n    const originalValue = this.formatValueWithoutThousandSeparator(target.value);\n    const valueBeforeSeparatorOriginal = this.getValueBeforeSeparator(originalValue, this.decimalSeparator);\n\n    if (this.isSelectionStartDifferentSelectionEnd(target)) {\n      return false;\n    }\n    return valueBeforeSeparatorOriginal.length >= this.thousandMaxlength &&\n      !this.isKeyDecimalSeparator(event) &&\n      this.isPositionAfterDecimalSeparator(target.selectionStart - this.decimalsLength, target.value);\n  }\n\n  private verifyInsertComma(e: any): boolean {\n    const hasComma = this.containsComma(e.target.value);\n\n    return hasComma && e.key === this.decimalSeparator;\n  }\n\n  private verifyInsertMinusSign(event: any): boolean {\n    const value = event.target.value;\n    const indexMinusSign = (value.lastIndexOf(this.minusSign) !== -1);\n    const positionMinusSign = value.lastIndexOf('-') ;\n    const occurancesMinusSign = value.match(new RegExp('-', 'g'));\n\n    if (this.isKeyboardAndroid && indexMinusSign && occurancesMinusSign.length > 1) {\n      event.target.value = this.replaceAt(value, positionMinusSign, '');\n    }\n    return indexMinusSign && event.key === this.minusSign;\n  }\n\n  private verifyValueAfterComma(event: any): boolean {\n    const value = event.target.value;\n    const selectionStart = event.target.selectionStart;\n    const valueAfterSeparator = this.getValueAfterSeparator(value, this.decimalSeparator);\n\n    return this.isPositionAfterDecimalSeparator(selectionStart, value) && valueAfterSeparator.length >= this.decimalsLength;\n  }\n\n}\n","import { AfterViewInit, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { ThfInputBaseComponent } from '../thf-input/thf-input-base.component';\n\nexport abstract class ThfInputGeneric extends ThfInputBaseComponent implements AfterViewInit {\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  type = 'text';\n\n  el: ElementRef;\n  valueBeforeChange: any;\n  timeoutChange: any;\n\n  constructor(el: ElementRef) {\n    super();\n\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    this.afterViewInit();\n  }\n\n  afterViewInit() {\n    this.putFocus();\n    if (this.type !== 'password') {\n      this.setPaddingInput();\n    }\n  }\n\n  setPaddingInput() {\n    setTimeout(() => {\n      const selectorIcons = '.thf-field-icon-container:not(.thf-field-icon-container-left) > .thf-icon';\n      let icons = this.el.nativeElement.querySelectorAll(selectorIcons).length;\n      if (this.clean) {\n        icons++;\n      }\n      if (icons) {\n        this.inputEl.nativeElement.style.paddingRight = `${icons * 36}px`;\n      }\n    });\n  }\n\n  putFocus() {\n    if (this.focus) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event']) onKeydown(e: any) {\n    if (this.mask && !this.readonly && e.target.keyCode !== 229) {\n      this.eventOnBlur(e);\n      this.objMask.keydown(e);\n    }\n  }\n\n  @HostListener('keyup', ['$event']) onKeyup(e: any) {\n    if (this.mask && !this.readonly) {\n      if (e.target.keyCode !== 229) {\n        this.eventOnBlur(e);\n        this.objMask.keyup(e);\n      }\n      this.callOnChange(this.objMask.valueToModel);\n    }\n  }\n\n  eventOnInput(e: any) {\n    if (!this.mask) {\n      const value = this.validMaxLength(this.maxlength, e.target.value);\n      this.inputEl.nativeElement.value = value;\n      this.callOnChange(value);\n    }\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n    return ((maxlength || maxlength === 0) && value.length > maxlength) ? value.toString().substring(0, maxlength) : value;\n  }\n\n  eventOnFocus(e: any) {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.inputEl.nativeElement.value;\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  eventOnBlur(e: any) {\n    if (this.mask) {\n      this.objMask.blur(e);\n    }\n\n    if (e.type === 'blur') {\n      this.blur.emit();\n      this.controlChangeEmitter();\n    }\n\n  }\n\n  controlChangeEmitter() {\n    const elementValue = this.inputEl.nativeElement.value;\n\n    // Emite o evento change manualmente quando o campo Ã© alterado\n    // Este evento Ã© controlado manualmente devido ao preventDefault existente na mÃ¡scara\n    // e devido ao controle do t-clean, que tambÃ©m precisa emitir change\n    if (elementValue !== this.valueBeforeChange) {\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.change.emit(elementValue);\n      }, 200);\n    }\n  }\n\n  eventOnClick(e: any) {\n    // Atualiza a posiÃ§Ã£o do cursor ao clicar\n    if (this.mask) {\n      this.objMask.click(e);\n    }\n  }\n\n  hasInvalidClass() {\n    return (\n      this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.inputEl.nativeElement.value !== ''\n    );\n  }\n\n  getErrorPattern() {\n    return (this.errorPattern !== '' && this.hasInvalidClass()) ? this.errorPattern : '';\n  }\n\n  validateClassesForPattern() {\n    const value = this.getScreenValue();\n    const element = this.el.nativeElement;\n\n    if (value && !this.verifyPattern(this.pattern, value)) {\n      element.classList.add('ng-invalid');\n      element.classList.add('ng-dirty');\n    } else {\n      element.classList.remove('ng-invalid');\n    }\n  }\n\n  verifyPattern(pattern: string, value: any) {\n    return new RegExp(pattern).test(value);\n  }\n\n  clear(value) {\n    this.callOnChange(value);\n    this.controlChangeEmitter();\n  }\n\n  writeValueModel(value) {\n    this.passedWriteValue = true;\n    if (this.inputEl) {\n      if (value) {\n        if (this.mask) {\n          this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));\n\n          // Se o model for definido como formatado, entÃ£o precisa atualizÃ¡-lo no primeiro acesso\n          if (this.objMask.formatModel) {\n            this.callUpdateModelWithTimeout(this.objMask.valueToModel);\n\n          }\n        } else {\n          this.inputEl.nativeElement.value = value;\n        }\n      } else {\n        // Se o valor for indefinido, deve limpar o campo.\n        this.inputEl.nativeElement.value = '';\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n    if (value) {\n      this.changeModel.emit(value);\n    }\n  }\n\n  getScreenValue() {\n    const screenValue = this.inputEl && this.inputEl.nativeElement.value || undefined;\n\n    if (this.type === 'number') {\n      const parsedValue = parseFloat(screenValue);\n      return parsedValue || parsedValue === 0 ? parsedValue : null;\n    } else {\n      return screenValue;\n    }\n  }\n\n  abstract extraValidation(c: AbstractControl): { [key: string]: any; };\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';\n\n/**\n * @docsExtends ThfInputBaseComponent\n *\n * @description\n *\n * thf-email Ã© um input especÃ­fico para receber E-mail, com o pattern jÃ¡ configurado.\n *\n * @example\n *\n * <example name=\"thf-email-basic\" title=\"Totvs Email Basic\">\n *  <file name=\"sample-thf-email-basic/sample-thf-email-basic.component.html\"> </file>\n *  <file name=\"sample-thf-email-basic/sample-thf-email-basic.component.ts\"> </file>\n *  <file name=\"sample-thf-email-basic/sample-thf-email-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-thf-email-basic/sample-thf-email-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-email-labs\" title=\"Totvs Email Labs\">\n *  <file name=\"sample-thf-email-labs/sample-thf-email-labs.component.html\"> </file>\n *  <file name=\"sample-thf-email-labs/sample-thf-email-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-email-newsletter\" title=\"Totvs Email - Newsletter\">\n *  <file name=\"sample-thf-email-newsletter/sample-thf-email-newsletter.component.html\"> </file>\n *  <file name=\"sample-thf-email-newsletter/sample-thf-email-newsletter.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-email',\n  templateUrl: '../thf-input/thf-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfEmailComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfEmailComponent),\n      multi: true\n    }\n  ]\n})\nexport class ThfEmailComponent extends ThfInputGeneric implements AfterViewInit, OnDestroy {\n\n  icon = 'thf-icon-mail';\n\n  maxlength: number = 254;\n\n  type = 'email';\n\n  pattern = '^([\\\\w-]+(?:\\\\.[\\\\w-]+)*)@((?:[\\\\w-]+\\\\.)*\\\\w[\\\\w-]{0,66})\\\\.([a-z]{2,6}(?:\\\\.[a-z]{2})?)$';\n\n  mask = '';\n\n  private listener = this.validateClassesForPattern.bind(this);\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n      if (!this.onChangePropagate) {\n        this.inputEl.nativeElement.addEventListener('keyup', this.listener);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangePropagate) {\n      this.inputEl.nativeElement.removeEventListener('keyup', this.listener);\n    }\n  }\n\n    extraValidation(c: AbstractControl): { [key: string]: any } {\n    return null;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { convertToBoolean, getShortBrowserLanguage } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * Componente de uso interno, responsÃ¡vel por atribuir uma label para o campo\n */\n@Component({\n  selector: 'thf-field-container',\n  templateUrl: './thf-field-container.component.html'\n})\nexport class ThfFieldContainerComponent {\n\n  private _optional: boolean = false;\n\n  /** Label do campo. */\n  @Input('t-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('t-help') help: string;\n\n  /** Indica se o campo serÃ¡ opcional. */\n  @Input('t-optional') set optional(value: boolean) {\n    this._optional = convertToBoolean(value);\n  }\n\n  get optional() {\n    return this._optional;\n  }\n\n  getOptionalText() {\n    const browserLanguage = getShortBrowserLanguage();\n\n    const optional = {\n      pt: '(Opcional)',\n      en: '(Optional)',\n      es: '(Opcional)'\n    };\n\n    return optional[browserLanguage];\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de uso interno, responsÃ¡vel por gerar uma margem inferior nos componentes que utilizam o thf-field-container.\n * Essa margem inferior pode conter uma mensagem de erro.\n */\n@Component({\n  selector: 'thf-field-container-bottom',\n  templateUrl: './thf-field-container-bottom.component.html'\n})\nexport class ThfFieldContainerBottomComponent {\n\n  /**\n   * Mensagem que serÃ¡ apresentada quando o pattern ou a mÃ¡scara nÃ£o for satisfeita.\n   * Obs: Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\n   */\n  @Input('t-error-pattern') errorPattern?: string = '';\n\n}\n","import { Component, ElementRef, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';\n\n/**\n * @docsExtends ThfInputBaseComponent\n *\n * @description\n * O thf-login Ã© um input especÃ­fico para login. JÃ¡ possui tipo, estilo e Ã­cone predefinidos.\n *\n * @example\n *\n * <example name=\"thf-login-basic\" title=\"Totvs Login Basic\">\n *  <file name=\"sample-thf-login-basic/sample-thf-login-basic.component.html\"> </file>\n *  <file name=\"sample-thf-login-basic/sample-thf-login-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-login-labs\" title=\"Totvs Login Labs\">\n *  <file name=\"sample-thf-login-labs/sample-thf-login-labs.component.html\"> </file>\n *  <file name=\"sample-thf-login-labs/sample-thf-login-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-login-confirm\" title=\"Totvs Login - Confirm Identity\">\n *  <file name=\"sample-thf-login-confirm/sample-thf-login-confirm.component.html\"> </file>\n *  <file name=\"sample-thf-login-confirm/sample-thf-login-confirm.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'thf-login',\n  templateUrl: './thf-login.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThfLoginComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => ThfLoginComponent),\n    multi: true,\n  }]\n})\nexport class ThfLoginComponent extends ThfInputGeneric {\n\n  type = 'text';\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { convertToBoolean, isTypeof } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { ThfLookupColumn } from './interfaces/thf-lookup-column.interface';\nimport { ThfLookupFilter } from './interfaces/thf-lookup-filter.interface';\nimport { ThfLookupFilterService } from './services/thf-lookup-filter.service';\nimport { ThfLookupLiterals } from './interfaces/thf-lookup-literals.interface';\n\n/**\n * @description\n *\n * Componente utilizado para abrir uma janela de busca com uma tabela que lista dados de um serviÃ§o. Nesta janela Ã© possÃ­vel buscar e\n * selecionar o registro que serÃ¡ enviado para o campo. O `thf-lookup` permite que o usuÃ¡rio digite um valor e pressione a tecla *TAB* para\n * buscar um registro.\n *\n * > Caso o campo seja iniciado ou preenchido com um valor inexistente na busca, o mesmo serÃ¡ limpado.\n * No segundo caso ocorrerÃ¡ apÃ³s este perder o foco; ambos os casos o campo ficarÃ¡ invÃ¡lido quando requerido.\n *\n * Este componente nÃ£o Ã© recomendado quando a busca dos dados possuir poucas informaÃ§Ãµes, para isso utilize outros componentes como o\n * `thf-select` ou o `thf-combo`.\n */\nexport abstract class ThfLookupBaseComponent implements ControlValueAccessor, OnDestroy, OnInit, Validator {\n\n  private _disabled?: boolean = false;\n  private _filterService: ThfLookupFilter | string;\n  private _focus?: boolean = false;\n  private _required?: boolean = false;\n\n  protected getSubscription: Subscription;\n  protected keysDescription: Array<any>;\n  protected oldValue: string = '';\n  protected valueToModel;\n\n  private onChangePropagate: any = null;\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  service: any;\n\n  /**\n   * Label do campo.\n   *\n   * > Quando utilizar esta propriedade o seu valor serÃ¡ utilizado como tÃ­tulo da modal do componente caso nÃ£o tenha\n   * sido definido um `modalTitle` na propriedade `t-literals`.\n   */\n  @Input('t-label') label?: string;\n\n  /**\n   * @description\n   *\n   * Objeto com as literais usadas no `thf-lookup`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: ThfLookupLiterals = {\n   *    modalPrimaryActionLabel: 'Select',\n   *    modalSecondaryActionLabel: 'Cancel',\n   *    modalPlaceholder: 'Search Value',\n   *    modalTableNoColumns: 'No columns',\n   *    modalTableNoData: 'No data',\n   *    modalTableLoadingData: 'Loading data',\n   *    modalTableLoadMoreData: 'Load more',\n   *    modalTitle: 'Select a user'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: ThfLookupLiterals = {\n   *    modalPrimaryActionLabel: 'Select'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <thf-lookup\n   *   [t-literals]=\"customLiterals\">\n   * </thf-lookup>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('t-literals') literals?: ThfLookupLiterals;\n\n  /** Texto de apoio do campo. */\n  @Input('t-help') help?: string;\n\n  /** Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido. */\n  @Input('t-placeholder') placeholder?: string = '';\n\n  /** Nome e Id do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @description\n   *\n   * Indica a coluna que serÃ¡ utilizada como valor do campo.\n   *\n   * > AtenÃ§Ã£o: Caso nÃ£o seja passada ou tenha o conteÃºdo incorreto, nÃ£o irÃ¡ atualizar o model do formulÃ¡rio.\n   */\n  @Input('t-field-value') fieldValue: string;\n\n  /** Indica a coluna que serÃ¡ utilizada como descriÃ§Ã£o do campo e como filtro dentro da janela. */\n  @Input('t-field-label') fieldLabel: string;\n\n  /** Valor que serÃ¡ repassado como parÃ¢metro aos mÃ©todos do serviÃ§o que implementam a interface `ThfLookupFilter`. */\n  @Input('t-filter-params') filterParams?: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Formato de exibiÃ§Ã£o do campo.\n   *\n   * Recebe uma funÃ§Ã£o que deve retornar uma *string* com o/os valores do objeto formatados para exibiÃ§Ã£o, por exemplo:\n   *\n   * ```\n   * fieldFormat(obj) {\n   *   return `${obj.id} - ${obj.name}`;\n   * }\n   * ```\n   * > Esta propriedade sobrepÃµe o valor da propriedade `t-field-label` na descriÃ§Ã£o do campo.\n   */\n  @Input('t-field-format') fieldFormat?: (value) => string;\n\n  /**\n   * Lista das colunas da tabela.\n   * Essa propriedade deve receber um array de objetos que implementam a interface ThfLookupColumn.\n   */\n  @Input('t-columns') columns?: Array<ThfLookupColumn>;\n\n  /**\n   * ServiÃ§o responsÃ¡vel por buscar os dados da tabela na janela. Pode ser informado um serviÃ§o que implemente a interface\n   * `ThfLookupFilter` ou uma URL.\n   *\n   * Quando utilizada uma URL de um serviÃ§o, serÃ¡ concatenada nesta URL o valor que deseja-se filtrar, por exemplo:\n   *\n   * ```\n   * url + ?page=1&pageSize=20&filter=Peter\n   * ```\n   *\n   * Se for definido a propriedade `t-filter-params`, o mesmo tambÃ©m serÃ¡ concatenado. Por exemplo, para o\n   * parÃ¢metro `{ age: 23 }` a URL ficaria:\n   *\n   * ```\n   * url + ?page=1&pageSize=20&age=23&filter=Peter\n   * ```\n   *\n   * > Esta URL deve retornar e receber os dados no padrÃ£o de\n   * [API da TOTVS](http://tdn.totvs.com/display/public/INT/Guia+de+implementacao+das+APIs+TOTVS) e utiliza os valores\n   * definidos nas propriedades `t-field-label` e `t-field-value` para a construÃ§Ã£o do `thf-lookup`.\n   */\n  @Input('t-filter-service') set filterService(filterService: ThfLookupFilter | string) {\n    this._filterService = filterService;\n    this.setService(this.filterService);\n  }\n\n  get filterService() {\n    return this._filterService;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /**\n   * @optional\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio. Esta propriedade Ã© desconsiderada quando o campo estÃ¡ desabilitado (t-disabled).\n   *\n   * @default `false`\n   */\n  @Input('t-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.valueToModel);\n  }\n\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * @description\n   *\n   * Indica que o campo iniciarÃ¡ com foco.\n   *\n   * @default false\n   * @optional\n   */\n  @Input('t-focus') set focus(focus: boolean) {\n    this._focus = <any>focus === '' ? true : convertToBoolean(focus);\n  }\n\n  get focus(): boolean {\n    return this._focus;\n  }\n\n  /**\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default false\n   * @optional\n   */\n  @Input('t-disabled') set disabled(disabled: boolean) {\n    this._disabled = <any>disabled === '' ? true : convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * Evento serÃ¡ disparado quando ocorrer algum erro na requisiÃ§Ã£o de busca do item.\n   * SerÃ¡ passado por parÃ¢metro o objeto de erro retornado.\n   */\n  @Output('t-error') onError?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento serÃ¡ disparado quando ocorrer alguma seleÃ§Ã£o.\n   * SerÃ¡ passado por parÃ¢metro o objeto com o valor selecionado.\n   */\n  @Output('t-selected') selected?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private defaultService: ThfLookupFilterService) {}\n\n  ngOnDestroy() {\n\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit(): void {\n    this.initializeColumn();\n  }\n\n  private initializeColumn(): void {\n    if (this.fieldLabel) {\n      this.keysDescription = [this.fieldLabel];\n    } else {\n      this.keysDescription = [];\n\n      this.keysDescription = this.columns.filter(element => element.fieldLabel)\n        .map(element => element.property);\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor.\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model.\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor.\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model.\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  // Seleciona o valor do model.\n  selectValue(valueSelected: any) {\n    this.valueToModel = valueSelected[this.fieldValue];\n\n    this.callOnChange(this.valueToModel);\n    this.selected.emit(valueSelected);\n  }\n\n  callOnChange(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada.\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n  }\n\n  searchById(value: string) {\n    if (typeof(value) === 'string') {\n      value = value.trim();\n    }\n\n    if (value !== '') {\n      this.getSubscription = this.service.getObjectByValue(value, this.filterParams).subscribe(element => {\n        if (element) {\n          this.oldValue = element[this.fieldLabel];\n          this.selectValue(element);\n          this.setViewValue(this.getFormattedLabel(element), element);\n        } else {\n          this.cleanModel();\n        }\n      }, error => {\n        this.cleanModel();\n        this.onError.emit(error);\n      });\n\n    } else {\n      this.cleanModel();\n    }\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value && value instanceof Object) {\n      // Esta condiÃ§Ã£o Ã© executada quando Ã© retornado o objeto selecionado do componente Thf Lookup Modal.\n      this.oldValue = value[this.fieldLabel];\n      this.valueToModel = value[this.fieldValue];\n      this.setViewValue(this.getFormattedLabel(value), value);\n    } else if (value) {\n      // Esta condiÃ§Ã£o Ã© executada somente quando Ã© passado o ID para realizar a busca pelo ID.\n      this.searchById(value);\n    } else {\n      this.cleanViewValue();\n    }\n  }\n\n  // Atribui um ou mais valores ao campo.\n  abstract setViewValue(value: any, object: any): void;\n\n  // MÃ©todo com a implementaÃ§Ã£o para abrir o lookup.\n  abstract openLookup(): void;\n\n  protected cleanModel() {\n    this.cleanViewValue();\n    this.callOnChange(undefined);\n  }\n\n  protected cleanViewValue() {\n    this.setViewValue('', {});\n    this.oldValue = '';\n    this.valueToModel = null;\n  }\n\n  // Formata a label do campo.\n  protected getFormattedLabel(value: any): string {\n    return value ? this.keysDescription.map(column => value[column]).join(' - ') : '';\n  }\n\n  // Chama o mÃ©todo writeValue e preenche o model.\n  protected selectModel(value: any) {\n    this.writeValue(value);\n    if (value && value instanceof Object) {\n      this.selectValue(value);\n    }\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private setService(service: ThfLookupFilter | string) {\n\n    if (isTypeof(service, 'object')) {\n      this.service = <ThfLookupFilterService> service;\n    }\n\n    if (service && isTypeof(service, 'string')) {\n      this.service = this.defaultService;\n      this.service.setUrl(service);\n    }\n\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { ThfLookupFilter } from '../interfaces/thf-lookup-filter.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o padrÃ£o utilizado para filtrar os dados do componente thf-lookup.\n */\n@Injectable()\nexport class ThfLookupFilterService implements ThfLookupFilter {\n\n  private url: string;\n\n  constructor(private httpClient: HttpClient) {}\n\n  getFilteredData(filter: any, page: number, pageSize?: number, filterParams?: any): Observable<any> {\n    const validatedFilterParams = this.validateParams(filterParams);\n\n    return this.httpClient.get(\n      this.url,\n      { params: { page: page.toString(), pageSize: pageSize.toString(), ...validatedFilterParams, filter } }\n    );\n  }\n\n  getObjectByValue(value: string, filterParams?: any): Observable<any> {\n    const validatedFilterParams = this.validateParams(filterParams);\n\n    return this.httpClient.get(`${this.url}/${value}`, { params: validatedFilterParams });\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n  }\n\n  private validateParams(params: any) {\n    return isTypeof(params, 'object') && !Array.isArray(params) ? params : undefined;\n  }\n\n}\n","import { Injectable, ComponentRef, ComponentFactoryResolver, ApplicationRef, Injector } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThfComponentInjectorService {\n\n  constructor(private componentResolver: ComponentFactoryResolver, private applicationRef: ApplicationRef, private injector: Injector) {}\n\n  // Cria um dinamicamente no ApplicationRef\n  createComponentInApplication(component: any): ComponentRef<any> {\n    const componentRef = this.componentResolver.resolveComponentFactory(component).create(this.injector);\n    this.applicationRef.attachView(componentRef.hostView);\n    const domElem = (<any>componentRef.hostView).rootNodes[0];\n    document.body.appendChild(domElem);\n    return componentRef;\n  }\n\n  // DestrÃ³i o componente e remove do ApplicationRef\n  destroyComponentInApplication(componentRef: any) {\n    this.applicationRef.detachView(componentRef.hostView);\n    componentRef.destroy();\n  }\n}\n","import { EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { Observable , Subscription } from 'rxjs';\nimport { browserLanguage, isTypeof, thfLocaleDefault } from '../../../../utils/util';\n\nimport { ThfLookupColumn } from '../interfaces/thf-lookup-column.interface';\nimport { ThfLookupFilter } from '../interfaces/thf-lookup-filter.interface';\nimport { ThfLookupLiterals } from '../interfaces/thf-lookup-literals.interface';\nimport { ThfLookupResponseApi } from '../interfaces/thf-lookup-response-api.interface';\nimport { ThfModalAction } from '../../../../components/thf-modal';\nimport { ThfModalComponent } from '../../../../components/thf-modal/thf-modal.component';\nimport { thfTableLiteralsDefault } from '../../../thf-table/thf-table-base.component';\n\nexport const thfLookupLiteralsDefault = {\n  en: <ThfLookupLiterals> {\n    modalPrimaryActionLabel: 'Select',\n    modalSecondaryActionLabel: 'Cancel',\n    modalPlaceholder: 'Search',\n    modalTitle: 'Select a record',\n    modalTableNoColumns: thfTableLiteralsDefault.en.noColumns,\n    modalTableNoData: thfTableLiteralsDefault.en.noData,\n    modalTableLoadingData: thfTableLiteralsDefault.en.loadingData,\n    modalTableLoadMoreData: thfTableLiteralsDefault.en.loadMoreData\n  },\n  es: <ThfLookupLiterals> {\n    modalPrimaryActionLabel: 'Seleccionar',\n    modalSecondaryActionLabel: 'Cancelar',\n    modalPlaceholder: 'Buscar',\n    modalTitle: 'Seleccione un registro',\n    modalTableNoColumns: thfTableLiteralsDefault.es.noColumns,\n    modalTableNoData: thfTableLiteralsDefault.es.noData,\n    modalTableLoadingData: thfTableLiteralsDefault.es.loadingData,\n    modalTableLoadMoreData: thfTableLiteralsDefault.es.loadMoreData\n  },\n  pt: <ThfLookupLiterals> {\n    modalPrimaryActionLabel: 'Selecionar',\n    modalSecondaryActionLabel: 'Cancelar',\n    modalPlaceholder: 'Pesquisar',\n    modalTitle: 'Selecione um registro',\n    modalTableNoColumns: thfTableLiteralsDefault.pt.noColumns,\n    modalTableNoData: thfTableLiteralsDefault.pt.noData,\n    modalTableLoadingData: thfTableLiteralsDefault.pt.loadingData,\n    modalTableLoadMoreData: thfTableLiteralsDefault.pt.loadMoreData\n  }\n};\n\n/**\n * @docsPrivate\n *\n * Classe base do componente Thf Lookup Modal.\n */\nexport abstract class ThfLookupModalBaseComponent implements OnDestroy, OnInit {\n\n  private _literals: any;\n  private _title: any;\n\n  hasNext = true;\n  isLoading = false;\n  page = 1;\n  pageSize = 10;\n  primaryAction: ThfModalAction = {\n    action: () => {\n      this.items.forEach(element => {\n        if (element['$selected']) {\n          this.model.emit(element);\n          this.thfModal.close();\n        }\n      });\n    },\n    label: this.literals.modalPrimaryActionLabel\n  };\n  searchValue: string = '';\n  secondaryAction: ThfModalAction = {\n    action: () => {\n      this.model.emit(null);\n      this.thfModal.close();\n    },\n    label: this.literals.modalSecondaryActionLabel\n  };\n  tableLiterals: any;\n\n  private filterSubscription: Subscription;\n  private searchSubscription: Subscription;\n  private showMoreSubscription: Subscription;\n\n  @ViewChild(ThfModalComponent, { static: true }) thfModal: ThfModalComponent;\n\n  /**\n   * Lista das colunas da tabela.\n   * Essa propriedade deve receber um array de objetos que implementam a interface ThfLookupColumn.\n   */\n  @Input('t-columns') columns: Array<ThfLookupColumn>;\n\n  /** Lista de itens da tabela. */\n  @Input('t-items') items: Array<any>;\n\n  /** Objeto com as literais usadas no `thf-lookup-modal`. */\n  @Input('t-literals') set literals(value: ThfLookupLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfLookupLiteralsDefault[thfLocaleDefault],\n        ...thfLookupLiteralsDefault[browserLanguage()],\n        ...value\n      };\n      if (value.modalTitle) {\n        this.title = this.literals.modalTitle;\n      }\n    } else {\n      this._literals = thfLookupLiteralsDefault[browserLanguage()];\n    }\n    this.primaryAction.label = this.literals.modalPrimaryActionLabel;\n    this.secondaryAction.label = this.literals.modalSecondaryActionLabel;\n    this.setTableLiterals();\n  }\n\n  get literals() {\n    return this._literals || thfLookupLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da modal. */\n  @Input('t-title') set title(value: string) {\n    this._title = isTypeof(value, 'string') ? value : this.literals.modalTitle;\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  /** Classe de serviÃ§o com a implementaÃ§Ã£o do cliente. */\n  @Input('t-filter-service') filterService: ThfLookupFilter;\n\n  /** Classe de serviÃ§o com a implementaÃ§Ã£o do cliente. */\n  @Input('t-filter-params') filterParams: any;\n\n  /** Evento utilizado ao selecionar um registro da tabela. */\n  @Output('t-change-model') model: EventEmitter<any> = new EventEmitter<any>();\n\n  ngOnDestroy() {\n    if (this.filterSubscription) {\n      this.filterSubscription.unsubscribe();\n    }\n\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n\n    if (this.showMoreSubscription) {\n      this.showMoreSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.initializeData();\n    this.setTableLiterals();\n  }\n\n  search(): void {\n    this.page = 1;\n    if (this.searchValue) {\n      this.isLoading = true;\n      this.searchSubscription = this.getFilteredData(this.searchValue).subscribe(data => {\n        this.items = data.items;\n        this.hasNext = data.hasNext;\n        this.isLoading = false;\n      });\n    } else {\n      this.initializeData();\n    }\n  }\n\n  showMoreEvent() {\n    this.page ++;\n    this.isLoading = true;\n    this.showMoreSubscription = this.getFilteredData(this.searchValue).subscribe(data => {\n      data.items.forEach(item => {\n        this.items.push(item);\n      });\n      this.hasNext = data.hasNext;\n      this.isLoading = false;\n    });\n  }\n\n  // MÃ©todo responsÃ¡vel por abrir a modal de busca das informaÃ§Ãµes.\n  abstract openModal(): void;\n\n  private getFilteredData(searchValue): Observable<ThfLookupResponseApi> {\n    return this.filterService.getFilteredData(searchValue, this.page, this.pageSize, this.filterParams);\n  }\n\n  private initializeData(): void {\n    this.isLoading = true;\n    this.filterSubscription = this.getFilteredData('').subscribe(data => {\n      this.items = data.items;\n      this.hasNext = data.hasNext;\n      this.isLoading = false;\n    });\n  }\n\n  private setTableLiterals() {\n    this.tableLiterals = {\n      'noColumns': this.literals.modalTableNoColumns,\n      'noData': this.literals.modalTableNoData,\n      'loadingData': this.literals.modalTableLoadingData,\n      'loadMoreData': this.literals.modalTableLoadMoreData,\n    };\n  }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { fromEvent, Observable } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\n\nimport { ThfLookupModalBaseComponent } from '../thf-lookup-modal/thf-lookup-modal-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends ThfLookupModalBaseComponent\n */\n@Component({\n  selector: 'thf-lookup-modal',\n  templateUrl: './thf-lookup-modal.component.html'\n})\nexport class ThfLookupModalComponent extends ThfLookupModalBaseComponent implements OnInit {\n\n  @ViewChild('inpsearch', { static: true }) inputSearchEl: ElementRef;\n\n  keyUpObservable: Observable<any> = null;\n\n  containerHeight: number = 375;\n  tableHeight: number = 370;\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.initializeEventInput();\n    this.setTableHeight();\n  }\n\n  initializeEventInput(): void {\n    this.keyUpObservable = fromEvent(this.inputSearchEl.nativeElement, 'keyup')\n      .pipe(\n        filter((e: any) => this.validateEnterPressed(e)),\n        debounceTime(400)\n      );\n\n    this.keyUpObservable.subscribe(() => {\n      this.search();\n    });\n  }\n\n  openModal() {\n    this.thfModal.open();\n  }\n\n  private setTableHeight() {\n    if (window.innerHeight < 615) {\n      this.tableHeight -= 50;\n      this.containerHeight -= 50;\n    }\n  }\n\n  private validateEnterPressed(e: any) {\n    return e.keyCode === 13;\n  }\n\n}\n","import { Injectable, ComponentRef, EventEmitter } from '@angular/core';\n\nimport { ThfComponentInjectorService } from '../../../../services/thf-component-injector/thf-component-injector.service';\nimport { ThfLookupColumn } from '../../../../components/thf-field/thf-lookup/interfaces/thf-lookup-column.interface';\nimport { ThfLookupFilter } from '../../../../components/thf-field/thf-lookup/interfaces/thf-lookup-filter.interface';\nimport { ThfLookupLiterals } from '../interfaces/thf-lookup-literals.interface';\nimport { ThfLookupModalComponent } from '../thf-lookup-modal/thf-lookup-modal.component';\n\n/**\n * @docsPrivate\n *\n * ServiÃ§o responsÃ¡vel por controlar a abertura do componente Thf Lookup Modal.\n */\n@Injectable()\nexport class ThfLookupModalService {\n\n  private componentRef: ComponentRef<any> = null;\n\n  selectValueEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private thfComponentInjector: ThfComponentInjectorService) {}\n\n  /**\n   * MÃ©todo responsÃ¡vel por abrir a modal de busca das informaÃ§Ãµes.\n   *\n   * @param service {ThfLookupFilter} ServiÃ§o responsÃ¡vel por realizar a busca no serviÃ§o dos dados.\n   * @param columns {Array<ThfLookupColumn>} DefiniÃ§Ã£o das colunas na modal de busca.\n   * @param filterParams {any} Valor que serÃ¡ repassado aos mÃ©todos do serviÃ§o para auxiliar no filtro dos dados.\n   * @param title {string} DefiniÃ§Ã£o do tÃ­tulo da modal.\n   * @param literals {ThfLookupLiterals} Literais utilizadas no componente.\n   */\n  openModal(params: {\n    service: ThfLookupFilter,\n    columns: Array<ThfLookupColumn>,\n    filterParams: any,\n    title: string,\n    literals: ThfLookupLiterals\n  }): void {\n    const { service, columns, filterParams, title, literals } = params;\n\n    this.componentRef = this.thfComponentInjector.createComponentInApplication(ThfLookupModalComponent);\n    this.componentRef.instance.title = title;\n    this.componentRef.instance.columns = columns;\n    this.componentRef.instance.filterService = service;\n    this.componentRef.instance.filterParams = filterParams;\n    this.componentRef.instance.literals = literals;\n    this.componentRef.instance.model.subscribe($event => {\n      this.selectValue($event);\n    });\n    this.componentRef.changeDetectorRef.detectChanges();\n    this.componentRef.instance.openModal();\n\n  }\n\n  // Este metodo Ã© chamado quando Ã© selecionado um item na lookup modal.\n  selectValue(value) {\n    if (value) {\n      this.selectValueEvent.emit(value);\n    }\n    this.componentRef.destroy();\n  }\n}\n","import { Component, ElementRef, forwardRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS , NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { ThfLookupBaseComponent } from './thf-lookup-base.component';\nimport { ThfLookupFilterService } from './services/thf-lookup-filter.service';\nimport { ThfLookupModalService } from './services/thf-lookup-modal.service';\n\n/**\n * @docsExtends ThfLookupBaseComponent\n *\n * @description\n *\n * Quando existe muitos dados o thf-lookup por padrÃ£o traz apenas 10 itens na tabela e os demais sÃ£o carregados por demanda atravÃ©s do\n * botÃ£o 'Carregar mais resultados'. Para que funcione corretamente, Ã© importante que o serviÃ§o siga o\n * [Guia de implementaÃ§Ã£o das APIs TOTVS](http://tdn.totvs.com/pages/releaseview.action?pageId=271660444).\n *\n * Importante:\n *\n * - Caso o thf-lookup contenha o [(ngModel)] sem o atributo name, ocorrerÃ¡ um erro de angular.\n * EntÃ£o serÃ¡ necessÃ¡rio informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\n * ```\n * <thf-lookup\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\">\n * </thf-lookup>\n * ```\n *\n * @example\n *\n * <example name=\"thf-lookup-basic\" title=\"Totvs Lookup Basic\">\n *  <file name=\"sample-thf-lookup-basic/sample-thf-lookup-basic.component.html\"> </file>\n *  <file name=\"sample-thf-lookup-basic/sample-thf-lookup-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-lookup-labs\" title=\"Totvs Lookup Labs\">\n *  <file name=\"sample-thf-lookup-labs/sample-thf-lookup-labs.component.html\"> </file>\n *  <file name=\"sample-thf-lookup-labs/sample-thf-lookup-labs.component.ts\"> </file>\n *  <file name=\"sample-thf-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-lookup-hero\" title=\"Totvs Lookup - Hero\">\n *  <file name=\"sample-thf-lookup-hero/sample-thf-lookup-hero.component.html\"> </file>\n *  <file name=\"sample-thf-lookup-hero/sample-thf-lookup-hero.component.ts\"> </file>\n *  <file name=\"sample-thf-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-lookup-hero-reactive-form\" title=\"Totvs Lookup - Hero Reactive Form\">\n *  <file name=\"sample-thf-lookup-hero-reactive-form/sample-thf-lookup-hero-reactive-form.component.html\"> </file>\n *  <file name=\"sample-thf-lookup-hero-reactive-form/sample-thf-lookup-hero-reactive-form.component.ts\"> </file>\n *  <file name=\"sample-thf-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-lookup-sw-films\" title=\"Totvs Lookup - Star Wars films\">\n *  <file name=\"sample-thf-lookup-sw-films/sample-thf-lookup-sw-films.component.html\"> </file>\n *  <file name=\"sample-thf-lookup-sw-films/sample-thf-lookup-sw-films.component.ts\"> </file>\n *  <file name=\"sample-thf-lookup-sw-films/sample-thf-lookup-sw-films.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-lookup',\n  templateUrl: './thf-lookup.component.html',\n  providers: [\n    ThfLookupFilterService,\n    ThfLookupModalService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfLookupComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfLookupComponent),\n      multi: true,\n    }]\n})\nexport class ThfLookupComponent extends ThfLookupBaseComponent implements OnDestroy, OnInit {\n\n  private modalSubscription: Subscription;\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  constructor(thfLookupFilterService: ThfLookupFilterService, private thfLookupModalService: ThfLookupModalService) {\n    super(thfLookupFilterService);\n  }\n\n  ngOnDestroy() {\n    if (this.modalSubscription) {\n      this.modalSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  openLookup(): void {\n    if (this.isAllowedOpenModal()) {\n      const { service, columns, filterParams, literals } = this;\n\n      this.thfLookupModalService.openModal({ service, columns, filterParams, title: this.label, literals });\n\n      if (!this.modalSubscription) {\n        this.modalSubscription = this.thfLookupModalService.selectValueEvent.subscribe(element => {\n          this.selectModel(element);\n        });\n      }\n    }\n  }\n\n  setViewValue(value: any, object: any): void {\n    if (this.fieldFormat) {\n      this.setInputValueWithFieldFormat(object);\n    } else {\n      this.inputEl.nativeElement.value = this.valueToModel ? value : '';\n    }\n  }\n\n  getViewValue(): string {\n    return this.inputEl.nativeElement.value;\n  }\n\n  searchEvent() {\n    const value = this.getViewValue();\n\n    if (this.oldValue !== value) {\n      this.searchById(value);\n    }\n  }\n\n  private isAllowedOpenModal(): boolean {\n\n    if (!this.service) {\n      console.warn('No service informed');\n    }\n\n    return !!(this.service && !this.disabled);\n  }\n\n  private setInputValueWithFieldFormat(objectSelected: any) {\n    const isEmpty = Object.keys(objectSelected).length === 0;\n    const fieldFormated = this.fieldFormat(objectSelected);\n\n    this.oldValue = isEmpty ? '' : fieldFormated;\n    this.inputEl.nativeElement.value = isEmpty ? '' : fieldFormated;\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { ThfMultiselectLiterals } from '../../index';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de pesquisa que serÃ¡ criado dentro do dropdown do `thf-multiselect`.\n */\n@Component({\n  selector: 'thf-multiselect-search',\n  templateUrl: './thf-multiselect-search.component.html',\n})\nexport class ThfMultiselectSearchComponent {\n\n  private _placeholder?: string;\n\n  /** Propriedade que recebe as literais definidas no `thf-multiselect`. */\n  @Input('t-literals') literals?: ThfMultiselectLiterals;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Placeholder do campo de pesquisa.\n   *\n   * > Caso o mesmo nÃ£o seja informado, o valor padrÃ£o serÃ¡ traduzido com base no idioma do navegador (pt, es e en).\n   *\n   * @default `Buscar`\n   */\n  @Input('t-placeholder') set placeholder(placeholder: string) {\n    this._placeholder = placeholder && isTypeof(placeholder, 'string') ? placeholder : this.literals.placeholderSearch;\n  }\n\n  get placeholder() {\n    return this._placeholder || this.literals.placeholderSearch;\n  }\n\n  /** Evento que serÃ¡ disparado a cada tecla digitada no campo de busca. */\n  @Output('t-change') change = new EventEmitter();\n\n  @ViewChild('inputElement', {read: ElementRef, static: true }) inputElement: ElementRef;\n\n  onChange(event) {\n    this.change.emit({event: event, value: this.inputElement.nativeElement.value});\n  }\n\n  setFocus() {\n    this.inputElement.nativeElement.focus();\n  }\n\n  clean() {\n    this.inputElement.nativeElement.value = '';\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';\n\nimport { ThfMultiselectLiterals } from '../../index';\nimport { ThfMultiselectOption } from '../thf-multiselect-option.interface';\nimport { ThfMultiselectSearchComponent } from './../thf-multiselect-search/thf-multiselect-search.component';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que construÃ­ra o dropdown, contendo o campo de pesquisa e os itens para seleÃ§Ã£o.\n */\n@Component({\n  selector: 'thf-multiselect-dropdown',\n  templateUrl: './thf-multiselect-dropdown.component.html'\n})\nexport class ThfMultiselectDropdownComponent {\n\n  scrollTop = 0;\n  show: boolean = false;\n  haveOptions: boolean = false;\n\n  /** Propriedade que indica se o campo de pesquisa deverÃ¡ ser escondido. */\n  @Input('t-hide-search') hideSearch?: boolean = false;\n\n  /** Propriedade que que recebe as literais definidas no componente `thf-multiselect`. */\n  @Input('t-literals') literals?: ThfMultiselectLiterals;\n\n  /** Placeholder do campo de pesquisa. */\n  @Input('t-placeholder-search') placeholderSearch: string;\n\n  /** Propriedade que recebe a lista de opÃ§Ãµes selecionadas. */\n  @Input('t-selected-values') selectedValues: Array<any> = [];\n\n  /** Propriedade que recebe a lista de opÃ§Ãµes que deverÃ£o ser criadas no dropdown. */\n  @Input('t-options') options: Array<ThfMultiselectOption> = [];\n\n  /** Evento disparado a cada tecla digitada na pesquisa. */\n  @Output('t-change-search') changeSearch = new EventEmitter();\n\n  /** Evento disparado a cada alteraÃ§Ã£o na lista das opÃ§Ãµes selecionadas. */\n  @Output('t-change') change = new EventEmitter();\n\n  /**\n   * Evento disparado quando for detectada uma aÃ§Ã£o que necessite fechar o dropdown.\n   * Por exemplo, no caso de ser teclado TAB dentro do dropdown, entÃ£o Ã© disparado este evento\n   * para notificar o componente principal que deve fechar o dropdown.\n   */\n  @Output('t-close-dropdown') closeDropdown = new EventEmitter();\n\n  @ViewChild('container', { read: ElementRef, static: true }) container: ElementRef;\n  @ViewChild('ulElement', {read: ElementRef, static: true }) ulElement: ElementRef;\n  @ViewChild('searchElement', { static: false }) searchElement: ThfMultiselectSearchComponent;\n\n  scrollTo(index) {\n    this.scrollTop = (index <= 2) ? 0 : (index * 44) - 88;\n  }\n\n  isSelectedItem(option: ThfMultiselectOption) {\n    return this.selectedValues.some(selectedItem => selectedItem === option.value);\n  }\n\n  clickItem(check, option) {\n    this.updateSelectedValues(check, option);\n\n    if (!this.hideSearch) {\n      this.searchElement.setFocus();\n    }\n  }\n\n  updateSelectedValues(checked, option) {\n    if (checked) {\n      this.selectedValues.push(option.value);\n    } else {\n      const indexSelectedValues = this.selectedValues.indexOf(option.value);\n      this.selectedValues.splice(indexSelectedValues, 1);\n    }\n\n    this.change.emit(this.selectedValues);\n  }\n\n  callChangeSearch(event) {\n    this.changeSearch.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown(event: any) {\n    if (event.keyCode === 9) {\n      this.closeDropdown.emit();\n    }\n  }\n\n  controlVisibility(toOpen) {\n    this.show = toOpen;\n    this.checkInitialOptions();\n\n    setTimeout(() => {\n      if (toOpen && this.searchElement && !this.hideSearch) {\n        this.searchElement.setFocus();\n        this.searchElement.clean();\n      }\n    });\n  }\n\n  private checkInitialOptions() {\n    if (this.options.length) {\n      this.haveOptions = true;\n    }\n  }\n\n}\n","/**\n * @usedBy ThfMultiselectComponent\n *\n * @description\n *\n * Define o tipo de busca usado no thf-multiselect.\n */\nexport enum ThfMultiselectFilterMode {\n  /** Verifica se o texto *inicia* com o valor pesquisado. */\n  startsWith,\n  /** Verifica se o texto *contÃ©m* o valor pesquisado. */\n  contains,\n  /** Verifica se o texto *finaliza* com o valor pesquisado. */\n  endsWith\n}\n","import { AfterContentChecked, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport { browserLanguage, convertToBoolean, removeDuplicatedOptions, removeUndefinedAndNullOptions, sortOptionsByProperty,\n          thfLocaleDefault } from '../../../utils/util';\nimport { requiredFailed } from './../validators';\n\nimport { ThfMultiselectFilterMode } from './thf-multiselect-filter-mode.enum';\nimport { ThfMultiselectLiterals } from './thf-multiselect-literals.interface';\nimport { ThfMultiselectOption } from './thf-multiselect-option.interface';\n\nexport const thfMultiselectLiteralsDefault = {\n  en: <ThfMultiselectLiterals> {\n    noData: 'No data found',\n    placeholderSearch: 'Search'\n  },\n  es: <ThfMultiselectLiterals> {\n    noData: 'Datos no encontrados',\n    placeholderSearch: 'Busca'\n  },\n  pt: <ThfMultiselectLiterals> {\n    noData: 'Nenhum dado encontrado',\n    placeholderSearch: 'Buscar'\n  }\n};\n\n/**\n * @description\n *\n * O thf-multiselect Ã© um componente de mÃºltipla seleÃ§Ã£o.\n * Este componente Ã© recomendado para dar ao usuÃ¡rio a opÃ§Ã£o de selecionar vÃ¡rios itens em uma lista.\n *\n * Quando a lista possuir poucos itens, deve-se dar preferÃªncia para o uso do thf-checkbox-group, por ser mais simples\n * e mais rÃ¡pido para a seleÃ§Ã£o do usuÃ¡rio.\n *\n * Este componente tambÃ©m nÃ£o deve ser utilizado em casos onde a seleÃ§Ã£o seja Ãºnica. Nesses casos, deve-se utilizar o\n * thf-select, thf-combo ou thf-radio-group.\n */\nexport abstract class ThfMultiselectBaseComponent implements AfterContentChecked, ControlValueAccessor, OnInit, Validator {\n\n  private _disabled?: boolean = false;\n  private _filterMode?: ThfMultiselectFilterMode = ThfMultiselectFilterMode.startsWith;\n  private _focus?: boolean = false;\n  private _hideSearch?: boolean = false;\n  private _literals: ThfMultiselectLiterals;\n  private _options: Array<ThfMultiselectOption>;\n  private _required?: boolean = false;\n  private _sort?: boolean = false;\n\n  private lastLengthModel;\n  private onModelChange: any;\n  // tslint:disable-next-line\n  private onModelTouched: any;\n  private readyToValidation = false;\n\n  selectedOptions: Array<ThfMultiselectOption> = [];\n  visibleOptionsDropdown: Array<ThfMultiselectOption> = [];\n  visibleDisclaimers = [];\n\n  /** Label no componente. */\n  @Input('t-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('t-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `thf-multiselect`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: ThfMultiselectLiterals = {\n   *    noData: 'Nenhum dado encontrado',\n   *    placeholderSearch: 'Buscar'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: ThfMultiselectLiterals = {\n   *    noData: 'Sem dados'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\n   *\n   * ```\n   * <thf-multiselect\n   *   [t-literals]=\"customLiterals\">\n   * </thf-thf-multiselect>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('t-literals') set literals(value: ThfMultiselectLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfMultiselectLiteralsDefault[thfLocaleDefault],\n        ...thfMultiselectLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = thfMultiselectLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || thfMultiselectLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /** Mensagem apresentada enquanto o campo estiver vazio. */\n  @Input('t-placeholder') placeholder?: string = '';\n\n  /**\n   * @description\n   *\n   * Placeholder do campo de pesquisa.\n   *\n   * > Caso o mesmo nÃ£o seja informado, o valor padrÃ£o serÃ¡ traduzido com base no idioma do navegador (pt, es e en).\n   *\n   * @default `Buscar`\n   */\n  @Input('t-placeholder-search') placeholderSearch?: string = '';\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio. Esta propriedade Ã© desconsiderada quando o campo estÃ¡ desabilitado (t-disabled).\n   *\n   * @default `false`\n   */\n  @Input('t-required') set required(required: boolean) {\n    this._required = <any>required === '' ? true : convertToBoolean(required);\n    this.updateModelToValidate();\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(disabled: boolean) {\n    this._disabled = <any>disabled === '' ? true : convertToBoolean(disabled);\n    this.updateModelToValidate();\n\n    this.updateVisibleItems();\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde o campo de pesquisa existente dentro do dropdown do thf-multiselect.\n   *\n   * @default `false`\n   */\n  @Input('t-hide-search') set hideSearch(hideSearch: boolean) {\n    this._hideSearch = <any>hideSearch === '' ? true : convertToBoolean(hideSearch);\n  }\n\n  get hideSearch() {\n    return this._hideSearch;\n  }\n\n  /**\n   * @description\n   *\n   * Nesta propriedade deve ser definida uma lista de objetos que implementam a interface ThfMultiselectOption.\n   * Esta lista deve conter os valores e os labels que serÃ£o apresentados na tela.\n   */\n  @Input('t-options') set options(options: Array<ThfMultiselectOption>) {\n    this._options = options;\n\n    this.validAndSortOptions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que a lista definida na propriedade t-options serÃ¡ ordenada pelo label antes de ser apresentada no\n   * dropdown.\n   *\n   * @default `false`\n   */\n  @Input('t-sort') set sort(sort: boolean) {\n    this._sort = <any>sort === '' ? true : convertToBoolean(sort);\n\n    this.validAndSortOptions();\n  }\n\n  get sort() {\n    return this._sort;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo iniciarÃ¡ com foco.\n   *\n   * @default `false`\n   */\n  @Input('t-focus') set focus(focus: boolean) {\n    this._focus = <any>focus === '' ? true : convertToBoolean(focus);\n  }\n\n  get focus() {\n    return this._focus;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de pesquisa utilizado no campo de busca, quando habilitado.\n   * Valores definidos no enum: ThfMultiselectFilterMode\n   *\n   * @default `startsWith`\n   */\n  @Input('t-filter-mode') set filterMode(filterMode: ThfMultiselectFilterMode) {\n    this._filterMode = (filterMode in ThfMultiselectFilterMode) ? filterMode : ThfMultiselectFilterMode.startsWith;\n    switch (this._filterMode.toString()) {\n      case 'startsWith':\n        this._filterMode = ThfMultiselectFilterMode.startsWith;\n        break;\n      case 'contains':\n        this._filterMode = ThfMultiselectFilterMode.contains;\n        break;\n      case 'endsWith':\n        this._filterMode = ThfMultiselectFilterMode.endsWith;\n        break;\n    }\n  }\n\n  get filterMode() {\n    return this._filterMode;\n  }\n\n  /** Pode ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('t-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  protected clickOutListener: () => void;\n  protected resizeListener: () => void;\n\n  ngOnInit() {\n    this.updateList(this.options);\n  }\n\n  ngAfterContentChecked() {\n    // Seta esta variÃ¡vel para indicar que a tela jÃ¡ foi carregada e podem ser aplicadas as validaÃ§Ãµes.\n    // A partir desse momento, toda vez que uma propriedade que interfere na validaÃ§Ã£o, for alterada, o model serÃ¡ atualizado\n    // para que o campo seja validado novamente.\n    this.readyToValidation = true;\n  }\n\n  validAndSortOptions() {\n    if (this.options && this.options.length) {\n\n      removeUndefinedAndNullOptions(this.options);\n      removeDuplicatedOptions(this.options);\n      this.setUndefinedLabels(this.options);\n\n      if (this.sort) {\n        sortOptionsByProperty(this.options, 'label');\n      }\n    }\n  }\n\n  setUndefinedLabels(options) {\n    options.forEach(option => {\n      if (!option['label']) {\n        option.label = option.value;\n      }\n    });\n  }\n\n  updateList(options: Array<ThfMultiselectOption>) {\n    if (options) {\n      this.visibleOptionsDropdown = options;\n    }\n  }\n\n  // Emite a atualizaÃ§Ã£o do model caso esta propriedade seja alterada dinamicamente.\n  updateModelToValidate() {\n    if (this.readyToValidation) {\n\n      // Este timeout Ã© necessÃ¡rio para quando for atualizado o model e uma propriedade do Datepicker ao mesmo tempo.\n      // Caso contrÃ¡rio, o writeValue nÃ£o Ã© disparado, nÃ£o atualizando o model do componente.\n      setTimeout(() => {\n        this.callOnChange(this.selectedOptions);\n      });\n    }\n  }\n\n  callOnChange(selectedOptions: Array<ThfMultiselectOption>) {\n    if (this.onModelChange) {\n      this.onModelChange(this.getValuesFromOptions(selectedOptions));\n      this.eventChange(selectedOptions);\n    }\n  }\n\n  eventChange(selectedOptions) {\n    if (selectedOptions && this.lastLengthModel !== selectedOptions.length) {\n      this.change.emit(selectedOptions);\n    }\n    this.lastLengthModel = selectedOptions ? selectedOptions.length : null;\n  }\n\n  getValuesFromOptions(selectedOptions: Array<ThfMultiselectOption>) {\n    return selectedOptions && selectedOptions.length ? selectedOptions.map(option => option.value) : [];\n  }\n\n  getLabelByValue(value) {\n    const index = this.options.findIndex(option => option.value === value);\n    return this.options[index].label;\n  }\n\n  changeItems(selectedValues) {\n    this.updateSelectedOptions(selectedValues);\n    this.callOnChange(this.selectedOptions);\n  }\n\n  searchByLabel(search: string, options: Array<ThfMultiselectOption>, filterMode: ThfMultiselectFilterMode) {\n    if (search && options && options.length) {\n      const newOptions: Array<ThfMultiselectOption> = [];\n      options.forEach(option => {\n        if (option.label && this.compareMethod(search, option, filterMode)) {\n          newOptions.push(option);\n        }\n      });\n      this.visibleOptionsDropdown = newOptions;\n    }\n  }\n\n  compareMethod(search: string, option: ThfMultiselectOption, filterMode: ThfMultiselectFilterMode) {\n    switch (filterMode) {\n      case ThfMultiselectFilterMode.startsWith:\n        return this.startsWith(search, option);\n      case ThfMultiselectFilterMode.contains:\n        return this.contains(search, option);\n      case ThfMultiselectFilterMode.endsWith:\n        return this.endsWith(search, option);\n    }\n  }\n\n  startsWith(search: string, option: ThfMultiselectOption) {\n    return option.label.toLowerCase().startsWith(search.toLowerCase());\n  }\n\n  contains(search: string, option: ThfMultiselectOption) {\n    return option.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n  }\n\n  endsWith(search: string, option: ThfMultiselectOption) {\n    return option.label.toLowerCase().endsWith(search.toLowerCase());\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n    if (requiredFailed(this.required, this.disabled, c.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n  updateSelectedOptions(values) {\n    this.selectedOptions = [];\n\n    values.forEach(value => {\n      this.options.forEach(option => {\n        if (option.value === value) {\n          this.selectedOptions.push(option);\n        }\n      });\n    });\n\n    this.updateVisibleItems();\n  }\n\n  writeValue(values: any): void {\n    if (!values) {\n      values = [];\n      this.callOnChange([]);\n    }\n\n    // Validar se todos os items existem entre os options, senÃ£o atualizar o model\n    this.updateSelectedOptions(values);\n\n    if (this.selectedOptions.length < values.length) {\n      this.callOnChange(this.selectedOptions);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  abstract updateVisibleItems(): void;\n\n}\n","import {\n  AfterViewInit, ChangeDetectorRef, Component, DoCheck, ElementRef, forwardRef, OnDestroy, Renderer2, ViewChild\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { isMobile } from './../../../utils/util';\nimport { ThfControlPositionService } from './../../../services/thf-control-position/thf-control-position.service';\nimport { ThfKeyCodeEnum } from './../../../enums/thf-key-code.enum';\n\nimport { ThfMultiselectBaseComponent } from './thf-multiselect-base.component';\n\nconst thfMultiselectContainerOffset = 8;\nconst thfMultiselectContainerPositionDefault = 'bottom';\n\n/**\n * @docsExtends ThfMultiselectBaseComponent\n *\n * @example\n *\n * <example name=\"thf-multiselect-basic\" title=\"Totvs Multiselect Basic\">\n *   <file name=\"sample-thf-multiselect-basic/sample-thf-multiselect-basic.component.html\"> </file>\n *   <file name=\"sample-thf-multiselect-basic/sample-thf-multiselect-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-multiselect-labs\" title=\"Totvs Multiselect Labs\">\n *   <file name=\"sample-thf-multiselect-labs/sample-thf-multiselect-labs.component.html\"> </file>\n *   <file name=\"sample-thf-multiselect-labs/sample-thf-multiselect-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-multiselect-vacation\" title=\"Totvs Multiselect - Vacation\">\n *   <file name=\"sample-thf-multiselect-vacation/sample-thf-multiselect-vacation.component.html\"> </file>\n *   <file name=\"sample-thf-multiselect-vacation/sample-thf-multiselect-vacation.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-multiselect-vacation-reactive-form\" title=\"Totvs Multiselect - Vacation Reactive Form\">\n *   <file name=\"sample-thf-multiselect-vacation-reactive-form/sample-thf-multiselect-vacation-reactive-form.component.html\"> </file>\n *   <file name=\"sample-thf-multiselect-vacation-reactive-form/sample-thf-multiselect-vacation-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-multiselect',\n  templateUrl: './thf-multiselect.component.html',\n  providers: [\n    ThfControlPositionService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfMultiselectComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfMultiselectComponent),\n      multi: true,\n    }\n  ]\n})\nexport class ThfMultiselectComponent extends ThfMultiselectBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  @ViewChild('dropdownElement', { read: ElementRef, static: true }) dropdownElement: ElementRef;\n  @ViewChild('dropdownElement', { static: true }) dropdown;\n  @ViewChild('disclaimerContainer', { read: ElementRef, static: true }) disclaimerContainerElement: ElementRef;\n  @ViewChild('iconElement', { read: ElementRef, static: true }) iconElement: ElementRef;\n  @ViewChild('inputElement', {read: ElementRef, static: true }) inputElement: ElementRef;\n\n  disclaimerOffset = 0;\n  dropdownIcon: string = 'thf-icon-arrow-down';\n  dropdownOpen: boolean = false;\n  initialized = false;\n  positionDisclaimerExtra;\n  timeoutResize;\n  visibleElement = false;\n\n  private isCalculateVisibleItems: boolean = true;\n\n  constructor(\n    public renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private controlPosition: ThfControlPositionService,\n    private el: ElementRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    if (this.focus) {\n      this.inputElement.nativeElement.focus();\n    }\n    this.initialized = true;\n  }\n\n  ngDoCheck() {\n    const inputWidth = this.inputElement.nativeElement.offsetWidth;\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if ((inputWidth && !this.visibleElement && this.initialized) || (inputWidth && this.isCalculateVisibleItems)) {\n      this.debounceResize();\n      this.visibleElement = true;\n      return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  getInputWidth() {\n    return this.el.nativeElement.querySelector('.thf-input').offsetWidth - 40;\n  }\n\n  getDisclaimersWidth() {\n    const disclaimers = this.el.nativeElement.querySelectorAll('thf-disclaimer');\n    return Array.from(disclaimers).map(disclaimer => disclaimer['offsetWidth']);\n  }\n\n  calculateVisibleItems() {\n    const disclaimersWidth = this.getDisclaimersWidth();\n    const inputWidth = this.getInputWidth();\n    const extraDisclaimerSize = 38;\n    const disclaimersVisible = disclaimersWidth[0];\n\n    this.visibleDisclaimers = [];\n\n    if (inputWidth > 0) {\n      let sum = 0;\n      let i = 0;\n      for (i = 0; i < this.selectedOptions.length; i++) {\n        sum += disclaimersWidth[i];\n        this.visibleDisclaimers.push(this.selectedOptions[i]);\n\n        if (sum > inputWidth) {\n          sum -= disclaimersWidth[i];\n          this.isCalculateVisibleItems = false;\n          break;\n        }\n      }\n\n      if (disclaimersVisible || !this.selectedOptions.length) {\n\n        if (i === this.selectedOptions.length) {\n          this.isCalculateVisibleItems = false;\n          return;\n        }\n\n        if (sum + extraDisclaimerSize > inputWidth) {\n          this.visibleDisclaimers.splice(-2, 2);\n          const label = '+' + (this.selectedOptions.length + 1 - i).toString();\n          this.visibleDisclaimers.push({value: '', label: label});\n        } else {\n          this.visibleDisclaimers.splice(-1, 1);\n          const label = '+' + (this.selectedOptions.length - i).toString();\n          this.visibleDisclaimers.push({value: '', label: label});\n        }\n\n      }\n    }\n  }\n\n  updateVisibleItems() {\n    this.visibleDisclaimers = [].concat(this.selectedOptions);\n\n    this.debounceResize();\n\n    // quando estiver dentro de modal\n    if (!this.inputElement.nativeElement.offsetWidth) {\n      this.isCalculateVisibleItems = true;\n    }\n  }\n\n  debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.calculateVisibleItems();\n    }, 200);\n  }\n\n  onKeyDown(event?: any) {\n    if (event.keyCode === ThfKeyCodeEnum.arrowUp || event.keyCode === ThfKeyCodeEnum.arrowDown) {\n      event.preventDefault();\n      this.controlDropdownVisibility(true);\n      return;\n    }\n\n    if (event.keyCode === ThfKeyCodeEnum.tab) {\n      this.controlDropdownVisibility(false);\n      return;\n    }\n  }\n\n  toggleDropdownVisibility() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.controlDropdownVisibility(!this.dropdownOpen);\n  }\n\n  openDropdown(toOpen) {\n\n    if (toOpen && !this.disabled) {\n      this.controlDropdownVisibility(true);\n    }\n\n  }\n\n  controlDropdownVisibility(toOpen: boolean) {\n    toOpen ? this.open() : this.close();\n  }\n\n  scrollToSelectedOptions() {\n  if (this.selectedOptions && this.selectedOptions.length) {\n      const index = this.options.findIndex(option => option.value === this.selectedOptions[0].value);\n      this.dropdown.scrollTo(index);\n    }\n  }\n\n  setVisibleOptionsDropdown(options) {\n    this.visibleOptionsDropdown = options;\n  }\n\n  changeSearch(event) {\n    (event && event.value) ? this.searchByLabel(event.value, this.options, this.filterMode) : this.setVisibleOptionsDropdown(this.options);\n\n    // timeout necessÃ¡rio para reposicionar corretamente quando dropdown estiver pra cima do input e realizar busca no input\n    setTimeout(() => this.adjustContainerPosition());\n  }\n\n  getPlaceholder() {\n    return (this.placeholder && !this.visibleDisclaimers.length) ? this.placeholder : '';\n  }\n\n  closeDisclaimer(value) {\n    const index = this.selectedOptions.findIndex(option => option.value === value);\n    this.selectedOptions.splice(index, 1);\n\n    this.updateVisibleItems();\n    this.callOnChange(this.selectedOptions);\n  }\n\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (!this.inputElement.nativeElement.contains(event.target) &&\n      !this.iconElement.nativeElement.contains(event.target) &&\n      !this.dropdownElement.nativeElement.contains(event.target) &&\n      !this.disclaimerContainerElement.nativeElement.contains(event.target) &&\n      this.dropdownOpen) {\n\n      this.controlDropdownVisibility(false);\n    }\n  }\n\n  private adjustContainerPosition(): void {\n    this.controlPosition.adjustPosition(thfMultiselectContainerPositionDefault);\n  }\n\n  private close(): void {\n    this.dropdownIcon = 'thf-icon-arrow-down';\n    this.dropdownOpen = false;\n\n    this.dropdown.controlVisibility(false);\n    this.setVisibleOptionsDropdown(this.options);\n\n    this.removeListeners();\n  }\n\n  private initializeListeners(): void {\n    this.clickOutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.updateVisibleItems();\n\n      isMobile() ? this.adjustContainerPosition() : this.close();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.adjustContainerPosition();\n  }\n\n  private open(): void {\n    this.dropdownIcon = 'thf-icon-arrow-up';\n    this.dropdownOpen = true;\n\n    this.dropdown.controlVisibility(true);\n    this.setVisibleOptionsDropdown(this.options);\n    this.initializeListeners();\n    this.scrollToSelectedOptions();\n\n    this.changeDetector.detectChanges();\n    this.setPositionDropdown();\n  }\n\n  private removeListeners(): void {\n    if (this.clickOutListener) {\n      this.clickOutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPositionDropdown(): void {\n    this.controlPosition.setElements(\n      this.dropdown.container.nativeElement,\n      thfMultiselectContainerOffset,\n      this.inputElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.adjustContainerPosition();\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ThfMultiselectOption } from './../thf-multiselect-option.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que constrÃ³i cada item no dropdown, contendo o checkbox e o label.\n */\n@Component({\n  selector: 'thf-multiselect-item',\n  templateUrl: './thf-multiselect-item.component.html'\n})\nexport class ThfMultiselectItemComponent {\n\n  /** OpÃ§Ã£o que irÃ¡ gerar o item, implementando a interface ThfMultiselectOption. */\n  @Input('t-option') option: ThfMultiselectOption = null;\n\n  /** Esta propriedade indica se o campo estÃ¡ selecionado ou nÃ£o. */\n  @Input('t-selected') selected?: boolean = false;\n\n  /** Evento que serÃ¡ disparado toda vez que o usuÃ¡rio marcar ou desmarcar um item. */\n  @Output('t-change') change = new EventEmitter();\n\n  itemClicked() {\n    this.selected = !this.selected;\n    this.change.emit(this.selected);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nconst thfRichTextBodyCommands = [\n  'bold', 'italic', 'underline', 'justifyleft', 'justifycenter', 'justifyright', 'justifyfull', 'insertUnorderedList'\n];\n\n@Component({\n  selector: 'thf-rich-text-body',\n  templateUrl: './thf-rich-text-body.component.html'\n})\nexport class ThfRichTextBodyComponent implements OnInit {\n\n  @ViewChild('bodyElement', { static: true }) bodyElement: ElementRef;\n\n  @Input('t-height') height?: string;\n\n  @Input('t-model-value') modelValue?: string;\n\n  @Input('t-placeholder') placeholder?: string;\n\n  @Input('t-readonly') readonly?: string;\n\n  @Output('t-commands') commands = new EventEmitter<any>();\n\n  @Output('t-value') value = new EventEmitter<any>();\n\n  ngOnInit() {\n    this.bodyElement.nativeElement.designMode = 'on';\n\n    // timeout necessÃ¡rio para setar o valor vindo do writeValue do componente principal.\n    setTimeout(() => { this.updateValueWithModelValue(); });\n  }\n\n  executeCommand(command: string) {\n    this.bodyElement.nativeElement.focus();\n    document.execCommand(command, false, null);\n    this.updateModel();\n    this.value.emit(this.modelValue);\n  }\n\n  onClick() {\n    this.emitSelectionCommands();\n  }\n\n  onKeyUp() {\n    // Tratamento necessÃ¡rio para eliminar a tag <br> criada no firefox quando o body for limpo.\n    if (!this.bodyElement.nativeElement.innerText.trim() && this.bodyElement.nativeElement.firstChild) {\n      this.bodyElement.nativeElement.firstChild.remove();\n    }\n    this.updateModel();\n    this.emitSelectionCommands();\n  }\n\n  update() {\n    setTimeout(() => { this.updateModel(); });\n    setTimeout(() => { this.onKeyUp(); });\n  }\n\n  private emitSelectionCommands() {\n    const commands: Array<string> = thfRichTextBodyCommands.filter(command => {\n      return document.queryCommandState(command);\n    });\n\n    this.commands.emit(commands);\n  }\n\n  private updateModel() {\n    this.modelValue = this.bodyElement.nativeElement.innerHTML;\n    this.value.emit(this.modelValue);\n  }\n\n  private updateValueWithModelValue() {\n    if (this.modelValue) {\n      this.bodyElement.nativeElement.insertAdjacentHTML('afterbegin', this.modelValue);\n    }\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\n/**\n * @description\n *\n * O componente `thf-rich-text` Ã© um editor de textos enriquecidos.\n *\n * Para ediÃ§Ã£o de texto simples sem formataÃ§Ã£o recomenda-se o uso do componente [**thf-textarea**](/documentation/thf-textarea).\n */\nexport abstract class ThfRichTextBaseComponent implements ControlValueAccessor, Validator {\n\n  private _height?: number;\n  private _placeholder: string;\n  private _readonly: boolean;\n\n  onChangeModel: any = null;\n  invalid: boolean = false;\n  value: string;\n\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  /**\n   * @description\n   *\n   * Mensagem que serÃ¡ apresentada quando a propriedade required estiver habilitada e o campo for limpo apÃ³s algo ser digitado.\n   */\n  @Input('t-error-message') errorMessage?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura da Ã¡rea de ediÃ§Ã£o de texto.\n   *\n   * > Altura mÃ­nima do componente Ã© `94` e a altura mÃ¡xima Ã© `262`.\n   */\n  @Input('t-height') set height(height: number) {\n    this._height = height;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto de apoio do campo.\n   */\n  @Input('t-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * RÃ³tulo do campo.\n   */\n  @Input('t-label') label?: string;\n\n  /** Nome e identificador do campo. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   *\n   * @default ''\n   */\n  @Input('t-placeholder') set placeholder(value: string) {\n    this._placeholder = value || '';\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('t-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  required?: boolean = false;\n  @Input('t-required') set setRequired(required: string) {\n    this.required = convertToBoolean(required);\n\n    this.validateModel(this.value);\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n    if (requiredFailed(this.required, false, abstractControl.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n  }\n\n  writeValue(value: string): void {\n    this.value = value;\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  protected updateModel(value: any) {\n    // Quando o rich-text nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangeModel) {\n      this.onChangeModel(value);\n    }\n  }\n\n  protected validateModel(value: any) {\n    if (this.validatorChange) {\n      this.validatorChange(value);\n    }\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy } from '@angular/core';\n\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThfRichTextBaseComponent } from './thf-rich-text-base.component';\n\n/**\n * @docsExtends ThfRichTextBaseComponent\n *\n * @example\n *\n * <example name=\"thf-rich-text-basic\" title=\"Totvs Rich Text Basic\">\n *   <file name=\"sample-thf-rich-text-basic/sample-thf-rich-text-basic.component.html\"> </file>\n *   <file name=\"sample-thf-rich-text-basic/sample-thf-rich-text-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-rich-text-recipe\" title=\"Totvs Rich Text Recipe\">\n *   <file name=\"sample-thf-rich-text-recipe/sample-thf-rich-text-recipe.component.html\"> </file>\n *   <file name=\"sample-thf-rich-text-recipe/sample-thf-rich-text-recipe.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-rich-text',\n  templateUrl: './thf-rich-text.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThfRichTextComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => ThfRichTextComponent),\n    multi: true,\n  }]\n})\nexport class ThfRichTextComponent extends ThfRichTextBaseComponent implements AfterViewInit, OnDestroy {\n\n  private listener = this.validateClassesForRequired.bind(this);\n\n  get errorMsg() {\n    return (this.errorMessage !== '' && !this.value && this.required && this.invalid) ? this.errorMessage : '';\n  }\n\n  constructor(private element: ElementRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n    if (!this.onChangeModel) {\n      this.element.nativeElement.addEventListener('keyup', this.listener);\n      this.element.nativeElement.addEventListener('cut', this.listener);\n      this.element.nativeElement.addEventListener('paste', this.listener);\n    }\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangeModel) {\n      this.element.nativeElement.removeEventListener('keyup', this.listener);\n      this.element.nativeElement.removeEventListener('cut', this.listener);\n      this.element.nativeElement.removeEventListener('paste', this.listener);\n    }\n  }\n\n  updateValue(value: string) {\n    this.value = value;\n    this.invalid = !value;\n    this.updateModel(this.value);\n  }\n\n  private validateClassesForRequired() {\n    setTimeout(() => {\n      const value = this.value;\n      const element = this.element.nativeElement;\n\n      if (!value && this.required) {\n        element.classList.add('ng-invalid');\n        element.classList.add('ng-dirty');\n      } else {\n        element.classList.remove('ng-invalid');\n      }\n    });\n  }\n\n}\n","export const thfRichTextLiteralsDefault = {\n  en: {\n    bold: 'Bold',\n    italic: 'Italic',\n    underline: 'Underline',\n    left: 'Left',\n    center: 'Center',\n    right: 'Right',\n    justify: 'Justify',\n    unorderedList: 'Bulleted list'\n  },\n  es: {\n    bold: 'Negrita',\n    italic: 'Cursiva',\n    underline: 'Subrayado',\n    left: 'Izquierda',\n    center: 'Centro',\n    right: 'Derecha',\n    justify: 'Justificado',\n    unorderedList: 'Lista con viÃ±etas'\n  },\n  pt: {\n    bold: 'Negrito',\n    italic: 'ItÃ¡lico',\n    underline: 'Sublinhado',\n    left: 'Esquerda',\n    center: 'Centro',\n    right: 'Direita',\n    justify: 'Justificado',\n    unorderedList: 'Lista com marcadores'\n  }\n};\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Output, ViewChild, Input } from '@angular/core';\n\nimport { ThfLanguageService } from '../../../../services/thf-language/thf-language.service';\nimport { thfRichTextLiteralsDefault } from '../thf-rich-text-literals';\nimport { ThfRichTextToolbarButtonGroupItem } from '../interfaces/thf-rich-text-toolbar-button-group-item.interface';\n\n@Component({\n  selector: 'thf-rich-text-toolbar',\n  templateUrl: './thf-rich-text-toolbar.component.html'\n})\nexport class ThfRichTextToolbarComponent implements AfterViewInit {\n\n  private _readonly: boolean;\n\n  readonly literals = {\n    ...thfRichTextLiteralsDefault[this.languageService.getShortLanguage()]\n  };\n\n  alignButtons: Array<ThfRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'justifyleft',\n      icon: 'thf-icon-align-left',\n      tooltip: this.literals.left,\n      action: this.emitAlignCommand.bind(this, 'justifyleft'),\n      selected: true\n    },\n    {\n      command: 'justifycenter',\n      icon: 'thf-icon-align-center',\n      tooltip: this.literals.center,\n      action: this.emitAlignCommand.bind(this, 'justifycenter')\n    },\n    {\n      command: 'justifyright',\n      icon: 'thf-icon-align-right',\n      tooltip: this.literals.right,\n      action: this.emitAlignCommand.bind(this, 'justifyright')\n    },\n    {\n      command: 'justifyfull',\n      icon: 'thf-icon-align-justify',\n      tooltip: this.literals.justify,\n      action: this.emitAlignCommand.bind(this, 'justifyfull')\n    }\n  ];\n\n  formatButtons: Array<ThfRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'bold',\n      icon: 'thf-icon-text-bold',\n      tooltip: this.literals.bold,\n      action: this.emitCommand.bind(this, 'bold')\n    },\n    {\n      command: 'italic',\n      icon: 'thf-icon-text-italic',\n      tooltip: this.literals.italic,\n      action: this.emitCommand.bind(this, 'italic')\n    },\n    {\n      command: 'underline',\n      icon: 'thf-icon-text-underline',\n      tooltip: this.literals.underline,\n      action: this.emitCommand.bind(this, 'underline')\n    }\n  ];\n\n  listButtons: Array<ThfRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'insertUnorderedList',\n      icon: 'thf-icon-list',\n      tooltip: this.literals.unorderedList,\n      action: this.emitCommand.bind(this, 'insertUnorderedList')\n    }\n  ];\n\n  @ViewChild('toolbarElement', { static: true }) toolbarElement: ElementRef;\n\n  @Input('t-readonly') set readonly(value: boolean) {\n    this._readonly = value;\n    this.toggleDisableButtons(this._readonly);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  @Output('t-command') command = new EventEmitter<string>();\n\n  constructor(private languageService: ThfLanguageService) { }\n\n  ngAfterViewInit() {\n    this.removeButtonFocus();\n  }\n\n  setButtonsStates(commands: Array<string>) {\n    if (!this.readonly) {\n      this.alignButtons.forEach(button => { button.selected = commands.includes(button.command); });\n      this.formatButtons.forEach(button => { button.selected = commands.includes(button.command); });\n      this.listButtons[0].selected = commands.includes(this.listButtons[0].command);\n    }\n  }\n\n  private emitAlignCommand(command: string) {\n    const index = this.alignButtons.findIndex( btn => btn.command === command );\n    if (this.alignButtons[index].selected) {\n      this.alignButtons[index].selected = false;\n    }\n    this.command.emit(command);\n  }\n\n  private emitCommand(command: string) {\n    this.command.emit(command);\n  }\n\n  private removeButtonFocus() {\n    const buttons = this.toolbarElement.nativeElement.querySelectorAll('button');\n    buttons.forEach(button => { button.setAttribute('tabindex', '-1'); });\n  }\n\n  private toggleDisableButtons(state: boolean) {\n    this.alignButtons.forEach(button => { button.disabled = state; });\n    this.formatButtons.forEach(button => { button.disabled = state; });\n    this.listButtons[0].disabled = state;\n  }\n\n}\n","import { Component, ElementRef, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';\n\n/**\n * @docsExtends ThfInputBaseComponent\n *\n * @example\n *\n * <example name=\"thf-input-basic\" title=\"Totvs Input Basic\">\n *  <file name=\"sample-thf-input-basic/sample-thf-input-basic.component.html\"> </file>\n *  <file name=\"sample-thf-input-basic/sample-thf-input-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-input-labs\" title=\"Totvs Input Labs\">\n *  <file name=\"sample-thf-input-labs/sample-thf-input-labs.component.html\"> </file>\n *  <file name=\"sample-thf-input-labs/sample-thf-input-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-input-reactive-form\" title=\"Totvs Input - Reactive Form\">\n *  <file name=\"sample-thf-input-reactive-form/sample-thf-input-reactive-form.component.html\"> </file>\n *  <file name=\"sample-thf-input-reactive-form/sample-thf-input-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-input',\n  templateUrl: './thf-input.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThfInputComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => ThfInputComponent),\n    multi: true,\n  }]\n})\nexport class ThfInputComponent extends ThfInputGeneric {\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n}\n","import {  ElementRef } from '@angular/core';\n\nimport { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';\n\nexport abstract class ThfNumberBaseComponent extends ThfInputGeneric {\n\n  type = 'number';\n\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n\n  eventOnInput(e: any) {\n    if (!this.mask) {\n      let value = e.target.value;\n      const valueMaxlength = this.validMaxLength(this.maxlength, value);\n\n      if (value !== valueMaxlength) {\n        value = valueMaxlength;\n\n        this.inputEl.nativeElement.value = value;\n      }\n\n      this.callOnChange(this.formatNumber(value));\n    }\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n\n    if (maxlength && value.length > maxlength) {\n      const substringValue = value.toString().substring(0, maxlength);\n\n      if (substringValue && this.isEndWithDot(substringValue)) {\n        return substringValue.toString().substring(0, maxlength - 1);\n      }\n\n      return substringValue;\n    }\n\n    return value;\n  }\n\n  writeValueModel(value) {\n    if (this.inputEl) {\n      if (value || value === 0) {\n        if (this.mask) {\n          this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));\n\n          // Se o model for definido como formatado, entÃ£o precisa atualizÃ¡-lo no primeiro acesso\n          if (this.objMask.formatModel) {\n            this.onChangePropagate(this.objMask.valueToModel);\n          }\n        } else {\n          this.inputEl.nativeElement.value = value;\n        }\n      } else { // Se for o valor for undefined, deve limpar o campo\n        this.inputEl.nativeElement.value = '';\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n\n    this.changeModel.emit(value);\n\n  }\n\n  private isEndWithDot(value: string) {\n    return value && value.lastIndexOf('.') === value.length - 1;\n  }\n\n  private formatNumber(value) {\n    return value ? Number(value) : null;\n  }\n\n}\n","import { Component, ElementRef, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { minFailed, maxFailed } from '../validators';\nimport { ThfNumberBaseComponent } from './thf-number-base.component';\n\n/**\n * @docsExtends ThfInputBaseComponent\n *\n * @description\n *\n * thf-number Ã© um input especÃ­fico para receber apenas nÃºmeros.\n * Ã possÃ­vel configurar um valor mÃ­nimo, mÃ¡ximo e um step com t-min, t-max e t-step,\n * respectivamente.\n *\n * @example\n *\n * <example name=\"thf-number-basic\" title=\"Totvs Number Basic\">\n *  <file name=\"sample-thf-number-basic/sample-thf-number-basic.component.html\"> </file>\n *  <file name=\"sample-thf-number-basic/sample-thf-number-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-number-labs\" title=\"Totvs Number Labs\">\n *  <file name=\"sample-thf-number-labs/sample-thf-number-labs.component.html\"> </file>\n *  <file name=\"sample-thf-number-labs/sample-thf-number-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-number-calculate\" title=\"Totvs Number - Calculate\">\n *  <file name=\"sample-thf-number-calculate/sample-thf-number-calculate.component.html\"> </file>\n *  <file name=\"sample-thf-number-calculate/sample-thf-number-calculate.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-number',\n  templateUrl: './thf-number.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThfNumberComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => ThfNumberComponent),\n    multi: true,\n  }]\n})\nexport class ThfNumberComponent extends ThfNumberBaseComponent {\n\n  /** Valor mÃ­nimo. */\n  min?: number;\n  @Input('t-min') set setMin(min: string) {\n    const parsedInt = parseInt(min, 10);\n    this.min = !isNaN(parsedInt) ? parsedInt : undefined;\n    this.validateModel();\n  }\n\n  /** Valor mÃ¡ximo. */\n  max?: number;\n  @Input('t-max') set setMax(max: string) {\n    const parsedInt = parseInt(max, 10);\n    this.max = !isNaN(parsedInt) ? parsedInt : undefined;\n    this.validateModel();\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Intervalo.\n   *\n   * @default 1\n   */\n  @Input('t-step') step?: string = '1';\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (minFailed(this.min, abstractControl.value)) {\n      return { min: {\n        valid: false,\n      }};\n    }\n\n    if (maxFailed(this.max, abstractControl.value)) {\n      return { max: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n}\n","import { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Component, ElementRef, forwardRef, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';\n\n/**\n * @docsExtends ThfInputBaseComponent\n *\n * @description\n * O thf-password Ã© um input especÃ­fico para senhas. JÃ¡ possui tipo, estilo e Ã­cone predefinidos.\n *\n * @example\n *\n * <example name=\"thf-password-basic\" title=\"Totvs Password Basic\">\n *   <file name=\"sample-thf-password-basic/sample-thf-password-basic.component.html\"> </file>\n *   <file name=\"sample-thf-password-basic/sample-thf-password-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-password-labs\" title=\"Totvs Password Labs\">\n *   <file name=\"sample-thf-password-labs/sample-thf-password-labs.component.html\"> </file>\n *   <file name=\"sample-thf-password-labs/sample-thf-password-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-password-reset\" title=\"Totvs Password - Reset\">\n *   <file name=\"sample-thf-password-reset/sample-thf-password-reset.component.html\"> </file>\n *   <file name=\"sample-thf-password-reset/sample-thf-password-reset.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-password',\n  templateUrl: './thf-password.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThfPasswordComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => ThfPasswordComponent),\n    multi: true,\n  }]\n})\nexport class ThfPasswordComponent extends ThfInputGeneric {\n\n  private _hidePasswordPeek?: boolean = false;\n\n  type = 'password';\n  visiblePassword = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite esconder a funÃ§Ã£o de espiar a senha digitada.\n   *\n   * @default `false`\n   */\n  @Input('t-hide-password-peek') set hidePasswordPeek(value: boolean) {\n    this._hidePasswordPeek = convertToBoolean(value);\n    if (value) {\n      this.visiblePassword = false;\n      this.type = 'password';\n    }\n  }\n\n  get hidePasswordPeek(): boolean {\n    return this._hidePasswordPeek;\n  }\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n  showPassword() {\n    this.visiblePassword = !this.visiblePassword;\n    this.type = this.type === 'password' ? 'text' : 'password';\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt, removeDuplicatedOptions } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { ThfRadioGroupOption } from './thf-radio-group-option.interface';\n\nconst thfRadioGroupColumnsDefaultLength: number = 6;\nconst thfRadioGroupColumnsTotalLength: number = 12;\n\n/**\n * @description\n *\n * O componente `thf-radio-group` deve ser utilizado para disponibilizar mÃºltiplas opÃ§Ãµes ao usuÃ¡rio, permitindo a ele que\n * selecione apenas uma delas. Seu uso Ã© recomendado para um nÃºmero pequeno de opÃ§Ãµes, caso contrÃ¡rio, recomenda-se o uso\n * do [**thf-combo**](/documentation/thf-combo) ou [**thf-select**](/documentation/thf-select).\n *\n * Este nÃ£o Ã© um componente de multiseleÃ§Ã£o, se for este o caso, deve-se utilizar o\n * [**thf-checkbox-group**](/documentation/thf-checkbox-group).\n *\n * > Ao passar um valor para o *model* que nÃ£o esteja na lista de opÃ§Ãµes, o mesmo serÃ¡ definido como `undefined`.\n */\nexport abstract class ThfRadioGroupBaseComponent implements ControlValueAccessor, Validator {\n\n  private _columns: number = thfRadioGroupColumnsDefaultLength;\n  private _disabled?: boolean = false;\n  private _options: Array<ThfRadioGroupOption>;\n  private _required?: boolean = false;\n\n  mdColumns: number = thfRadioGroupColumnsDefaultLength;\n  value: any;\n\n  private onChangePropagate: any = null;\n  private validatorChange;\n\n  /** Nome das opÃ§Ãµes. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a quantidade de colunas para exibiÃ§Ã£o das opÃ§Ãµes.\n   *\n   * **ConsideraÃ§Ãµes:**\n   *  - Ã possÃ­vel exibir as opÃ§Ãµes entre `1` e `4` colunas.\n   *  - O nÃºmero mÃ¡ximo de colunas Ã© invariÃ¡vel nas seguintes resoluÃ§Ãµes:\n   *    + `sm`: `1`\n   *    + `md`: `2`\n   *\n   * @default `2`\n   */\n  @Input('t-columns') set columns(value: number) {\n    const columns = convertToInt(value, thfRadioGroupColumnsDefaultLength);\n\n    this._columns = this.getGridSystemColumns(columns, 4);\n    this.mdColumns = this.getGridSystemColumns(columns, 2);\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('t-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * Lista de opÃ§Ãµes que serÃ£o exibidas.\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface ThfRadioGroupOption.\n   */\n  @Input('t-options') set options(value: Array<ThfRadioGroupOption>) {\n    this._options = value;\n    removeDuplicatedOptions(this.options);\n  }\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /** Evento ao alterar valor do campo. */\n  @Output('t-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // Deve retornar o valor elemento que contÃ©m o valor passado por parÃ¢metro\n  abstract getElementByValue(value: any): any;\n\n  // FunÃ§Ã£o que controla quando deve ser emitido onChange e atualiza o Model\n  changeValue(changedValue: any) {\n    if (this.onChangePropagate) {\n      this.onChangePropagate(changedValue);\n    }\n\n    if (this.value !== changedValue) {\n      this.change.emit(changedValue);\n    }\n\n    this.value = changedValue;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangePropagate = fn;\n  }\n\n  registerOnTouched(fn: any) { }\n\n  registerOnValidatorChange(fn: any) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n  }\n\n  writeValue(modelValue: any) {\n    this.value = modelValue;\n\n    // Busca radio com o valor especificado\n    const element = this.getElementByValue(modelValue);\n    if (!element && this.onChangePropagate) {\n      this.value = undefined;\n      this.onChangePropagate(this.value);\n    }\n  }\n\n  private checkColumnsRange(columns, maxColumns): boolean {\n    const minColumns = 1;\n\n    return columns >= minColumns && columns <= maxColumns;\n  }\n\n  private getGridSystemColumns(columns: number, maxColumns: number): number {\n    const gridSystemColumns = thfRadioGroupColumnsTotalLength / columns;\n\n    return this.checkColumnsRange(columns, maxColumns) ? gridSystemColumns : thfRadioGroupColumnsDefaultLength;\n  }\n\n  private validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n}\n","import { Component, DoCheck, ElementRef, forwardRef, Input, IterableDiffers, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { removeDuplicatedOptions } from '../../../utils/util';\n\nimport { ThfRadioGroupBaseComponent } from './thf-radio-group-base.component';\n\n/**\n * @docsExtends ThfRadioGroupBaseComponent\n *\n * @example\n *\n * <example name=\"thf-radio-group-basic\" title=\"Totvs Radio Group Basic\">\n *  <file name=\"sample-thf-radio-group-basic/sample-thf-radio-group-basic.component.html\"> </file>\n *  <file name=\"sample-thf-radio-group-basic/sample-thf-radio-group-basic.component.ts\"> </file>\n *  <file name=\"sample-thf-radio-group-basic/sample-thf-radio-group-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-thf-radio-group-basic/sample-thf-radio-group-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-radio-group-labs\" title=\"Totvs Radio Group Labs\">\n *  <file name=\"sample-thf-radio-group-labs/sample-thf-radio-group-labs.component.html\"> </file>\n *  <file name=\"sample-thf-radio-group-labs/sample-thf-radio-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-radio-group-translator\" title=\"Totvs Radio Group - Translator\">\n *  <file name=\"sample-thf-radio-group-translator/sample-thf-radio-group-translator.component.html\"> </file>\n *  <file name=\"sample-thf-radio-group-translator/sample-thf-radio-group-translator.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-radio-group-translator-reactive-form\" title=\"Totvs Radio Group - Translator Reactive Form\">\n *  <file name=\"sample-thf-radio-group-translator-reactive-form/sample-thf-radio-group-translator-reactive-form.component.html\"> </file>\n *  <file name=\"sample-thf-radio-group-translator-reactive-form/sample-thf-radio-group-translator-reactive-form.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'thf-radio-group',\n  templateUrl: './thf-radio-group.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfRadioGroupComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfRadioGroupComponent),\n      multi: true,\n    }\n  ]\n})\nexport class ThfRadioGroupComponent extends ThfRadioGroupBaseComponent implements DoCheck {\n\n  /** Label do campo. */\n  @Input('t-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('t-help') help?: string;\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  differ: any;\n\n  constructor(differs: IterableDiffers) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this.options);\n    if (change) {\n      removeDuplicatedOptions(this.options);\n    }\n  }\n\n  eventClick(value: any, disabled: any) {\n    if (!disabled) {\n      this.changeValue(value);\n    }\n  }\n\n  getElementByValue(value) {\n    return this.inputEl.nativeElement.querySelector(`input[value='${value}']`);\n  }\n\n  onKeyUp(event: KeyboardEvent, value) {\n    const key = event.keyCode || event.which;\n\n    if (this.isArrowKey(key)) {\n      this.changeValue(value);\n    }\n  }\n\n  private isArrowKey(key: number) {\n    return key >= 37 && key <= 40;\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { ChangeDetectorRef, ElementRef, EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, removeDuplicatedOptions, removeUndefinedAndNullOptions } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { ThfSelectOption } from './thf-select-option.interface';\n\n/**\n * @description\n *\n * O componente thf-select exibe uma lista de valores e permite que o usuÃ¡rio selecione um desses valores.\n * Os valores listados podem ser fixos ou dinÃ¢micos de acordo com a necessidade do desenvolvedor, dando mais flexibilidade ao componente.\n * O thf-select nÃ£o permite que o usuÃ¡rio informe um valor diferente dos valores listados, isso garante a consistÃªncia da informaÃ§Ã£o.\n * O thf-select nÃ£o permite que sejam passados valores duplicados, undefined e null para as opÃ§Ãµes, excluindo-os da lista.\n *\n * > Ao passar um valor para o _model_ que nÃ£o estÃ¡ na lista de opÃ§Ãµes, o mesmo serÃ¡ definido como `undefined`.\n *\n * TambÃ©m existe a possibilidade de utilizar um _template_ para a exibiÃ§Ã£o dos itens da lista,\n * veja mais em **[t-select-option-template](/documentation/thf-select-option-template)**.\n */\nexport abstract class ThfSelectBaseComponent implements ControlValueAccessor, Validator {\n\n  private _disabled?: boolean = false;\n  private _options: Array<ThfSelectOption>;\n  private _readonly: boolean = false;\n  private _required?: boolean = false;\n\n  private onValidatorChange;\n\n  /** Adiciona uma label no componente. */\n  @Input('t-label') label?: string;\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('t-help') help?: string;\n\n  /** Mensagem que aparecerÃ¡ enquanto nenhuma opÃ§Ã£o estiver selecionada. */\n  @Input('t-placeholder') placeholder?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /**\n   * Nesta propriedade deve ser definido uma coleÃ§Ã£o de objetos que implementam a interface ThfSelectOption.\n   * Caso esta lista estiver vazia, o model serÃ¡ undefined.\n   */\n  @Input('t-options') set options(options: Array<ThfSelectOption>) {\n    this._options = options;\n    removeDuplicatedOptions(this._options);\n    removeUndefinedAndNullOptions(this._options);\n    this.onUpdateOptions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /** Deve ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('t-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(disabled: string | boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente para leitura.\n   *\n   * @default `false`\n   */\n  @Input('t-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('t-required')\n  set required(required: string | boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n  get required() {\n    return this._required;\n  }\n\n  changeDetector: ChangeDetectorRef;\n  onModelChange: any;\n  onModelTouched: any;\n  readyToValidation: boolean = false;\n\n  protected clickoutListener: () => void;\n\n  constructor(public element: ElementRef, changeDetector: ChangeDetectorRef) {\n    this.element = element;\n    this.changeDetector = changeDetector;\n  }\n\n  callModelChange(value: any) {\n    // Caso o componente estiver dentro de um form, terÃ¡ acesso ao mÃ©todo onModelChange.\n    return (this.onModelChange) ? this.onModelChange(value) : this.ngModelChange.emit(value);\n  }\n\n  onChange(value) {\n    this.change.emit(value);\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this._required, this._disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n    return null;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: any) {\n    this.onValidatorChange = fn;\n  }\n\n  private validateModel() {\n    if (this.onValidatorChange) {\n      this.onValidatorChange();\n    }\n  }\n\n  abstract onUpdateOptions(): void;\n\n  abstract updateModel(selectOption: ThfSelectOption): void;\n\n  abstract writeValue(value: any): void;\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy ThfSelectComponent\n *\n * @description\n *\n * Esta diretiva permite personalizar o conteÃºdo dos itens exibidos na lista suspensa do componente.\n *\n * > Quando utilizada em _mobile_ serÃ¡ exibido o componente nativo.\n *\n * Para personalizar o conteÃºdo de cada item da lista deve-se utilizar a diretiva `t-select-option-template` com `ng-template`\n * dentro da tag `thf-select`.\n *\n * Para obter a referÃªncia do item atual, use `let-option`, com isso vocÃª terÃ¡ acesso aos valores e poderÃ¡ personalizar sua exibiÃ§Ã£o.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <thf-select\n *   name=\"select\"\n *   [(ngModel)]=\"select\"\n *   [t-options]=\"options\">\n *     <ng-template t-select-option-template let-option>\n *       <option-template [option]=\"option\"></option-template>\n *     </ng-template>\n * </thf-select>\n * ...\n * ```\n *\n * ```\n * ...\n * <thf-select\n *   name=\"select\"\n *   [(ngModel)]=\"select\"\n *   [t-options]=\"options\">\n *     <div *t-select-option-template=\"let option\">\n *       <option-template [option]=\"option\"></option-template>\n *     </div>\n * </thf-select>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[t-select-option-template]'\n})\nexport class ThfSelectOptionTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, ContentChild, Component, DoCheck, ElementRef, forwardRef, HostListener,\n  IterableDiffers, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { isMobile, removeDuplicatedOptions, removeUndefinedAndNullOptions, validValue } from '../../../utils/util';\nimport { ThfControlPositionService } from './../../../services/thf-control-position/thf-control-position.service';\nimport { ThfKeyCodeEnum } from './../../../enums/thf-key-code.enum';\n\nimport { ThfSelectBaseComponent } from './thf-select-base.component';\nimport { ThfSelectOption } from './thf-select-option.interface';\nimport { ThfSelectOptionTemplateDirective } from './thf-select-option-template/thf-select-option-template.directive';\n\nconst thfSelectContentOffset = 8;\nconst thfSelectContentPositionDefault = 'bottom';\n\n/**\n * @docsExtends ThfSelectBaseComponent\n *\n * @example\n *\n * <example name=\"thf-select-basic\" title=\"Totvs Select Basic\">\n *   <file name=\"sample-thf-select-basic/sample-thf-select-basic.component.html\"> </file>\n *   <file name=\"sample-thf-select-basic/sample-thf-select-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-select-labs\" title=\"Totvs Select Labs\">\n *   <file name=\"sample-thf-select-labs/sample-thf-select-labs.component.html\"> </file>\n *   <file name=\"sample-thf-select-labs/sample-thf-select-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-select-customer-registration\" title=\"Totvs Select - Customer registration\">\n *   <file name=\"sample-thf-select-customer-registration/sample-thf-select-customer-registration.component.html\"> </file>\n *   <file name=\"sample-thf-select-customer-registration/sample-thf-select-customer-registration.component.ts\"> </file>\n *   <file name=\"sample-thf-select-customer-registration/sample-thf-select-customer-registration.service.ts\"> </file>\n *   <file name='sample-thf-select-customer-registration/sample-thf-select-customer-registration.component.e2e-spec.ts'> </file>\n *   <file name='sample-thf-select-customer-registration/sample-thf-select-customer-registration.component.po.ts'> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-select',\n  templateUrl: './thf-select.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfSelectComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfSelectComponent),\n      multi: true,\n    },\n    ThfControlPositionService\n  ]\n})\nexport class ThfSelectComponent extends ThfSelectBaseComponent implements DoCheck {\n\n  displayValue;\n  isMobile: any = isMobile();\n  modelValue: any;\n  open: boolean = false;\n  selectedValue: any;\n  selectIcon: string = 'thf-icon-arrow-down';\n  scrollPosition: number;\n\n  private differ: any;\n\n  eventListenerFunction: () => void;\n  eventResizeListener: () => void;\n\n  @ContentChild(ThfSelectOptionTemplateDirective, { static: true }) selectOptionTemplate: ThfSelectOptionTemplateDirective;\n\n  @ViewChild('contentList', {read: ElementRef, static: true}) contentList: ElementRef;\n  @ViewChild('icon', {read: ElementRef, static: true}) iconElement: ElementRef;\n  @ViewChild('select', {read: ElementRef, static: true}) selectElement: ElementRef;\n  @ViewChild('selectButton', {read: ElementRef, static: true}) selectButtonElement: ElementRef;\n\n  constructor(\n    element: ElementRef,\n    changeDetector: ChangeDetectorRef,\n    differs: IterableDiffers,\n    public renderer: Renderer2,\n    private controlPosition: ThfControlPositionService) {\n\n    super(element, changeDetector);\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  get isInvisibleSelectNative() {\n    return this.readonly && this.isMobile;\n  }\n\n  @HostListener('keydown', ['$event']) onKeydown($event?: any) {\n\n    const charCode = $event.which || $event.keyCode;\n\n    // Tratamentos para quando o readonly for ativado.\n    if (this.readonly) {\n      // deve matar o evento do teclado devido a alterar o valor do model mesmo com os options fechados\n      if (charCode !== ThfKeyCodeEnum.tab) {\n        this.disableDefaultEventAndToggleButton();\n        $event.preventDefault();\n      }\n      return;\n    }\n\n    // Seleciona os itens com as teclas \"up\" e \"down\"\n    if ((!this.open || $event.altKey) && (charCode === ThfKeyCodeEnum.arrowDown || charCode === ThfKeyCodeEnum.arrowUp)) {\n      this.disableDefaultEventAndToggleButton();\n    }\n\n    // Abre o thf-select com as teclas \"enter\" e \"espaÃ§o\"\n    if (charCode === ThfKeyCodeEnum.enter || charCode === ThfKeyCodeEnum.space) {\n      this.disableDefaultEventAndToggleButton();\n    }\n\n    // Fecha o thf-select com a tecla \"tab\"\n    if (this.open && charCode === ThfKeyCodeEnum.tab) {\n      $event.preventDefault();\n      this.toggleButton();\n    }\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this.options);\n    if (change) {\n      removeDuplicatedOptions(this.options);\n      removeUndefinedAndNullOptions(this.options);\n    }\n  }\n\n  hideDropDown() {\n    this.selectIcon = 'thf-icon-arrow-down';\n    this.selector('.thf-select-container').classList.remove('thf-select-show');\n    this.open = false;\n\n    this.changeDetector.markForCheck();\n    this.selectElement.nativeElement.focus();\n\n    this.removeListeners();\n  }\n\n  isEqual(value: any, inputValue: any): boolean {\n    if ((value || value === 0) && inputValue) {\n      return value.toString() === inputValue.toString();\n    }\n\n    if ((value === null && inputValue !== null) ||\n        (value === undefined && inputValue !== undefined)) {\n      value = `${value}`; // Transformando em string\n    }\n\n    return value === inputValue;\n  }\n\n  onOptionClick(option: ThfSelectOption) {\n    this.toggleButton();\n    this.updateModel(option);\n  }\n\n  // Altera o valor ao selecionar um item.\n  onSelectChange(value: any) {\n    const ulDropdpwn = this.element.nativeElement.querySelector('ul.thf-select-content');\n\n    if (value && this.options && this.options.length) {\n\n      const optionFound: ThfSelectOption = this.options.find(option => {\n        return this.isEqual(option.value, value);\n      });\n\n      if (optionFound) {\n        const index = this.options.indexOf(optionFound);\n        ulDropdpwn.scrollTop =  this.scrollValue(index, ulDropdpwn.clientHeight);\n        this.updateModel(optionFound);\n      }\n    }\n  }\n\n  onUpdateOptions() {\n    if (this.modelValue) {\n      this.onSelectChange(this.modelValue);\n    }\n  }\n\n  scrollValue(index, clientHeight) {\n    const heightScrollValue: number = (index + 1) * this.getSelectItemHeight();\n    return this.scrollPosition = heightScrollValue > clientHeight ? heightScrollValue :  0;\n  }\n\n  selector(query: string): Element {\n    return this.element.nativeElement.querySelector(query);\n  }\n\n  toggleButton(): void {\n    this.open ? this.hideDropDown() : this.showDropdown();\n  }\n\n  // Atualiza valores\n  updateModel(option: ThfSelectOption): void {\n    if (this.selectedValue !== option.value) {\n      this.selectedValue = option.value;\n      this.selectElement.nativeElement.value = option.value;\n      this.callModelChange(option.value);\n      this.displayValue = option.label;\n      this.onChange(option.value);\n    }\n  }\n\n  // Esconde Content do Select quando for clicado fora\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (!this.selectButtonElement.nativeElement.contains(event.target) &&\n        !this.iconElement.nativeElement.contains(event.target)) {\n      this.hideDropDown();\n    }\n  }\n\n  // Recebe as alteraÃ§Ãµes do model\n  writeValue(value: any) {\n\n    const optionFound = this.options.find(option => {\n      return this.isEqual(option.value, value);\n    });\n\n    if (optionFound) {\n      this.selectElement.nativeElement.value = optionFound.value;\n      this.selectedValue = optionFound.value;\n      this.displayValue = (optionFound.label);\n\n    } else if (validValue(this.selectedValue)) {\n      this.selectElement.nativeElement.value = undefined;\n      this.callModelChange(undefined);\n      this.selectedValue = undefined;\n      this.displayValue = undefined;\n    }\n\n    this.modelValue = value;\n    this.changeDetector.detectChanges();\n  }\n\n  // MÃ©todo necessÃ¡rio para bloquear o evento default do select nativo.\n  // Ao utilizar event.preventDefault(), nos navegadores Firefox e IE o mesmo nÃ£o cancela o evento.\n  private disableDefaultEventAndToggleButton() {\n    this.selectElement.nativeElement.style.display = 'none';\n\n    setTimeout(() => {\n      this.selectElement.nativeElement.style.display = 'block';\n      this.toggleButton();\n    });\n  }\n\n  private getSelectItemHeight() {\n    const selectItem = this.selector('div.thf-select-item');\n\n    return selectItem && selectItem.clientHeight;\n  }\n\n  private initializeListeners() {\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      this.hideDropDown();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.controlPosition.adjustPosition(thfSelectContentPositionDefault);\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    this.eventResizeListener();\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPositionDropdown() {\n\n    this.controlPosition.setElements(\n      this.contentList.nativeElement,\n      thfSelectContentOffset,\n      this.selectButtonElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.controlPosition.adjustPosition(thfSelectContentPositionDefault);\n  }\n\n  private showDropdown() {\n    if (!this.readonly) {\n      this.selectElement.nativeElement.focus();\n      if (this.options && this.options.length) {\n        const ulDropdpwn = this.element.nativeElement.querySelector('ul.thf-select-content');\n        ulDropdpwn.scrollTop = this.scrollPosition;\n      }\n      this.selectIcon = 'thf-icon-arrow-up';\n      this.selector('.thf-select-container').classList.add('thf-select-show');\n      this.open = true;\n      this.changeDetector.markForCheck();\n      this.setPositionDropdown();\n      this.initializeListeners();\n    }\n  }\n\n}\n","/**\n * @usedBy ThfSwitchComponent\n *\n * @description\n *\n * Enum para posicionar o label do valor do thf-switch.\n */\nexport enum ThfSwitchLabelPosition {\n  /** Posiciona o label do lado esquerdo do switch. */\n  Right,\n  /** Posiciona o label do lado direito do switch. */\n  Left\n}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\n\nimport { ThfSwitchLabelPosition } from './thf-switch-label-position.enum';\n\n/**\n * @description\n *\n * O componente `thf-switch` Ã© um [checkbox](/documentation/thf-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.\n * Deve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade especÃ­fica.\n *\n * Pode-se ligar ou deligar o botÃ£o utilizando a tecla de espaÃ§o ou o clique do mouse.\n *\n * O texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,\n * portanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensÃ£o do usuÃ¡rio.\n *\n * > O componente nÃ£o altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade.\n */\nexport class ThfSwitchBaseComponent implements ControlValueAccessor {\n\n  private _disabled?: boolean = false;\n\n  propagateChange: any;\n  switchValue: boolean = false;\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /** RÃ³tulo exibido pelo componente. */\n  @Input('t-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('t-help') help?: string;\n\n  /**\n   * Texto exibido quando o valor do componente for `true`.\n   *\n   * @default `true`\n   */\n  labelOn?: string = 'true';\n  @Input('t-label-on') set setLabelOn(label: string) {\n    this.labelOn = label || 'true';\n  }\n\n  /**\n   * Texto exibido quando o valor do componente for `false`.\n   *\n   * @default `false`\n   */\n  labelOff?: string = 'false';\n  @Input('t-label-off') set setLabelOff(label: string) {\n    this.labelOff = label || 'false';\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * PosiÃ§Ã£o de exibiÃ§Ã£o do rÃ³tulo.\n   *\n   * > Por padrÃ£o exibe Ã  direita.\n   */\n  labelPosition?: ThfSwitchLabelPosition = ThfSwitchLabelPosition.Right;\n  @Input('t-label-position') set setLabelPosition(position: ThfSwitchLabelPosition) {\n    this.labelPosition = (position in ThfSwitchLabelPosition) ? parseInt(<any>position, 10) : ThfSwitchLabelPosition.Right;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica se o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /** Evento disparado ao alterar valor do campo. */\n  @Output('t-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  changeValue(value: any) {\n    if (this.switchValue !== value) {\n      this.switchValue = value;\n\n      if (this.propagateChange) {\n        this.propagateChange(value);\n      } else {\n        this.ngModelChange.emit(value);\n      }\n      this.change.emit(this.switchValue);\n    }\n  }\n\n  eventClick() {\n    if (!this.disabled) {\n      this.changeValue(!this.switchValue);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  writeValue(value: any): void {\n    if (value !== this.switchValue) {\n      this.switchValue = !!value;\n    }\n  }\n\n}\n","import { AfterViewChecked, ChangeDetectorRef, Component, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThfSwitchBaseComponent } from './thf-switch-base.component';\nimport { ThfSwitchLabelPosition } from './thf-switch-label-position.enum';\n\n/**\n * @docsExtends ThfSwitchBaseComponent\n *\n * @example\n *\n * <example name=\"thf-switch-basic\" title=\"Totvs Switch Basic\">\n *   <file name=\"sample-thf-switch-basic/sample-thf-switch-basic.component.html\"> </file>\n *   <file name=\"sample-thf-switch-basic/sample-thf-switch-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-switch-labs\" title=\"Totvs Switch Labs\">\n *   <file name=\"sample-thf-switch-labs/sample-thf-switch-labs.component.html\"> </file>\n *   <file name=\"sample-thf-switch-labs/sample-thf-switch-labs.component.ts\"> </file>\n *   <file name=\"sample-thf-switch-labs/sample-thf-switch-labs.component.e2e-spec.ts\"> </file>\n *   <file name=\"sample-thf-switch-labs/sample-thf-switch-labs.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-switch-order\" title=\"Totvs Switch - Order Summary\">\n *   <file name=\"sample-thf-switch-order/sample-thf-switch-order.component.html\"> </file>\n *   <file name=\"sample-thf-switch-order/sample-thf-switch-order.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-switch-order-reactive-form\" title=\"Totvs Switch - Order Summary Reactive Form\">\n *   <file name=\"sample-thf-switch-order-reactive-form/sample-thf-switch-order-reactive-form.component.html\"> </file>\n *   <file name=\"sample-thf-switch-order-reactive-form/sample-thf-switch-order-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-switch',\n  templateUrl: './thf-switch.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfSwitchComponent),\n      multi: true,\n    }\n  ]\n})\nexport class ThfSwitchComponent extends ThfSwitchBaseComponent implements AfterViewChecked {\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetector.detectChanges();\n  }\n\n  getLabelPosition() {\n    switch (this.labelPosition) {\n      case ThfSwitchLabelPosition.Left: return 'left';\n      case ThfSwitchLabelPosition.Right: return 'right';\n      default: return 'right';\n    }\n  }\n\n  getSwitchPosition() {\n    switch (this.labelPosition) {\n      case ThfSwitchLabelPosition.Left: return 'right';\n      case ThfSwitchLabelPosition.Right: return 'left';\n      default: return 'left';\n    }\n  }\n\n  onKeyDown(event) {\n    if (event.which === 32 || event.keyCode === 32)  {\n      event.preventDefault();\n      this.eventClick();\n    }\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../../utils/util';\nimport { maxlengthFailed, minlengthFailed, requiredFailed } from '../validators';\n\n/**\n * @description\n *\n * Este Ã© um componente de entrada de dados que possibilita o preechimento com mÃºltiplas linhas.\n * Ã recomendado para observaÃ§Ãµes, detalhamentos e outras situaÃ§Ãµes onde o usuÃ¡rio deva preencher com um texto.\n *\n * Importante:\n *\n * - A propriedade `name` Ã© obrigatÃ³ria para que o formulÃ¡rio e o `model` funcionem corretamente. Do contrÃ¡rio, ocorrerÃ¡ um erro de\n * _Angular_, onde serÃ¡ necessÃ¡rio informar o atributo `name` ou o atributo `[ngModelOptions]=\"{standalone: true}\"`, por exemplo:\n *\n * ```\n * <thf-textarea\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\">\n * </thf-textarea>\n * ```\n */\nexport abstract class ThfTextareaBaseComponent implements ControlValueAccessor, Validator {\n\n  private _disabled: boolean = false;\n  private _focus: boolean = false;\n  private _maxlength: number;\n  private _minlength: number;\n  private _readonly: boolean = false;\n  private _required: boolean = false;\n  private _rows: number = 3;\n\n  private modelLastUpdate: any;\n  private onChangePropagate: any = null;\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  /** Label do campo. */\n  @Input('t-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('t-help') help?: string;\n\n  /** Placeholder, mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido. */\n  @Input('t-placeholder') placeholder?: string = '';\n\n  /** Nome e Id do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `t-required`;\n   * - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('t-readonly') set readonly(readonly: boolean) {\n    this._readonly = convertToBoolean(readonly);\n  }\n\n  get readonly(): boolean {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * > Esta propriedade Ã© desconsiderada quando o _input_ estÃ¡ desabilitado `(t-disabled)`.\n   *\n   * @default `false`\n   */\n  @Input('t-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo iniciarÃ¡ com foco.\n   *\n   * @default `false`\n   */\n  @Input('t-focus') set focus(focus: boolean) {\n    this._focus = convertToBoolean(focus);\n  }\n\n  get focus(): boolean {\n    return this._focus;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ­nima de caracteres que o campo aceita.\n   */\n  @Input('t-minlength') set minlength(minlength: number) {\n    this._minlength = convertToInt(minlength);\n    this.validateModel();\n  }\n\n  get minlength(): number {\n    return this._minlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ¡xima de caracteres que o campo aceita.\n   */\n  @Input('t-maxlength') set maxlength(maxlength: number) {\n    this._maxlength = convertToInt(maxlength);\n    this.validateModel();\n  }\n\n  get maxlength(): number {\n    return this._maxlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade de linhas que serÃ£o exibidas.\n   *\n   * @default `3`\n   */\n  @Input('t-rows') set rows(value: number) {\n    this._rows = isNaN(parseInt(<any>value, 10)) || value < 3 ? 3 : parseInt(<any>value, 10);\n  }\n  get rows(): number {\n    return this._rows;\n  }\n\n  /** Evento disparado ao sair do campo. */\n  @Output('t-blur') blur?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao entrar do campo. */\n  @Output('t-enter') enter?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor e deixar o campo. */\n  @Output('t-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do model. */\n  @Output('t-change-model') changeModel?: EventEmitter<any> = new EventEmitter<any>();\n\n  callOnChange(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n\n    this.controlChangeModelEmitter(value);\n  }\n\n  controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  // FunÃ§Ãµes `registerOnChange`, `registerOnTouched` e `registerOnValidatorChange` implementadas referentes ao ControlValueAccessor\n  // usadas para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(func: any): void {\n    this.validatorChange = func;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if (minlengthFailed(this.minlength, abstractControl.value)) {\n      return { minlength: {\n        valid: false,\n      }};\n    }\n\n    if (maxlengthFailed(this.maxlength, abstractControl.value)) {\n      return { maxlength: {\n        valid: false,\n      }};\n    }\n\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    this.writeValueModel(value);\n  }\n\n  protected validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n  abstract writeValueModel(value: any): void;\n\n}\n","import { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThfTextareaBaseComponent } from './thf-textarea-base.component';\n\n/**\n * @docsExtends ThfTextareaBaseComponent\n *\n * @example\n *\n * <example name=\"thf-textarea-basic\" title=\"Totvs Textarea Basic\" >\n *  <file name=\"sample-thf-textarea-basic/sample-thf-textarea-basic.component.html\"> </file>\n *  <file name=\"sample-thf-textarea-basic/sample-thf-textarea-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-textarea-labs\" title=\"Totvs Textarea Labs\" >\n *  <file name=\"sample-thf-textarea-labs/sample-thf-textarea-labs.component.html\"> </file>\n *  <file name=\"sample-thf-textarea-labs/sample-thf-textarea-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-textarea-email\" title=\"Totvs Textarea - Email\" >\n *  <file name=\"sample-thf-textarea-email/sample-thf-textarea-email.component.html\"> </file>\n *  <file name=\"sample-thf-textarea-email/sample-thf-textarea-email.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-textarea-email-reactive-form\" title=\"Totvs Textarea - Email Reactive Form\" >\n *  <file name=\"sample-thf-textarea-email-reactive-form/sample-thf-textarea-email-reactive-form.component.html\"> </file>\n *  <file name=\"sample-thf-textarea-email-reactive-form/sample-thf-textarea-email-reactive-form.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'thf-textarea',\n  templateUrl: './thf-textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfTextareaComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfTextareaComponent),\n      multi: true,\n    }\n  ]\n})\nexport class ThfTextareaComponent extends ThfTextareaBaseComponent {\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  valueBeforeChange: any;\n  fireChange: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  writeValueModel(value: any): void {\n    if (this.inputEl) {\n      if (!value) {\n        // Se for o valor for undefined, deve limpar o campo\n        this.inputEl.nativeElement.value = '';\n      } else {\n        this.inputEl.nativeElement.value = value;\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n    if (value) {\n      this.change.emit(value);\n    }\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n    return (maxlength && value.length > maxlength) ? value.toString().substring(0, maxlength) : value;\n  }\n\n  eventOnInput(event: any) {\n    const value = this.validMaxLength(this.maxlength, event.target.value);\n    this.callOnChange(value);\n    this.inputEl.nativeElement.value = value;\n  }\n\n  eventOnFocus() {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.inputEl.nativeElement.value;\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  eventOnBlur() {\n    this.blur.emit();\n    this.controlChangeEmitter();\n  }\n\n  controlChangeEmitter() {\n    const elementValue = this.inputEl.nativeElement.value;\n\n    if (elementValue !== this.valueBeforeChange) {\n      this.change.emit(elementValue);\n    }\n  }\n\n}\n","// Enum de status de envio dos arquivos.\nexport enum ThfUploadStatus {\n  // Enviou com sucesso.\n  Uploaded,\n  // EstÃ¡ enviando.\n  Uploading,\n  // Ocorreu algum erro no envio.\n  Error,\n  // NÃ£o enviou ou aconteceu algum erro.\n  None\n}\n","import { ThfUploadStatus } from './thf-upload-status.enum';\n\n// Classe responsÃ¡vel pelo arquivo do THF Upload\nexport class ThfUploadFile {\n  // Nome do arquivo.\n  public name: string;\n  // Arquivo bruto.\n  public rawFile: File;\n  // Status de envio do arquivo.\n  public status?: ThfUploadStatus;\n  // Identificador do arquivo.\n  public uid: string;\n  // ExtensÃ£o do arquivo.\n  public extension: string;\n  // Tamanho do arquivo em bytes;\n  public size: number;\n\n  constructor(file: any) {\n    if (file) {\n      this.name = file.name;\n      this.extension = this.getExtension(file.name);\n      this.size = file.size;\n      this.rawFile = file;\n      this.uid = this.generateUUID();\n      this.status = ThfUploadStatus.None;\n    }\n  }\n\n  private getExtension(value: string) {\n    if (value) {\n      const extension = value.substr(value.lastIndexOf('.'));\n      return extension.toLowerCase();\n    }\n\n    return '';\n  }\n\n  private generateUUID() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n      s4() + '-' + s4() + s4() + s4();\n  }\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isEquals, thfLocaleDefault } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { ThfUploadFile } from './thf-upload-file';\nimport { ThfUploadFileRestrictions } from './interfaces/thf-upload-file-restriction.interface';\nimport { ThfUploadLiterals } from './interfaces/thf-upload-literals.interface';\nimport { ThfUploadService } from './thf-upload.service';\nimport { ThfUploadStatus } from './thf-upload-status.enum';\n\nexport const thfUploadLiteralsDefault = {\n  en: <ThfUploadLiterals> {\n    selectFile: 'Select file',\n    deleteFile: 'Delete',\n    cancel: 'Cancel',\n    tryAgain: 'Try again',\n    startSending: 'Start sending'\n  },\n  es: <ThfUploadLiterals> {\n    selectFile: 'Seleccionar archivo',\n    deleteFile: 'Borrar',\n    cancel: 'Cancelar',\n    tryAgain: 'Intentar de nuevo',\n    startSending: 'Iniciar carga'\n  },\n  pt: <ThfUploadLiterals> {\n    selectFile: 'Selecionar arquivo',\n    deleteFile: 'Excluir',\n    cancel: 'Cancelar',\n    tryAgain: 'Tentar Novamente',\n    startSending: 'Iniciar envio'\n  }\n};\n\nconst thfUploadFormFieldDefault = 'files';\n\n/**\n * @description\n *\n * O componente `thf-upload` permite que o usuÃ¡rio envie arquivo(s) ao servidor e acompanhe o progresso.\n * Este componente tambÃ©m possibilita algumas configuraÃ§Ãµes como:\n *  - MÃºltipla seleÃ§Ã£o, onde o usuÃ¡rio pode enviar mais de um arquivo ao servidor.\n *  - Auto envio, onde o arquivo Ã© enviado imediatamente apÃ³s a seleÃ§Ã£o do usuÃ¡rio, nÃ£o necessitando que o usuÃ¡rio\n * clique em enviar.\n *  - RestriÃ§Ãµes de formatos de arquivo e tamanho.\n *  - FunÃ§Ã£o de sucesso que serÃ¡ disparada quando os arquivos forem enviados com sucesso.\n *  - FunÃ§Ã£o de erro que serÃ¡ disparada quando houver erro no envio dos arquivos.\n */\nexport class ThfUploadBaseComponent implements ControlValueAccessor, Validator {\n\n  private _disabled?: boolean;\n  private _fileRestrictions?: ThfUploadFileRestrictions;\n  private _formField?: string;\n  private _hideSelectButton?: boolean;\n  private _hideSendButton?: boolean;\n  private _literals?: any;\n  private _required?: boolean;\n\n  allowedExtensions: string;\n  currentFiles: Array<ThfUploadFile>;\n\n  onModelChange: any;\n  onModelTouched: any;\n\n  private validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Omite o botÃ£o de seleÃ§Ã£o de arquivos.\n   *\n   * > Caso o valor definido seja `true`, caberÃ¡ ao desenvolvedor a responsabilidade\n   * pela chamada do mÃ©todo `selectFiles()` para seleÃ§Ã£o de arquivos.\n   *\n   * @default `false`\n   */\n  @Input('t-hide-select-button') set hideSelectButton(value: boolean) {\n    this._hideSelectButton = convertToBoolean(value);\n  }\n  get hideSelectButton(): boolean {\n    return this._hideSelectButton;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Omite o botÃ£o de envio de arquivos.\n   *\n   * > Caso o valor definido seja `true`, caberÃ¡ ao desenvolvedor a responsabilidade\n   * pela chamada do mÃ©todo `sendFiles()` para envio do(s) arquivo(s) selecionado(s).\n   *\n   * @default `false`\n   */\n  @Input('t-hide-send-button') set hideSendButton(value: boolean) {\n    this._hideSendButton = convertToBoolean(value);\n  }\n  get hideSendButton(): boolean {\n    return this._hideSendButton;\n  }\n\n  /** RÃ³tulo do campo. */\n  @Input('t-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `thf-upload`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: ThfUploadLiterals = {\n   *    selectFile: 'Buscar arquivo',\n   *    deleteFile: 'Deletar',\n   *    cancel: 'Desistir',\n   *    tryAgain: 'RecomeÃ§ar',\n   *    startSending: 'Enviar'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: ThfUploadLiterals = {\n   *    deleteFile: 'Deletar'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\n   *\n   * ```\n   * <thf-upload\n   *   [t-literals]=\"customLiterals\">\n   * </thf-upload>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('t-literals') set literals(value: ThfUploadLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfUploadLiteralsDefault[thfLocaleDefault],\n        ...thfUploadLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = thfUploadLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || thfUploadLiteralsDefault[browserLanguage()];\n  }\n\n  /** Texto de apoio para o campo. */\n  @Input('t-help') help?: string;\n\n  /** URL que deve ser feita a requisiÃ§Ã£o com os arquivos selecionados. */\n  @Input('t-url') url: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que segue a definiÃ§Ã£o da interface `ThfFileRestrictions`,\n   * que possibilita definir tamanho mÃ¡ximo/mÃ­nimo e extensÃ£o dos arquivos permitidos.\n   */\n  @Input('t-restrictions') set fileRestrictions(restrictions: ThfUploadFileRestrictions) {\n    this._fileRestrictions = restrictions;\n\n    this.setAllowedExtensions(restrictions);\n  }\n\n  get fileRestrictions(): ThfUploadFileRestrictions {\n    return this._fileRestrictions;\n  }\n\n  /** Define o valor do atributo `name` do componente. */\n  @Input('name') name: string = 'file';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nome do campo de formulÃ¡rio que serÃ¡ enviado para o serviÃ§o informado na propriedade `t-url`.\n   *\n   * @default `files`\n   */\n  @Input('t-form-field') set formField(value: string) {\n    this._formField = value && typeof value === 'string' ? value : thfUploadFormFieldDefault;\n\n    this.getUploadService().formField = this.formField;\n  }\n\n  get formField(): string {\n    return this._formField;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   */\n  @Input('t-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.validateModel(this.currentFiles);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se o envio do arquivo serÃ¡ automÃ¡tico ao selecionar o mesmo.\n   *\n   * @default `false`\n   */\n  @Input('t-auto-upload') autoUpload?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se pode selecionar mais de um arquivo.\n   */\n  @Input('t-multiple') isMultiple?: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   *  - O campo conter `t-required`;\n   *  - NÃ£o possuir `t-help` e/ou `t-label`.\n   *\n   * @default `false`\n   */\n  @Input('t-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('t-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.currentFiles);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * FunÃ§Ã£o que serÃ¡ executada no momento de realizar o envio do arquivo,\n   * onde serÃ¡ possÃ­vel adicionar informaÃ§Ãµes ao parÃ¢metro que serÃ¡ enviado na requisiÃ§Ã£o.\n   * Ã passado por parÃ¢metro um objeto com o arquivo e a propiedade data nesta propriedade pode ser informado algum dado,\n   * que serÃ¡ enviado em conjunto com o arquivo na requisiÃ§Ã£o, por exemplo:\n   *\n   * ```\n   *   event.data = {id: 'id do usuario'};\n   * ```\n   */\n  @Output('t-upload') onUpload?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento serÃ¡ disparado quando ocorrer algum erro no envio do arquivo.\n   * > Por parÃ¢metro serÃ¡ passado o objeto do retorno que Ã© do tipo `HttpErrorResponse`.\n   */\n  @Output('t-error') onError?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento serÃ¡ disparado quando o envio do arquivo for realizado com sucesso.\n   * > Por parÃ¢metro serÃ¡ passado o objeto do retorno que Ã© do tipo `HttpResponse`.\n   */\n  @Output('t-success') onSuccess?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da *tag* `form`.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(protected uploadService: ThfUploadService) { }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n  }\n\n  writeValue(model: any): void {\n    if (model) {\n      if (!isEquals(this.currentFiles, model)) {\n\n        this.currentFiles = this.parseFiles(model);\n      }\n    } else {\n\n      this.currentFiles = undefined;\n    }\n  }\n\n  protected isExceededFileLimit(currentFilesLength: number): boolean {\n    return this.isMultiple &&\n      this.fileRestrictions &&\n      this.fileRestrictions.maxFiles > 0 &&\n      this.fileRestrictions.maxFiles <= currentFilesLength;\n  }\n\n  // Faz o parse dos arquivos selecionados para arquivos do formato ThfUploadFile e atualiza os arquivos correntes.\n  protected parseFiles(files: Array<File>): Array<ThfUploadFile> {\n    let thfUploadFiles: Array<ThfUploadFile> = this.currentFiles || [];\n    const filesLength = files.length;\n\n    for (let i = 0; i < filesLength; i++) {\n\n      if (this.isExceededFileLimit(thfUploadFiles.length)) {\n        break;\n      }\n\n      const file = new ThfUploadFile(files[i]);\n\n      if (this.checkRestrictions(file)) {\n        thfUploadFiles = this.insertFileInFiles(file, thfUploadFiles);\n      }\n\n    }\n\n    return thfUploadFiles;\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  // Verifica se o arquivo estÃ¡ de acordo com as restriÃ§Ãµes.\n  private checkRestrictions(file: ThfUploadFile): boolean {\n    const restrictions = this.fileRestrictions;\n\n    if (restrictions) {\n      const allowedExtensions = restrictions.allowedExtensions;\n      const minFileSize = restrictions.minFileSize || 0;\n      const maxFileSize = restrictions.maxFileSize || 31457280; // 30MB\n\n      const isAccept = allowedExtensions ? this.isAllowedExtension(file.extension, allowedExtensions) : true;\n      const isAcceptSize = file.size >= minFileSize && file.size <= maxFileSize;\n\n      return isAccept && isAcceptSize;\n    }\n\n    return true;\n  }\n\n  private existsFileSameName(file: ThfUploadFile, files: Array<ThfUploadFile>): boolean {\n    return files.some(currentFile => file.name === currentFile.name);\n  }\n\n  private getUploadService(): ThfUploadService {\n    return this.uploadService;\n  }\n\n  private insertFileInFiles(newFile: ThfUploadFile, files: Array<ThfUploadFile>) {\n\n    if (this.existsFileSameName(newFile, files)) {\n\n      return this.updateExistsFileInFiles(newFile, files);\n    }\n\n    if (this.isMultiple) {\n\n      files.push(newFile);\n    } else {\n\n      files.splice(0, files.length, newFile);\n    }\n\n    return files;\n  }\n\n  private isAllowedExtension(extension: string, allowedExtensions: Array<string> = []): boolean {\n    return allowedExtensions.some(ext => ext.toLowerCase() === extension);\n  }\n\n  private setAllowedExtensions(restrictions: ThfUploadFileRestrictions = {}) {\n    const _allowedExtensions = restrictions.allowedExtensions || [];\n\n    this.allowedExtensions = _allowedExtensions.join(',');\n  }\n\n  private updateExistsFileInFiles(newFile: ThfUploadFile, files: Array<ThfUploadFile>) {\n    const fileIndex = files.findIndex(currentFile => newFile.name === currentFile.name && currentFile.status !== ThfUploadStatus.Uploaded);\n\n    if (fileIndex !== -1) {\n      files.splice(fileIndex, 1, newFile);\n    }\n\n    return files;\n  }\n\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { ThfUploadFile } from './thf-upload-file';\n\nimport { Observable, Subscription } from 'rxjs';\n\n@Injectable()\nexport class ThfUploadBaseService {\n\n  formField: string = 'files';\n  requests: Array<any> = [];\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * MÃ©todo responsÃ¡vel por enviar os arquivos ao servidor, conforme o parÃ¢metro URL.\n   *\n   * @param url URL da requisiÃ§Ã£o a ser efetuada.\n   * @param files Arquivos a serem enviados.\n   * @param tOnUpload FunÃ§Ã£o a ser executada quando o arquivo for enviado ao servidor.\n   * @param uploadCallback FunÃ§Ã£o que serÃ¡ executada enquanto os arquivos estiverem sendo enviados.\n   * @param successCallback FunÃ§Ã£o a ser executada quando a requisiÃ§Ã£o for efetuada com sucesso.\n   * @param errorCallback FunÃ§Ã£o a ser executada quando a requisiÃ§Ã£o foi efetuada com sucesso.\n   */\n  public upload(\n    url: string,\n    files: Array<ThfUploadFile>,\n    tOnUpload: EventEmitter<any>,\n    uploadCallback: (file: ThfUploadFile, percent: number) => void,\n    successCallback: (file: ThfUploadFile, event: any) => void,\n    errorCallback: (file: ThfUploadFile, event: any) => void) {\n\n    const filesLength = files.length;\n    const uploadEvent: any = {\n      data: {},\n      file: null\n    };\n\n    for (let i = 0; i < filesLength; i++) {\n      const formData: FormData = new FormData();\n      const file = files[i];\n      const fileName = file.rawFile.name;\n\n      formData.append(this.formField, file.rawFile, fileName);\n\n      // FunÃ§Ã£o upload, onde o desenvolvedor pode enviar dados para a requisiÃ§Ã£o.\n      if (tOnUpload) {\n        uploadEvent['file'] = file;\n        tOnUpload.emit(uploadEvent);\n\n        formData.append('data', JSON.stringify(uploadEvent.data));\n      }\n\n      this.sendFile(url, file, formData, uploadCallback, successCallback, errorCallback);\n    }\n  }\n\n  public sendFile(\n    url: string,\n    file: ThfUploadFile,\n    formData: FormData,\n    uploadCallback: (file: ThfUploadFile, percent: number) => void,\n    successCallback: (file: ThfUploadFile, event: any) => void,\n    errorCallback: (file: ThfUploadFile, event: any) => void) {\n\n    const request = this.getRequest(url, formData).subscribe(event => {\n\n      if (event.type === HttpEventType.UploadProgress) {\n        this.addRequest(file, request);\n\n        const percentDone = Math.round(100 * event.loaded / event.total);\n        uploadCallback(file, percentDone);\n\n      } else if (event instanceof HttpResponse) {\n        // Sucesso, arquivos enviados.\n        successCallback(file, event);\n      }\n    },\n    (err: HttpErrorResponse) => {\n      errorCallback(file, err);\n    });\n  }\n\n  public getRequest(url: string, formData: FormData): Observable<any> {\n    const req = new HttpRequest('POST', url, formData, {\n      reportProgress: true\n    });\n\n    return this.http.request(req);\n  }\n\n  public stopRequestByFile(file: any, callback: () => void) {\n    const requestObj = this.requests.find(req => {\n      return req.file.uid === file.uid;\n    });\n\n    if (requestObj) {\n      const request = requestObj.request;\n      request.unsubscribe();\n      this.removeRequest(requestObj);\n      callback();\n    }\n  }\n\n  public removeRequest(requestObj: any) {\n    const index = this.requests.indexOf(requestObj);\n    this.requests.splice(index, 1);\n  }\n\n  public addRequest(file: ThfUploadFile, request: Subscription) {\n    const hasRequest = this.requests.some(req => {\n      return req.file.uid === file.uid;\n    });\n\n    if (!hasRequest) {\n      this.requests.push({file, request});\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ThfUploadBaseService } from './thf-upload-base.service';\n\n@Injectable()\nexport class ThfUploadService extends ThfUploadBaseService { }\n","import { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThfUploadBaseComponent } from './thf-upload-base.component';\nimport { ThfUploadFile } from './thf-upload-file';\nimport { ThfUploadService } from './thf-upload.service';\nimport { ThfUploadStatus } from './thf-upload-status.enum';\n\n/**\n * @docsExtends ThfUploadBaseComponent\n *\n * @example\n *\n * <example name=\"thf-upload-basic\" title=\"Totvs Upload Basic\">\n *   <file name=\"sample-thf-upload-basic/sample-thf-upload-basic.component.html\"> </file>\n *   <file name=\"sample-thf-upload-basic/sample-thf-upload-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-upload-labs\" title=\"Totvs Upload Labs\">\n *   <file name=\"sample-thf-upload-labs/sample-thf-upload-labs.component.html\"> </file>\n *   <file name=\"sample-thf-upload-labs/sample-thf-upload-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-upload-resume\" title=\"Totvs Upload - Resume\">\n *   <file name=\"sample-thf-upload-resume/sample-thf-upload-resume.component.html\"> </file>\n *   <file name=\"sample-thf-upload-resume/sample-thf-upload-resume.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-upload-rs\" title=\"Totvs Upload - Realize & Show\">\n *   <file name=\"sample-thf-upload-rs/sample-thf-upload-rs.component.html\"> </file>\n *   <file name=\"sample-thf-upload-rs/sample-thf-upload-rs.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-upload',\n  templateUrl: './thf-upload.component.html',\n  providers: [\n    ThfUploadService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ThfUploadComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ThfUploadComponent),\n      multi: true,\n    }\n  ]\n})\nexport class ThfUploadComponent extends ThfUploadBaseComponent {\n\n  private calledByCleanInputValue: boolean = false;\n\n  @ViewChild('inputFile', {read: ElementRef, static: true }) private inputFile: ElementRef;\n\n  constructor(private elementRef: ElementRef, uploadService: ThfUploadService) {\n    super(uploadService);\n  }\n\n  get displaySendButton(): boolean {\n    const currentFiles = this.currentFiles || [];\n    return !this.hideSendButton && !this.autoUpload && (currentFiles.length > 0 && this.hasFileNotUploaded);\n  }\n\n  get hasFileNotUploaded(): boolean {\n    if (Array.isArray(this.currentFiles)) {\n      return this.currentFiles.some(file => file.status !== ThfUploadStatus.Uploaded);\n    }\n\n    return false;\n  }\n\n  get isDisabled(): boolean {\n    const currentFiles = this.currentFiles || [];\n\n    return this.hasAnyFileUploading(this.currentFiles) ||\n    !this.url ||\n    this.disabled ||\n    this.isExceededFileLimit(currentFiles.length);\n  }\n\n  /** MÃ©todo responsÃ¡vel por **limpar** o(s) arquivo(s) selecionado(s). */\n  clear() {\n    this.currentFiles = undefined;\n    this.updateModel([]);\n    this.cleanInputValue();\n  }\n\n  // FunÃ§Ã£o disparada ao selecionar algum arquivo.\n  onFileChange(event): void {\n    // necessario este tratamento quando para IE, pois nele o change Ã© disparado quando o campo Ã© limpado tambÃ©m\n    if (this.calledByCleanInputValue) {\n      this.calledByCleanInputValue = false;\n      return event.preventDefault();\n    }\n\n    const files = event.target.files;\n    this.currentFiles = this.currentFiles || [];\n\n    this.currentFiles = this.parseFiles(files);\n\n    this.updateModel([...this.currentFiles]);\n\n    if (this.autoUpload) {\n      this.uploadFiles(this.currentFiles);\n    }\n\n    this.cleanInputValue();\n  }\n\n  // Remove o arquivo passado por parametro da lista dos arquivos correntes.\n  removeFile(file): void {\n    const index = this.currentFiles.indexOf(file);\n    this.currentFiles.splice(index, 1);\n\n    this.updateModel([...this.currentFiles]);\n  }\n\n  /** MÃ©todo responsÃ¡vel por **abrir** a janela para seleÃ§Ã£o de arquivo(s). */\n  selectFiles(): void {\n    this.calledByCleanInputValue = false;\n    this.inputFile.nativeElement.click();\n  }\n\n  /** MÃ©todo responsÃ¡vel por **enviar** o(s) arquivo(s) selecionado(s). */\n  sendFiles(): void {\n    if (this.currentFiles && this.currentFiles.length) {\n\n      this.uploadFiles(this.currentFiles);\n    }\n  }\n\n  // Retorna o tamanho do arquivo em KBytes.\n  protected getFileSize(size: number): string {\n    let kbSize = 0;\n\n    if (size) {\n        kbSize = Math.ceil(size / 1024);\n    }\n\n    return `${kbSize} KB`;\n  }\n\n  // Retorna o thf-icon de acordo com o status do arquivo.\n  protected getThfIcon(file: ThfUploadFile): string {\n    switch (file.status) {\n      case ThfUploadStatus.Uploaded:\n        return 'thf-icon-ok';\n\n      case ThfUploadStatus.Error:\n        return 'thf-icon-close';\n\n      case ThfUploadStatus.None:\n        return 'thf-icon-info';\n\n      case ThfUploadStatus.Uploading:\n      default:\n        return '';\n    }\n  }\n\n  // Verifica se existe algum arquivo sendo enviado ao serviÃ§o.\n  protected hasAnyFileUploading(files: Array<ThfUploadFile>) {\n    if (files && files.length) {\n      return files.some(file => file.status === ThfUploadStatus.Uploading);\n    }\n\n    return false;\n  }\n\n  // Valida se o status passado por parÃ¢metro Ã© igual ao status do arquivo.\n  protected isStatusFile(status: string, file: ThfUploadFile) {\n    return file.status === ThfUploadStatus[status];\n  }\n\n  // Caso o componente estiver no modo AutoUpload, o arquivo tambÃ©m serÃ¡ removido da lista.\n  protected stopUpload(file: ThfUploadFile) {\n    this.uploadService.stopRequestByFile(file, () => {\n      if (this.autoUpload) {\n        this.removeFile(file);\n      } else {\n        this.stopUploadHandler(file);\n      }\n    });\n  }\n\n  // Envia os arquivos passados por parÃ¢metro, exceto os que jÃ¡ foram enviados ao serviÃ§o.\n  protected uploadFiles(files: Array<ThfUploadFile>) {\n    const filesFiltered = files.filter(file => {\n      return file.status !== ThfUploadStatus.Uploaded;\n    });\n\n    this.uploadService.upload(this.url, filesFiltered, this.onUpload,\n      (file, percent): any => {\n        // UPLOADING\n        this.uploadingHandler(file, percent);\n\n      }, (file, eventResponse): any => {\n        // SUCCESS\n        this.successHandler(file);\n        this.onSuccess.emit(eventResponse);\n\n      }, (file, eventError): any => {\n        // Error\n        this.errorHandler(file);\n        this.onError.emit(eventError);\n    });\n  }\n\n  // Atualiza a classe da div, que conter a classe 'thf-upload-filename', para 'thf-upload-filename-loading'.\n  private addFileNameClass(uid: string) {\n    const divStatus = this.elementRef.nativeElement.querySelector(`div[id='${uid}'].thf-upload-progress`);\n    const fileNameDiv = divStatus.querySelector('.thf-upload-filename');\n    fileNameDiv.classList.add('thf-upload-filename-loading');\n  }\n\n  private cleanInputValue() {\n    this.calledByCleanInputValue = true;\n    this.inputFile.nativeElement.value = '';\n  }\n\n  // FunÃ§Ã£o disparada quando Ã© retornado um erro no envio do arquivo.\n  private errorHandler(file: ThfUploadFile) {\n    file.status = ThfUploadStatus.Error;\n    this.setProgressStatus(file.uid, 0, false);\n    this.setUploadStatus(file, 'thf-upload-progress-error', 100);\n  }\n\n  // Remove a classe 'thf-upload-filename-loading' da div que conter a classe 'thf-upload-filename'.\n  private removeFileNameClass(uid: string) {\n    const divStatus = this.elementRef.nativeElement.querySelector(`div[id='${uid}'].thf-upload-progress`);\n    const fileNameDiv = divStatus.querySelector('.thf-upload-filename');\n    fileNameDiv.classList.remove('thf-upload-filename-loading');\n  }\n\n  // Atualiza o status do progresso do envio do arquivo.\n  private setProgressStatus(uid: string, percent: number, isShow: boolean) {\n    const divStatus = this.elementRef.nativeElement.querySelector(`div[id='${uid}'].thf-upload-progress`);\n    const divProgress = divStatus.querySelector('.thf-upload-progress-status');\n    const isDisplay = isShow ? 'block' : 'none';\n\n    divProgress.setAttribute('style', `display: ${isDisplay};`);\n    divProgress.setAttribute('style', `width: ${percent}%;`);\n  }\n\n  // Atualiza o status do envio de arquivos.\n  private setUploadStatus(file, className: string, percent: number) {\n    const uid = file.uid;\n    const divStatus = this.elementRef.nativeElement.querySelector(`div[id='${uid}'].thf-upload-progress`);\n    divStatus.classList.remove('thf-upload-progress-error', 'thf-upload-progress-success');\n    divStatus.classList.add(className);\n\n    if (percent > 5 && file.status !== ThfUploadStatus.None) {\n      this.addFileNameClass(uid);\n    }\n  }\n\n  // FunÃ§Ã£o disparada ao parar um envio de arquivo.\n  private stopUploadHandler(file: ThfUploadFile) {\n    file.status = ThfUploadStatus.None;\n    this.removeFileNameClass(file.uid);\n    this.setProgressStatus(file.uid, 0, false);\n    this.setUploadStatus(file, 'thf-upload-progress', 100);\n  }\n\n  // FunÃ§Ã£o disparada quando o envio Ã© realizado com sucesso.\n  private successHandler(file: ThfUploadFile) {\n    file.status = ThfUploadStatus.Uploaded;\n    this.setProgressStatus(file.uid, 0, false);\n    this.setUploadStatus(file, 'thf-upload-progress-success', 100);\n  }\n\n  // Atualiza o ngModel para os arquivos passados por parÃ¢metro.\n  private updateModel(files: Array<ThfUploadFile>) {\n    this.onModelChange ? this.onModelChange(files) : this.ngModelChange.emit(files);\n  }\n\n  // FunÃ§Ã£o disparada enquanto o arquivo estÃ¡ sendo enviado ao serviÃ§o.\n  private uploadingHandler(file: ThfUploadFile, percent: number) {\n    file.status = ThfUploadStatus.Uploading;\n    this.setProgressStatus(file.uid, percent, true);\n    this.setUploadStatus(file, 'thf-upload-progress', percent);\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';\n\n/**\n * @docsExtends ThfInputBaseComponent\n *\n * @description\n *\n * thf-url Ã© um input especÃ­fico para receber URL, com o pattern jÃ¡ configurado.\n *\n * @example\n *\n * <example name=\"thf-url-basic\" title=\"Totvs Url Basic\">\n *   <file name=\"sample-thf-url-basic/sample-thf-url-basic.component.html\"> </file>\n *   <file name=\"sample-thf-url-basic/sample-thf-url-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-url-labs\" title=\"Totvs Url Labs\">\n *   <file name=\"sample-thf-url-labs/sample-thf-url-labs.component.html\"> </file>\n *   <file name=\"sample-thf-url-labs/sample-thf-url-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-url-shortener\" title=\"Totvs Url - Shortener\">\n *   <file name=\"sample-thf-url-shortener/sample-thf-url-shortener.component.html\"> </file>\n *   <file name=\"sample-thf-url-shortener/sample-thf-url-shortener.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'thf-url',\n  templateUrl: '../thf-input/thf-input.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThfUrlComponent),\n    multi: true\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => ThfUrlComponent),\n    multi: true\n  }]\n})\nexport class ThfUrlComponent extends ThfInputGeneric implements AfterViewInit, OnDestroy {\n\n  icon = 'thf-icon-world';\n\n  maxlength: number = 254;\n\n  type = 'url';\n\n  pattern = '^((https|http):\\\\/\\\\/)?' + // protocol\n  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n  '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n  '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n  '(\\\\#[-a-z\\\\d_]*)?$';\n\n  mask = '';\n\n  private listener = this.validateClassesForPattern.bind(this);\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  ngAfterViewInit() {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n    setTimeout(() => {\n      if (!this.onChangePropagate) {\n        this.inputEl.nativeElement.addEventListener('keyup', this.listener);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangePropagate) {\n      this.inputEl.nativeElement.removeEventListener('keyup', this.listener);\n    }\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ThfButtonGroupModule } from '../thf-button-group/index';\nimport { ThfButtonModule } from '../../components/thf-button/index';\nimport { ThfDisclaimerModule } from './../thf-disclaimer/thf-disclaimer.module';\nimport { ThfLoadingModule } from '../../components/thf-loading/index';\nimport { ThfModalModule } from '../../components/thf-modal/thf-modal.module';\nimport { ThfTableModule } from '../../components/thf-table/thf-table.module';\n\nimport { ThfCalendarComponent } from './thf-datepicker/thf-calendar/thf-calendar.component';\nimport { ThfCheckboxGroupComponent } from './thf-checkbox-group/thf-checkbox-group.component';\nimport { ThfCleanComponent } from './thf-clean/thf-clean.component';\nimport { ThfComboComponent } from './thf-combo/thf-combo.component';\nimport { ThfDatepickerComponent } from './thf-datepicker/thf-datepicker.component';\nimport { ThfDatepickerRangeComponent } from './thf-datepicker-range/thf-datepicker-range.component';\nimport { ThfDecimalComponent } from './thf-decimal/thf-decimal.component';\nimport { ThfEmailComponent } from './thf-email/thf-email.component';\nimport { ThfFieldContainerComponent } from './thf-field-container/thf-field-container.component';\nimport { ThfFieldContainerBottomComponent } from './thf-field-container/thf-field-container-bottom/thf-field-container-bottom.component';\nimport { ThfLoginComponent } from './thf-login/thf-login.component';\nimport { ThfLookupComponent } from './thf-lookup/thf-lookup.component';\nimport { ThfLookupModalComponent } from './thf-lookup/thf-lookup-modal/thf-lookup-modal.component';\nimport { ThfMultiselectDropdownComponent } from './thf-multiselect/thf-multiselect-dropdown/thf-multiselect-dropdown.component';\nimport { ThfMultiselectComponent } from './thf-multiselect/thf-multiselect.component';\nimport { ThfMultiselectItemComponent } from './thf-multiselect/thf-multiselect-item/thf-multiselect-item.component';\nimport { ThfMultiselectSearchComponent } from './thf-multiselect/thf-multiselect-search/thf-multiselect-search.component';\nimport { ThfRichTextBodyComponent } from './thf-rich-text/thf-rich-text-body/thf-rich-text-body.component';\nimport { ThfRichTextComponent } from './thf-rich-text/thf-rich-text.component';\nimport { ThfRichTextToolbarComponent } from './thf-rich-text/thf-rich-text-toolbar/thf-rich-text-toolbar.component';\nimport { ThfInputComponent } from './thf-input/thf-input.component';\nimport { ThfNumberComponent } from './thf-number/thf-number.component';\nimport { ThfPasswordComponent } from './thf-password/thf-password.component';\nimport { ThfRadioGroupComponent } from './thf-radio-group/thf-radio-group.component';\nimport { ThfSelectComponent } from './thf-select/thf-select.component';\nimport { ThfSelectOptionTemplateDirective } from './thf-select/thf-select-option-template/thf-select-option-template.directive';\nimport { ThfSwitchComponent } from './thf-switch/thf-switch.component';\nimport { ThfTextareaComponent } from './thf-textarea/thf-textarea.component';\nimport { ThfUploadComponent } from './thf-upload/thf-upload.component';\nimport { ThfUrlComponent } from './thf-url/thf-url.component';\n\n/**\n * @description\n *\n * MÃ³dulo dos componentes thf-combo, thf-checkbox-group, thf-datepicker, thf-datepicker-range, thf-email, thf-input, thf-lookup,\n * thf-number, thf-multiselect, thf-password, thf-radio-group, thf-select, thf-switch, thf-textarea, thf-upload e thf-url.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    ThfButtonModule,\n    ThfDisclaimerModule,\n    ThfLoadingModule,\n    ThfModalModule,\n    ThfTableModule,\n    ThfButtonGroupModule\n  ],\n  exports: [\n    ThfCheckboxGroupComponent,\n    ThfCleanComponent,\n    ThfComboComponent,\n    ThfDecimalComponent,\n    ThfDatepickerComponent,\n    ThfDatepickerRangeComponent,\n    ThfEmailComponent,\n    ThfInputComponent,\n    ThfLoginComponent,\n    ThfLookupComponent,\n    ThfLookupModalComponent,\n    ThfMultiselectComponent,\n    ThfNumberComponent,\n    ThfPasswordComponent,\n    ThfRadioGroupComponent,\n    ThfRichTextComponent,\n    ThfSelectComponent,\n    ThfSelectOptionTemplateDirective,\n    ThfSwitchComponent,\n    ThfTextareaComponent,\n    ThfUploadComponent,\n    ThfUrlComponent\n  ],\n  declarations: [\n    ThfCalendarComponent,\n    ThfCheckboxGroupComponent,\n    ThfCleanComponent,\n    ThfComboComponent,\n    ThfDecimalComponent,\n    ThfDatepickerComponent,\n    ThfDatepickerRangeComponent,\n    ThfEmailComponent,\n    ThfFieldContainerComponent,\n    ThfFieldContainerBottomComponent,\n    ThfInputComponent,\n    ThfLoginComponent,\n    ThfLookupComponent,\n    ThfLookupModalComponent,\n    ThfMultiselectComponent,\n    ThfMultiselectDropdownComponent,\n    ThfMultiselectItemComponent,\n    ThfMultiselectSearchComponent,\n    ThfNumberComponent,\n    ThfPasswordComponent,\n    ThfRadioGroupComponent,\n    ThfRichTextBodyComponent,\n    ThfRichTextComponent,\n    ThfRichTextToolbarComponent,\n    ThfSelectComponent,\n    ThfSelectOptionTemplateDirective,\n    ThfSwitchComponent,\n    ThfTextareaComponent,\n    ThfUploadComponent,\n    ThfUrlComponent\n  ],\n  providers: [],\n  entryComponents: [\n    ThfCalendarComponent,\n    ThfLookupModalComponent\n  ]\n})\nexport class ThfFieldModule { }\n","/**\n * @usedBy ThfInfoComponent\n *\n * @description\n *\n * Define os tipos de orientaÃ§Ãµes disponÃ­veis para o `thf-info`.\n */\nexport enum ThfInfoOrientation {\n\n  /** O valor serÃ¡ exibido na horizontal, ao lado direito em relaÃ§Ã£o ao label. */\n  Horizontal = 'horizontal',\n\n  /** Exibe o valor na vertical, ou seja, abaixo do label. */\n  Vertical = 'vertical'\n\n}\n","import { Input } from '@angular/core';\n\nimport { ThfInfoOrientation } from './thf-info-orietation.enum';\n\nconst thfInfoOrientationDefault = ThfInfoOrientation.Vertical;\n\nexport class ThfInfoBaseComponent {\n\n  private _labelSize: number;\n  private _orientation: ThfInfoOrientation = thfInfoOrientationDefault;\n\n  public readonly thfInfoOrientation = ThfInfoOrientation;\n\n  /** Valor do rÃ³tulo a ser exibido. */\n  @Input('t-label') label: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Quantidade de [colunas](/guides/grid-system) usadas para a exibiÃ§Ã£o da `t-label` quando o componente for\n   * utilizado na orientaÃ§Ã£o horizontal.\n   *\n   * Valores vÃ¡lidos:\n   *  - `[1 .. 11]`\n   *\n   * > A propriedade `t-value` recebe o nÃºmero de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.\n   */\n  @Input('t-label-size') set labelSize(value: number) {\n    if (isNaN(parseInt(<any>value, 10))) {\n      this._labelSize = undefined;\n    } else {\n      value = parseInt(<any>value, 10);\n\n      this._labelSize = (value < 1 || value > 11) ? undefined : value;\n    }\n  }\n\n  get labelSize(): number {\n    return this._labelSize;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o layout de exibiÃ§Ã£o.\n   *\n   * > Quando definido na horizontal, pode-se utilizar a propriedade `t-label-size` para um maior controle das informaÃ§Ãµes exibidas.\n   *\n   * @default `vertical`\n   */\n  @Input('t-orientation') set orientation(value: ThfInfoOrientation) {\n    this._orientation = (<any>Object).values(ThfInfoOrientation).includes(value) ? value : thfInfoOrientationDefault;\n  }\n  get orientation(): ThfInfoOrientation {\n    return this._orientation;\n  }\n\n  /** Valor do conteÃºdo a ser exibido. */\n  @Input('t-value') value?: string;\n\n}\n","import { Component } from '@angular/core';\n\nimport { ThfInfoBaseComponent } from './thf-info-base.component';\n\n/**\n * @docsExtends ThfInfoBaseComponent\n *\n * @description\n *\n * Este componente tem como objetivo renderizar valores na tela no estilo label na parte superior e\n * valor na parte inferior. Facilita a exibiÃ§Ã£o de dados pois vem com layout padrÃ£o Totvs.\n *\n * @example\n *\n * <example name=\"thf-info-basic\" title=\"Totvs Info Basic\">\n *  <file name=\"sample-thf-info-basic/sample-thf-info-basic.component.html\"> </file>\n *  <file name=\"sample-thf-info-basic/sample-thf-info-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-info-labs\" title=\"Totvs Info Labs\">\n *  <file name=\"sample-thf-info-labs/sample-thf-info-labs.component.html\"> </file>\n *  <file name=\"sample-thf-info-labs/sample-thf-info-labs.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-info',\n  templateUrl: './thf-info.component.html'\n})\nexport class ThfInfoComponent extends ThfInfoBaseComponent { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfInfoComponent } from './thf-info.component';\n/**\n * @description\n *\n * MÃ³dulo do componente thf-info.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ThfInfoComponent\n  ],\n  exports: [ThfInfoComponent],\n  providers: [],\n  schemas: []\n})\nexport class ThfInfoModule { }\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Define os Ã­cones disponÃ­veis para o `thf-tag`.\n */\nexport enum ThfTagIcon {\n\n  /** Ãcone fechar */\n  Danger = 'close',\n\n  /** Ãcone de informaÃ§Ã£o */\n  Info = 'info',\n\n  /** Ãcone que representa confirmaÃ§Ã£o */\n  Success = 'ok',\n\n  /** Ãcone com ponto de exclamaÃ§Ã£o */\n  Warning = 'warning'\n}\n","/**\n * @usedBy ThfTagComponent\n *\n * @description\n *\n * Define os tipos de orientaÃ§Ãµes disponÃ­veis para o `thf-tag`.\n */\nexport enum ThfTagOrientation {\n\n  /** A tag serÃ¡ exibida na horizontal, ao lado direito em relaÃ§Ã£o ao label. */\n  Horizontal = 'horizontal',\n\n  /** Exibe a tag na vertical, ou seja, abaixo do label. */\n  Vertical = 'vertical'\n}\n","/**\n * @usedBy ThfTagComponent\n *\n * @description\n *\n * Define os tipos disponÃ­veis para o `thf-tag`.\n */\nexport enum ThfTagType {\n\n  /** Erro, perigo, problema ou aviso crÃ­tico. */\n  Danger = 'danger',\n\n  /** Informativo ou explicativo. */\n  Info = 'info',\n\n  /** ConfirmaÃ§Ã£o, resultados positivos ou Ãªxito */\n  Success = 'success',\n\n  /** Aviso ou advertÃªncia. */\n  Warning = 'warning'\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { ThfTagIcon } from './enums/thf-tag-icon.enum';\nimport { ThfTagItem } from './interfaces/thf-tag-item.interface';\nimport { ThfTagOrientation } from './enums/thf-tag-orientation.enum';\nimport { ThfTagType } from './enums/thf-tag-type.enum';\n\nconst thfTagOrientationDefault = ThfTagOrientation.Vertical;\nconst thfTagTypeDefault = ThfTagType.Info;\n\n/**\n * @description\n *\n * Este componente apresenta um valor em um marcador colorido que pode conter Ã­cone e *label*, as cores sÃ£o definidas conforme o tipo\n * escolhido.\n * Seu uso Ã© indicado para informaÃ§Ãµes que necessitam de destaque em forma de marcaÃ§Ã£o.\n */\nexport class ThfTagBaseComponent {\n\n  private _icon?: boolean;\n  private _orientation?: ThfTagOrientation = thfTagOrientationDefault;\n  private _type?: ThfTagType = thfTagTypeDefault;\n\n  public readonly thfTagOrientation = ThfTagOrientation;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto antes da tag.\n   */\n  @Input('t-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Apresenta um Ã­cone na tag conforme o tipo:\n   * - `danger`: <span class=\"thf-icon thf-icon-close\"></span>\n   * - `info`: <span class=\"thf-icon thf-icon-info\"></span>\n   * - `success`: <span class=\"thf-icon thf-icon-ok\"></span>\n   * - `warning`: <span class=\"thf-icon thf-icon-warning\"></span>\n   *\n   * @default `false`\n   */\n  @Input('t-icon') set icon(value: boolean) {\n    this._icon = <any>value === '' ? true : convertToBoolean(value);\n  }\n  get icon(): boolean {\n    return this._icon;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o layout de exibiÃ§Ã£o.\n   *\n   * @default `vertical`\n   */\n  @Input('t-orientation') set orientation(value: ThfTagOrientation) {\n    this._orientation = (<any>Object).values(ThfTagOrientation).includes(value) ? value : thfTagOrientationDefault;\n  }\n  get orientation(): ThfTagOrientation {\n    return this._orientation;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo e determina a cor do `thf-tag`.\n   *\n   * Valores vÃ¡lidos:\n   *  - `success`: cor verde utilizada para simbolizar sucesso ou Ãªxito.\n   *  - `warning`: cor amarela que representa aviso ou advertÃªncia.\n   *  - `danger`: cor vermelha para erro ou aviso crÃ­tico.\n   *  - `info`: cor cinza escuro que caracteriza conteÃºdo informativo.\n   *\n   * @default `info`\n   */\n  @Input('t-type') set type(value: ThfTagType) {\n    this._type = (<any>Object).values(ThfTagType).includes(value) ? value : thfTagTypeDefault;\n  }\n  get type(): ThfTagType {\n    return this._type;\n  }\n\n  /** Texto da tag. */\n  @Input('t-value') value: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio clicar sobre o `thf-tag`\n   * e que receberÃ¡ como parÃ¢metro um objeto contendo o valor e tipo de tag.\n   */\n  @Output('t-click') click?: EventEmitter<any> = new EventEmitter<ThfTagItem>();\n\n  get iconFromType() {\n    switch (this.type) {\n      case ThfTagType.Danger: return ThfTagIcon.Danger;\n\n      case ThfTagType.Info: return ThfTagIcon.Info;\n\n      case ThfTagType.Success: return ThfTagIcon.Success;\n\n      case ThfTagType.Warning: return ThfTagIcon.Warning;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { ThfTagBaseComponent } from './thf-tag-base.component';\nimport { ThfTagItem } from './interfaces/thf-tag-item.interface';\n\n/**\n * @docsExtends ThfTagBaseComponent\n *\n * @example\n *\n * <example name=\"thf-tag-basic\" title=\"Totvs Tag Basic\">\n *  <file name=\"sample-thf-tag-basic/sample-thf-tag-basic.component.html\"> </file>\n *  <file name=\"sample-thf-tag-basic/sample-thf-tag-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-tag-labs\" title=\"Totvs Tag Labs\">\n *  <file name=\"sample-thf-tag-labs/sample-thf-tag-labs.component.html\"> </file>\n *  <file name=\"sample-thf-tag-labs/sample-thf-tag-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-tag-bank-account\" title=\"Totvs Tag - Bank Account\">\n *  <file name=\"sample-thf-tag-bank-account/sample-thf-tag-bank-account.component.html\"> </file>\n *  <file name=\"sample-thf-tag-bank-account/sample-thf-tag-bank-account.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-tag',\n  templateUrl: './thf-tag.component.html'\n})\nexport class ThfTagComponent extends ThfTagBaseComponent implements OnInit {\n\n  isClickable: boolean;\n\n  ngOnInit() {\n    this.isClickable = this.click.observers.length > 0;\n  }\n\n  onClick() {\n    const submittedTagItem: ThfTagItem = { value: this.value, type: this.type };\n\n    this.click.emit(submittedTagItem);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfTagComponent } from './thf-tag.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `thf-tag`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ThfTagComponent\n  ],\n  exports: [\n    ThfTagComponent\n  ],\n  providers: [],\n  schemas: []\n})\nexport class ThfTagModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { convertToBoolean } from '../../../utils/util';\n\nimport { ThfDynamicFormField } from './thf-dynamic-form-field.interface';\n\n/**\n *\n * @description\n *\n * Componente para criaÃ§Ã£o de formulÃ¡rios dinÃ¢micos a partir de uma lista de objetos.\n *\n * TambÃ©m Ã© possÃ­vel verificar se o formulÃ¡rio estÃ¡ vÃ¡lido e informar valores para a exibiÃ§Ã£o de informaÃ§Ãµes.\n *\n * > Temos uma ferramenta para criaÃ§Ã£o de formulÃ¡rios, onde Ã© possÃ­vel inicializÃ¡-lo atravÃ©s de um JSON.\n * [**Veja aqui**](tools/dynamic-form).\n */\nexport class ThfDynamicFormBaseComponent {\n\n  private _groupForm?: boolean = false;\n\n  /**\n   * @description\n   *\n   * ColeÃ§Ã£o de objetos que implementam a interface `ThfDynamicFormField`, para definiÃ§Ã£o dos campos que serÃ£o criados\n   * dinamicamente.\n   *\n   * > Ex: `[ { property: 'name' } ]`\n   *\n   * Regras de tipagem e criaÃ§Ã£o dos componentes:\n   *\n   * - Caso o *type* informado seja *boolean* o componente criado serÃ¡ o `thf-switch`.\n   * - Caso o *type* informado seja *currency* e nÃ£o seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `thf-decimal`,\n   * caso seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `thf-input`.\n   * - Caso o *type* informado seja *number* e nÃ£o seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `thf-decimal`, caso seja\n   * informado um *mask* ou *pattern* o componente criado serÃ¡ o `thf-input`.\n   * - Caso a lista possua a propriedade `options` e a mesma possua atÃ© 3 itens o componente criado serÃ¡ o `thf-radio-group`\n   * ou `thf-checkbox-group` se informar a propriedade `optionsMulti`.\n   * - Caso a mesma possua 3 ou mais itens, serÃ¡ criado o componente `thf-select` ou, `thf-multiselect` se a propriedade `optionsMulti`\n   * for verdadeira.\n   * - Caso o *type* informado seja *date* ou *datetime* o componente criado serÃ¡ o `thf-datepicker`.\n   * - Caso seja informado a propriedade `optionsService` o componente criado serÃ¡ o `thf-combo`.\n   * - Caso o *type* informado seja *time* o componente criado serÃ¡ um `thf-input` podendo receber um *mask* para formatar\n   * o valor exibido, caso nÃ£o seja informado um *mask* o componente serÃ¡ criado com a mÃ¡scara '99:99' por padrÃ£o.\n   * - Caso a lista possua a propriedade `rows` e esta seja definida com valor maior ou igual a 3 o componente criado serÃ¡\n   * o `thf-textarea`, caso o valor da propriedade `rows` seja menor que 3 o componente criado serÃ¡ o `thf-input`.\n   * - Caso seja informada a propriedade `secret` o componente criado serÃ¡ o `thf-password`.\n   * - Caso o *type* informado seja *string* o componente criado serÃ¡ o `thf-input`.\n   *\n   * @default `[]`\n   */\n  @Input('t-fields') fields: Array<ThfDynamicFormField>;\n\n  /**\n   * Objeto que serÃ¡ utilizado como valor para exibir as informaÃ§Ãµes, serÃ¡ recuperado e preenchido atravÃ©s do atributo *property*\n   * dos objetos contidos na propridade `t-fields`.\n   *\n   * Pode iniciar com valor ou apenas com um objeto vazio que serÃ¡ preenchido conforme descrito acima.\n   *\n   * > Ex: `{ name: 'thf' }`\n   */\n  @Input('t-value') value: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Na inicializaÃ§Ã£o do componente serÃ¡ repassado o objeto de formulÃ¡rio utilizado no componente,\n   * podendo ser utilizado para validaÃ§Ãµes e/ou detecÃ§Ã£o de mudanÃ§a dos valores.\n   *\n   * Portanto existem duas maneiras de recuperar o formulÃ¡rio,\n   * atravÃ©s de *template reference* e atravÃ©s do *output*, veja os exemplos abaixo:\n   *\n   * > *template reference*\n   *\n   * ```html\n   *  <thf-dynamic-form #dynamicForm>\n   *  </thf-dynamic-form>\n   *\n   *  <thf-button t-label=\"Adicionar\" [t-disabled]=\"dynamicForm?.form.invalid\">\n   *  </thf-button>\n   *\n   * ```\n   *\n   * > *Output*\n   *\n   * ```html\n   *  ...\n   *  <thf-dynamic-form (t-form)=\"getForm($event)\">\n   *  </thf-dynamic-form>\n   *\n   *  <thf-button t-label=\"Adicionar\" [t-disabled]=\"dynamicForm?.invalid\">\n   *  </thf-button>\n   *  ...\n   *\n   * ```\n   *\n   * ```ts\n   *  ...\n   *\n   *  export class AppComponent {\n   *\n   *    dynamicForm: NgForm;\n   *\n   *    getForm(form: NgForm) {\n   *      this.dynamicForm = form;\n   *    }\n   *\n   *  }\n   * ```\n   *\n   * > Caso a propriedade `t-group-form` for verdadeira nÃ£o serÃ¡ repassado o formulÃ¡rio, pois o mesmo utilizarÃ¡\n   * o formulÃ¡rio pai.\n   */\n  @Output('t-form') formOutput: EventEmitter<NgForm> = new EventEmitter<NgForm>();\n\n  /**\n   * @optional\n   *\n   * @description\n   * Ao informar esta propriedade, o componente passarÃ¡ a utilizar o formulÃ¡rio pai para criar os `FormControl`\n   * e com isso Ã© possÃ­vel recuperar o valor do formulÃ¡rio e suas validaÃ§Ãµes a partir do formulÃ¡rio pai.\n   *\n   * ```html\n   * <form #parentForm=\"ngForm\">\n   *\n   *   <thf-dynamic-form t-group-form [t-fields]=\"fields\"></thf-dynamic-form>\n   *\n   *  <thf-button t-label=\"Adicionar\" [t-disabled]=\"parentForm.invalid\"></thf-button>\n   * </form>\n   * ```\n   */\n  @Input('t-group-form') set groupForm(value: boolean) {\n    this._groupForm = <any> value === '' ? true : convertToBoolean(value);\n  }\n\n  get groupForm(): boolean {\n    return this._groupForm;\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { ThfDynamicFormBaseComponent } from './thf-dynamic-form-base.component';\n\n/**\n * @docsExtends ThfDynamicFormBaseComponent\n *\n * @example\n *\n * <example name=\"thf-dynamic-form-basic\" title=\"Totvs Dynamic Form Basic\">\n *  <file name=\"sample-thf-dynamic-form-basic/sample-thf-dynamic-form-basic.component.html\"> </file>\n *  <file name=\"sample-thf-dynamic-form-basic/sample-thf-dynamic-form-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-dynamic-form-register\" title=\"Totvs Dynamic Form - Register\">\n *  <file name=\"sample-thf-dynamic-form-register/sample-thf-dynamic-form-register.component.html\"> </file>\n *  <file name=\"sample-thf-dynamic-form-register/sample-thf-dynamic-form-register.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'thf-dynamic-form',\n  templateUrl: './thf-dynamic-form.component.html'\n})\nexport class ThfDynamicFormComponent extends ThfDynamicFormBaseComponent {\n\n  private _form: NgForm;\n\n  @ViewChild('dynamicForm', { static: false }) set form(value: NgForm) {\n    // necessario para nao ocorrer o ExpressionChangedAfterItHasBeenCheckedError\n    setTimeout(() => {\n      this._form = value;\n\n      this.emitForm();\n    });\n  }\n\n  get form() {\n    return this._form || <any> {};\n  }\n\n  private emitForm() {\n    if (!this.groupForm && this.formOutput.observers.length) {\n      this.formOutput.emit(this.form);\n    }\n  }\n\n}\n","import { ThfDynamicViewField } from './thf-dynamic-view/thf-dynamic-view-field.interface';\n\nexport function getGridColumnsClasses(smColumns, mdColumns, lgColumns, xlColumns, gridColumns) {\n  const systemGrid = {\n    sm: smColumns || gridColumns || 12,\n    md: mdColumns || gridColumns || 6,\n    lg: lgColumns || gridColumns || 4,\n    xl: xlColumns || gridColumns || 3\n  };\n\n  return `thf-sm-${systemGrid.sm} thf-md-${systemGrid.md} thf-lg-${systemGrid.lg} thf-xl-${systemGrid.xl}`;\n}\n\nexport function isVisibleField(field: ThfDynamicViewField): boolean {\n  const containsVisible = 'visible' in field;\n\n  return containsVisible ? field.visible : true;\n}\n","/**\n * @usedBy ThfDynamicFormComponent\n *\n * @description\n *\n * Enum para definiÃ§Ã£o do tipo de campo que serÃ¡ criado dinamicamente.\n */\nexport enum ThfDynamicFieldType {\n\n  /** Valor booleano. */\n  Boolean = 'boolean',\n\n  /** Valor numÃ©rico que contÃ©m casas decimais e milhar. */\n  Currency = 'currency',\n\n  /** Valor para data. */\n  Date = 'date',\n\n  /** Valor para data e hora. */\n  DateTime = 'datetime',\n\n  /** Utilizado para informar/exibir hora. */\n  Time = 'time',\n\n  /** Valor nÃºmerico. */\n  Number = 'number',\n\n  /** Texto. */\n  String = 'string'\n\n}\n","import { Input } from '@angular/core';\nimport { TitleCasePipe } from '@angular/common';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { getGridColumnsClasses, isVisibleField } from '../../thf-dynamic.util';\nimport { ThfDynamicFieldType } from '../../thf-dynamic-field-type.enum';\nimport { ThfDynamicFormField } from '../thf-dynamic-form-field.interface';\nimport { ThfDynamicFormFieldInternal } from './thf-dynamic-form-field-internal.interface';\n\nexport class ThfDynamicFormFieldsBaseComponent {\n\n  private _fields: Array<ThfDynamicFormField>;\n  private _value?: any = {};\n\n  visibleFields: Array<ThfDynamicFormFieldInternal> = [];\n\n  // array de objetos que implementam a interface ThfDynamicFormField, que serÃ£o exibidos no componente.\n  @Input('t-fields') set fields(value: Array<ThfDynamicFormField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n  }\n\n  get fields() {\n    return this._fields;\n  }\n\n  // valor que serÃ¡ utilizado para iniciar valor no componente.\n  @Input('t-value') set value(value: any) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  constructor(private titleCasePipe: TitleCasePipe) {}\n\n  compareTo(value, compareTo) {\n    return value === compareTo;\n  }\n\n  // retorna um array com os objetos configurados e visiveis.\n  protected getVisibleFields() {\n    const visibleFields = [];\n\n    this.fields.forEach(field => {\n      if (this.existsProperty(visibleFields, field.property)) {\n        this.printError(`\"thf-dynamic-form\" property \"${field.property}\" estÃ¡ duplicado. Interface: ThfDynamicFormField.`);\n        return;\n      }\n\n      if (!field['property']) {\n        this.printError('\"thf-dynamic-form\" Ã obrigatÃ³rio ser especificado um property.');\n        return;\n      }\n\n      if (isVisibleField(field)) {\n        visibleFields.push(this.createField(field));\n      }\n    });\n\n    return visibleFields;\n  }\n\n  // converte um array em string para um array de objetos que contem label e value.\n  private convertOptions(options: Array<any>): Array<{ label: string, value: string }> {\n    const everyOptionString = options.every(option => typeof option === 'string');\n\n    if (everyOptionString) {\n      return options.map(value => ({label: value, value}));\n    }\n\n    return options;\n  }\n\n  // cria um novo objeto com as classes de grid system, com control (tipo do componente) e label default.\n  private createField(field: ThfDynamicFormField): ThfDynamicFormFieldInternal {\n    const control = this.getComponentControl(field);\n    const options = !!field.options ? this.convertOptions(field.options) : undefined;\n\n    const componentClass = getGridColumnsClasses(field.gridSmColumns,\n      field.gridMdColumns,\n      field.gridLgColumns,\n      field.gridXlColumns,\n      field.gridColumns);\n\n    return {\n      label: this.titleCasePipe.transform(field.property),\n      ...field,\n      componentClass,\n      control,\n      options\n    };\n  }\n\n  private existsProperty(fields: Array<ThfDynamicFormField>, property: string) {\n    return fields.some(field => {\n      return field.property === property;\n    });\n  }\n\n  // recupera o componente de acordo com algumas regras do field.\n  private getComponentControl(field: ThfDynamicFormField = <any> {}) {\n    const type = field && field.type ? field.type.toLocaleLowerCase() : 'string';\n\n    if (this.isNumberType(field, type)) {\n      return 'number';\n    } else if (this.isCurrencyType(field, type)) {\n      return 'decimal';\n    } else if (this.isSelect(field)) {\n      return 'select';\n    } else if (this.isRadioGroup(field)) {\n      return 'radioGroup';\n    } else if (this.isCheckboxGroup(field)) {\n      return 'checkboxGroup';\n    } else if (this.isMultiselect(field)) {\n      return 'multiselect';\n    } else if (this.compareTo(type, ThfDynamicFieldType.Boolean)) {\n      return 'switch';\n    } else if (this.compareTo(type, ThfDynamicFieldType.Date) || this.compareTo(type, ThfDynamicFieldType.DateTime)) {\n      return 'datepicker';\n    } else if (this.compareTo(type, ThfDynamicFieldType.Time)) {\n      field.mask = field.mask || '99:99';\n\n      return 'input';\n    } else if (this.isCombo(field)) {\n      return 'combo';\n    } else if (this.isLookup(field)) {\n      return 'lookup';\n    } else if (this.isTextarea(field)) {\n      return 'textarea';\n    } else if (this.isPassword(field)) {\n      return 'password';\n    }\n\n    return 'input';\n  }\n\n  private isCheckboxGroup(field: ThfDynamicFormField) {\n    const { optionsService, optionsMulti, options } = field;\n\n    return !optionsService && optionsMulti && !!options && options.length <= 3;\n  }\n\n  private isCombo(field: ThfDynamicFormField) {\n    const { optionsService } = field;\n\n    return !!optionsService && isTypeof(optionsService, 'string');\n  }\n\n  private isCurrencyType(field: ThfDynamicFormField, type: string) {\n    const { mask, pattern } = field;\n\n    return this.compareTo(type, ThfDynamicFieldType.Currency) && (!mask && !pattern);\n  }\n\n  private isLookup(field: ThfDynamicFormField) {\n    const { searchService } = field;\n\n    return !!searchService && isTypeof(searchService, 'string');\n  }\n\n  private isMultiselect(field: ThfDynamicFormField) {\n    const { optionsService, optionsMulti, options } = field;\n\n    return !optionsService && optionsMulti && !!options && options.length > 3;\n  }\n\n  private isNumberType(field: ThfDynamicFormField, type: string) {\n    const { mask, pattern } = field;\n\n    return this.compareTo(type, ThfDynamicFieldType.Number) && (!mask && !pattern);\n  }\n\n  private isPassword(field: ThfDynamicFormField) {\n    const { secret } = field;\n\n    return secret;\n  }\n\n  private isRadioGroup(field: ThfDynamicFormField) {\n    const { optionsMulti, options } = field;\n\n    return !optionsMulti && !!options && options.length <= 3;\n  }\n\n  private isSelect(field: ThfDynamicFormField) {\n    const { optionsMulti, options } = field;\n\n    return !optionsMulti && !!options && options.length > 3;\n  }\n\n  private isTextarea(field: ThfDynamicFormField) {\n    const { rows } = field;\n\n    return rows && rows >= 3;\n  }\n\n  private printError(error: string) {\n    console.error(error);\n  }\n\n}\n","import { Component, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { ThfDynamicFormFieldsBaseComponent } from './thf-dynamic-form-fields-base.component';\nimport { TitleCasePipe } from '@angular/common';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de criaÃ§Ã£o dos campos dinÃ¢micos.\n */\n@Component({\n  selector: 'thf-dynamic-form-fields',\n  templateUrl: 'thf-dynamic-form-fields.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class ThfDynamicFormFieldsComponent extends ThfDynamicFormFieldsBaseComponent implements OnChanges {\n\n  constructor(titleCasePipe: TitleCasePipe) {\n    super(titleCasePipe);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fields) {\n      this.visibleFields = this.getVisibleFields();\n    }\n  }\n\n  trackBy(index) {\n    return index;\n  }\n\n}\n","import { Input } from '@angular/core';\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\n\nimport { convertToBoolean, isTypeof } from '../../../utils/util';\nimport { ThfTimePipe } from '../../../pipes/thf-time/thf-time.pipe';\n\nimport { getGridColumnsClasses, isVisibleField } from '../thf-dynamic.util';\nimport { ThfDynamicViewField } from './thf-dynamic-view-field.interface';\n\n/**\n *\n * @description\n *\n * Componente para listar dados dinamicamente a partir de uma lista de objetos.\n *\n * > Por padrÃ£o esse componente cria `thf-info` para exibiÃ§Ã£o, Ã© possÃ­vel criar `thf-tag` passando a propriedade { tag: true }.\n *\n */\nexport class ThfDynamicViewBaseComponent {\n\n  private _fields: Array<ThfDynamicViewField> = [];\n  private _showAllValue: boolean = false;\n  private _value = {};\n\n  visibleFields = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de objetos que implementam a interface `ThfDynamicView`.\n   *\n   * > Ex: `[ { property: 'age' } ]`\n   *\n   * Regras de tipagem e formataÃ§Ã£o dos valores exibidos:\n   *\n   * - Caso o *type* informado seja *currency* e nÃ£o seja informado o *format* o mesmo recebe \"'BRL', 'symbol', '1.2-2'\"\n   * como formato padrÃ£o.\n   * - Caso o *type* informado seja *date* e nÃ£o seja informado o *format* o mesmo recebe 'dd/MM/yyyy' como formato padrÃ£o.\n   * - Caso o *type* informado seja *dateTime* e nÃ£o seja informado o *format* o mesmo recebe 'dd/MM/yyyy HH:mm:ss' como formato padrÃ£o.\n   * - Caso o *type* informado seja *number* e nÃ£o seja informado o *format* o mesmo nÃ£o serÃ¡ formatado.\n   * - Caso o *type* informado seja *time* e nÃ£o seja informado o *format* o mesmo recebe 'HH:mm:ss.ffffff' como formato padrÃ£o.\n   *\n   * > As propriedades informadas serÃ£o exibidas mesmo nÃ£o contendo valor de referÃªncia no objeto da propriedade `t-value`.\n   *\n   * @default `[]`\n   */\n  @Input('t-fields') set fields(fields: Array<ThfDynamicViewField>) {\n    this._fields = Array.isArray(fields) ? [...fields] : [];\n  }\n\n  get fields() {\n    return this._fields;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica se exibirÃ¡ todas as informaÃ§Ãµes contidas dentro do objeto informado na propriedade `t-value`.\n   *\n   * @default `false`\n   */\n  @Input('t-show-all-value') set showAllValue(value: boolean) {\n    this._showAllValue = convertToBoolean(value);\n  }\n\n  get showAllValue() {\n    return this._showAllValue;\n  }\n\n  /**\n   * @description\n   *\n   * Objeto que serÃ¡ utilizado para exibir as informaÃ§Ãµes dinÃ¢micas, o valor serÃ¡ recuperado atravÃ©s do atributo *property*\n   * dos objetos contidos na propridade `t-fields`.\n   *\n   * > Ex: `{ age: '35' }`\n   */\n  @Input('t-value') set value(value: object) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  constructor(\n    private currencyPipe: CurrencyPipe,\n    private datePipe: DatePipe,\n    private decimalPipe: DecimalPipe,\n    private timePipe: ThfTimePipe,\n    private titleCasePipe: TitleCasePipe) { }\n\n  // retorna os fields com os valores recuperados do objeto value.\n  protected getConfiguredFields() {\n    const newFields = [];\n\n    this.fields.forEach(field => {\n      if (isVisibleField(field)) {\n        newFields.push(this.createField(field));\n      }\n    });\n\n    return newFields;\n  }\n\n  // retorna fields ligado ao value mais os atributos do value que nÃ£o possuiam fields.\n  protected getMergedFields() {\n    const mergedFields = [...this.getConfiguredFields()];\n\n    this.getValueFields().forEach(valueField => {\n      const fieldIndex = mergedFields.findIndex(field => field.property === valueField.property);\n      const property = valueField.property;\n\n      if (fieldIndex === -1) {\n        mergedFields.push(this.createField({ property }));\n      }\n    });\n\n    return mergedFields;\n  }\n\n  // retorna o objeto value como fields.\n  protected getValueFields() {\n    return Object.keys(this.value).map(property => {\n      return this.createField({ property });\n    });\n  }\n\n  private createField(field: ThfDynamicViewField) {\n    const property = field.property;\n    const value = this.transformValue(field.type, this.value[property], field.format);\n\n    const classesGridColumns = getGridColumnsClasses(field.gridSmColumns,\n      field.gridMdColumns,\n      field.gridLgColumns,\n      field.gridXlColumns,\n      field.gridColumns);\n\n    return {\n      property,\n      value,\n      label: this.titleCasePipe.transform(property),\n      cssClass: classesGridColumns,\n      ...field\n    };\n  }\n\n  private transformValue(type: string, value, format) {\n    let transformedValue = value;\n\n    switch (type) {\n      case 'currency':\n        transformedValue = this.currencyPipe.transform(value, format || 'BRL', 'symbol', '1.2-2');\n        break;\n      case 'date':\n        transformedValue = this.datePipe.transform(value, format || 'dd/MM/yyyy');\n        break;\n      case 'dateTime':\n        transformedValue = this.datePipe.transform(value, format || 'dd/MM/yyyy HH:mm:ss');\n        break;\n      case 'number':\n        transformedValue = this.decimalPipe.transform(value, format);\n        break;\n      case 'time':\n        transformedValue = this.timePipe.transform(value, format || 'HH:mm:ss.ffffff');\n        break;\n    }\n\n    return transformedValue;\n  }\n\n}\n","import { Component, OnChanges, SimpleChanges } from '@angular/core';\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\n\nimport { ThfTimePipe } from '../../../pipes/thf-time/thf-time.pipe';\n\nimport { ThfDynamicViewBaseComponent } from './thf-dynamic-view-base.component';\n\n/**\n * @docsExtends ThfDynamicViewBaseComponent\n *\n * @example\n *\n * <example name=\"thf-dynamic-view-basic\" title=\"Totvs Dynamic View Basic\">\n *  <file name=\"sample-thf-dynamic-view-basic/sample-thf-dynamic-view-basic.component.html\"> </file>\n *  <file name=\"sample-thf-dynamic-view-basic/sample-thf-dynamic-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-dynamic-view-employee\" title=\"Totvs Dynamic View - Employee\">\n *  <file name=\"sample-thf-dynamic-view-employee/sample-thf-dynamic-view-employee.component.html\"> </file>\n *  <file name=\"sample-thf-dynamic-view-employee/sample-thf-dynamic-view-employee.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-dynamic-view',\n  templateUrl: './thf-dynamic-view.component.html'\n})\nexport class ThfDynamicViewComponent extends ThfDynamicViewBaseComponent implements OnChanges {\n\n  constructor(\n    currencyPipe: CurrencyPipe,\n    datePipe: DatePipe,\n    decimalPipe: DecimalPipe,\n    timePipe: ThfTimePipe,\n    titleCasePipe: TitleCasePipe) {\n\n    super(currencyPipe, datePipe, decimalPipe, timePipe, titleCasePipe);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fields || changes.value || changes.showAllValue) {\n      this.visibleFields = this.getVisibleFields();\n    }\n  }\n\n  private getVisibleFields() {\n    if (this.showAllValue) {\n      return this.getMergedFields();\n    }\n\n    return this.value && this.fields.length ? this.getConfiguredFields() : this.getValueFields();\n  }\n\n}\n","import { CommonModule, CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { ThfDividerModule } from '../thf-divider/thf-divider.module';\nimport { ThfFieldModule } from '../thf-field/thf-field.module';\nimport { ThfInfoModule } from '../thf-info/thf-info.module';\nimport { ThfTagModule } from '../thf-tag/thf-tag.module';\nimport { ThfTimeModule } from '../../pipes/thf-time/thf-time.module';\nimport { ThfTimePipe } from '../../pipes/thf-time/thf-time.pipe';\n\nimport { ThfDynamicFormComponent } from './thf-dynamic-form/thf-dynamic-form.component';\nimport { ThfDynamicFormFieldsComponent } from './thf-dynamic-form/thf-dynamic-form-fields/thf-dynamic-form-fields.component';\nimport { ThfDynamicViewComponent } from './thf-dynamic-view/thf-dynamic-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ThfDividerModule,\n    ThfInfoModule,\n    ThfFieldModule,\n    ThfTagModule,\n    ThfTimeModule\n  ],\n  declarations: [\n    ThfDynamicFormComponent,\n    ThfDynamicFormFieldsComponent,\n    ThfDynamicViewComponent\n  ],\n  exports: [\n    ThfDynamicFormComponent,\n    ThfDynamicViewComponent\n  ],\n  providers: [ CurrencyPipe, DatePipe, DecimalPipe, ThfTimePipe, TitleCasePipe ]\n})\nexport class ThfDynamicModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'thf-grid-cell-action',\n  templateUrl: './thf-grid-cell-action.component.html',\n  styleUrls: ['./thf-grid-cell-action.component.css']\n})\nexport class ThfGridCellActionComponent {\n\n  @Input('t-position') position?: string = '';\n\n  @Input('t-value') value?: string;\n\n  constructor() { }\n\n  onKeyDownContent(event) {\n    // console.log('onKeyDownContent: ', event);\n\n    // ENTER\n    if (event.keyCode === 13) {\n      event.preventDefault();\n\n      // this.openActions(this.value);\n\n      return;\n    }\n  }\n\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'thf-grid-cell',\n  templateUrl: './thf-grid-cell.component.html',\n  styleUrls: ['./thf-grid-cell.component.css']\n})\nexport class ThfGridCellComponent {\n\n  private _width: (string | number);\n\n  _value: any = '';\n  edit: boolean = false;\n  editValue: string = '';\n\n  @Input('t-align') align?: string = 'left';\n\n  @Input('t-freeze') freeze?: boolean = false;\n\n  @Input('t-tab-index') tabIndex?: number = -1;\n\n  @Input('t-position') position?: string = '';\n\n  @Input('t-width') set width(value: (string | number)) {\n    this._width = value;\n\n    if (this.freeze && !this._width) {\n      this._width = 100;\n    }\n  }\n  get width(): (string | number) {\n    return this._width ? `${this._width}px` : '100%';\n  }\n\n  @Input('t-readonly') readonly?: boolean = false;\n\n  @Input('t-required') required?: boolean = false;\n\n  @Output('t-valueChange') valueChange = new EventEmitter<any>();\n  // @Input('t-value') value?: string;\n  @Input('t-value') set value(value: any) {\n    this._value = value;\n    this.valueChange.emit(this._value);\n  }\n  get value(): any {\n    return this._value;\n  }\n\n  @ViewChild('inputElement', { static: true }) inputElement: ElementRef;\n  @ViewChild('contentElement', { static: true }) contentElement: ElementRef;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) { }\n\n  onKeyDownContent(event: any) {\n    // console.log('onKeyDownContent: ', event);\n\n    // BACKSPACE / DELETE\n    if ((!event.ctrlKey) && ((event.keyCode === 8) || (event.keyCode === 46))) {\n\n      if (this.readonly) {\n        return;\n      }\n\n      event.preventDefault();\n      this.value = '';\n      return;\n    }\n\n    // ENTER\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      this.onEditCell(this.value);\n      return;\n    }\n\n    // A..Z - 0..9\n    if ((event.keyCode >= 65) && (event.keyCode <= 90) || (event.keyCode >= 48) && (event.keyCode <= 57)) {\n      event.preventDefault();\n      this.onEditCell(event.key);\n      return;\n    }\n  }\n\n  dblclick(event: any) {\n    // console.log('dblclick: ', event);\n\n    event.preventDefault();\n\n    this.onEditCell(this.value);\n  }\n\n  onBlurInput(event: any) {\n    // console.log('onBlurInput: ', event);\n\n    this.value = this.editValue;\n    this.editValue = undefined;\n    this.edit = false;\n  }\n\n  onKeyDownInput(event: any) {\n    // console.log('onKeyDownInput: ', event);\n\n    // ENTER\n    if (event.keyCode === 13) {\n      this.value = this.editValue;\n      this.editValue = undefined;\n      this.edit = false;\n      this.changeDetectorRef.detectChanges();\n      this.contentElement.nativeElement.focus();\n    }\n\n    // ESCAPE\n    if (event.keyCode === 27) {\n      this.editValue = undefined;\n      this.edit = false;\n      this.changeDetectorRef.detectChanges();\n      this.contentElement.nativeElement.focus();\n      event.stopPropagation();\n    }\n  }\n\n  private onEditCell(value: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.editValue = value;\n    this.edit = true;\n    this.changeDetectorRef.detectChanges();\n    this.inputElement.nativeElement.focus();\n  }\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { ThfGridRowActions } from './thf-grid-row-actions.interface';\n\n/**\n * @description\n *\n * Componente grid.\n *\n * AÃ§Ãµes / atalhos:\n *\n * - ARROW-UP: Navega para celula superior / Na ultima linha adiciona uma linha em branco no grid;\n * - ARROW-DOWN: Navega para celula inferior;\n * - ARROW-RIGHT: Navega para celula direita;\n * - ARROW-LEFT: Navega para celula esquerda;\n * - TAB: Navega para prÃ³xima celula;\n * - SHIFT+TAB: Navega para celula anterior;\n * - CTRL+DEL: Remove linha;\n * - DEL/BACKSPACE: Limpa celula;\n * - ENTER: Edita linha com valor atual/Confirma ediÃ§Ã£o da celula;\n * - DOUBLE-CLICK: Edita linha com valor atual;\n * - ESC: Cancela ediÃ§Ã£o da celula / Cancela inserÃ§Ã£o de linhas em branco;\n * - A..Z/0..9: Inicia ediÃ§Ã£o com valor em branco.\n *\n * @example\n *\n * <example name=\"thf-grid-basic\" title=\"Totvs Grid Basic\">\n *  <file name=\"sample-thf-grid-basic/sample-thf-grid-basic.component.html\"> </file>\n *  <file name=\"sample-thf-grid-basic/sample-thf-grid-basic.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-grid',\n  templateUrl: './thf-grid.component.html',\n  styleUrls: ['./thf-grid.component.css']\n})\nexport class ThfGridComponent implements OnDestroy {\n\n  lastCell: string = '0-0';\n  lastRow: number = 0;\n  lastColumn: number = 0;\n  currencyCell: string = '0-0';\n  currencyRow: number = 0;\n  currencyColumn: number = 0;\n  currencyObj: any;\n\n  logger = false;\n\n  width = '100%';\n  widthFreeze = 0;\n  widthActions = 0;\n\n  private resizeListener: () => void;\n  private timeoutResize;\n\n  @ViewChild('table', { static: true }) tableElement: ElementRef;\n  @ViewChild('wrapper', { static: true }) tableWrapper: ElementRef;\n\n  private _columns = [];\n\n  /**\n   * @description\n   *\n   * AÃ§Ãµes disparadas quando uma linha do grid Ã© manipulada.\n   */\n  @Input('t-row-actions') rowActions: ThfGridRowActions = {};\n\n  /**\n   * Colunas exibidas no grid.\n   */\n  @Input('t-columns') set columns(value: Array<any>) {\n    this._columns = [...value];\n\n    this._columns.forEach(column => {\n      column.label = column.label || column.property;\n\n      if (column.freeze === true) {\n        column.cssWidth = `${column.width || 100}px`;\n      } else {\n        column.cssWidth = column.width ? `${column.width}px` : '100%';\n      }\n    });\n  }\n  get columns(): Array<any> {\n    return this._columns.filter(column => column.freeze !== true && column.action !== true);\n  }\n\n  /**\n   * Lista com os dados que serÃ£o exibidos no grid.\n   */\n  @Input('t-data') data: Array<any> = [];\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private elRef: ElementRef,\n    renderer: Renderer2) {\n\n    this.debounceResize();\n\n    this.resizeListener = renderer.listen('window', 'resize', (event: any) => {\n      this.debounceResize();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n\n    this.timeoutResize = setTimeout(() => {\n      const widthTableWrapper = this.tableWrapper.nativeElement.offsetWidth;\n      this.width = `${widthTableWrapper - (this.widthFreeze + 8) - this.widthActions}px`;\n    }, 100);\n  }\n\n  get freezeColumns() {\n    const freezeColumns = this._columns.filter(column => column.freeze === true);\n\n    this.widthFreeze = freezeColumns.reduce((prev, current) => prev + (current.width || 100), 0);\n\n    return freezeColumns;\n  }\n\n  get actionColumns() {\n    const actionsColumns = this._columns.filter(column => column.action === true);\n\n    this.widthActions = actionsColumns.length > 0 ? 56 : 0;\n\n    return actionsColumns;\n  }\n\n  cancelRow(event: any, row: any) {\n    const el = event.path.find(element => element.id);\n\n    if (!el) {\n      return;\n    }\n\n    const [x] = (el.id).split('-');\n\n    if (this.isEmptyRow(x)) {\n      if (!this.removeRow(event, row)) {\n        return;\n      }\n\n      this.currencyObj = Object.assign({}, this.data[this.currencyRow - 1]);\n    } else {\n      this.data[+x - 1] = Object.assign({}, this.currencyObj);\n      setTimeout(() => this.selectCell(this.currencyRow, this.currencyColumn));\n    }\n  }\n\n  removeRow(event: any, row: any): boolean {\n\n    if (this.rowActions.beforeRemove && !this.rowActions.beforeRemove(Object.assign({}, row))) {\n      return false;\n    }\n\n    const index = this.data.indexOf(row);\n\n    this.data.splice(index, 1);\n\n    this.changeDetectorRef.detectChanges();\n\n    if ((this.data.length === 0) || (index === this.data.length)) {\n      this.selectCell(this.currencyRow - 1, this.currencyColumn);\n    } else {\n      this.selectCell(this.currencyRow, this.currencyColumn);\n    }\n\n    return true;\n  }\n\n  tableKeydown(event: any, direction: string) {\n    let [row, col] = event.target.id.split('-');\n    row = +row;\n    col = +col;\n    let prow = +row;\n    let pcol = +col;\n\n    // event.preventDefault();\n    // event.stopPropagation();\n\n    // debugger;\n    if (direction === 'down') {\n      if (row <= this.data.length) {\n        prow++;\n      }\n\n      if (row === this.data.length) {\n        if (row === 0 || !this.isEmptyRow(row)) {\n          if (this.saveRow(row)) {\n            if (!this.insertRow()) {\n              return;\n            }\n          } else {\n            return;\n          }\n        } else {\n          prow--;\n        }\n      }\n    } else if ((direction === 'up') && (row > 0)) {\n      prow--;\n    } else if ((direction === 'left') && (col > 0)) {\n      pcol--;\n    } else if ((direction === 'right') && (col < this._columns.length - 1)) {\n      pcol++;\n    } else if (direction === 'next') {\n      if (col < this._columns.length - 1) {\n        pcol++;\n        event.preventDefault();\n      } else if (row < this.data.length) {\n        pcol = 0;\n        prow++;\n        event.preventDefault();\n      }\n    } else if (direction === 'prior') {\n      if (col > 0) {\n        pcol--;\n        event.preventDefault();\n      } else if (row > 0) {\n        pcol = this._columns.length - 1;\n        prow--;\n        event.preventDefault();\n      }\n    }\n\n    if (this.currencyCell === `${prow}-${pcol}`) {\n      // console.log('vazou');\n      return;\n    }\n\n    // debugger;\n    if (prow !== this.currencyRow && row > 0 && this.data.length >= row) {\n      if (!this.isEmptyRow(row)) {\n        if (!this.saveRow(row)) {\n          return;\n        }\n      } else {\n        if (!this.removeRow(event, row)) {\n          return;\n        }\n      }\n    }\n\n    if (this.currencyRow !== prow) {\n      this.currencyObj = Object.assign({}, this.data[prow - 1]);\n      // console.log('mudou de linha');\n    }\n\n    this.lastCell = event.target.id;\n    this.lastRow = row;\n    this.lastColumn = col;\n\n    this.selectCell(prow, pcol);\n  }\n\n  tableClick(event: any) {\n    const el = event.path.find(element => element.id);\n\n    if (!el) {\n      this.selectCell(this.currencyRow, this.currencyColumn);\n      return;\n    }\n\n    if (this.currencyCell === el.id) {\n      return;\n    }\n\n    const [row, col] = (el.id).split('-');\n    const prow = +row;\n    const pcol = +col;\n\n    if (prow !== this.currencyRow) {\n      if (this.currencyRow > 0) {\n        if (!this.isEmptyRow(this.currencyRow)) {\n          if (!this.saveRow(this.currencyRow)) {\n            this.selectCell(this.currencyRow, this.currencyColumn);\n            return;\n          }\n        } else {\n          if (!this.removeRow(event, row)) {\n            return;\n          }\n        }\n      }\n\n      this.currencyObj = Object.assign({}, this.data[prow - 1]);\n      // console.log('>>>>>>> ', prow - 1);\n    }\n\n    this.lastCell = this.currencyCell;\n    this.lastRow = this.currencyRow;\n    this.lastColumn = this.currencyColumn;\n\n    this.currencyCell = el.id;\n    this.currencyRow = prow;\n    this.currencyColumn = pcol;\n  }\n\n  saveRow(row: number): boolean {\n    // console.log(this.data[row - 1]);\n\n    const obj = this.data[row - 1];\n\n    if (!Object.keys(obj).some(prop => obj[prop] !== this.currencyObj[prop])) {\n      // console.log('tudo igual');\n      return true;\n    }\n\n    if (this.rowActions.beforeSave && !this.rowActions.beforeSave(obj, this.currencyObj)) {\n      return false;\n    }\n\n    const requireds = [];\n\n    this.columns.forEach(column => {\n      if (column.required === true && !obj[column.property]) {\n        requireds.push(column.property);\n      }\n    });\n\n    return requireds.length === 0;\n  }\n\n  insertRow() {\n    const obj = {};\n\n    if (this.rowActions.beforeInsert && !this.rowActions.beforeInsert(obj)) {\n      return false;\n    }\n\n    // this.currencyObj = Object.assign({}, obj);\n\n    this.data.push(obj);\n    this.changeDetectorRef.detectChanges();\n\n    return true;\n  }\n\n  isEmptyRow(row: number) {\n    const obj = this.data[row - 1];\n\n    if (!obj) { // title\n      return false;\n    }\n\n    const filled = Object.keys(obj).some(property => obj[property]);\n\n    return !filled;\n  }\n\n  selectCell(row: number, col: number) {\n    const nextCell = this.elRef.nativeElement.querySelector(`[id='${row}-${col}']`);\n\n    if (nextCell) {\n      this.currencyCell = `${row}-${col}`;\n      this.currencyRow = row;\n      this.currencyColumn = col;\n      nextCell.focus();\n    }\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'thf-grid-head',\n  templateUrl: './thf-grid-head.component.html',\n  styleUrls: ['./thf-grid-head.component.css']\n})\nexport class ThfGridHeadComponent {\n\n  private _width: (string | number);\n\n  @Input('t-align') align?: string = 'left';\n\n  @Input('t-freeze') boolean?: boolean = false;\n\n  @Input('t-position') position?: string = '';\n\n  @Input('t-tab-index') tabIndex?: number = -1;\n\n  @Input('t-width') set width(value: (string | number)) {\n    this._width = value;\n  }\n  get width(): (string | number) {\n    return this._width ? `${this._width}px` : '100%';\n  }\n\n  @Input('t-title') title?: string;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) { }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { ThfFieldModule } from './../../components/thf-field/thf-field.module';\n\nimport { ThfGridCellActionComponent } from './thf-grid-cell-action/thf-grid-cell-action.component';\nimport { ThfGridCellComponent } from './thf-grid-cell/thf-grid-cell.component';\nimport { ThfGridComponent } from './thf-grid.component';\nimport { ThfGridHeadComponent } from './thf-grid-head/thf-grid-head.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-grid.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    ThfFieldModule\n  ],\n  declarations: [\n    ThfGridCellActionComponent,\n    ThfGridCellComponent,\n    ThfGridComponent,\n    ThfGridHeadComponent\n  ],\n  exports: [\n    ThfGridComponent\n  ]\n})\nexport class ThfGridModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, thfLocaleDefault, convertToBoolean } from '../../utils/util';\n\nimport { ThfListViewAction } from './interfaces/thf-list-view-action.interface';\nimport { ThfListViewLiterals } from './interfaces/thf-list-view-literals.interface';\n\nexport const thfListViewLiteralsDefault = {\n  en: <ThfListViewLiterals> {\n    hideDetails: 'Hide details',\n    loadMoreData: 'Load more data',\n    noData: 'No data found',\n    selectAll: 'Select all',\n    showDetails: 'Show details'\n  },\n  es: <ThfListViewLiterals> {\n    hideDetails: 'Ocultar detalles',\n    loadMoreData: 'Cargar mÃ¡s resultados',\n    noData: 'Datos no encontrados',\n    selectAll: 'Seleccionar todos',\n    showDetails: 'Mostrar detalles'\n  },\n  pt: <ThfListViewLiterals> {\n    hideDetails: 'Ocultar detalhes',\n    loadMoreData: 'Carregar mais resultados',\n    noData: 'Nenhum dado encontrado',\n    selectAll: 'Selecionar todos',\n    showDetails: 'Exibir detalhes'\n  }\n};\n\n/**\n * @description\n *\n * Componente de lista que recebe um array de objetos e renderiza de forma dinÃ¢mica os dados de\n * acordo com a necessidade de cada tela e deve ser utilizado em conjunto com as diretivas de *templates*\n *  **[t-list-view-content-template](/documentation/thf-list-view-content-template)** e\n * **[t-list-view-detail-template](/documentation/thf-list-view-detail-template)**.\n *\n * O componente disponibiliza uma Ã¡rea especÃ­fica para exibiÃ§Ã£o informaÃ§Ãµes adicionais,\n * atravÃ©s da diretiva **[t-list-view-detail-template](/documentation/thf-list-view-detail-template)**.\n */\nexport class ThfListViewBaseComponent {\n\n  private _actions: Array<ThfListViewAction>;\n  private _height: number;\n  private _hideSelectAll: boolean;\n  private _items: Array<any>;\n  private _literals: ThfListViewLiterals;\n  private _select: boolean;\n  private _showMoreDisabled: boolean;\n\n  popupTarget: any;\n  selectAll: boolean = false;\n  showHeader: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de aÃ§Ãµes que serÃ£o exibidas no componente.\n   */\n  @Input('t-actions') set actions(value: Array<ThfListViewAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `thf-list-view` em *pixels*.\n   */\n  @Input('t-height') set height(height: number) {\n    this._height = height;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @description\n   *\n   * Esconde o *checkbox* para seleÃ§Ã£o de todos os itens.\n   *\n   * @default `false`\n   */\n  @Input('t-hide-select-all') set hideSelectAll(hideSelectAll: boolean) {\n    this._hideSelectAll = convertToBoolean(hideSelectAll);\n    this.showMainHeader();\n  }\n\n  get hideSelectAll() {\n    return this._hideSelectAll;\n  }\n\n  /** Lista de itens que serÃ£o exibidos no componente. */\n  @Input('t-items') set items(value: Array<any>) {\n    this._items = Array.isArray(value) ? value : [];\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `thf-list-view`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: ThfListViewLiterals = {\n   *    hideDetail: 'Ocultar detalhes completamente',\n   *    loadMoreData: 'Mais dados',\n   *    showDetail: 'Mostrar mais detalhes',\n   *    selectAll: 'Selecionar todos os itens'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: ThfListViewLiterals = {\n   *    showDetail: 'Mostrar mais detalhes'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <thf-list-view\n   *   [t-literals]=\"customLiterals\">\n   * </thf-list-view>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('t-literals') set literals(value: ThfListViewLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfListViewLiteralsDefault[thfLocaleDefault],\n        ...thfListViewLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = thfListViewLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || thfListViewLiteralsDefault[browserLanguage()];\n  }\n\n  /** Recebe uma propriedade que serÃ¡ utilizada para recuperar o valor do objeto que serÃ¡ usado como link para o tÃ­tulo. */\n  @Input('t-property-link') propertyLink?: string;\n\n  /** Recebe uma propriedade que serÃ¡ utilizada para recuperar o valor do objeto que serÃ¡ exibido como o tÃ­tulo de cada item. */\n  @Input('t-property-title') propertyTitle?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um *checkbox* para cada item da lista. Todos os items possuem a propriedade dinÃ¢mica `$selected` para identificar se o\n   * item estÃ¡ selecionado, por exemplo:\n   *\n   * ```\n   *  item.$selected\n   *\n   *  // ou\n   *\n   *  item['$selected']\n   * ```\n   *\n   * @default `false`\n   */\n  @Input('t-select') set select(select: boolean) {\n    this._select = convertToBoolean(select);\n    this.showMainHeader();\n  }\n\n  get select() {\n    return this._select;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o botÃ£o `Carregar Mais Resultados` serÃ¡ desabilitado.\n   */\n  @Input('t-show-more-disabled') set showMoreDisabled(value: boolean) {\n    this._showMoreDisabled = convertToBoolean(value);\n  }\n\n  get showMoreDisabled(): boolean {\n    return this._showMoreDisabled;\n  }\n\n  /**\n   * Recebe uma aÃ§Ã£o, que serÃ¡ executada quando clicar no botÃ£o \"Carregar mais resultados\".\n   *\n   * > Caso nenhuma aÃ§Ã£o for definida o mesmo nÃ£o ficarÃ¡ visÃ­vel.\n   */\n  @Output('t-show-more') showMore?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * AÃ§Ã£o que serÃ¡ executada ao clicar no tÃ­tulo.\n   *\n   * Ao ser disparado, o mÃ©todo inserido na aÃ§Ã£o irÃ¡ receber como parÃ¢metro o item da lista clicado.\n   */\n  @Output('t-title-action') titleAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  onClickAction(listViewAction: ThfListViewAction, item) {\n    const cleanItem = this.deleteInternalAttrs(item);\n    if (listViewAction.action) {\n      listViewAction.action(cleanItem);\n    }\n  }\n\n  onShowMore(): void {\n    this.showMore.emit();\n  }\n\n  runTitleAction(listItem: any) {\n    const itemWithPublicProperties = this.deleteInternalAttrs(listItem);\n    this.titleAction.emit(itemWithPublicProperties);\n  }\n\n  selectAllListItems() {\n    if (!this.hideSelectAll) {\n      this.selectAll = !this.selectAll;\n\n      this.items.forEach(item => {\n        item.$selected = this.selectAll;\n      });\n    }\n  }\n\n  selectListItem(row: any) {\n    row.$selected = !row.$selected;\n\n    this.selectAll = this.checkIfItemsAreSelected(this.items);\n  }\n\n  private deleteInternalAttrs(item) {\n    const itemCopy = item ? { ...item } : undefined;\n\n    for (const key in itemCopy) {\n      if (itemCopy.hasOwnProperty(key) && key.startsWith('$')) {\n        delete itemCopy[key];\n      }\n    }\n\n    return itemCopy;\n  }\n\n  private checkIfItemsAreSelected(items: Array<any>): boolean {\n    const someCheckedOrIndeterminate = item => item.$selected || item.$selected === null;\n    const everyChecked = item => item.$selected;\n\n    if (items.every(everyChecked)) {\n      return true;\n    }\n\n    if (items.some(someCheckedOrIndeterminate)) {\n      return null;\n    }\n\n    return false;\n  }\n\n  private showMainHeader() {\n    this.showHeader = !!(this.select && !this.hideSelectAll && this.items && this.items.length);\n  }\n\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy ThfListViewComponent\n *\n * @description\n *\n * Esta diretiva permite que sejam apresentadas informaÃ§Ãµes essenciais de cada item.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item da linha corrente.\n *  - Ãndice: `index` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <thf-list-view\n *   t-property-title=\"name\"\n *   [t-items]=\"[{id: 1, name: \"Register\", email: register@totvs.com}]\">\n *\n *   <ng-template t-list-view-content-template let-item let-code=\"index\">\n *     <div class=\"thf-row\">\n *       <thf-info class=\"thf-md-6\" t-label=\"Code\" [t-value]=\"code\"></thf-info>\n *       <thf-info class=\"thf-md-6\" t-label=\"Email\" [t-value]=\"item.email\"></thf-info>\n *     </div>\n *   </ng-template>\n *\n * </thf-list-view>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <thf-list-view\n *    t-property-title=\"name\"\n *    [t-items]=\"[{id: 1, name: \"Register\", email: register@totvs.com}]\">\n *\n *    <div *t-list-view-content-template=\"let item, let i=index\" class=\"thf-row\">\n *      <thf-info class=\"thf-md-12\" t-label=\"Email\" [t-value]=\"item.email\"></thf-info>\n *    </div>\n * </thf-list-view>\n * ...\n *\n * ```\n *\n * A diretiva **t-list-view-content-template**, possibilita tambÃ©m alterar o tÃ­tulo dos itens. Para isto,\n * Ã© necessÃ¡rio atribuir a referÃªncia da funÃ§Ã£o que faz a alteraÃ§Ã£o, Ã  propriedade `t-title`,\n * a mesma deve retornar um valor do tipo *string*. Veja o exemplo a seguir:\n *\n * ```\n * ...\n * @Component({\n *    selector: 'app-root',\n *    template: `\n *      ...\n *      <thf-list-view\n *        [t-items]=\"items\">\n *        <ng-template t-list-view-content-template let-item [t-title]=\"customTitle\">\n *          <div class=\"thf-row\">\n *            <thf-info class=\"thf-md-12\" t-label=\"Customer\" [t-value]=\"item.customer\"></thf-info>\n *          </div>\n *        </ng-template>\n *      ...\n *    `\n * })\n * export class AppComponent {\n *    public items = [{\n *      code: 1200,\n *      product: 'Rice',\n *      customer: 'Supermarket 1',\n *    }, {\n *      code: 1355,\n *      product: 'Bean',\n *      customer: 'Supermarket 2'\n *    }];\n *\n *    customTitle(item) {\n *      return `${item.code} - ${item.product}`;\n *    }\n * }\n * ```\n */\n@Directive({\n  selector: '[t-list-view-content-template]'\n})\nexport class ThfListViewContentTemplateDirective {\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor do tipo `string`, que serÃ¡ utilizado como o tÃ­tulo de cada item da lista.\n   *\n   * > Por parÃ¢metro serÃ¡ enviado o item corrente, onde poderÃ¡ utilizÃ¡-lo para recuperar dados sobre o mesmo.\n   */\n  @Input('t-title') title: (item) => string;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { Directive, TemplateRef, Input } from '@angular/core';\n\n/**\n * @usedBy ThfListViewComponent\n *\n * @description\n *\n * Esta diretiva permite que sejam apresentadas informaÃ§Ãµes adicionais de cada item, construindo um\n * botÃ£o `Exibir detalhes` abaixo do conteÃºdo principal do item.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item da linha corrente.\n *  - Ãndice: `index` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <thf-list-view\n *   t-property-title=\"name\"\n *   [t-items]=\"items\">\n *\n *   <ng-template t-list-view-detail-template let-item let-code=\"index\">\n *     <div class=\"thf-row\">\n *       <thf-info class=\"thf-md-6\" t-label=\"Code\" [t-value]=\"code\"></thf-info>\n *       <thf-info class=\"thf-md-12\" t-label=\"Email\" [t-value]=\"item.email\"></thf-info>\n *     </div>\n *   </ng-template>\n *\n * </thf-list-view>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <thf-list-view\n *    t-property-title=\"name\"\n *    [t-items]=\"items\">\n *    <div *t-list-view-detail-template=\"let item, let i=index\" class=\"thf-row\">\n *      <thf-info class=\"thf-md-12\" t-label=\"Email\" [t-value]=\"item.email\"></thf-info>\n *    </div>\n * </thf-list-view>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[t-list-view-detail-template]'\n})\nexport class ThfListViewDetailTemplateDirective {\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor do tipo `boolean`, que serÃ¡ utilizado como a validaÃ§Ã£o para que o detalhe de item\n   * da lista inicie aberto ou fechado.\n   *\n   */\n  @Input('t-show-detail') showDetail: (item) => boolean;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { AfterContentInit, ChangeDetectorRef, Component, ContentChild, DoCheck, IterableDiffers, ViewChild } from '@angular/core';\n\nimport { isTypeof } from '../../utils/util';\nimport { ThfPopupComponent } from '../thf-popup/thf-popup.component';\n\nimport { ThfListViewAction } from './interfaces/thf-list-view-action.interface';\nimport { ThfListViewBaseComponent } from './thf-list-view-base.component';\nimport { ThfListViewContentTemplateDirective } from './thf-list-view-content-template/thf-list-view-content-template.directive';\nimport { ThfListViewDetailTemplateDirective } from './thf-list-view-detail-template/thf-list-view-detail-template.directive';\n\n/**\n * @docsExtends ThfListViewBaseComponent\n *\n * @example\n *\n * <example name=\"thf-list-view-basic\" title=\"Totvs List View Basic\">\n *  <file name=\"sample-thf-list-view-basic/sample-thf-list-view-basic.component.html\"> </file>\n *  <file name=\"sample-thf-list-view-basic/sample-thf-list-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-list-view-labs\" title=\"Totvs List View Labs\">\n *  <file name=\"sample-thf-list-view-labs/sample-thf-list-view-labs.component.html\"> </file>\n *  <file name=\"sample-thf-list-view-labs/sample-thf-list-view-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-list-view-hiring-processes\" title=\"Totvs List View - Hiring Processes\">\n *  <file name=\"sample-thf-list-view-hiring-processes/sample-thf-list-view-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-thf-list-view-hiring-processes/sample-thf-list-view-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-thf-list-view-hiring-processes/sample-thf-list-view-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-list-view',\n  templateUrl: './thf-list-view.component.html',\n  animations: [\n    trigger('showHideDetail', [\n      state('*', style({ 'overflow-y': 'visible' })),\n      state('void', style({ 'overflow-y': 'hidden' })),\n      transition('* => void', [\n        style({ height: '*', 'overflow-y': 'hidden' }),\n        animate(100, style({ height: 0 }))\n      ]),\n      transition('void => *', [\n        style({ height: '0' }),\n        animate(100, style({ height: '*' }))\n      ])\n    ])\n  ]\n})\nexport class ThfListViewComponent extends ThfListViewBaseComponent implements AfterContentInit, DoCheck {\n\n  @ContentChild(ThfListViewContentTemplateDirective, { static: true }) listViewContentTemplate: ThfListViewContentTemplateDirective;\n  @ContentChild(ThfListViewDetailTemplateDirective, { static: true }) listViewDetailTemplate: ThfListViewDetailTemplateDirective;\n\n  @ViewChild('popup', { static: true }) thfPopupComponent: ThfPopupComponent;\n\n  private differ;\n\n  constructor(private changeDetector: ChangeDetectorRef, differs: IterableDiffers) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  get hasContentTemplate(): boolean {\n    return !!this.listViewContentTemplate;\n  }\n\n  get hasDetailTemplate(): boolean {\n    return !!this.listViewDetailTemplate;\n  }\n\n  get displayShowMoreButton(): boolean {\n    return this.items && this.items.length > 0 && this.showMore.observers.length > 0;\n  }\n\n  get showButtonsActions(): boolean {\n    return this.visibleActions && this.visibleActions.length > 0 && this.visibleActions.length <= 2;\n  }\n\n  get showPopupActions(): boolean {\n    return this.visibleActions && this.visibleActions.length > 2;\n  }\n\n  get titleHasAction() {\n    return this.titleAction.observers.length > 0;\n  }\n\n  get visibleActions() {\n    return this.actions && this.actions.filter(action => action.visible !== false);\n  }\n\n  ngAfterContentInit(): void {\n    this.initShowDetail();\n  }\n\n  ngDoCheck() {\n    this.checkItemsChange();\n  }\n\n  checkTitleType(item: any) {\n    if (this.propertyLink && item[this.propertyLink] ) {\n      return item[this.propertyLink].startsWith('http') ? 'externalLink' : 'internalLink';\n    }\n\n    return 'noLink';\n  }\n\n  getItemTitle(item) {\n    return this.hasContentTemplate && this.listViewContentTemplate.title ?\n    this.listViewContentTemplate.title(item) : item[this.propertyTitle];\n  }\n\n  hasItems(): boolean {\n    return this.items && this.items.length > 0;\n  }\n\n  returnBooleanValue(listViewAction: ThfListViewAction, item: any) {\n    return isTypeof(listViewAction.disabled, 'function') ? (<any>listViewAction).disabled(item) : listViewAction.disabled;\n  }\n\n  trackBy(index) {\n    return index;\n  }\n\n  togglePopup(item, targetRef: HTMLElement) {\n    this.popupTarget = targetRef;\n    this.changeDetector.detectChanges();\n\n    this.thfPopupComponent.toggle(item);\n  }\n\n  private checkItemsChange() {\n    const changesItems = this.differ.diff(this.items);\n\n    if (changesItems && this.selectAll) {\n      this.selectAll = null;\n    }\n\n    if (changesItems && this.items && this.items.length && this.select && !this.hideSelectAll) {\n      this.showHeader = true;\n    }\n  }\n\n  private initShowDetail() {\n    if (this.items && this.items.length > 0 && this.hasDetailTemplate && this.listViewDetailTemplate.showDetail) {\n      this.items.forEach(item => item.$showDetail = this.listViewDetailTemplate.showDetail(item));\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ThfButtonModule } from '../thf-button/thf-button.module';\nimport { ThfPopupModule } from '../thf-popup/thf-popup.module';\n\nimport { ThfListViewComponent } from './thf-list-view.component';\nimport { ThfListViewContentTemplateDirective } from './thf-list-view-content-template/thf-list-view-content-template.directive';\nimport { ThfListViewDetailTemplateDirective } from './thf-list-view-detail-template/thf-list-view-detail-template.directive';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `thf-list-view`.\n *\n * > Para o correto funcionamento do componente `thf-list-view`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { ThfModule } from '@totvs/thf-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     ThfModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ThfButtonModule,\n    ThfPopupModule\n  ],\n  declarations: [\n    ThfListViewComponent,\n    ThfListViewContentTemplateDirective,\n    ThfListViewDetailTemplateDirective\n  ],\n  exports: [\n    ThfListViewComponent,\n    ThfListViewContentTemplateDirective,\n    ThfListViewDetailTemplateDirective\n  ],\n  providers: [],\n  schemas: []\n})\nexport class ThfListViewModule { }\n","import { Input } from '@angular/core';\n\nimport { convertToInt } from '../../utils/util';\n\nconst THF_BADGE_COLORS = [\n  'color-01',\n  'color-02',\n  'color-03',\n  'color-04',\n  'color-05',\n  'color-06',\n  'color-07',\n  'color-08',\n  'color-09',\n  'color-10',\n  'color-11',\n  'color-12',\n];\nconst THF_BADGE_COLOR_DEFAULT = 'color-07';\n\n/**\n * @description\n *\n * @docsPrivate\n *\n * Componente utilizado no `thf-menu` para exibir por exemplo a quantidade de tarefas pendentes.\n */\nexport class ThfBadgeBaseComponent {\n\n  private _color: string;\n  private _value: number;\n\n  badgeValue: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a cor de fundo do componente e aceita os valores:\n   *\n   * <span class=\"dot thf-color-01\"></span> `color-01`\n   *\n   * <span class=\"dot thf-color-02\"></span> `color-02`\n   *\n   * <span class=\"dot thf-color-03\"></span> `color-03`\n   *\n   * <span class=\"dot thf-color-04\"></span> `color-04`\n   *\n   * <span class=\"dot thf-color-05\"></span> `color-05`\n   *\n   * <span class=\"dot thf-color-06\"></span> `color-06`\n   *\n   * <span class=\"dot thf-color-07\"></span> `color-07`\n   *\n   * <span class=\"dot thf-color-08\"></span> `color-08`\n   *\n   * <span class=\"dot thf-color-09\"></span> `color-09`\n   *\n   * <span class=\"dot thf-color-10\"></span> `color-10`\n   *\n   * <span class=\"dot thf-color-11\"></span> `color-11`\n   *\n   * <span class=\"dot thf-color-12\"></span> `color-12`\n   *\n   * @default `color-07`\n   */\n  @Input('t-color') set color(value: string) {\n    this._color = THF_BADGE_COLORS.includes(value) ? value : THF_BADGE_COLOR_DEFAULT;\n  }\n\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * @description\n   *\n   * NÃºmero exibido no componente, caso o mesmo seja maior que 99 o valor exibido serÃ¡ 99+.\n   */\n  @Input('t-value') set value(value: number) {\n    this._value = convertToInt(value);\n    this.setBadgeValue(this._value);\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  private setBadgeValue(value: number) {\n    const validRangeValue = (value || value === 0) && (value >= 0 && value < 100);\n    this.badgeValue = validRangeValue ? value.toString() : value > 99 ? '99+' : undefined;\n  }\n\n}\n","import { Component } from '@angular/core';\n\nimport { ThfBadgeBaseComponent } from './thf-badge-base.component';\n\n/**\n * @docsExtends ThfBadgeBaseComponent\n *\n * @docsPrivate\n */\n@Component({\n  selector: 'thf-badge',\n  templateUrl: './thf-badge.component.html'\n})\nexport class ThfBadgeComponent extends ThfBadgeBaseComponent { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfBadgeComponent } from './thf-badge.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-badge.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ThfBadgeComponent\n  ],\n  exports: [\n    ThfBadgeComponent\n  ]\n})\nexport class ThfBadgeModule { }\n","import { Input } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\nimport { browserLanguage, convertToBoolean, convertToInt, isExternalLink, isTypeof, thfLocaleDefault, validValue } from '../../utils/util';\n\nimport { ThfMenuFilter } from './thf-menu-filter/thf-menu-filter.interface';\nimport { ThfMenuItem } from './thf-menu-item.interface';\nimport { ThfMenuService } from './services/thf-menu.service';\n\nexport const thfMenuLiteralsDefault = {\n  en: { itemNotFound: 'Item not found.' },\n  es: { itemNotFound: 'Elemento no encontrado.' },\n  pt: { itemNotFound: 'Item nÃ£o encontrado.' }\n};\n\n/**\n * @description\n *\n * Este Ã© um componente de menu lateral que Ã© utilizado para navegaÃ§Ã£o nas pÃ¡ginas de uma aplicaÃ§Ã£o.\n *\n * O componente thf-menu recebe uma lista de objetos do tipo `MenuItem` com as informaÃ§Ãµes dos itens de menu como\n * textos, links para redirecionamento, aÃ§Ãµes, atÃ© 4 nÃ­veis de menu e Ã­cones para o primeiro nÃ­vel de menu.\n */\nexport abstract class ThfMenuBaseComponent {\n\n  private _collapsed = false;\n  private _filter = false;\n  private _level;\n  private _logo: string;\n  private _maxLevel = 4;\n  private _menus = [];\n  private _params: any;\n  private _service: string | ThfMenuFilter;\n  private _shortLogo: string;\n\n  allowIcons: boolean;\n  allowCollapseMenu: boolean;\n\n  filteredItems;\n  filterService: ThfMenuFilter;\n\n  readonly literals = {\n    ...thfMenuLiteralsDefault[thfLocaleDefault],\n    ...thfMenuLiteralsDefault[browserLanguage()]\n  };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Colapsa (retrai) o menu e caso receba o valor `false` expande o menu.\n   *\n   * > Utilize esta propriedade para iniciar o menu colapsado.\n   *\n   * > Ao utilizar os mÃ©todos [`colapse`](documentation/thf-menu#colapseMethod), [`expand`](documentation/thf-menu#expandMethod) e\n   * [`toggle`](documentation/thf-menu#toggleMethod) o valor desta propriedade nÃ£o Ã© alterado.\n   *\n   * **Importante:**\n   *\n   * > O menu serÃ¡ colapsado/expandido apenas se todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\n   *\n   * @default `false`\n   */\n  @Input('t-collapsed') set collapsed(collapsed: boolean) {\n    this._collapsed = convertToBoolean(collapsed);\n\n    this.validateCollapseClass();\n  }\n\n  get collapsed() {\n    return this._collapsed;\n  }\n\n  /** Lista dos itens do menu. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio. */\n  @Input('t-menus') set menus(menus: Array<ThfMenuItem>) {\n    this._menus = Array.isArray(menus) ? menus : [];\n  }\n\n  get menus() {\n    return this._menus;\n  }\n\n  get maxLevel() {\n    return this._maxLevel;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um campo para pesquisa no menu.\n   * A pesquisa Ã© realizada em todos os nÃ­veis do menu e busca apenas pelos itens que contÃ©m uma aÃ§Ã£o e/ou link definidos,\n   * ou tambÃ©m, pode ser realizada atravÃ©s de um serviÃ§o definido na propriedade `t-service`.\n   *\n   * > O campo de pesquisa Ã© desabilitado se o menu estiver colapsado.\n   *\n   * @default `false`\n   */\n  @Input('t-filter') set filter(filter: boolean) {\n    this._filter = <any>filter === '' ? true : convertToBoolean(filter);\n    this.filteredItems = [...this._menus];\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nesta propriedade deve ser informada a URL do serviÃ§o em que serÃ¡ utilizado para realizar o filtro de itens do\n   * menu quando realizar uma busca. Caso haja a necessidade de customizaÃ§Ã£o, pode ser informado um\n   * serviÃ§o implementando a interface `ThfMenuFilter`.\n   *\n   * Caso utilizada uma URL, o serviÃ§o deve retornar os dados conforme o\n   * [Guia de implementaÃ§Ã£o de API da Totvs](http://tdn.totvs.com/display/public/INT/Guia+de+implementacao+das+APIs+TOTVS).\n   *\n   * Quando utilizada uma URL de serviÃ§o, serÃ¡ realizado um *GET* na URL informada, passando o valor digitado\n   * no parÃ¢metro `search`, veja exemplo:\n   *\n   * > O filtro no serviÃ§o serÃ¡ realizado caso contenha no mÃ­nimo trÃªs caracteres no campo de busca, por exemplo `tot`.\n   *\n   * ```\n   * <thf-menu t-service=\"/api/v1/fnd/menu\">\n   * </thf-menu>\n   *\n   * RequisiÃ§Ã£o: GET /api/v1/fnd/menu?search=contas\n   * ```\n   *\n   * > Ã necessÃ¡rio que propriedade `t-filter` esteja habilitada.\n   */\n  @Input('t-service') set service(value: string | ThfMenuFilter) {\n    this._service = value || undefined;\n\n    this.configService(this.service);\n  }\n\n  get service() {\n    return this._service;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Deve ser informado um objeto que deseja-se utilizar na requisiÃ§Ã£o de filtro dos itens de menu.\n   *\n   * Caso utilizado um serviÃ§o customizado, implementando a interface `ThfMenuFilter`, o valor desta propriedade\n   * serÃ¡ passado como parÃ¢metro, na funÃ§Ã£o `getFilteredData`.\n   *\n   * Quando utilizada uma URL de serviÃ§o, serÃ¡ realizado um *GET* na URL informada, passando os valores informados\n   * nesta propriedade em conjunto com o parÃ¢metro `search`, veja exemplo:\n   *\n   * ```\n   * <thf-menu t-service=\"/api/v1/fnd/menu\" [t-params]=\"{ company: 1, user: 297767512 }\">\n   * </thf-menu>\n   *\n   * RequisiÃ§Ã£o: GET /api/v1/fnd/menu?search=contas&company=1&user=297767512\n   * ```\n   */\n  @Input('t-params') set params(value: any) {\n    this._params = value && isTypeof(value, 'object') ? value : undefined;\n  }\n\n  get params() {\n    return this._params;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca, que serÃ¡ exibida quando o componente estiver expandido, localizada na parte superior.\n   *\n   * > **Importante:**\n   * - Caso esta propriedade estiver indefinida ou invÃ¡lida o espaÃ§o para logomarca serÃ¡ removido.\n   * - Como boa prÃ¡tica, indica-se utilizar imagens com atÃ© `24px` de altura e `224px` de largura,\n   * caso ultrapassar esses valores a imagem serÃ¡ readequada no espaÃ§o disponÃ­vel.\n   */\n  @Input('t-logo') set logo(value: any) {\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca, que serÃ¡ exibida quando o componente estiver colapsado, localizada na parte superior.\n   *\n   * > **Importante:**\n   * - Caso esta propriedade estiver indefinida ou invÃ¡lida passa a assumir o valor informado na propriedade `t-logo` e na ausÃªncia desta o\n   * espaÃ§o para logomarca serÃ¡ removido.\n   * - Como boa prÃ¡tica, indica-se utilizar imagens com atÃ© `48px` de altura e `48px` de largura,\n   * caso ultrapassar esses valores a imagem serÃ¡ readequada no espaÃ§o disponÃ­vel.\n   * - Caso nÃ£o informar um valor, esta propriedade passa a assumir o valor informado na propriedade `t-logo`.\n   */\n  @Input('t-short-logo') set shortLogo(value: any) {\n    this._shortLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get shortLogo() {\n    return this._shortLogo;\n  }\n\n  constructor(public menuService: ThfMenuService) { }\n\n  private configService(service: string | ThfMenuFilter) {\n    if (typeof service === 'string' && service.trim()) {\n      // service url\n      this.menuService.configProperties(service);\n      this.filterService = this.menuService;\n\n    } else if (typeof service === 'object' && service.getFilteredData) {\n      // custom service\n      this.filterService = service;\n    } else {\n      this.filterService = undefined;\n    }\n  }\n\n  protected setMenuExtraProperties() {\n    this.allowIcons = !!this.menus.length;\n    this.allowCollapseMenu = !!this.menus.length;\n\n    this.menus.forEach(menuItem => {\n      this._level = 1;\n      this.allowIcons = this.allowIcons ? validValue(menuItem.icon) : false;\n      this.allowCollapseMenu = this.allowCollapseMenu && this.allowIcons ? validValue(menuItem.shortLabel) : false;\n      this.removeBadgeAlert(menuItem);\n      this.setMenuItemProperties(menuItem);\n\n      if (menuItem.subItems) {\n        this._level++;\n        this.processSubItems(menuItem);\n      }\n    });\n  }\n\n  protected setMenuItemProperties(menuItem: ThfMenuItem): void {\n    menuItem['id'] = menuItem['id'] || uuid();\n    menuItem['level'] = this._level;\n    menuItem['type'] = this.setMenuType(menuItem);\n  }\n\n  protected validateMenus(menus): void {\n    menus.forEach(menu => this.validateMenu(menu));\n  }\n\n  private processSubItems(menu) {\n    menu.subItems.forEach((menuItem, index, menuItems) => {\n\n      const previousItem = menuItems[index - 1];\n      if (previousItem && previousItem.subItems) {\n        this._level = previousItem['level'];\n      }\n\n      if (this._level <= this.maxLevel) {\n        this.setMenuItemProperties(menuItem);\n\n        if (menuItem.subItems) {\n          this._level++;\n          this.processSubItems(menuItem);\n        }\n      }\n\n      if (!menu['badgeAlert']) {\n        menu = this.setMenuBadgeAlert(menu, menuItem);\n      }\n\n    });\n\n    menu.subItems = Object.assign([], menu.subItems);\n  }\n\n  private removeBadgeAlert(menuItem: ThfMenuItem): void {\n\n    if (menuItem['badgeAlert']) {\n      delete menuItem['badgeAlert'];\n    }\n\n    if (menuItem.subItems) {\n      menuItem.subItems.forEach(subItem => this.removeBadgeAlert(subItem));\n    }\n\n  }\n\n  private setMenuBadgeAlert(parent: ThfMenuItem, child: ThfMenuItem): ThfMenuItem {\n    const childHasSubItems = child.subItems && child.subItems.length;\n    const childHasBadgeAlert = child['badgeAlert'];\n    const childHasBadge = child.badge && convertToInt(child.badge.value) >= 0;\n\n    parent['badgeAlert'] = childHasBadgeAlert || (childHasBadge && !childHasSubItems);\n\n    return parent;\n  }\n\n  private setMenuType(menuItem: ThfMenuItem): string {\n    if (menuItem.subItems && menuItem.subItems.length > 0 && this._level < this.maxLevel) {\n      return 'subItems';\n    }\n    if (!menuItem.link) {\n      return 'noLink';\n    }\n    if (isExternalLink(menuItem.link)) {\n      return 'externalLink';\n    }\n    return 'internalLink';\n  }\n\n  private validateMenu(menuItem: ThfMenuItem): void {\n    if (!menuItem.label || menuItem.label.trim() === '') {\n      throw new Error('O atributo ThfMenuItem.label nÃ£o pode ser vazio.');\n    } else if (menuItem.subItems) {\n      menuItem.subItems.forEach(subItem => {\n        this.validateMenu(subItem);\n      });\n    }\n  }\n\n  protected abstract validateCollapseClass();\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy ThfMenuComponent\n *\n * @description\n *\n * Esta diretiva permite adicionar um conteÃºdo personalizado entre a logo e o campo de filtro do cabeÃ§alho do\n * [`thf-menu`](/documentation/thf-menu).\n *\n * Para personalizar o conteÃºdo do cabeÃ§alho deve-se utilizar a diretiva `t-menu-header-template` dentro da *tag* do\n * [`thf-menu`](/documentation/thf-menu). Podendo ser utilizada de duas formas:\n *\n * Com `ng-template`\n * ```\n * ...\n * <thf-menu [t-menus]=\"menus\">\n *   <ng-template t-menu-header-template>\n *     ...\n *   </ng-template>\n * </thf-menu>\n * ...\n * ```\n *\n * ou com *syntax sugar*\n * ```\n * ...\n * <thf-menu [t-menus]=\"menus\">\n *   <div *t-menu-header-template>\n *     ...\n *   </div>\n * </thf-menu>\n * ...\n * ```\n *\n * > Quando o menu estiver colapsado ou tela for _mobile_ o conteÃºdo personalizado nÃ£o serÃ¡ exibido.\n */\n@Directive({\n  selector: '[t-menu-header-template]'\n})\nexport class ThfMenuHeaderTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a comunicaÃ§Ã£o entre os items do thf-menu.\n */\n@Injectable()\nexport class ThfMenuItemsService {\n  private subjectParent = new Subject<any>();\n  private subjectChild = new Subject<any>();\n\n  // Envia informaÃ§Ãµes do click do thf-menu-item para o thf-menu\n  sendToParentMenuClicked(menu: object) {\n    this.subjectChild.next(menu);\n  }\n\n  // Recebe do thf-menu-item sua informaÃ§Ã£o de click.\n  receiveFromChildMenuClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Envia para os thf-menu-item a resposta do processamento de click de um thf-menu-item.\n  sendToChildMenuClicked(menu: object) {\n    this.subjectParent.next(menu);\n  }\n\n  // Recebe do thf-menu as informaÃ§Ãµes processadas do click de um thf-menu-item.\n  receiveFromParentMenuClicked(): Observable<any> {\n    return this.subjectParent.asObservable();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { ThfMenuItemFiltered } from '../thf-menu-item/thf-menu-item-filtered.interface';\nimport { ThfMenuFilter } from '../thf-menu-filter/thf-menu-filter.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a interface `ThfMenuFilter`, utilizado para fazer requisiÃ§Ãµes ao serviÃ§o informado pelo usuÃ¡rio,\n * caso for uma URL, no componente `thf-menu`.\n */\n@Injectable()\nexport class ThfMenuService implements ThfMenuFilter {\n\n  private _url: string;\n\n  get url(): string { return this._url; }\n\n  constructor(private http: HttpClient) { }\n\n  configProperties(url: string) {\n    this._url = url;\n  }\n\n  getFilteredData(search: string, params?: any): Observable<Array<ThfMenuItemFiltered>> {\n    const filterParams = {\n      search,\n      ...params\n    };\n\n    return this.http.get(this.url, { params: filterParams })\n      .pipe(map((response: { items: Array<ThfMenuItemFiltered> }) => response && response.items));\n  }\n\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DoCheck,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NavigationCancel, NavigationEnd, Router } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { getFormattedLink, isMobile, openExternalLink } from '../../utils/util';\n\nimport { ThfMenuBaseComponent } from './thf-menu-base.component';\nimport { ThfMenuHeaderTemplateDirective } from './thf-menu-header-template/thf-menu-header-template.directive';\nimport { ThfMenuItem } from './thf-menu-item.interface';\nimport { ThfMenuItemFiltered } from './thf-menu-item/thf-menu-item-filtered.interface';\nimport { ThfMenuItemsService } from './services/thf-menu-items.service';\nimport { ThfMenuService } from './services/thf-menu.service';\n\nconst thfMenuDebounceTime = 400;\nconst thfMenuMinLength = 3;\nconst thfMenuRootLevel = 1;\n\n/**\n * @docsExtends ThfMenuBaseComponent\n *\n * @description\n *\n * Aparece completo em telas com largura maior que 1200px, caso contrÃ¡rio o menu Ã© escondido e chamado por meio de um botÃ£o.\n *\n * O menu tambÃ©m pode ser colapsado. Essa opÃ§Ã£o Ã© habilitada quando todos os itens de primeiro nÃ­vel possuÃ­rem Ã­cones e textos curtos.\n * Se colapsado, somente os itens de primeiro nÃ­vel serÃ£o exibidos e, caso o item selecionado possua sub-nÃ­veis,\n * entÃ£o o menu alternarÃ¡ novamente para o estado aberto.\n *\n * Existe a possibilidade de customizar a logomarca, que Ã© exibida na parte superior do componente.\n *\n * E para adicionar um conteÃºdo personalizado entre a logomarca e o campo de filtro,\n * basta adicionar este conteÃºdo com a diretiva [**t-menu-header-template**](/documentation/thf-menu-header-template).\n *\n * Caso utilizar o filtro de menus, Ã© possÃ­vel realizar buscas em serviÃ§o, apenas informando a URL do serviÃ§o ou a instÃ¢ncia de\n * um serviÃ§o customizado implementando a interface `ThfMenuFilter`.\n *\n * Para o menu funcionar corretamente Ã© necessÃ¡rio importar o `RouterModule` e `Routes` do mÃ³dulo principal de\n *  sua aplicaÃ§Ã£o:\n *\n * ````\n * import { RouterModule, Routes } from '@angular/router';\n *\n * ...\n *\n * @NgModule({\n *   imports: [\n *     RouterModule,\n *     Routes,\n *     ...\n *     ThfModule,\n *     ...\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n *\n * AlÃ©m disso Ã© necessÃ¡rio criar um mÃ³dulo configurando as rotas da aplicaÃ§Ã£o.\n *\n * ```\n * import { NgModule } from '@angular/core';\n *\n * import { RouterModule, Routes } from '@angular/router';\n *\n * import { HelloWorldComponent } from './hello-world/hello-world.component';\n *\n * const routes: Routes = [\n *   {path: 'hello-world', component: HelloWorldComponent}\n * ];\n *\n * @NgModule({\n *   imports: [RouterModule.forRoot(routes, {useHash: true})],\n *   exports: [RouterModule]\n * })\n * export class AppRoutingModule {}\n * ```\n *\n * @example\n *\n * <example name=\"thf-menu-basic\" title=\"Totvs Menu Basic\">\n *   <file name=\"sample-thf-menu-basic/sample-thf-menu-basic.component.html\"> </file>\n *   <file name=\"sample-thf-menu-basic/sample-thf-menu-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-menu-labs\" title=\"Totvs Menu Labs\">\n *   <file name=\"sample-thf-menu-labs/sample-thf-menu-labs.component.html\"> </file>\n *   <file name=\"sample-thf-menu-labs/sample-thf-menu-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-menu-human-resources\" title=\"Totvs Menu - Human Resources\">\n *   <file name=\"sample-thf-menu-human-resources/sample-thf-menu-human-resources.component.html\"> </file>\n *   <file name=\"sample-thf-menu-human-resources/sample-thf-menu-human-resources.component.ts\"> </file>\n *   <file name=\"sample-thf-menu-human-resources/sample-thf-menu-human-resources.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-menu',\n  templateUrl: './thf-menu.component.html',\n  providers: [ ThfMenuItemsService, ThfMenuService ]\n})\nexport class ThfMenuComponent extends ThfMenuBaseComponent implements OnDestroy, OnInit, DoCheck {\n\n  @ContentChild(ThfMenuHeaderTemplateDirective, { static: true }) menuHeaderTemplate: ThfMenuHeaderTemplateDirective;\n\n  activeMenuItem: ThfMenuItem;\n  collapsedMobile: boolean;\n  filterLoading = false;\n  groupedMenuItem: ThfMenuItem;\n  linkActive: string;\n  mobileOpened: boolean = false;\n  noData: boolean = false;\n  parentRef: any;\n  timeoutFilter: any;\n\n  private filteringItems: boolean = false;\n  private menuInitialized: boolean = false;\n  private menuPrevious: string = null;\n  private resizeListener: () => void;\n\n  private itemSubscription: Subscription;\n  private routeSubscription: Subscription;\n\n  constructor(viewRef: ViewContainerRef,\n              private element: ElementRef,\n              private renderer: Renderer2,\n              private router: Router,\n              private menuItemsService: ThfMenuItemsService,\n              private changeDetector: ChangeDetectorRef,\n              menuService: ThfMenuService) {\n\n    super(menuService);\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  private get isActiveItemMenuSubMenu() {\n    return this.activeMenuItem['level'] > this.groupedMenuItem['level'];\n  }\n\n  get enableCollapse() {\n    return this.isCollapsed && !this.collapsedMobile;\n  }\n\n  get enableCollapseButton() {\n    return this.allowCollapseMenu && !this.collapsed && !this.mobileOpened;\n  }\n\n  get hasFooter() {\n    return this.allowCollapseMenu && !this.mobileOpened && this.enableCollapseButton || (this.collapsed && !this.collapsedMobile);\n  }\n\n  get isCollapsed() {\n    return this.allowCollapseMenu && this.collapsed;\n  }\n\n  ngDoCheck() {\n    if (this.filteringItems && this.filter) {\n      return;\n    }\n\n    const menuCurrent = JSON.stringify(this.menus);\n\n    if (this.menuPrevious !== menuCurrent || !this.menuInitialized) {\n      this.updateMenu();\n      this.validateCollapseClass();\n    }\n  }\n\n  ngOnDestroy() {\n    this.itemSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  ngOnInit() {\n    this.subscribeToMenuItem();\n    this.subscribeToRoute();\n\n    setTimeout(() => {\n      const urlRouter = this.checkingRouterChildrenFragments();\n      this.checkActiveMenuByUrl(urlRouter);\n    });\n  }\n\n  activateMenuByUrl(urlPath: string, menus: Array<ThfMenuItem>) {\n    if (menus) {\n      return menus.some(menu => {\n        const formattedLink = getFormattedLink(menu.link);\n        if (formattedLink === urlPath) {\n          this.linkActive = formattedLink;\n          this.activateMenuItem(menu);\n          return true;\n        } else {\n          return this.activateMenuByUrl(urlPath, menu.subItems);\n        }\n      });\n    }\n  }\n\n  checkActiveMenuByUrl(urlPath: string): void {\n    if (!this.linkActive || this.linkActive !== urlPath) {\n      this.activateMenuByUrl(urlPath, this.menus);\n    }\n  }\n\n  /**\n   * <a id=\"colapseMethod\"></a>\n   *\n   * *MÃ©todo para colapsar (retrair) o menu.\n   */\n  collapse() {\n    this.validateToggleMenu(true);\n  }\n\n  debounceFilter(filter: string) {\n    clearTimeout(this.timeoutFilter);\n\n    this.timeoutFilter = setTimeout(() => {\n      this.filterProcess(filter);\n    }, thfMenuDebounceTime);\n  }\n\n  /**\n   * <a id=\"expandMethod\"></a>\n   *\n   * *MÃ©todo para expandir (aumentar) o menu.\n   */\n  expand() {\n    this.validateToggleMenu(false);\n  }\n\n  subscribeToMenuItem() {\n    this.itemSubscription = this.menuItemsService.receiveFromChildMenuClicked().subscribe((menu: ThfMenuItem) => {\n      this.clickMenuItem(menu);\n    });\n  }\n\n  subscribeToRoute() {\n    this.routeSubscription = this.router.events.subscribe(val => {\n      if (val instanceof NavigationEnd || val instanceof NavigationCancel) {\n        const urlRouter = this.checkingRouterChildrenFragments();\n        this.checkActiveMenuByUrl(urlRouter);\n      }\n    });\n  }\n\n  /**\n   * <a id=\"toggleMethod\"></a>\n   * *MÃ©todo que colapsa e expande o menu alternadamente.\n   *\n   * > *Os mÃ©todos apenas vÃ£o colapsar/expandir o menu se:\n   *  - Todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\n   */\n  toggle() {\n    this.validateToggleMenu(!this.collapsed);\n  }\n\n  toggleMenuMobile(): void {\n    this.mobileOpened = !this.mobileOpened;\n    this.collapsedMobile = this.collapsed && this.mobileOpened;\n\n    this.validateCollapseClass(this.collapsedMobile);\n\n    if (isMobile()) {\n      return;\n    }\n\n    if (this.mobileOpened) {\n      this.createResizeListener();\n    }\n  }\n\n  private activateCollapseSubMenuItem() {\n\n    this.clearGroupMenuIfFirstLevel(this.activeMenuItem);\n\n    if (!this.collapsed && this.activeMenuItem['level'] > thfMenuRootLevel && this.isActiveItemMenuSubMenu) {\n      this.openParentMenu(this.activeMenuItem);\n    }\n  }\n\n  private activateMenuItem(menu: ThfMenuItem): void {\n    this.activeMenuItem = menu;\n    this.linkActive = menu.link;\n    if (this.activeMenuItem['level'] > thfMenuRootLevel) {\n      this.openParentMenu(this.activeMenuItem);\n    } else {\n      this.groupedMenuItem = null;\n    }\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem, activatedByRoute: true });\n  }\n\n  private areSubMenus(menus: Array<ThfMenuItem>) {\n    return menus.every(menu => menu['level'] > thfMenuRootLevel);\n  }\n\n  private checkingRouterChildrenFragments() {\n    const childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];\n\n    return childrenPrimary ? `/${childrenPrimary.segments.map(it => it.path).join('/')}` : '';\n  }\n\n  private clearGroupMenuIfFirstLevel(activeMenuItem: ThfMenuItem) {\n    if (activeMenuItem['level'] === thfMenuRootLevel) {\n      this.groupedMenuItem = undefined;\n    }\n  }\n\n  private clickMenuItem(menu: ThfMenuItem) {\n    if (menu.action) {\n      this.executeMenuAction(menu);\n    }\n\n    if (menu['type'] === 'externalLink') {\n      openExternalLink(menu.link);\n\n    } else if (menu['type'] === 'internalLink') {\n      this.activateMenuItem(menu);\n\n    } else if (menu['type'] === 'subItems') {\n      if (this.filteringItems) {\n        this.filteringItems = false;\n      }\n\n      this.groupMenuItem(menu);\n    }\n\n    if (menu['type'] !== 'subItems') {\n      this.mobileOpened = false;\n    }\n  }\n\n  private convertToMenuItemFiltered(menuItem: any = { label: '', link: '' }): ThfMenuItemFiltered {\n    const { label, link } = menuItem;\n\n    const menuItemFiltered: ThfMenuItemFiltered = { label, link };\n\n    this.setMenuItemProperties(menuItemFiltered);\n\n    return menuItemFiltered;\n  }\n\n  private createResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.toggleResize();\n      this.resizeListener();\n    });\n  }\n\n  private executeMenuAction(menu: ThfMenuItem): void {\n    if (typeof menu.action === 'string') {\n      this.parentRef[menu.action](menu);\n    } else {\n      menu.action.call(this.parentRef, menu);\n    }\n  }\n\n  private async filterItems(filter: string) {\n    const trimFilter = filter && filter.trim();\n\n    if (trimFilter) {\n      this.filteredItems = [];\n      this.filteredItems = this.filterService ? await this.filterOnService(trimFilter) : this.filterLocalItems(trimFilter);\n      this.filteringItems = true;\n    } else {\n      this.filteredItems = [...this.menus];\n      this.filteringItems = false;\n    }\n\n  }\n\n  private filterLocalItems(filter: string) {\n    const filteredItems = [];\n\n    this.findItems(this.menus, filter.toLowerCase(), filteredItems);\n\n    return filteredItems;\n  }\n\n  private filterProcess(filter: string) {\n    this.filterLoading = true;\n\n    this.filterItems(filter).then(() => {\n\n      this.filterLoading = false;\n\n      this.showNoData();\n      this.changeDetector.detectChanges();\n      this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });\n\n    }).catch(error => {\n      this.filterLoading = false;\n      Promise.reject(error);\n    });\n  }\n\n  private async filterOnService(search: string = '') {\n    if (search.length >= thfMenuMinLength) {\n\n      return await this.filterService.getFilteredData(search, this.params)\n        .pipe(\n          map(menuItemsFiltered => menuItemsFiltered.map(menuItem => this.convertToMenuItemFiltered(menuItem)))\n        )\n        .toPromise();\n    } else {\n      return this.filteredItems;\n    }\n  }\n\n  private findItems(menus: Array<ThfMenuItem>, filter: string, filteredItems: Array<any>) {\n    menus.forEach(menu => {\n      if ((menu.label.toLowerCase().includes(filter) && !menu.subItems) ||\n          (menu.subItems && this.findItems(menu.subItems, filter, filteredItems))) {\n            filteredItems.push(menu);\n      }\n    });\n  }\n\n  private findParent(menus: Array<ThfMenuItem>, menuItem: ThfMenuItem): ThfMenuItem {\n    const getParent = function(menuItems: Array<ThfMenuItem>, id) {\n      if (menuItems) {\n        for (let index = 0; index < menuItems.length; index++) {\n          const menu = menuItems[index];\n          if (menu.subItems && menu.subItems.find(subItem => subItem['id'] === id)) {\n            return menu;\n          }\n          const found = getParent(menu.subItems, id);\n          if (found) {\n            return found;\n          }\n        }\n      }\n    };\n    return getParent(menus, menuItem['id']);\n  }\n\n  private findRootParent(menus: Array<ThfMenuItem>, menu: ThfMenuItem): ThfMenuItem {\n\n    const findParent = this.findParent;\n\n    const getRootParent = function(menuItems: Array<ThfMenuItem>, menuItem): ThfMenuItem {\n\n      let parent = findParent(menuItems, menuItem);\n\n      if (parent['level'] !== thfMenuRootLevel) {\n        parent = getRootParent(menuItems, parent);\n      }\n      return parent;\n    };\n    return getRootParent(menus, menu);\n  }\n\n  private getActiveMenuParent(menus: Array<ThfMenuItem>, activeMenuItem: ThfMenuItem, groupedMenuItem: ThfMenuItem) {\n    if (this.areSubMenus([groupedMenuItem, activeMenuItem])) {\n      return this.findRootParent(menus, activeMenuItem);\n    }\n  }\n\n  private groupMenuItem(menu: ThfMenuItem): void {\n    if (this.collapsed) {\n      this.toggleMenuCollapse();\n    }\n\n    menu['isOpened'] = !menu['isOpened'];\n    this.groupedMenuItem = menu;\n\n    if (this.activeMenuItem && menu['isOpened']\n      && this.isActiveItemMenuSubMenu\n      && this.isRootMenuEqualGroupedMenu(this.menus, this.activeMenuItem, menu)) {\n      this.activateMenuItem(this.activeMenuItem);\n    }\n\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });\n  }\n\n  private isRootMenuEqualGroupedMenu(menus: Array<ThfMenuItem>, activeMenuItem: ThfMenuItem, groupedMenuItem: ThfMenuItem) {\n    const activeMenuRootParent = this.findRootParent(menus, activeMenuItem);\n    return activeMenuRootParent['id'] === groupedMenuItem['id'];\n  }\n\n  private openParentMenu(childMenu: ThfMenuItem): void {\n    const parent = this.findParent(this.menus, childMenu);\n    parent['isOpened'] = true;\n    this.groupedMenuItem = parent;\n  }\n\n  private showNoData() {\n    this.noData = this.filteredItems.length === 0;\n  }\n\n  private toggleGroupedMenuItem() {\n    this.groupedMenuItem['isOpened'] = !this.collapsed && this.allowCollapseMenu;\n  }\n\n  private toggleMenuCollapse(collapsed: boolean = false) {\n\n    this.collapsed = collapsed;\n\n    if (this.groupedMenuItem && this.activeMenuItem) {\n      this.groupedMenuItem = this.getActiveMenuParent(this.menus, this.activeMenuItem, this.groupedMenuItem) || this.groupedMenuItem;\n      this.toggleGroupedMenuItem();\n    }\n\n    if (this.activeMenuItem) {\n      this.activateCollapseSubMenuItem();\n      this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem, activatedByRoute: true });\n    }\n\n    this.updateMenu();\n  }\n\n  private toggleResize() {\n    if (this.mobileOpened) {\n      this.mobileOpened = false;\n      this.collapsedMobile = false;\n      this.validateCollapseClass(this.collapsedMobile);\n    }\n  }\n\n  private validateToggleMenu(collapsed: boolean) {\n\n    if (!this.allowCollapseMenu) {\n      return;\n    }\n\n    this.toggleMenuCollapse(collapsed);\n  }\n\n  private updateMenu() {\n    this.menuInitialized = true;\n    this.setMenuExtraProperties();\n    this.filteredItems = [...this.menus];\n    this.menuPrevious = JSON.stringify(this.menus);\n    this.validateMenus(this.menus);\n  }\n\n  protected validateCollapseClass(collapsedMobile?: boolean) {\n    const wrapper = this.element.nativeElement.parentNode;\n    this.renderer[this.isCollapsed && !collapsedMobile ? 'addClass' : 'removeClass'](wrapper, 'thf-collapsed-menu');\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que apresenta o campo de pesquisa no thf-menu.\n */\n@Component({\n  selector: 'thf-menu-filter',\n  templateUrl: './thf-menu-filter.component.html'\n})\nexport class ThfMenuFilterComponent {\n\n  // VariÃ¡vel necessÃ¡ria para o thf-clean identificar que deve ser criado.\n  readonly clean = true;\n\n  @Input('t-loading') loading: boolean;\n\n  // utilizado para repassar ao thf-clean\n  @ViewChild('inputFilter', { read: ElementRef, static: true }) inputFilterElement: ElementRef;\n\n  @Output('t-filter') filter = new EventEmitter();\n\n  filterItems(search: string) {\n    this.filter.emit(search);\n  }\n\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { convertToInt, convertToBoolean } from '../../../utils/util';\n\nimport { ThfMenuItem } from '../thf-menu-item.interface';\nimport { ThfMenuItemsService } from '../services/thf-menu-items.service';\n\n// valor para que caibam 3 linhas de `label`\nconst thfMenuItemSubItemSize = 98;\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que implementa cada item do thf-menu.\n */\n@Component({\n  selector: 'thf-menu-item',\n  templateUrl: './thf-menu-item.component.html'\n})\nexport class ThfMenuItemComponent implements OnDestroy, OnInit {\n\n  private _badgeValue: number;\n  private _isSelected: boolean = false;\n  private _isSubItem: boolean = false;\n  private _subItems: Array<ThfMenuItem>;\n\n  isSelectedSubItem;\n  maxHeight: number = 0;\n\n  private itemSubscription: Subscription;\n\n  // AÃ§Ã£o que serÃ¡ chamada ao clicar no item.\n  @Input('t-action') action: string | Function;\n\n  // Indica se contÃ©m algum item filho com o badge.\n  @Input('t-badge-alert') badgeAlert: boolean;\n\n  // Cor do badge.\n  @Input('t-badge-color') badgeColor: string;\n\n  // Valor do badge.\n  @Input('t-badge-value') set badgeValue(badgeValue: number) {\n    this._badgeValue = convertToInt(badgeValue);\n  }\n\n  get badgeValue() {\n    return this._badgeValue;\n  }\n\n  // Indica se o menu estÃ¡ colapsado\n  @Input('t-collapsed-menu') collapsedMenu: boolean;\n\n  // Ãcone de menu\n  @Input('t-icon') icon: string;\n\n  // Identificador do item.\n  @Input('t-id') id: string;\n\n  // Indica se o item estÃ¡ aberto (menu agrupado)\n  @Input('t-is-opened') isOpened: boolean;\n\n  // Indica se o item estÃ¡ selecionado.\n  @Input('t-is-selected') set isSelected(value: boolean) {\n    this._isSelected = convertToBoolean(value);\n\n    this.isSelectedSubItem = this.isSelected && this.isSubItem;\n  }\n  get isSelected() {\n    return this._isSelected;\n  }\n\n  // Indica se o item Ã© um sub item\n  @Input('t-is-sub-item') set isSubItem(value: boolean) {\n    this._isSubItem = convertToBoolean(value);\n  }\n\n  get isSubItem() {\n    return this._isSubItem;\n  }\n\n  // Texto que aparecerÃ¡ representando o item.\n  @Input('t-label') label: string;\n\n  // Indica qual em nÃ­vel do thf-menu encontra-se.\n  @Input('t-level') level: number;\n\n  // Link do item.\n  @Input('t-link') link?: string;\n\n  // Texto que aparecerÃ¡ representando o item.\n  @Input('t-short-label') shortLabel: string;\n\n  // Lista de sub-items.\n  @Input('t-sub-items') set subItems(subitems: Array<ThfMenuItem>) {\n    this._subItems = subitems;\n    if (this.isOpened) {\n      this.calcMenuSubItemsMaxHeight();\n    }\n  }\n\n  get subItems() {\n    return this._subItems;\n  }\n\n  // Indica o tipo de item, como 'internalLink' ou 'subItems'.\n  @Input('t-type') type: string;\n\n  @ViewChild('menuSubItems', { static: false }) menuSubItems: ElementRef;\n\n  get canShowBadge() {\n    return this.type !== 'subItems' && (this.badgeValue || this.badgeValue === 0) && this.badgeValue >= 0;\n  }\n\n  constructor(private menuItemsService: ThfMenuItemsService) { }\n\n  ngOnDestroy(): void {\n    this.itemSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n    // subscribe to menu component messages\n    this.itemSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {\n      this.processMenuItem(menu);\n    });\n  }\n\n  clickMenuItem(event): void {\n    if (!(event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n\n      // Emmit to parent\n      this.menuItemsService.sendToParentMenuClicked({\n        link: this.link,\n        action: this.action,\n        id: this.id,\n        icon: this.icon,\n        label: this.label,\n        level: this.level,\n        subItems: this.subItems,\n        isSelected: this.isSelected,\n        isOpened: this.isOpened,\n        shortLabel: this.shortLabel,\n        type: this.type\n      });\n    }\n  }\n\n  private accordionAnimation(menuActive: ThfMenuItem, menuOpened: ThfMenuItem, hasSubItemOpened: boolean, activatedByRoute: boolean) {\n\n    if (this.id === menuOpened['id']) {\n      this.maxHeight = this.subItems.length * thfMenuItemSubItemSize;\n    }\n\n    if (hasSubItemOpened) {\n      this.maxHeight = menuOpened['isOpened'] ?\n        (this.maxHeight + menuOpened.subItems.length * thfMenuItemSubItemSize) :\n        (this.maxHeight - menuOpened.subItems.length * thfMenuItemSubItemSize);\n\n      if (activatedByRoute) {\n        this.maxHeight = this.getMinimumHeight(0, this, menuActive);\n      }\n    }\n  }\n\n  private activateMenu(menu: any): void {\n    this.isSelected = menu && this.id === menu.id;\n  }\n\n  private calcMenuSubItemsMaxHeight() {\n    setTimeout(() => {\n      const subItems = Array.from(this.menuSubItems.nativeElement.querySelectorAll('.thf-menu-item'));\n      subItems.forEach((menuItem: any) => this.maxHeight += menuItem.offsetHeight);\n    });\n  }\n\n  private getMinimumHeight(minimumHeight: number, menuItem: ThfMenuItem, menuActive: ThfMenuItem) {\n    minimumHeight += thfMenuItemSubItemSize;\n\n    if (menuItem.subItems && this.hasSubItem(menuItem.subItems, menuActive['id'])) {\n      for (let index = 0; index < menuItem.subItems.length; index++) {\n        minimumHeight = this.getMinimumHeight(minimumHeight, menuItem.subItems[index], menuActive);\n      }\n    }\n\n    return minimumHeight;\n  }\n\n  private groupedMenu(menuActive: ThfMenuItem, menuOpened: ThfMenuItem, activatedByRoute: boolean = false): void {\n\n    const hasSubItemOpened = (menuOpened && this.id !== menuOpened['id']) ? this.hasSubItem(this.subItems, menuOpened['id']) : false;\n\n    this.isOpened = this.isMenuOpened(menuOpened, hasSubItemOpened);\n\n    this.isSelected = (menuActive && !this.isOpened) ? this.hasSubItem(this.subItems, menuActive['id']) : false;\n\n    if (!this.isOpened) {\n      this.maxHeight = 0;\n      return;\n    }\n    this.accordionAnimation(menuActive, menuOpened, hasSubItemOpened, activatedByRoute);\n  }\n\n  private hasSubItem(subItems: Array<ThfMenuItem>, id: string): boolean {\n    if (subItems) {\n      return subItems.some(item => {\n        return item['id'] === id ? true : this.hasSubItem(item.subItems, id);\n      });\n    }\n  }\n\n  private isMenuOpened(menuOpened: ThfMenuItem, hasSubItemOpened: boolean): boolean {\n    if (menuOpened) {\n      return (this.id === menuOpened['id']) ? menuOpened['isOpened'] : hasSubItemOpened;\n    }\n\n    return false;\n  }\n\n  private processMenuItem(menu) {\n\n    if (this.type === 'internalLink') {\n      this.activateMenu(menu.active);\n      return;\n    }\n\n    if (this.type === 'subItems') {\n      this.groupedMenu(menu.active, menu.grouped, menu.activatedByRoute);\n      return;\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ThfBadgeModule } from '../thf-badge/thf-badge.module';\nimport { ThfFieldModule } from '../thf-field/thf-field.module';\nimport { ThfMenuComponent } from './thf-menu.component';\nimport { ThfMenuFilterComponent } from './thf-menu-filter/thf-menu-filter.component';\nimport { ThfMenuHeaderTemplateDirective } from './thf-menu-header-template/thf-menu-header-template.directive';\nimport { ThfMenuItemComponent } from './thf-menu-item/thf-menu-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-menu.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ThfBadgeModule,\n    ThfFieldModule\n  ],\n  declarations: [\n    ThfMenuComponent,\n    ThfMenuFilterComponent,\n    ThfMenuHeaderTemplateDirective,\n    ThfMenuItemComponent\n  ],\n  exports: [\n    ThfMenuComponent,\n    ThfMenuHeaderTemplateDirective\n  ]\n})\nexport class ThfMenuModule { }\n","import { Input } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\nimport { isExternalLink } from '../../utils/util';\n\nimport { ThfMenuPanelItem } from './thf-menu-panel-item/thf-menu-panel-item.interface';\nimport { ThfMenuPanelItemInternal } from './thf-menu-panel-item/thf-menu-panel-item-internal.interface';\n\n/**\n * @description\n *\n * Este Ã© um componente de menu lateral composto apenas por Ã­cones e com um nÃ­vel, utilizado para navegaÃ§Ã£o\n * em pÃ¡ginas internas, externas da aplicaÃ§Ã£o ou aciona uma aÃ§Ã£o.\n *\n * O componente `thf-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informaÃ§Ãµes dos\n * itens de menu como textos, links para redirecionamento, aÃ§Ãµes e Ã­cones.\n */\nexport class ThfMenuPanelBaseComponent {\n\n  private _menus;\n\n  /** Lista dos itens do `thf-menu-panel`. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio. */\n  @Input('t-menus') set menus(menus: Array<ThfMenuPanelItem>) {\n    this._menus = Array.isArray(menus) ? menus : [];\n\n    this.setMenuExtraProperties(this._menus);\n    this.validateMenus(this._menus);\n  }\n\n  get menus() {\n    return this._menus;\n  }\n\n  private setMenuExtraProperties(menus: Array<ThfMenuPanelItem>) {\n    menus.forEach(menuItem => this.setMenuItemProperties(<ThfMenuPanelItemInternal> menuItem));\n  }\n\n  private setMenuItemProperties(menuItem: ThfMenuPanelItemInternal) {\n    menuItem.id = menuItem.id || uuid();\n    menuItem.type = this.setMenuType(menuItem);\n  }\n\n  private setMenuType(menuItem: ThfMenuPanelItem): string {\n    if (!menuItem.link) {\n      return 'noLink';\n    }\n\n    if (isExternalLink(menuItem.link)) {\n      return 'externalLink';\n    }\n\n    return 'internalLink';\n  }\n\n  private validateMenu(menuItem: ThfMenuPanelItem) {\n    if (!menuItem.label) {\n      throw new Error('O atributo ThfMenuPanelItem.label nÃ£o pode ser vazio.');\n    }\n\n    if (!menuItem.icon) {\n      throw new Error('O atributo ThfMenuPanelItem.icon nÃ£o pode ser vazio.');\n    }\n  }\n\n  private validateMenus(menus): void {\n    menus.forEach(menu => this.validateMenu(menu));\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a comunicaÃ§Ã£o entre os items do thf-menu-panel.\n */\n@Injectable()\nexport class ThfMenuPanelItemsService {\n\n  private subjectChild = new Subject<any>();\n  private subjectParent = new Subject<any>();\n\n  // Recebe do thf-menu-panel-item sua informaÃ§Ã£o de click.\n  receiveFromChildMenuClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Recebe do thf-menu-panel as informaÃ§Ãµes processadas do click de um thf-menu-panel-item.\n  receiveFromParentMenuClicked(): Observable<any> {\n    return this.subjectParent.asObservable();\n  }\n\n  // Envia informaÃ§Ãµes do click do thf-menu-panel-item para o thf-menu\n  sendToParentMenuClicked(menu: object) {\n    this.subjectChild.next(menu);\n  }\n\n  // Envia para os thf-menu-panel-item a resposta do processamento de click de um thf-menu-panel-item.\n  sendToChildMenuClicked(menu: object) {\n    this.subjectParent.next(menu);\n  }\n\n}\n","import { Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { callFunction, getFormattedLink, openExternalLink } from '../../utils/util';\n\nimport { ThfMenuPanelBaseComponent } from './thf-menu-panel-base.component';\nimport { ThfMenuPanelItem } from './thf-menu-panel-item/thf-menu-panel-item.interface';\nimport { ThfMenuPanelItemInternal } from './thf-menu-panel-item/thf-menu-panel-item-internal.interface';\nimport { ThfMenuPanelItemsService } from './services/thf-menu-panel-items.service';\n\n/**\n * @docsExtends ThfMenuPanelBaseComponent\n *\n * @description\n *\n * Para o menu funcionar corretamente Ã© necessÃ¡rio importar o `RouterModule` e `Routes` do mÃ³dulo principal de\n *  sua aplicaÃ§Ã£o:\n *\n * ````\n * import { RouterModule, Routes } from '@angular/router';\n *\n * ...\n *\n * @NgModule({\n *   imports: [\n *     RouterModule,\n *     Routes,\n *     ...\n *     ThfModule,\n *     ...\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n *\n * AlÃ©m disso Ã© necessÃ¡rio criar um mÃ³dulo configurando as rotas da aplicaÃ§Ã£o.\n *\n * ```\n * import { NgModule } from '@angular/core';\n *\n * import { RouterModule, Routes } from '@angular/router';\n *\n * import { HelloWorldComponent } from './hello-world/hello-world.component';\n *\n * const routes: Routes = [\n *   {path: 'hello-world', component: HelloWorldComponent}\n * ];\n *\n * @NgModule({\n *   imports: [RouterModule.forRoot(routes, {useHash: true})],\n *   exports: [RouterModule]\n * })\n * export class AppRoutingModule {}\n * ```\n *\n * @example\n *\n * <example name=\"thf-menu-panel-basic\" title=\"Totvs Menu Panel Basic\">\n *   <file name=\"sample-thf-menu-panel-basic/sample-thf-menu-panel-basic.component.html\"> </file>\n *   <file name=\"sample-thf-menu-panel-basic/sample-thf-menu-panel-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-menu-panel-labs\" title=\"Totvs Menu Panel Labs\">\n *   <file name=\"sample-thf-menu-panel-labs/sample-thf-menu-panel-labs.component.html\"> </file>\n *   <file name=\"sample-thf-menu-panel-labs/sample-thf-menu-panel-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-menu-panel-customer\" title=\"Totvs Menu Panel - Customers\">\n *   <file name=\"sample-thf-menu-panel-customer/sample-thf-menu-panel-customer.component.html\"> </file>\n *   <file name=\"sample-thf-menu-panel-customer/sample-thf-menu-panel-customer.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'thf-menu-panel',\n  templateUrl: './thf-menu-panel.component.html'\n})\nexport class ThfMenuPanelComponent extends ThfMenuPanelBaseComponent implements OnDestroy, OnInit {\n\n  activeMenuItem: ThfMenuPanelItem;\n  linkActive: string;\n  parentRef: any;\n\n  private routeSubscription: Subscription;\n  private itemSubscription: Subscription;\n\n  constructor(\n    viewRef: ViewContainerRef,\n    private location: Location,\n    private menuItemsService: ThfMenuPanelItemsService,\n    private router: Router) {\n\n    super();\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  ngOnDestroy() {\n    this.itemSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n   this.subscribeToMenuItem();\n   this.subscribeToRoute();\n  }\n\n  private activateMenuByUrl(urlPath: string, menus: Array<ThfMenuPanelItem>) {\n    if (menus) {\n      return menus.some(menu => {\n        if (getFormattedLink(menu.link) === urlPath) {\n          this.activateMenuItem(menu);\n          return true;\n        }\n      });\n    }\n  }\n\n  private activateMenuItem(menu: ThfMenuPanelItem): void {\n    this.activeMenuItem = menu;\n    this.linkActive = getFormattedLink(menu.link);\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, activatedByRoute: true });\n  }\n\n  private checkActiveMenuByUrl(urlPath: string): void {\n    if (!this.linkActive || this.linkActive !== urlPath) {\n      this.activateMenuByUrl(urlPath, this.menus);\n    }\n  }\n\n  private clickMenuItem(menu: ThfMenuPanelItemInternal) {\n    if (menu.action) {\n      callFunction(menu.action, this.parentRef, menu);\n    }\n\n    if (menu.type === 'externalLink') {\n\n      openExternalLink(menu.link);\n\n    } else if (menu.type === 'internalLink') {\n\n      this.activateMenuItem(menu);\n    }\n  }\n\n  private subscribeToRoute() {\n     this.routeSubscription = this.router.events.subscribe(rounterEvent => {\n      if (rounterEvent instanceof NavigationEnd) {\n        this.checkActiveMenuByUrl(this.location.path());\n      }\n    });\n  }\n\n  private subscribeToMenuItem() {\n    this.itemSubscription =\n      this.menuItemsService.receiveFromChildMenuClicked().subscribe((menu: ThfMenuPanelItemInternal) => this.clickMenuItem(menu));\n  }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { ThfMenuPanelItemInternal } from './thf-menu-panel-item-internal.interface';\nimport { ThfMenuPanelItemsService } from '../services/thf-menu-panel-items.service';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que implementa cada item do thf-menu-panel.\n */\n@Component({\n  selector: 'thf-menu-panel-item',\n  templateUrl: './thf-menu-panel-item.component.html'\n})\nexport class ThfMenuPanelItemComponent implements OnDestroy, OnInit {\n\n  itemsSubscription: Subscription;\n\n  @Input('t-menu-item-internal') menuItemInternal: ThfMenuPanelItemInternal;\n\n  constructor(private menuItemsService: ThfMenuPanelItemsService) { }\n\n  ngOnDestroy() {\n    this.itemsSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    // subscribe to menu component messages\n    this.subscribeMenuClickedFromParent();\n  }\n\n  clickMenuItem(event) {\n    if (!(event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n\n      // Emmit to parent\n      this.menuItemsService.sendToParentMenuClicked(this.menuItemInternal);\n    }\n  }\n\n  private activateMenu(menu: ThfMenuPanelItemInternal) {\n    this.menuItemInternal.isSelected = this.menuItemInternal.id === menu.id;\n  }\n\n  private processMenuItem(menu) {\n    if (this.menuItemInternal.type === 'internalLink') {\n      this.activateMenu(menu.active);\n    }\n  }\n\n  private subscribeMenuClickedFromParent() {\n   this.itemsSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {\n      this.processMenuItem(menu);\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ThfFieldModule } from '../thf-field/thf-field.module';\nimport { ThfMenuPanelComponent } from './thf-menu-panel.component';\nimport { ThfMenuPanelItemComponent } from './thf-menu-panel-item/thf-menu-panel-item.component';\nimport { ThfMenuPanelItemsService } from './services/thf-menu-panel-items.service';\nimport { ThfTooltipModule } from '../../directives/thf-tooltip/index';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-menu-panel.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ThfFieldModule,\n    ThfTooltipModule\n  ],\n  declarations: [\n    ThfMenuPanelComponent,\n    ThfMenuPanelItemComponent\n  ],\n  exports: [\n    ThfMenuPanelComponent\n  ],\n  providers: [\n    ThfMenuPanelItemsService\n  ]\n})\nexport class ThfMenuPanelModule { }\n","import { Component, Input, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isExternalLink, openExternalLink } from '../../../../utils/util';\n\n@Component({\n  selector: 'thf-navbar-action',\n  templateUrl: './thf-navbar-action.component.html'\n})\nexport class ThfNavbarActionComponent {\n\n  private param;\n  private parentRef;\n\n  @Input('t-action') action?: Function;\n\n  @Input('t-icon') icon: string;\n\n  @Input('t-label') label: string;\n\n  @Input('t-link') link?: string;\n\n  @Input('t-tooltip-text') tooltip?: string;\n\n  constructor(viewContainerRef: ViewContainerRef, private router: Router) {\n    this.parentRef = viewContainerRef['_view']['component'];\n  }\n\n  onActionClick() {\n    if (this.action) {\n      return callFunction(this.action, this.parentRef, this.param || this);\n    }\n\n    if (this.link) {\n      return this.openUrl(this.link);\n    }\n  }\n\n  private openUrl(url: string) {\n    if (isExternalLink(url)) {\n      return openExternalLink(url);\n    }\n\n    if (url) {\n      return this.router.navigate([url]);\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ThfNavbarIconAction } from '../../interfaces/thf-navbar-icon-action.interface';\n\n@Component({\n  selector: 'thf-navbar-action-popup',\n  templateUrl: './thf-navbar-action-popup.component.html'\n})\nexport class ThfNavbarActionPopupComponent {\n\n  @Input('t-icon-actions') iconActions: Array<ThfNavbarIconAction>;\n\n  getLastIconAction() {\n    if (this.iconActions && this.iconActions.length > 0) {\n      return this.iconActions[this.iconActions.length - 1].icon;\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ThfNavbarIconAction } from '../interfaces/thf-navbar-icon-action.interface';\n\n@Component({\n  selector: 'thf-navbar-actions',\n  templateUrl: './thf-navbar-actions.component.html'\n})\nexport class ThfNavbarActionsComponent {\n\n  private _iconActions;\n\n  @Input('t-icon-actions') set iconActions(actions: Array<ThfNavbarIconAction>) {\n    this._iconActions = actions.map(action => ({ ...action, separator: true, url: action.link }));\n  }\n\n  get iconActions() {\n    return this._iconActions;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfNavbarActionComponent } from './thf-navbar-action/thf-navbar-action.component';\nimport { ThfNavbarActionPopupComponent } from './thf-navbar-action-popup/thf-navbar-action-popup.component';\nimport { ThfNavbarActionsComponent } from './thf-navbar-actions.component';\nimport { ThfPopupModule } from '../../thf-popup/thf-popup.module';\nimport { ThfTooltipModule } from '../../../directives/thf-tooltip/thf-tooltip.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ThfPopupModule,\n    ThfTooltipModule\n  ],\n  declarations: [\n    ThfNavbarActionComponent,\n    ThfNavbarActionPopupComponent,\n    ThfNavbarActionsComponent\n  ],\n  exports: [\n    ThfNavbarActionsComponent\n  ]\n})\nexport class ThfNavbarActionsModule { }\n","import { Input } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, thfLocaleDefault } from '../../utils/util';\n\nimport { ThfNavbarIconAction } from './interfaces/thf-navbar-icon-action.interface';\nimport { ThfNavbarItem } from './interfaces/thf-navbar-item.interface';\nimport { ThfNavbarLiterals } from './interfaces/thf-navbar-literals.interface';\n\nexport const thfNavbarLiteralsDefault = {\n  en: <ThfNavbarLiterals> {\n    navbarLinks: 'Navbar links'\n  },\n  es: <ThfNavbarLiterals> {\n    navbarLinks: 'Navbar links'\n  },\n  pt: <ThfNavbarLiterals> {\n    navbarLinks: 'Navbar links'\n  }\n};\n\n/**\n * @description\n *\n * O componente `thf-navbar` Ã© um cabeÃ§alho fixo que permite apresentar uma lista de links para facilitar a navegaÃ§Ã£o pelas\n * pÃ¡ginas da aplicaÃ§Ã£o. TambÃ©m possui Ã­cones com aÃ§Ãµes.\n */\nexport class ThfNavbarBaseComponent {\n\n  private _iconActions: Array<ThfNavbarIconAction> = [];\n  private _items: Array<ThfNavbarItem> = [];\n  private _literals: ThfNavbarLiterals;\n  private _shadow: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes apresentadas em Ã­cones no lado direito do `thf-navbar`.\n   */\n  @Input('t-icon-actions') set iconActions(value: Array<ThfNavbarIconAction>) {\n    this._iconActions = value || [];\n  }\n\n  get iconActions(): Array<ThfNavbarIconAction> {\n    return this._iconActions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de items do `thf-navbar`.\n   */\n  @Input('t-items') set items(value: Array<ThfNavbarItem>) {\n    this._items = value || [];\n  }\n\n  get items(): Array<ThfNavbarItem> {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com a literal usada na propriedade `t-literals`.\n   *\n   * Para customizar a literal, basta declarar um objeto do tipo `ThfNavbarLiterals` conforme exemplo abaixo:\n   *\n   * ```\n   *  const customLiterals: ThfNavbarLiterals = {\n   *    navbarLinks: 'Itens de navegaÃ§Ã£o'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <thf-navbar\n   *   [t-literals]=\"customLiterals\">\n   * </thf-navbar>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('t-literals') set literals(value: ThfNavbarLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfNavbarLiteralsDefault[thfLocaleDefault],\n        ...thfNavbarLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = thfNavbarLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || thfNavbarLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a logo apresentada `thf-navbar`.\n   */\n  @Input('t-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso jÃ¡ possua um menu na aplicaÃ§Ã£o o mesmo deve ser repassado para essa propriedade para que quando entre em modo\n   * responsivo os items do `thf-navbar` possam ser adicionados no primeiro item do menu definido.\n   *\n   * Exemplo:\n   *\n   * ```\n   * <thf-navbar\n   *  [t-items]=\"items\"\n   *  [t-icon-actions]=\"iconActions\"\n   *  [t-menu]=\"userMenu\">\n   * </thf-navbar>\n   * <div class=\"thf-wrapper\">\n   *  <thf-menu #userMenu\n   *   [t-menus]=\"[{ label: 'Item 1', link: '/' }]\">\n   *  </thf-menu>\n   * </div>\n   * ```\n   */\n  @Input('t-menu') menu?: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica uma sombra na parte inferior do `thf-navbar`.\n   *\n   * @default `false`\n   */\n  @Input('t-shadow') set shadow(value: boolean) {\n    this._shadow = convertToBoolean(value);\n  }\n\n  get shadow(): boolean {\n    return this._shadow;\n  }\n\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\nimport { ThfNavbarItem } from '../../interfaces/thf-navbar-item.interface';\n\nimport { isExternalLink } from '../../../../utils/util';\n\n@Component({\n  selector: 'thf-navbar-item',\n  templateUrl: './thf-navbar-item.component.html'\n})\nexport class ThfNavbarItemComponent {\n\n  @Input('t-action') action: Function;\n\n  @Input('t-clickable') clickable?: boolean;\n\n  @Input('t-label') label: string;\n\n  @Input('t-link') link?: string;\n\n  @Output('t-click') click: EventEmitter<ThfNavbarItem> = new EventEmitter<ThfNavbarItem>();\n\n  get type() {\n    if (isExternalLink(this.link)) {\n      return 'externalLink';\n    }\n\n    return 'internalLink';\n  }\n\n  itemClick() {\n\n    if (this.action) {\n      this.action({ label: this.label, link: this.link });\n    }\n\n    this.click.emit();\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { ThfNavbarItem } from '../interfaces/thf-navbar-item.interface';\nimport { ThfNavbarItemComponent } from './thf-navbar-item/thf-navbar-item.component';\n\n@Component({\n  selector: 'thf-navbar-items',\n  templateUrl: './thf-navbar-items.component.html'\n})\nexport class ThfNavbarItemsComponent implements OnInit, OnDestroy {\n\n  selectedItem: ThfNavbarItem;\n\n  private routeSubscription: Subscription;\n\n  @ViewChild('navbarItemsContainer', { read: ElementRef, static: true }) navbarItemsContainer: ElementRef;\n\n  @ViewChildren(ThfNavbarItemComponent, { read: ElementRef }) allNavbarItems:  QueryList<any>;\n\n  @Input('t-items') items: Array<ThfNavbarItem>;\n\n  constructor(private router: Router) { }\n\n  ngOnDestroy() {\n    this.routeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.subscribeToRoute();\n  }\n\n  selectItem(item: ThfNavbarItem) {\n    this.selectedItem = item;\n  }\n\n  private checkActiveItemByUrl(urlRouter: string) {\n    this.selectedItem = this.items.find(item => item.link === urlRouter);\n  }\n\n  private checkRouterChildrenFragments() {\n    const childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];\n\n    return childrenPrimary ? `/${childrenPrimary.segments.map(it => it.path).join('/')}` : '';\n  }\n\n  private subscribeToRoute() {\n    this.routeSubscription = this.router.events.subscribe(val => {\n      if (val instanceof NavigationEnd || val instanceof NavigationCancel) {\n        const urlRouter = this.checkRouterChildrenFragments();\n        this.checkActiveItemByUrl(urlRouter);\n      }\n    });\n  }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, keyframes, style } from '@angular/animations';\n\nimport { ThfNavbarBaseComponent } from './thf-navbar-base.component';\nimport { ThfNavbarItemsComponent } from './thf-navbar-items/thf-navbar-items.component';\n\n/**\n * @docsExtends ThfNavbarBaseComponent\n */\n@Component({\n  selector: 'thf-navbar',\n  templateUrl: './thf-navbar.component.html'\n})\nexport class ThfNavbarComponent extends ThfNavbarBaseComponent implements AfterViewInit, OnDestroy {\n\n  disableRight: boolean;\n  showItemsNavigation: boolean = false;\n\n  private allNavbarItemsWidth: any;\n  private mediaQuery: any;\n  private navbarItemsWidth: any;\n  private offset: number = 0;\n  private player: AnimationPlayer;\n\n  protected windowResizeListener: () => void;\n\n  @ViewChild(ThfNavbarItemsComponent, { read: ElementRef, static: true }) navbarItemsElement: ElementRef;\n\n  @ViewChild(ThfNavbarItemsComponent, { static: true }) navbarItems: ThfNavbarItemsComponent;\n\n  constructor(private renderer: Renderer2, private builder: AnimationBuilder, private changeDetector: ChangeDetectorRef) {\n    super();\n    this.windowResizeListener = this.renderer.listen(window, 'resize', this.displayItemsNavigation.bind(this));\n  }\n\n  ngAfterViewInit() {\n    this.displayItemsNavigation();\n    this.menuWrapperAdjust();\n  }\n\n  ngOnDestroy() {\n    if (this.mediaQuery) {\n      this.mediaQuery.removeListener();\n    }\n  }\n\n  navigateItems(orientation) {\n\n    orientation === 'left' ? this.navigateLeft() : this.navigateRight();\n\n    this.animate(this.offset);\n  }\n\n  private adjustNavbarMenu() {\n    const navbarMenu = document.querySelector('thf-navbar thf-menu');\n    const page = document.querySelector('.thf-page');\n    const navbarLogo = document.querySelector('.thf-navbar-logo');\n    navbarMenu.setAttribute('style', `display: none`);\n    if (page) {\n      page.setAttribute('style', 'margin-left: 0; width: 100%');\n    }\n    if (navbarLogo) {\n      navbarLogo.setAttribute('style', `padding: 0 16px 0 0!important`);\n    }\n    this.mediaQuery.addListener(changed => {\n      if (changed.matches) {\n        navbarMenu.setAttribute('style', `display: block`);\n        if (page) {\n          page.setAttribute('style', 'margin-left: 256; width: calc(100% - 256px)');\n        }\n      } else {\n        navbarMenu.setAttribute('style', `display: none`);\n        if (page) {\n          page.setAttribute('style', 'margin-left: 0; width: 100%');\n        }\n      }\n    });\n  }\n\n  private adjustUserMenu() {\n    const userMenuItems = this.menu.menus;\n    this.mediaQuery.addListener(changed => {\n      if (changed.matches) {\n        const subItems = [{label: this.literals.navbarLinks, subItems: this.items}] ;\n        this.menu.menus = [...subItems, ...this.menu.menus];\n      } else {\n        this.menu.menus = userMenuItems;\n      }\n    });\n  }\n\n  private animate(offset: number) {\n    const animation: AnimationFactory = this.buildTransitionAnimation(offset);\n\n    this.player = animation.create(this.navbarItems.navbarItemsContainer.nativeElement);\n    this.player.play();\n  }\n\n  private buildTransitionAnimation(offset: number) {\n    return this.builder.build([\n      animate(\n        '250ms ease',\n        keyframes([style({ transform: `translateX(${offset}px)` })])\n      )\n    ]);\n  }\n\n  private displayItemsNavigation() {\n    this.navbarItemsWidth = this.navbarItemsElement.nativeElement.offsetWidth;\n\n    this.allNavbarItemsWidth =\n      this.navbarItems.allNavbarItems.reduce((previous: any, current: any) => previous + current.nativeElement.offsetWidth, 0);\n\n    this.showItemsNavigation = this.navbarItemsWidth < this.allNavbarItemsWidth + 88;\n\n    this.changeDetector.detectChanges();\n\n    if (this.offset !== 0) {\n      this.offset = 0;\n      this.animate(this.offset);\n    }\n  }\n\n  private menuWrapperAdjust() {\n    const body = document.querySelector('body');\n    body.setAttribute('style', `height: calc(100% - 56px)`);\n    this.mediaQuery = window.matchMedia('(max-width: 768px)');\n\n    !this.menu ? this.adjustNavbarMenu() : this.adjustUserMenu();\n  }\n\n  private navigateRight() {\n\n    const maxAllowedOffset = this.allNavbarItemsWidth - this.navbarItemsElement.nativeElement.offsetWidth;\n    const itemBreakPoint = (this.offset * -1) + this.navbarItemsElement.nativeElement.offsetWidth;\n\n    let movementInPixels = 0;\n\n    this.navbarItems.allNavbarItems.some(navbarItem => {\n      const finalPosition = navbarItem.nativeElement.offsetWidth + navbarItem.nativeElement.offsetLeft;\n\n      if (itemBreakPoint < finalPosition) {\n        movementInPixels = navbarItem.nativeElement.offsetLeft;\n        return true;\n      }\n\n    });\n\n    this.offset = (movementInPixels * -1);\n\n    if ((this.offset * -1) >= maxAllowedOffset) {\n      this.offset = maxAllowedOffset * -1;\n      this.disableRight = true;\n    }\n  }\n\n  private navigateLeft() {\n    this.disableRight = false;\n\n    let movementInPixels;\n\n    this.navbarItems.allNavbarItems.some(navbarItem => {\n\n      const navbarItemOffset = navbarItem.nativeElement.offsetLeft;\n\n      if (navbarItemOffset >= (this.offset * -1)) {\n        movementInPixels = navbarItemOffset - (this.navbarItemsElement.nativeElement.offsetWidth - navbarItem.nativeElement.offsetWidth);\n        return true;\n      }\n\n    });\n\n    this.offset = (movementInPixels * -1);\n\n    if (this.offset > 0) {\n      this.offset = 0;\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ThfNavbarItemComponent } from './thf-navbar-item/thf-navbar-item.component';\nimport { ThfNavbarItemsComponent } from './thf-navbar-items.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    ThfNavbarItemComponent,\n    ThfNavbarItemsComponent\n  ],\n  exports: [\n    ThfNavbarItemsComponent\n  ]\n})\nexport class ThfNavbarItemsModule { }\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'thf-navbar-item-navigation',\n  templateUrl: './thf-navbar-item-navigation.component.html'\n})\nexport class ThfNavbarItemNavigationComponent {\n\n  @Input('t-disable-left') disableLeft: boolean;\n\n  @Input('t-disable-right') disableRight: boolean;\n\n  @Output('t-click') click: EventEmitter<any> = new EventEmitter<any>();\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'thf-navbar-logo',\n  templateUrl: './thf-navbar-logo.component.html'\n})\nexport class ThfNavbarLogoComponent {\n\n  @Input('t-logo') logo?: string;\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfMenuModule } from '../thf-menu/thf-menu.module';\nimport { ThfNavbarActionsModule } from './thf-navbar-actions/thf-navbar-actions.module';\nimport { ThfNavbarComponent } from './thf-navbar.component';\nimport { ThfNavbarItemsModule } from './thf-navbar-items/thf-navbar-items.module';\nimport { ThfNavbarItemNavigationComponent } from './thf-navbar-item-navigation/thf-navbar-item-navigation.component';\nimport { ThfNavbarLogoComponent } from './thf-navbar-logo/thf-navbar-logo.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ThfNavbarActionsModule,\n    ThfNavbarItemsModule,\n    ThfMenuModule\n  ],\n  declarations: [\n    ThfNavbarComponent,\n    ThfNavbarItemNavigationComponent,\n    ThfNavbarLogoComponent\n  ],\n  exports: [\n    ThfNavbarComponent\n  ]\n})\nexport class ThfNavbarModule { }\n","/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **thf-page** Ã© utilizado como container principal para os componentes thf-page-header, thf-page-content\n * e para as aÃ§Ãµes dos componentes thf-page-edit e thf-page-detail.\n *\n * Quando estiver sendo utilizado o componente thf-menu junto ao thf-page, ambos devem estar no mesmo nÃ­vel\n * e inseridos em uma div com a classe **thf-wrapper**. Esta classe serÃ¡ responsÃ¡vel por fazer os cÃ¡lculos\n * necessÃ¡rios de alinhamento dos componentes.\n *\n * O componente **thf-page** tambÃ©m pode ser utilizado sem o thf-menu e neste caso o corpo da pÃ¡gina deve ser\n * definido com a altura de 100% para que o thf-page maximize seu tamanho.\n * ```\n * html, body {\n *   height:100%;\n * }\n * ```\n */\nexport class ThfPageBaseComponent { }\n","import { Component } from '@angular/core';\n\nimport { ThfPageBaseComponent } from './thf-page-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends ThfPageBaseComponent\n */\n@Component({\n  selector: 'thf-page',\n  templateUrl: './thf-page.component.html'\n})\nexport class ThfPageComponent extends ThfPageBaseComponent { }\n","/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **thf-page-content** Ã© utilizado como o container para o conteÃºdo da pÃ¡gina.\n */\nexport class ThfPageContentBaseComponent {\n\n  protected resizeListener: () => void;\n\n}\n","import { AfterViewInit, Component, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { ThfPageContentBaseComponent } from './thf-page-content-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends ThfPageContentBaseComponent\n */\n@Component({\n  selector: 'thf-page-content',\n  templateUrl: './thf-page-content.component.html'\n})\nexport class ThfPageContentComponent extends ThfPageContentBaseComponent implements AfterViewInit, OnDestroy {\n\n  contentOpacity: number = 0;\n  height: string = '90%';\n  overflowY: string = 'none';\n\n  constructor(public renderer: Renderer2) {\n    super();\n    this.initializeListeners();\n  }\n\n  ngAfterViewInit() {\n    this.recalculateHeaderSize();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  recalculateHeaderSize() {\n    setTimeout(() => {\n      const pageHeaderElement: HTMLElement = document.querySelector('div.thf-page-header');\n\n      this.setHeightContent(pageHeaderElement);\n      this.contentOpacity = 1;\n    });\n  }\n\n  setHeightContent(thfPageHeader: HTMLElement) {\n    const bodyHeight = document.body.clientHeight;\n    const pageHeaderHeight = thfPageHeader ? thfPageHeader.offsetTop + thfPageHeader.offsetHeight : 0;\n    const newHeight = bodyHeight - pageHeaderHeight;\n\n    this.height = `${newHeight}px`;\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.recalculateHeaderSize();\n    });\n  }\n\n  private removeListeners() {\n    this.resizeListener();\n  }\n\n}\n","import { Input, ViewChild } from '@angular/core';\n\nimport { ThfBreadcrumb } from '../../thf-breadcrumb/thf-breadcrumb.interface';\nimport { ThfPageAction } from '../thf-page-action.interface';\nimport { ThfPageContentComponent } from '../thf-page-content/thf-page-content.component';\n\n/**\n * @description\n *\n * O componente `thf-page-default` Ã© utilizado como o container principal para as telas sem um template definido.\n */\nexport abstract class ThfPageDefaultBaseComponent {\n\n  private _actions?: Array<ThfPageAction> = [];\n  private _title: string;\n\n  @ViewChild(ThfPageContentComponent, { static: true }) thfPageContent: ThfPageContentComponent;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface `ThfPageAction`.\n   */\n  @Input('t-actions') set actions(actions: Array<ThfPageAction>) {\n    this._actions = Array.isArray(actions) ? actions : [];\n    this.setDropdownActions();\n  }\n\n  get actions(): Array<ThfPageAction> {\n    return this._actions;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('t-breadcrumb') breadcrumb?: ThfBreadcrumb;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('t-title') set title(title: string) {\n    this._title = title;\n    this.thfPageContent.recalculateHeaderSize();\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  // Seta a lista de aÃ§Ãµes no dropdown.\n  abstract setDropdownActions();\n\n}\n","import { AfterContentInit, Component, OnChanges, Renderer2, SimpleChange, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isTypeof } from '../../../utils/util';\nimport { ThfPageAction } from '../thf-page-action.interface';\n\nimport { ThfPageDefaultBaseComponent } from './thf-page-default-base.component';\n\n/**\n * @docsExtends ThfPageDefaultBaseComponent\n *\n * @example\n *\n * <example name=\"thf-page-default-basic\" title=\"Totvs Page Default Basic\">\n *  <file name=\"sample-thf-page-default-basic/sample-thf-page-default-basic.component.html\"> </file>\n *  <file name=\"sample-thf-page-default-basic/sample-thf-page-default-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-page-default-labs\" title=\"Totvs Page Default Labs\">\n *  <file name=\"sample-thf-page-default-labs/sample-thf-page-default-labs.component.html\"> </file>\n *  <file name=\"sample-thf-page-default-labs/sample-thf-page-default-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-page-default-dashboard\" title=\"Totvs Page Default - Dashboard\">\n *  <file name=\"sample-thf-page-default-dashboard/sample-thf-page-default-dashboard.component.html\"> </file>\n *  <file name=\"sample-thf-page-default-dashboard/sample-thf-page-default-dashboard.component.ts\"> </file>\n *  <file name=\"sample-thf-page-default-dashboard/sample-thf-page-default-dashboard.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-page-default',\n  templateUrl: './thf-page-default.component.html'\n})\nexport class ThfPageDefaultComponent extends ThfPageDefaultBaseComponent implements AfterContentInit, OnChanges {\n\n  limitPrimaryActions: number = 3;\n  dropdownActions: Array<ThfPageAction>;\n  isMobile: boolean;\n\n  private maxWidthMobile: number = 480;\n  private parentRef: ViewContainerRef;\n\n  constructor(\n    viewRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private router: Router) {\n\n    super();\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  public ngAfterContentInit(): void {\n    this.setIsMobile();\n    this.setDropdownActions();\n\n    this.renderer.listen('window', 'resize', (event: Event) => {\n      this.onResize(event);\n    });\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    this.setDropdownActions();\n  }\n\n  actionIsDisabled(action: any) {\n    return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;\n  }\n\n  callAction(item: ThfPageAction): void {\n    if (item.url) {\n\n      this.router.navigate([item.url]);\n    } else if (item.action) {\n      callFunction(item.action, this.parentRef);\n    }\n  }\n\n  hasPageHeader() {\n    return !!(this.title || (this.actions && this.actions.length) || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private onResize(event: Event): void {\n    const width = (event.target as Window).innerWidth;\n\n    if (width < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n      this.setDropdownActions();\n    } else {\n      this.isMobile = false;\n      this.limitPrimaryActions = 3;\n      this.setDropdownActions();\n    }\n  }\n\n  private setIsMobile(): void {\n    if (window.innerWidth < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n    }\n  }\n\n  setDropdownActions(): void {\n    if (this.actions.length > this.limitPrimaryActions) {\n      this.dropdownActions = this.actions.slice(this.limitPrimaryActions - 1);\n    }\n  }\n\n}\n","import { Input, ViewChild } from '@angular/core';\n\nimport { browserLanguage, thfLocaleDefault } from './../../../utils/util';\n\nimport { ThfBreadcrumb } from '../../thf-breadcrumb/thf-breadcrumb.interface';\nimport { ThfPageContentComponent } from '../thf-page-content/thf-page-content.component';\nimport { ThfPageDetailLiterals } from './thf-page-detail-literals.interface';\n\nexport const thfPageDetailLiteralsDefault = {\n  en: <ThfPageDetailLiterals> {\n    back: 'Back',\n    edit: 'Edit',\n    remove: 'Remove'\n  },\n  es: <ThfPageDetailLiterals> {\n    back: 'Volver',\n    edit: 'Editar',\n    remove: 'Eliminar'\n  },\n  pt: <ThfPageDetailLiterals> {\n    back: 'Voltar',\n    edit: 'Editar',\n    remove: 'Remover'\n  }\n};\n\n/**\n * @description\n *\n * O componente **thf-page-detail** Ã© utilizado como container principal para a tela de detalhamento de um registro.\n * Por padrÃ£o possui 3 aÃ§Ãµes, cada aÃ§Ã£o na tela executa uma funÃ§Ã£o no componente que estÃ¡ utilizando o thf-page-detail,\n * sÃ£o elas:\n *  - Voltar (funÃ§Ã£o: back);\n *  - Editar (funÃ§Ã£o: edit);\n *  - Remover (funÃ§Ã£o: remove);\n *\n * Caso nÃ£o estiver implementado alguma funÃ§Ã£o, listado anteriormente, o mesmo nÃ£o serÃ¡ apresentado.\n */\nexport class ThfPageDetailBaseComponent {\n\n  private _literals: ThfPageDetailLiterals;\n  private _title: string;\n\n  @ViewChild(ThfPageContentComponent, { static: true }) thfPageContent: ThfPageContentComponent;\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('t-breadcrumb') breadcrumb: ThfBreadcrumb;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `thf-page-detail`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: ThfPageDetailLiterals = {\n   *    edit: 'EdiÃ§Ã£o',\n   *    remove: 'ExclusÃ£o',\n   *    back: 'Menu'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: ThfPageDetailLiterals = {\n   *    remove: 'Excluir registro permanentemente'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <thf-page-detail\n   *   [t-literals]=\"customLiterals\">\n   * </thf-page-detail>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('t-literals') set literals(value: ThfPageDetailLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfPageDetailLiteralsDefault[thfLocaleDefault],\n        ...thfPageDetailLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = thfPageDetailLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || thfPageDetailLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('t-title') set title(title: string) {\n    this._title = title;\n    this.thfPageContent.recalculateHeaderSize();\n  }\n\n  get title() {\n    return this._title;\n  }\n\n}\n","/**\n * @description Verifica se existe a funÃ§Ã£o dentro do contexto.\n *\n * @param action Nome da funÃ§Ã£o que serÃ¡ verificada a existÃªncia no parentContext.\n *\n * @param parentContext Contexto da qual a funÃ§Ã£o serÃ¡ verificada.\n */\nexport function hasAction(action: string, parentContext: any): boolean {\n  return parentContext && parentContext[action];\n}\n\n/**\n * @description Executa a funÃ§Ã£o cujo o nome foi passado por parÃ¢metro.\n *\n * @param action Nome da funÃ§Ã£o que serÃ¡ executada no parentContext.\n *\n * @param parentContext Contexto da qual a funÃ§Ã£o serÃ¡ executada.\n */\nexport function callAction(action: string, parentContext: any): void {\n  if (hasAction(action, parentContext)) {\n    parentContext[action]();\n  }\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { ThfPageDetailBaseComponent } from './thf-page-detail-base.component';\nimport { callAction, hasAction } from '../thf-page-util/thf-page-util';\n\n/**\n * @docsExtends ThfPageDetailBaseComponent\n *\n * @example\n *\n * <example name=\"thf-page-detail-basic\" title=\"Totvs Page Detail Basic\">\n *  <file name=\"sample-thf-page-detail-basic/sample-thf-page-detail-basic.component.html\"> </file>\n *  <file name=\"sample-thf-page-detail-basic/sample-thf-page-detail-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-page-detail-labs\" title=\"Totvs Page Detail Labs\">\n *  <file name=\"sample-thf-page-detail-labs/sample-thf-page-detail-labs.component.html\"> </file>\n *  <file name=\"sample-thf-page-detail-labs/sample-thf-page-detail-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-page-detail-user\" title=\"Totvs Page Detail - User\">\n *  <file name=\"sample-thf-page-detail-user/sample-thf-page-detail-user.component.html\"> </file>\n *  <file name=\"sample-thf-page-detail-user/sample-thf-page-detail-user.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-page-detail',\n  templateUrl: './thf-page-detail.component.html'\n})\nexport class ThfPageDetailComponent extends ThfPageDetailBaseComponent {\n\n  callActionFn = callAction;\n  hasActionFn = hasAction;\n  parentContext: ViewContainerRef;\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n    this.parentContext = viewRef['_view']['component'];\n  }\n\n  hasAnyAction(): boolean {\n    return this.hasActionFn('back', this.parentContext) ||\n      this.hasActionFn('edit', this.parentContext) ||\n      this.hasActionFn('remove', this.parentContext);\n  }\n\n  hasEditFn(property: string): string {\n    if (property === 'icon') {\n      return this.hasActionFn('edit', this.parentContext) ? '' : 'thf-icon-delete';\n    } else if (property === 'type') {\n      return this.hasActionFn('edit', this.parentContext) ? 'default' : 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  hasEditOrRemoveFn(property: string): string {\n    if (property === 'icon') {\n      return this.hasActionFn('edit', this.parentContext) || this.hasActionFn('remove', this.parentContext) ? '' : 'thf-icon-arrow-left';\n    } else if (property === 'type') {\n      return this.hasActionFn('edit', this.parentContext) || this.hasActionFn('remove', this.parentContext) ? 'default' : 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  hasPageHeader(): boolean {\n    return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n}\n","import { Input, ViewChild } from '@angular/core';\n\nimport { browserLanguage, thfLocaleDefault } from './../../../utils/util';\n\nimport { ThfBreadcrumb } from '../../thf-breadcrumb/thf-breadcrumb.interface';\nimport { ThfPageContentComponent } from '../thf-page-content/thf-page-content.component';\nimport { ThfPageEditLiterals } from './thf-page-edit-literals.interface';\n\nexport const thfPageEditLiteralsDefault = {\n  en: <ThfPageEditLiterals> {\n    cancel: 'Cancel',\n    save: 'Save',\n    saveNew: 'Save and New'\n  },\n  es: <ThfPageEditLiterals> {\n    cancel: 'Cancelar',\n    save: 'Guardar',\n    saveNew: 'Guardar y Nuevo'\n  },\n  pt: <ThfPageEditLiterals> {\n    cancel: 'Cancelar',\n    save: 'Salvar',\n    saveNew: 'Salvar e Novo'\n  }\n};\n\n/**\n * @description\n *\n * O componente **thf-page-edit** Ã© utilizado como container principal para tela de ediÃ§Ã£o ou adiÃ§Ã£o de um\n * registro.\n * Por padrÃ£o possui 3 aÃ§Ãµes, cada aÃ§Ã£o na tela executa uma funÃ§Ã£o no componente que estÃ¡ utilizando o thf-page-edit,\n * sÃ£o elas:\n *  - Cancelar (funÃ§Ã£o: cancel);\n *  - Salvar e Novo (funÃ§Ã£o: saveNew);\n *  - Salvar (funÃ§Ã£o: save);\n *\n * Caso nÃ£o estiver implementado alguma funÃ§Ã£o, listado anteriormente, o mesmo nÃ£o serÃ¡ apresentado.\n *\n * Os botÃµes \"Salvar\" e \"Salvar e Novo\" podem ser habilitados/desabilitados utilizando a propriedade t-disable-submit.\n * Esta propriedade pode ser utilizada para desabilitar os botÃµes caso exista um formulÃ¡rio invÃ¡lido na pÃ¡gina ou alguma\n * regra de negÃ³cio nÃ£o tenha sido atendida.\n */\nexport class ThfPageEditBaseComponent {\n\n  private _literals: ThfPageEditLiterals;\n  private _title: string;\n\n  @ViewChild(ThfPageContentComponent, { static: true }) thfPageContent: ThfPageContentComponent;\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('t-breadcrumb') breadcrumb?: ThfBreadcrumb;\n\n  /** Desabilita botÃµes de submissÃ£o (save e saveNew) */\n  @Input('t-disable-submit') disableSubmit?: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `thf-page-edit`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: ThfPageEditLiterals = {\n   *    cancel: 'Voltar',\n   *    save: 'Confirmar',\n   *    saveNew: 'Confirmar e criar um novo'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: ThfPageEditLiterals = {\n   *    cancel: 'Cancelar processo'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <thf-page-edit\n   *   [t-literals]=\"customLiterals\">\n   * </thf-page-edit>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('t-literals') set literals(value: ThfPageEditLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfPageEditLiteralsDefault[thfLocaleDefault],\n        ...thfPageEditLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = thfPageEditLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || thfPageEditLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('t-title') set title(title: string) {\n    this._title = title;\n    this.thfPageContent.recalculateHeaderSize();\n  }\n\n  get title() {\n    return this._title;\n  }\n\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { ThfPageEditBaseComponent } from './thf-page-edit-base.component';\nimport { callAction, hasAction } from '../thf-page-util/thf-page-util';\n\n/**\n * @docsExtends ThfPageEditBaseComponent\n *\n * @example\n *\n * <example name=\"thf-page-edit-basic\" title=\"Totvs Page Edit Basic\">\n *  <file name=\"sample-thf-page-edit-basic/sample-thf-page-edit-basic.component.html\"> </file>\n *  <file name=\"sample-thf-page-edit-basic/sample-thf-page-edit-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-page-edit-labs\" title=\"Totvs Page Edit Labs\">\n *  <file name=\"sample-thf-page-edit-labs/sample-thf-page-edit-labs.component.html\"> </file>\n *  <file name=\"sample-thf-page-edit-labs/sample-thf-page-edit-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-page-edit-user\" title=\"Totvs Page Edit - User\">\n *  <file name=\"sample-thf-page-edit-user/sample-thf-page-edit-user.component.html\"> </file>\n *  <file name=\"sample-thf-page-edit-user/sample-thf-page-edit-user.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-page-edit',\n  templateUrl: './thf-page-edit.component.html'\n})\nexport class ThfPageEditComponent extends ThfPageEditBaseComponent {\n  hasAction: Function = hasAction;\n  callAction: Function = callAction;\n\n  private parentContext: ViewContainerRef;\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n    this.parentContext = viewRef['_view']['component'];\n  }\n\n  getIcon(icon: string): string {\n    if (icon === 'cancel') {\n      return this.isPrimaryAction('cancel') ? 'thf-icon-close' : '';\n    }\n\n    if (icon === 'saveNew') {\n      return this.isPrimaryAction('saveNew') ? 'thf-icon-ok' : '';\n    }\n\n    return '';\n  }\n\n  getType(type: string): string {\n    const isCancelPrimaryAction = type === 'cancel' && this.isPrimaryAction('cancel');\n    const isSaveNewPrimaryAction = type === 'saveNew' && this.isPrimaryAction('saveNew');\n\n    return isCancelPrimaryAction || isSaveNewPrimaryAction ? 'primary' : 'default';\n  }\n\n  hasAnyAction(): boolean {\n    return hasAction('cancel', this.parentContext) || hasAction('saveNew', this.parentContext) || hasAction('save', this.parentContext);\n  }\n\n  hasPageHeader(): boolean {\n    return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private isPrimaryAction(action: string): boolean {\n    const hasSaveAction = !hasAction('save', this.parentContext);\n\n    if (action === 'saveNew') {\n      return hasSaveAction;\n    }\n\n    if (action === 'cancel') {\n      return !hasAction('saveNew', this.parentContext) && hasSaveAction;\n    }\n\n    return false;\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { ThfBreadcrumb } from '../../thf-breadcrumb/thf-breadcrumb.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **thf-page-header** Ã© responsÃ¡vel pelo tÃ­tulo da pÃ¡gina e container dos botÃµes de aÃ§Ãµes dos componentes\n * thf-page-list e thf-page-base.\n */\nexport class ThfPageHeaderBaseComponent {\n\n  private _breadcrumb: ThfBreadcrumb;\n\n  /** Objeto com propriedades do breadcrumb. */\n\n  @Input('t-breadcrumb') set breadcrumb(value: ThfBreadcrumb) {\n    this._breadcrumb = value;\n  }\n  get breadcrumb(): ThfBreadcrumb {\n    return this._breadcrumb;\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('t-title') title: string;\n\n}\n","import { Component } from '@angular/core';\n\nimport { ThfPageHeaderBaseComponent } from './thf-page-header-base.component';\n\n/**\n * @docsPrivate\n * @docsExtends ThfPageHeaderBaseComponent\n */\n@Component({\n  selector: 'thf-page-header',\n  templateUrl: './thf-page-header.component.html'\n})\nexport class ThfPageHeaderComponent extends ThfPageHeaderBaseComponent { }\n","import { Input } from '@angular/core';\n\nimport { browserLanguage, thfLocaleDefault } from './../../../utils/util';\n\nimport { ThfBreadcrumb } from '../../thf-breadcrumb/thf-breadcrumb.interface';\nimport { ThfDisclaimerGroup } from '../../thf-disclaimer-group/thf-disclaimer-group.interface';\nimport { ThfPageDefaultBaseComponent } from '../thf-page-default/thf-page-default-base.component';\nimport { ThfPageFilter } from './../thf-page-filter.interface';\nimport { ThfPageListLiterals } from './thf-page-list-literals.interface';\n\nexport const thfPageListLiteralsDefault = {\n  en: <ThfPageListLiterals> {\n    otherActions: 'Other actions'\n  },\n  es: <ThfPageListLiterals> {\n    otherActions: 'Otras acciones'\n  },\n  pt: <ThfPageListLiterals> {\n    otherActions: 'Outras aÃ§Ãµes'\n  }\n};\n\n/**\n * @description\n *\n * O componente `thf-page-list` Ã© utilizado como o container principal para as telas de listagem de dados,\n * podendo ser apresentado como lista ou tabela.\n *\n * Este componente possibilita realizar filtro dos dados, no qual permite que seja atribuido uma funÃ§Ã£o que serÃ¡ executada no momento\n * da filtragem. Este comportamento pode ser acionado tanto ao *click* do Ã­cone [thf-icon-search](/guides/icons)\n * quanto ao pressionar da tecla *ENTER* quando o foco estiver no campo de pesquisa.\n *\n * Para facilitar a manipulaÃ§Ã£o e visualizaÃ§Ã£o dos filtros aplicados, Ã© possÃ­vel tambÃ©m utilizar o componente\n * [`thf-disclaimer-group`](/documentation/thf-disclaimer-group).\n */\nexport abstract class ThfPageListBaseComponent extends ThfPageDefaultBaseComponent {\n\n  private _disclaimerGroup?: ThfDisclaimerGroup;\n  private _literals: ThfPageListLiterals;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `ThfBreadcrumb`.\n   */\n  @Input('t-breadcrumb') breadcrumb?: ThfBreadcrumb;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `ThfDisclaimerGroup`.\n   */\n  @Input('t-disclaimer-group') set disclaimerGroup(value: ThfDisclaimerGroup) {\n    if (!value) {\n      value = <any> {};\n    }\n\n    this._disclaimerGroup = value;\n  }\n\n  get disclaimerGroup(): ThfDisclaimerGroup {\n    return this._disclaimerGroup;\n  }\n\n  /**\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `ThfPageFilter`.\n   */\n  @Input('t-filter') filter: ThfPageFilter;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `thf-page-list`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: ThfPageListLiterals = {\n   *    otherActions: 'Mais aÃ§Ãµes'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: ThfPageListLiterals = {\n   *    otherActions: 'AÃ§Ãµes da pÃ¡gina'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <thf-page-list\n   *   [t-literals]=\"customLiterals\">\n   * </thf-page-list>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('t-literals') set literals(value: ThfPageListLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...thfPageListLiteralsDefault[thfLocaleDefault],\n        ...thfPageListLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = thfPageListLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || thfPageListLiteralsDefault[browserLanguage()];\n  }\n\n  protected resizeListener: () => void;\n\n}\n","import {\n  AfterContentInit, Component, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChange, ViewChild, ViewContainerRef\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { browserLanguage, callFunction, isTypeof } from '../../../utils/util';\nimport { ThfPageAction } from '../thf-page-action.interface';\nimport { ThfPageContentComponent } from '../thf-page-content/thf-page-content.component';\n\nimport { ThfPageListBaseComponent } from './thf-page-list-base.component';\n\n/**\n * @docsExtends ThfPageListBaseComponent\n *\n * @example\n *\n * <example name=\"thf-page-list-basic\" title=\"Totvs Page List Basic\">\n *  <file name=\"sample-thf-page-list-basic/sample-thf-page-list-basic.component.html\"> </file>\n *  <file name=\"sample-thf-page-list-basic/sample-thf-page-list-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-page-list-labs\" title=\"Totvs Page List Labs\">\n *  <file name=\"sample-thf-page-list-labs/sample-thf-page-list-labs.component.html\"> </file>\n *  <file name=\"sample-thf-page-list-labs/sample-thf-page-list-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-page-list-hiring-processes\" title=\"Totvs Page List - Hiring Processes\">\n *  <file name=\"sample-thf-page-list-hiring-processes/sample-thf-page-list-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-thf-page-list-hiring-processes/sample-thf-page-list-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-thf-page-list-hiring-processes/sample-thf-page-list-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-page-list',\n  templateUrl: './thf-page-list.component.html'\n})\nexport class ThfPageListComponent extends ThfPageListBaseComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {\n\n  advancedSearch: string;\n  dropdownActions: Array<ThfPageAction>;\n  isMobile: boolean;\n  limitPrimaryActions: number = 3;\n\n  private isRecalculate = true;\n  private maxWidthMobile: number = 480;\n  private parentRef: ViewContainerRef;\n\n  callFunction = callFunction;\n\n  @ViewChild(ThfPageContentComponent, { static: true }) thfPageContent: ThfPageContentComponent;\n\n  constructor(\n    viewRef: ViewContainerRef,\n    public renderer: Renderer2,\n    private router: Router) {\n\n    super();\n    this.parentRef = viewRef['_view']['component'];\n    this.initializeListeners();\n  }\n\n  ngOnInit(): void {\n    this.advancedSearch = this.initFixedLiterals();\n  }\n\n  ngAfterContentInit(): void {\n    this.setIsMobile();\n    this.setDropdownActions();\n  }\n\n  ngOnChanges(changes: {[propName: string]: SimpleChange}) {\n    this.setDropdownActions();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  actionIsDisabled(action: any) {\n    return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;\n  }\n\n  callAction(item: ThfPageAction): void {\n    if (item.url) {\n      this.router.navigate([item.url]);\n    } else if (item.action) {\n      callFunction(item.action, this.parentRef);\n    }\n  }\n\n  hasPageHeader(): boolean {\n    return  !!(this.title || (this.actions && this.actions.length) || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private onResize(event: Event): void {\n    const width = (event.target as Window).innerWidth;\n\n    if (width < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n      this.setDropdownActions();\n    } else {\n      this.isMobile = false;\n      this.limitPrimaryActions = 3;\n      this.setDropdownActions();\n    }\n  }\n\n  private setIsMobile(): void {\n    if (window.innerWidth < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n    }\n  }\n\n  setDropdownActions(): void {\n    if (this.actions.length > this.limitPrimaryActions) {\n      this.dropdownActions = this.actions.slice(this.limitPrimaryActions - 1);\n    }\n  }\n\n  callActionFilter(field: string): void {\n    this.callFunction(this.filter[field], this.parentRef);\n  }\n\n  initFixedLiterals() {\n    const locale = browserLanguage();\n\n    const literal = {\n      pt: {\n        advancedSearch: 'Busca avanÃ§ada'\n      },\n      en: {\n        advancedSearch: 'Advanced search'\n      },\n      es: {\n        advancedSearch: 'BÃºsqueda avanzada'\n      }\n    };\n\n    return literal[locale].advancedSearch;\n  }\n\n  onkeypress(key) {\n    if (key === 13) {\n      this.callActionFilter('action');\n    }\n  }\n\n  changeModel(newModel): void {\n    this.parentRef[this.filter.ngModel] = newModel;\n  }\n\n  // Recebe evento change do disclaimer e recalcula tela\n  onChangeDisclaimerGroup(disclaimers) {\n    if ((disclaimers && disclaimers.length && this.isRecalculate) || (disclaimers.length === 0 && !this.isRecalculate)) {\n      this.thfPageContent.recalculateHeaderSize();\n      this.isRecalculate = !this.isRecalculate;\n    }\n\n    if (this.disclaimerGroup && this.disclaimerGroup.change) {\n      this.disclaimerGroup.change(disclaimers);\n    }\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.onResize(event);\n    });\n  }\n\n  private removeListeners() {\n    this.resizeListener();\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ThfBreadcrumbModule } from '../thf-breadcrumb/thf-breadcrumb.module';\nimport { ThfButtonModule } from '../thf-button/thf-button.module';\nimport { ThfDisclaimerGroupModule } from '../thf-disclaimer-group/thf-disclaimer-group.module';\nimport { ThfDropdownModule } from '../thf-dropdown/thf-dropdown.module';\nimport { ThfFieldModule } from '../thf-field/thf-field.module';\nimport { ThfModalModule } from './../thf-modal/thf-modal.module';\nimport { ThfPageComponent } from './thf-page.component';\nimport { ThfPageContentComponent } from './thf-page-content/thf-page-content.component';\nimport { ThfPageDefaultComponent } from './thf-page-default/thf-page-default.component';\nimport { ThfPageDetailComponent } from './thf-page-detail/thf-page-detail.component';\nimport { ThfPageEditComponent } from './thf-page-edit/thf-page-edit.component';\nimport { ThfPageHeaderComponent } from './thf-page-header/thf-page-header.component';\nimport { ThfPageListComponent } from './thf-page-list/thf-page-list.component';\n\n/**\n * @description\n * MÃ³dulo dos componentes thf-page-default, thf-page-edit, thf-page-list, thf-page-login e thf-page-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ThfBreadcrumbModule,\n    ThfButtonModule,\n    ThfDisclaimerGroupModule,\n    ThfDropdownModule,\n    ThfFieldModule,\n    ThfModalModule\n  ],\n  declarations: [\n    ThfPageComponent,\n    ThfPageContentComponent,\n    ThfPageDefaultComponent,\n    ThfPageDetailComponent,\n    ThfPageEditComponent,\n    ThfPageHeaderComponent,\n    ThfPageListComponent\n  ],\n  exports: [\n    ThfPageDetailComponent,\n    ThfPageDefaultComponent,\n    ThfPageEditComponent,\n    ThfPageListComponent\n  ]\n})\nexport class ThfPageModule { }\n","import { ElementRef, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { THF_CONTROL_POSITIONS } from './../../services/thf-control-position/thf-control-position.constants';\n\nconst THF_POPOVER_DEFAULT_POSITION = 'right';\nconst THF_POPOVER_DEFAULT_TRIGGER = 'click';\nconst THF_POPOVER_TRIGGERS = ['click', 'hover'];\n\n/**\n * @description\n *\n * O componente `thf-popover` Ã© um container pequeno recomendado para incluir vÃ¡rios tipos de conteÃºdo como:\n * grÃ¡ficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.\n *\n * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva\n * [**thf-tooltip**](https://thf.totvs.com.br/documentation/thf-tooltip?view=doc).\n *\n * Para conteÃºdos maiores recomenda-se o uso do [**thf-modal**](https://thf.totvs.com.br/documentation/thf-modal?view=doc).\n *\n * Ele contÃ©m um tÃ­tulo e tambÃ©m Ã© possÃ­vel escolher as posiÃ§Ãµes do popover em relaÃ§Ã£o ao componente pai,\n * as posiÃ§Ãµes permitidas sÃ£o: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,\n * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.\n *\n * TambÃ©m Ã© possÃ­vel escolher entre os dois eventos que podem abrir o *popover*.\n * Os eventos permitidos sÃ£o: `click` e `hover`.\n *\n */\nexport class ThfPopoverBaseComponent {\n\n  // Controla se o popover fica oculto ou visÃ­vel, por padrÃ£o Ã© oculto.\n  isHidden: boolean = true;\n\n  private _hideArrow: boolean = false;\n  private _position?: string = THF_POPOVER_DEFAULT_POSITION;\n  private _trigger?: string = THF_POPOVER_DEFAULT_TRIGGER;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a seta do componente *popover*.\n   *\n   * @default `false`\n   */\n  @Input('t-hide-arrow') set hideArrow(value: boolean) {\n    this._hideArrow = convertToBoolean(value);\n  }\n\n  get hideArrow(): boolean {\n    return this._hideArrow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o que o thf-popover abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o \"right\" (direita), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o thf-popover no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o thf-popover no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o thf-popover no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o thf-popover abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o thf-popover abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o thf-popover abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o thf-popover no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o thf-popover no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o thf-popover no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o thf-popover acima do componente alvo.\n   * - `top-right`: Posiciona o thf-popover acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o thf-popover acima e Ã  esquerda do componente alvo.\n   *\n   *\n   * @default right\n   */\n  @Input('t-position') set position(value: string) {\n    this._position = THF_CONTROL_POSITIONS.includes(value) ? value : THF_POPOVER_DEFAULT_POSITION;\n  }\n\n  get position(): string {\n    return this._position;\n  }\n\n  /**\n   * @description\n   *\n   * ElementRef do componente de origem responsÃ¡vel por abrir o popover.\n   * Para utilizar o thf-popover deve-se colocar uma variÃ¡vel no componente que vai disparar o evento\n   * de abertura, exemplo:\n   *\n   * ```\n   * <thf-button\n   *   t-label=\"Open Popover\">\n   * </thf-button>\n   *\n   * <thf-popover\n   *   [t-origin]=\"thfButton\"\n   *   [t-title]=\"Totvs Popover\">\n   * </thf-popover>\n   * ```\n   *\n   * TambÃ©m deve-se criar um ViewChild para cada popover, passando como referÃªncia o elemento do\n   * HTML que irÃ¡ disparar o evento. Exemplo:\n   *\n   * ```\n   * @ViewChild(ThfButtonComponent, {read: ElementRef}) thfButton: ThfButtonComponent;\n   * ```\n   */\n  @Input('t-target') target: ElementRef;\n\n  /** TÃ­tulo do popover. */\n  @Input('t-title') title?: string;\n\n  /**\n   * @description\n   *\n   * Define o evento que abrirÃ¡ o thf-popover.\n   *\n   * Valores vÃ¡lidos:\n   *  - `click`: Abre ao clicar no componente alvo.\n   *  - `hover`: Abre ao passar o mouse sobre o componente alvo.\n   *\n   * @default click\n   * @optional\n   */\n  @Input('t-trigger') set trigger(value: string) {\n    this._trigger = THF_POPOVER_TRIGGERS.includes(value) ? value : THF_POPOVER_DEFAULT_TRIGGER;\n  }\n\n  get trigger(): string {\n    return this._trigger;\n  }\n\n  protected clickoutListener: () => void;\n  protected mouseEnterListener: () => void;\n  protected mouseLeaveListener: () => void;\n  protected resizeListener: () => void;\n\n}\n","import { AfterViewInit, Component, ElementRef, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { ThfControlPositionService } from './../../services/thf-control-position/thf-control-position.service';\nimport { ThfPopoverBaseComponent } from './thf-popover-base.component';\n\n/**\n *\n * @docsExtends ThfPopoverBaseComponent\n *\n * @example\n *\n * <example name=\"thf-popover-basic\" title=\"Totvs Popover Basic\">\n *   <file name=\"sample-thf-popover-basic/sample-thf-popover-basic.component.html\"> </file>\n *   <file name=\"sample-thf-popover-basic/sample-thf-popover-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-popover-labs\" title=\"Totvs Popover Labs\">\n *   <file name=\"sample-thf-popover-labs/sample-thf-popover-labs.component.html\"> </file>\n *   <file name=\"sample-thf-popover-labs/sample-thf-popover-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-popover-credit-card\" title=\"Totvs Popover - Credit Card\">\n *   <file name=\"sample-thf-popover-credit-card/sample-thf-popover-credit-card.component.html\"> </file>\n *   <file name=\"sample-thf-popover-credit-card/sample-thf-popover-credit-card.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-popover',\n  templateUrl: './thf-popover.component.html',\n  providers: [ ThfControlPositionService ]\n})\nexport class ThfPopoverComponent extends ThfPopoverBaseComponent implements AfterViewInit, OnDestroy {\n\n  arrowDirection = 'left';\n  timeoutResize;\n\n  eventListenerFunction: () => void;\n\n  @ViewChild('popoverElement', {read: ElementRef, static: true }) popoverElement: ElementRef;\n\n  constructor(private renderer: Renderer2, private thfControlPosition: ThfControlPositionService) {\n    super();\n  }\n\n  ngAfterViewInit(): void {\n    this.initEventListenerFunction();\n\n    const popoverOffset = 8;\n    this.thfControlPosition.setElements(this.popoverElement.nativeElement, popoverOffset, this.target);\n\n    this.setRendererListenInit();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  close(): void {\n    this.isHidden = true;\n  }\n\n  debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.setPopoverPosition();\n    }, 200);\n  }\n\n  open(): void {\n    this.addScrollEventListener();\n\n    this.isHidden = false;\n    this.setOpacity(0);\n\n    setTimeout(() => {\n      this.thfControlPosition.adjustPosition(this.position);\n      this.arrowDirection = this.thfControlPosition.getArrowDirection();\n      this.setOpacity(1);\n    });\n  }\n\n  setOpacity(value: number): void {\n    this.popoverElement.nativeElement.style.opacity = value;\n  }\n\n  setPopoverPosition() {\n    this.thfControlPosition.adjustPosition(this.position);\n    this.arrowDirection = this.thfControlPosition.getArrowDirection();\n  }\n\n  setRendererListenInit() {\n\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: Event) => {\n      if (!this.isHidden) {\n        this.debounceResize();\n      }\n    });\n\n    if (this.trigger === 'hover') {\n      this.mouseEnterListener = this.renderer.listen(this.target.nativeElement, 'mouseenter', (event: MouseEvent) => {\n        this.open();\n      });\n\n      this.mouseLeaveListener = this.renderer.listen(this.target.nativeElement, 'mouseleave', (event: MouseEvent) => {\n        this.close();\n      });\n    } else {\n      this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n        this.togglePopup(event);\n      });\n    }\n  }\n\n  togglePopup(event): void {\n    if (!this.isHidden && !this.popoverElement.nativeElement.contains(event.target) &&\n    !this.target.nativeElement.contains(event.target)) {\n\n      this.close();\n    } else if (this.target.nativeElement.contains(event.target)) {\n\n      this.popoverElement.nativeElement.hidden ? this.open() : this.close();\n    }\n  }\n\n  private addScrollEventListener() {\n    window.addEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private initEventListenerFunction() {\n    this.eventListenerFunction = () => {\n        this.setPopoverPosition();\n    };\n  }\n\n  private removeListeners() {\n\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n    if (this.mouseEnterListener) {\n      this.mouseEnterListener();\n    }\n    if (this.mouseLeaveListener) {\n      this.mouseLeaveListener();\n    }\n\n    this.resizeListener();\n\n    window.removeEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfPopoverComponent } from './thf-popover.component';\n\n/**\n * @description\n * MÃ³dulo do componente thf-popover.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ThfPopoverComponent],\n  exports: [ThfPopoverComponent]\n})\nexport class ThfPopoverModule { }\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para o conjunto de cÃ­rculos que faz a passagem de itens do `thf-slide`.\n */\n@Component({\n  selector: 'thf-slide-circles',\n  templateUrl: './thf-slide-circles.component.html'\n})\nexport class ThfSlideCirclesComponent {\n\n  /** Index do slide atual. */\n  @Input('t-current-slide-index') currentSlideIndex: number;\n\n  /** Itens do slide. */\n  @Input('t-items') items: Array<any>;\n\n  /** Evento emitido ao clicar em um controle. */\n  @Output('t-click') click = new EventEmitter<any>();\n}\n","import { Input } from '@angular/core';\n\nimport { convertToInt } from './../../utils/util';\n\nimport { ThfSlideItem } from './interfaces/thf-slide-item.interface';\n\nconst thfSlideIntervalDefault = 4000;\n\n/**\n * @description\n *\n * Componente de slide para visualizaÃ§Ã£o e controle de elementos de forma cÃ­clica. Exibe um conjunto de imagens ou dados que permitem\n * customizar sua visualizaÃ§Ã£o utilizando a diretiva **[t-slide-content-template](/documentation/thf-slide-content-template)**.\n *\n * #### Boas prÃ¡ticas:\n * - Utilizar imagens no slide, mesmo quando possui conteÃºdo personalizado.\n * - Evitar utilizar apenas um slide isolado, utilize pelo menos dois.\n * - Evitar utilizar mais de 5 slides, pois a ideia do componente Ã© destacar apenas informaÃ§Ãµes importantes.\n */\nexport abstract class ThfSlideBaseComponent {\n\n  private _interval: number = thfSlideIntervalDefault;\n  private _height?: number;\n  private _slides: Array<ThfSlideItem | string | any>;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Altura do thf-slide, caso seja slide com template customizado, nÃ£o assume o valor `default`.\n   *\n   * @default `336`\n   */\n  @Input('t-height') set height(value: number) {\n    this._height = convertToInt(value);\n    this.setSlideHeight(this.height);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor em milissegundos que define o tempo de troca dos slides, caso o valor seja menor que `1000` os slides nÃ£o trocam automaticamente.\n   *\n   * @default `4000`\n   */\n  @Input('t-interval') set interval(value: number) {\n    this._interval = convertToInt(value, thfSlideIntervalDefault);\n    this._interval >= 1000 ? this.startInterval() : this.cancelInterval();\n  }\n\n  get interval(): number {\n    return this._interval;\n  }\n\n  /**\n   * @description\n   *\n   * Array de imagens ou dados para o slide, pode ser de trÃªs formas:\n   *\n   * - Array implementando objetos da interface `ThfSlideItem`:\n   * ```\n   * [{ image: '/assets/image-1', action: 'imageClick.bind(this)'}, { image: '/assets/image-2' }]\n   * ```\n   * - Array de `strings` com os caminhos das imagens:\n   * ```\n   * ['/assets/image-1', '/assets/image-2' ]\n   * ```\n   * - Array com lista de itens (para utilizar template):\n   * ```\n   * [{ label: '1', img: '/assets/image-1' }, { label: '2', img: '/assets/image-1' }]\n   * ```\n   *\n   * > As setas de navegaÃ§Ã£o e o controle com cÃ­rculos apenas serÃ£o renderizados caso possua mais de um slide.\n   */\n  @Input('t-slides') set slides(value: Array<ThfSlideItem | string | any>) {\n    this._slides = value;\n    this.setSlideItems(value);\n\n    if (value && value.length) {\n      this.startSlide();\n    }\n  }\n\n  get slides(): Array<ThfSlideItem | string | any> {\n    return this._slides;\n  }\n\n  abstract setSlideHeight(height: number): void;\n\n  protected abstract cancelInterval(): void;\n  protected abstract setSlideItems(value: Array<ThfSlideItem | string | any>): void;\n  protected abstract startSlide(): void;\n  protected abstract startInterval(): void;\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy ThfSlideComponent\n *\n * @description\n *\n * Esta diretiva permite a customizaÃ§Ã£o de um slide.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item do slide corrente.\n *  - Ãndice: `index` determina o Ã­ndice do slide corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <thf-slide\n *   [t-slides]=\"[{ id: 1, name: 'Register', email: 'register@totvs.com' }]\">\n *\n *   <ng-template t-slide-content-template let-item let-code=\"index\">\n *     <div class=\"thf-row\">\n *       <thf-info class=\"thf-md-6\" t-label=\"Code\" [t-value]=\"item.id\"></thf-info>\n *       <thf-info class=\"thf-md-6\" t-label=\"Email\" [t-value]=\"item.email\"></thf-info>\n *     </div>\n *   </ng-template>\n *\n * </thf-slide>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <thf-slide\n *    [t-slides]=\"[{ id: 1, name: 'Register', email: 'register@totvs.com' }]\">\n *\n *    <div *t-slide-content-template=\"let item, let i=index\" class=\"thf-row\">\n *      <thf-info class=\"thf-md-12\" t-label=\"Email\" [t-value]=\"item.email\"></thf-info>\n *    </div>\n * </thf-slide>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[t-slide-content-template]'\n})\nexport class ThfSlideContentTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n}\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\n\nimport { isIEOrEdge } from '../../../utils/util';\n\nimport { ThfSlideContentTemplateDirective } from '../directives/thf-slide-content-template.directive';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para cada item do thf-slide.\n */\n@Component({\n  selector: 'thf-slide-item',\n  templateUrl: './thf-slide-item.component.html'\n})\nexport class ThfSlideItemComponent {\n\n  @ViewChild('slideItem', { static: true }) itemElement: ElementRef;\n\n  isIEOrEdge: any = isIEOrEdge();\n\n  /** AÃ§Ã£o executada ao clicar em uma imagem */\n  @Input('t-action') action: Function;\n\n  /** Texto alternativo quando a imagem nÃ£o Ã© encontrada */\n  @Input('t-alt') alt: string;\n\n  /** Dados para o template customizado */\n  @Input('t-data') data: Array<any>;\n\n  /** Caminho da imagem */\n  @Input('t-image') image: string;\n\n  /** Altura da imagem */\n  @Input('t-image-height') imageHeight: number;\n\n  /** Template customizado */\n  @Input('t-template') template: ThfSlideContentTemplateDirective;\n\n  /** Link executado ao clicar em uma imagem */\n  @Input('t-link') link: string;\n\n  setLinkType() {\n    if (!this.template && this.link) {\n      return this.link.startsWith('http') ? 'externalLink' : 'internalLink';\n    }\n\n    return 'noLink';\n  }\n\n}\n","import { Component, ContentChild, DoCheck , ElementRef, HostListener, QueryList, ViewChild, ViewChildren } from '@angular/core';\n\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, keyframes, style } from '@angular/animations';\n\nimport { ThfSlideBaseComponent } from './thf-slide-base.component';\nimport { ThfSlideContentTemplateDirective } from './directives/thf-slide-content-template.directive';\nimport { ThfSlideItem } from './interfaces/thf-slide-item.interface';\nimport { ThfSlideItemComponent } from './thf-slide-item/thf-slide-item.component';\n\nconst thfSlideDefaultHeight = 336;\nconst thfSlideIntervalMin = 1000;\nconst thfSlideMinHeight = 192;\nconst thfSlideTiming = '250ms ease';\n\n/**\n * @docsExtends ThfSlideBaseComponent\n *\n * @example\n * <example name=\"thf-slide-basic\" title=\"Totvs Slide Basic\">\n *   <file name=\"sample-thf-slide-basic/sample-thf-slide-basic.component.html\"> </file>\n *   <file name=\"sample-thf-slide-basic/sample-thf-slide-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-slide-labs\" title=\"Totvs Slide Labs\">\n *   <file name=\"sample-thf-slide-labs/sample-thf-slide-labs.component.html\"> </file>\n *   <file name=\"sample-thf-slide-labs/sample-thf-slide-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-slide-useful-articles\" title=\"Totvs Slide - Useful articles\">\n *   <file name=\"sample-thf-slide-useful-articles/sample-thf-slide-useful-articles.component.html\"> </file>\n *   <file name=\"sample-thf-slide-useful-articles/sample-thf-slide-useful-articles.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-slide-landscapes\" title=\"Totvs Slide - Landscapes\">\n *   <file name=\"sample-thf-slide-landscapes/sample-thf-slide-landscapes.component.html\"> </file>\n *   <file name=\"sample-thf-slide-landscapes/sample-thf-slide-landscapes.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-slide',\n  templateUrl: './thf-slide.component.html',\n})\nexport class ThfSlideComponent extends ThfSlideBaseComponent implements DoCheck {\n\n  private isLoaded: boolean = false;\n  private player: AnimationPlayer;\n  private setInterval: any;\n\n  private get hasElements() {\n    return !!this.slide.nativeElement.offsetWidth && !!this.itemsElements && !!this.itemsElements.length;\n  }\n\n  private get isImageSlide() {\n    return !this.slideContentTemplate;\n  }\n\n  private get offset() {\n    return this.currentSlideIndex * this.slideItemWidth;\n  }\n\n  get hasSlides() {\n    return !!this.slides && !!this.slides.length;\n  }\n\n  currentSlideIndex = 0;\n  imageHeight: number;\n  slideItems: Array<ThfSlideItem | any> = [];\n  slideItemWidth: number;\n\n  @ContentChild(ThfSlideContentTemplateDirective, { static: true }) slideContentTemplate: ThfSlideContentTemplateDirective;\n\n  @ViewChild('slide', { static: true }) private slide: ElementRef;\n\n  @ViewChildren(ThfSlideItemComponent) private itemsElements: QueryList<ThfSlideItemComponent>;\n\n  @HostListener('window:resize') onResize() {\n    if (this.slide) {\n      this.setSlideItemWidth();\n      this.goToItem(this.currentSlideIndex);\n    }\n  }\n\n  constructor(private builder: AnimationBuilder) {\n    super();\n  }\n\n  ngDoCheck() {\n\n    if (!this.isLoaded && this.hasElements) {\n\n      this.setSlideItemWidth();\n      this.isLoaded = true;\n\n      if (this.hasSlides) {\n        this.startSlide();\n      }\n    }\n  }\n\n  goToItem(index: number) {\n\n    if (this.interval > thfSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.currentSlideIndex = index;\n    this.animate(this.offset);\n  }\n\n  nextControl() {\n\n    if (this.interval > thfSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.next();\n  }\n\n  next() {\n    if (this.currentSlideIndex + 1 === this.slideItems.length) {\n      this.currentSlideIndex = 0;\n      this.animate(0);\n      return;\n    }\n    this.currentSlideIndex = (this.currentSlideIndex + 1) % this.slideItems.length;\n    this.animate(this.offset);\n  }\n\n  previous() {\n    if (this.currentSlideIndex === 0) {\n      this.currentSlideIndex = this.slideItems.length - 1;\n      this.animate(this.offset);\n      return;\n    }\n    this.currentSlideIndex = ((this.currentSlideIndex - 1) + this.slideItems.length) % this.slideItems.length;\n    this.animate(this.offset);\n  }\n\n  previousControl() {\n\n    if (this.interval > thfSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.previous();\n  }\n\n  setSlideHeight(height: number) {\n    this.setHeight(height);\n  }\n\n  private animate(offset: number) {\n    if (this.hasElements) {\n      const animation: AnimationFactory = this.buildTransitionAnimation(offset);\n\n      this.player = animation.create(this.slide.nativeElement);\n      this.player.play();\n    }\n  }\n\n  private buildTransitionAnimation(offset: number) {\n    return this.builder.build([\n      animate(\n        thfSlideTiming,\n        keyframes([style({ transform: `translateX(-${offset}px)` })])\n      )\n    ]);\n  }\n\n  private createArrayForTemplate(slides: Array<any>) {\n    this.slideItems = [...slides];\n  }\n\n  private createArrayFromSlides(slides: Array<ThfSlideItem | string | any>) {\n    const isStringArray = slides.every(item => typeof item === 'string');\n\n    if (isStringArray) {\n      slides.forEach(element => this.slideItems.push({ image: `${element}` }));\n    } else {\n      this.slideItems = [...<Array<ThfSlideItem>>slides];\n    }\n  }\n\n  private setDefaultHeight(height: number) {\n    if (height && height <= thfSlideMinHeight || !height && this.isImageSlide) {\n      this.slide.nativeElement.style.height = `${thfSlideDefaultHeight}px`;\n      this.imageHeight = thfSlideDefaultHeight;\n    } else {\n      this.imageHeight = undefined;\n    }\n  }\n\n  private setHeight(height: number) {\n    if (height && height > thfSlideMinHeight) {\n      this.slide.nativeElement.style.height = `${height}px`;\n      this.imageHeight = height;\n    } else {\n      this.setDefaultHeight(height);\n    }\n  }\n\n  private setSlideItemWidth() {\n    if (this.hasElements) {\n      this.slideItemWidth = this.itemsElements.first.itemElement.nativeElement.getBoundingClientRect().width;\n    }\n  }\n\n  protected cancelInterval() {\n    clearInterval(this.setInterval);\n  }\n\n  protected setSlideItems(slides: Array<ThfSlideItem | string | any>) {\n\n    if (this.hasSlides) {\n      this.slideContentTemplate ? this.createArrayForTemplate(slides) : this.createArrayFromSlides(slides);\n    } else {\n      this.slideItems = [];\n      this.cancelInterval();\n    }\n  }\n\n  protected startSlide() {\n\n    this.setSlideHeight(this.height);\n\n    if (this.interval > thfSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.currentSlideIndex = 0;\n  }\n\n  protected startInterval() {\n\n    if (this.setInterval) {\n      this.cancelInterval();\n    }\n\n    this.setInterval = this.hasSlides && this.hasElements ? setInterval(() => { this.next(); }, this.interval) : undefined;\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a seta que controla a passagem de itens do `thf-slide`.\n */\n@Component({\n  selector: 'thf-slide-control',\n  templateUrl: './thf-slide-control.component.html'\n})\nexport class ThfSlideControlComponent {\n\n  /** Tipo de controle que aceita os valores: 'previous' e 'next'. */\n  @Input('t-control') control: string;\n\n  /** Evento emitido ao clicar em um controle. */\n  @Output('t-click') click = new EventEmitter<any>();\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ThfContainerModule } from '../thf-container/thf-container.module';\n\nimport { ThfSlideCirclesComponent } from './thf-slide-circles/thf-slide-circles.component';\nimport { ThfSlideComponent } from './thf-slide.component';\nimport { ThfSlideContentTemplateDirective } from './directives/thf-slide-content-template.directive';\nimport { ThfSlideControlComponent } from './thf-slide-control/thf-slide-control.component';\nimport { ThfSlideItemComponent } from './thf-slide-item/thf-slide-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `thf-slide`.\n *\n * > Para o correto funcionamento do componente `thf-slide`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { ThfModule } from '@totvs/thf-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     ThfModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ThfContainerModule\n  ],\n  declarations: [\n    ThfSlideCirclesComponent,\n    ThfSlideComponent,\n    ThfSlideControlComponent,\n    ThfSlideContentTemplateDirective,\n    ThfSlideItemComponent,\n  ],\n  exports: [\n    ThfSlideComponent,\n    ThfSlideContentTemplateDirective\n  ],\n  providers: [],\n  schemas: []\n})\nexport class ThfSlideModule { }\n","/**\n * @usedBy ThfStepperComponent\n *\n * @description\n *\n * <a id=\"stepperStatus\"></a>\n *\n * *Enums* para os status do `thf-stepper` quando utilizada a propriedade `t-steps`.\n */\nexport enum ThfStepperStatus {\n\n  /** Define o estado do *step* como ativo. */\n  Active = 'active',\n\n  /** Define o estado do *step* como padrÃ£o. */\n  Default = 'default',\n\n  /** Define o estado do *step* como desabilitado. */\n  Disabled = 'disabled',\n\n  /** Define o estado do *step* como concluÃ­do. */\n  Done = 'done',\n\n  /** Define o estado do *step* com erro. */\n  Error = 'error'\n\n}\n","import { AfterContentInit, Component, ElementRef, Input } from '@angular/core';\n\nimport { uuid } from '../../../utils/util';\n\nimport { ThfStepperStatus } from '../enums/thf-stepper-status.enum';\n\n/**\n * @description\n *\n * O componente `thf-step` Ã© utilizado para envolver e renderizar o conteÃºdo de um passo (*step*) do `thf-stepper`, por exemplo:\n *\n * ```\n * <thf-stepper>\n *\n *    <thf-step t-label=\"EndereÃ§o\">\n *\n *        <!-- ConteÃºdo referente ao endereÃ§o -->\n *\n *    </thf-step>\n *\n *    <thf-step t-label=\"Pagamento\">\n *\n *        <!-- ConteÃºdo referente ao pagamento -->\n *\n *    </thf-step>\n *\n *  </thf-stepper>\n * ```\n *\n * A renderizaÃ§Ã£o do conteÃºdo envolvido na tela e o controle dos status sÃ£o feitos automaticamente. No qual, o primeiro\n * `thf-step` encontrado serÃ¡ colocado como ativo, o prÃ³ximo fica com o status *default* e os demais ficam\n * desabilitados (*disabled*).\n *\n * Ao clicar no `thf-step` que estÃ¡ com o status *default*, o que estÃ¡ ativo ficarÃ¡ com o\n * status de concluÃ­do (*done*) e o prÃ³ximo que estava desabilitado ficarÃ¡ com o status *default* e o restante permanecerÃ¡\n * com o status desabilitado.\n *\n * > Ao utilizar o `thf-step`, o componente `thf-stepper` funcionarÃ¡ de forma sequencial, ou seja, nÃ£o serÃ¡ possÃ­vel\n * pular para outro `thf-step` que esteja com o status igual a desabilitado (*disabled*).\n *\n * Acesse a [documentaÃ§Ã£o do `thf-stepper`](/documentation/thf-stepper) para ter mais informaÃ§Ãµes sobre o seu funcionamento\n * e exemplos de uso.\n */\n@Component({\n  selector: 'thf-step',\n  templateUrl: 'thf-step.component.html'\n})\nexport class ThfStepComponent implements AfterContentInit {\n\n  private _status?: ThfStepperStatus = ThfStepperStatus.Disabled;\n\n  // ID do step\n  id?: string = uuid();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o chamada quando o prÃ³ximo *step* for clicado ou quando o mÃ©todo `ThfStepperComponent.next()` for chamado.\n   * Ao retornar `true` define que esse *step* ficarÃ¡ ativo e o atual como concluÃ­do (*done*).\n   *\n   * Ao ser disparada, a mesma receberÃ¡ por parÃ¢metro o `ThfStepComponent` atual.\n   *\n   * O contexto da funÃ§Ã£o que serÃ¡ chamada, serÃ¡ o mesmo que o do `ThfStepComponent`, entÃ£o para poder alterar\n   * para o contexto do componente que o estÃ¡ utilizando, pode ser utilizado a propriedade `bind` do Javascript.\n   * Por exemplo, para a funÃ§Ã£o `validate`:\n   *\n   * ```\n   * <thf-step t-label=\"Step 1\" [t-can-active-next-step]=\"validate.bind(this)\">\n   * ...\n   * </thf-step>\n   * ```\n   */\n  @Input('t-can-active-next-step') canActiveNextStep: Function;\n\n  /** TÃ­tulo que serÃ¡ exibido descrevendo o passo (*step*). */\n  @Input('t-label') label: string;\n\n  // Estado de exibiÃ§Ã£o do `thf-step`.\n  @Input('t-status') set status(status: ThfStepperStatus) {\n    this._status = status;\n\n    this.setDisplayOnActiveOrError();\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngAfterContentInit() {\n    this.setDisplayOnActiveOrError();\n  }\n\n  protected setDisplayOnActiveOrError() {\n    this.elementRef.nativeElement.style.display =\n      (this.status === ThfStepperStatus.Active || this.status === ThfStepperStatus.Error) ? '' : 'none';\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ThfStepperStatus } from '../enums/thf-stepper-status.enum';\n\nconst thfMediumStepSize = 32;\nconst thfLargeStepSize = 48;\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir os cÃ­rculos dos *steps*.\n */\n@Component({\n  selector: 'thf-stepper-circle',\n  templateUrl: './thf-stepper-circle.component.html'\n})\nexport class ThfStepperCircleComponent {\n\n  // ConteÃºdo que irÃ¡ aparecer no cÃ­rculo do *step*.\n  @Input('t-content') content: any;\n\n  // Define se serÃ£o exibidos Ã­cones no lugar de nÃºmeros nos steps.\n  @Input('t-icons') icons: boolean;\n\n  // Tamanho do *step-circle*.\n  @Input('t-size') size: number;\n\n  // Status do *step*.\n  @Input('t-status') status: string;\n\n  get isActive(): boolean {\n    return this.status === ThfStepperStatus.Active;\n  }\n\n  get isDefault(): boolean {\n    return this.status === ThfStepperStatus.Default;\n  }\n\n  get isDisabled(): boolean {\n    return this.status === ThfStepperStatus.Disabled;\n  }\n\n  get isDone(): boolean {\n    return this.status === ThfStepperStatus.Done;\n  }\n\n  get isError(): boolean {\n    return this.status === ThfStepperStatus.Error;\n  }\n\n  get isLargeStep(): boolean {\n    return this.size >= thfLargeStepSize;\n  }\n\n  get isMediumStep(): boolean {\n    return this.size >= thfMediumStepSize && !this.isLargeStep;\n  }\n\n}\n","/**\n *\n * @usedBy ThfStepperComponent\n *\n * @description\n *\n * <a id=\"stepperOrientation\"></a>\n *\n * *Enums* para definiÃ§Ã£o da orientaÃ§Ã£o do `thf-stepper`.\n */\nexport enum ThfStepperOrientation {\n\n  /** Define a exibiÃ§Ã£o do componente na horizontal. */\n  Horizontal = 'horizontal',\n\n  /** Define a exibiÃ§Ã£o do componente na vertical. */\n  Vertical = 'vertical'\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { ThfStepComponent } from './thf-step/thf-step.component';\nimport { ThfStepperItem } from './thf-stepper-item.interface';\nimport { ThfStepperOrientation } from './enums/thf-stepper-orientation.enum';\nimport { ThfStepperStatus } from './enums/thf-stepper-status.enum';\n\nconst thfStepperOrientationDefault = ThfStepperOrientation.Horizontal;\n\n/**\n * @description\n *\n * O `thf-stepper` permite que um processo seja dividido em passos para que o usuÃ¡rio o realize\n * mais facilmente.\n *\n * Existem duas formas de utilizaÃ§Ã£o:\n *\n * 1 - Usando o componente [**thf-step**](/documentation/thf-step) para renderizar e descrever os passos.\n *\n * 2 - AtravÃ©s da propriedade `t-steps` para descrever os passos do processo, sendo responsabilidade do desenvolvedor o controle\n * de renderizaÃ§Ã£o do que serÃ¡ exibido a cada *step* ativo.\n *\n * AtravÃ©s de suas propriedades, Ã© possÃ­vel definir se sua orientaÃ§Ã£o serÃ¡ horizontal ou vertical,\n * alÃ©m da possibilidade de aumentar o tamanho dos *steps*.\n *\n * TambÃ©m Ã© possÃ­vel navegar entre os *steps* atravÃ©s do teclado utilizando a tecla *tab* e, para ativar o *step* em foco basta\n * pressionar a tecla *enter*. AlÃ©m disso, Ã© possÃ­vel ativar a exibiÃ§Ã£o de Ã­cones no lugar de nÃºmeros nos *steps* atravÃ©s da\n * propriedade [`t-step-icons`](/documentation/thf-stepper#stepIconsProperty).\n *\n * #### Utilizando os mÃ©todos do componente:\n *\n * Para acessar os mÃ©todos do componente Ã© necessÃ¡rio ter a referÃªncia do mesmo.\n *\n * Por exemplo, utilizando um [**ViewChild**](https://angular.io/api/core/ViewChild):\n *\n * ```\n * @ViewChild(ThfStepperComponent) thfStepperComponent: ThfStepperComponent;\n * ```\n *\n * E para acessar o mÃ©todo:\n *\n * ```\n * thfStepperComponent.next();\n * ```\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite `labels` extensos que quebram o layout do `thf-stepper`, use `labels` diretos, curtos e intuitivos.\n * - Utilize apenas um `thf-stepper` por pÃ¡gina.\n */\nexport class ThfStepperBaseComponent {\n\n  private _orientation?: ThfStepperOrientation = thfStepperOrientationDefault;\n  private _sequential?: boolean = true;\n  private _step: number = 1;\n  private _steps: Array<ThfStepperItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a orientaÃ§Ã£o de exibiÃ§Ã£o do `thf-stepper`.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* [ThfStepperOrientation](documentation/thf-stepper#stepperOrientation).\n   *\n   * @default `ThfStepperOrientation.Horizontal`\n   */\n  @Input('t-orientation') set orientation(value: ThfStepperOrientation) {\n    this._orientation = (<any>Object).values(ThfStepperOrientation).includes(value) ? value : thfStepperOrientationDefault;\n  }\n\n  get orientation(): ThfStepperOrientation {\n    return this._orientation;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Controla o passo atual do `thf-stepper`.\n   *\n   * > Ao utilizar esta propriedade e tambÃ©m utilizar o componente [**thf-step**](/documentation/thf-step),\n   * o valor desta propriedade serÃ¡ ignorada permanecendo a definiÃ§Ã£o do [**thf-step**](/documentation/thf-step).\n   *\n   * @default `1`\n   */\n  @Input('t-step') set step(step: number) {\n    if (step >= 1 && step <= this.steps.length) {\n      this._step = step;\n      this._steps[this._step - 1].status = ThfStepperStatus.Active;\n    }\n  }\n\n  get step(): number {\n    return this._step;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos itens do stepper. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio.\n   *\n   * > Ao utilizar esta propriedade e tambÃ©m utilizar o componente [**thf-step**](/documentation/thf-step),\n   * o valor desta propriedade serÃ¡ ignorada permanecendo a definiÃ§Ã£o do [**thf-step**](/documentation/thf-step).\n   */\n  @Input('t-steps') set steps(steps: Array<ThfStepperItem>) {\n    this._steps = Array.isArray(steps) ? steps : [];\n    this._steps.forEach(step => step.status = ThfStepperStatus.Default);\n    this.step = 1;\n  }\n\n  get steps(): Array<ThfStepperItem> {\n    return this._steps;\n  }\n\n  /**\n   *\n   * @optional\n   *\n   * @description\n   *\n   * <a id=\"stepIconsProperty\"></a>\n   *\n   * Habilita a exibiÃ§Ã£o de Ã­cone ao invÃ©s de nÃºmero no centro do cÃ­rculo dos *steps*.\n   *\n   * @default `false`\n   */\n  @Input('t-step-icons') stepIcons: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tamanho dos *steps* em *pixels*, possibilitando um maior destaque.\n   *\n   * O valor informado deve ser entre `24` e `64`.\n   *\n   * > Valores que nÃ£o se enquadrarem a esta regra serÃ£o ignorados, mantendo-se o valor *default*.\n   *\n   * @default `24`\n   */\n  @Input('t-step-size') stepSize: number;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se o `thf-stepper` serÃ¡ sequencial ou aleatÃ³rio.\n   *\n   * > Ao utilizar o componente [**thf-step**](/documentation/thf-step), o valor desta propriedade sempre serÃ¡ verdadeiro.\n   *\n   * @default `true`\n   */\n  @Input('t-sequential') set sequential(sequential: boolean) {\n    this._sequential = convertToBoolean(sequential);\n  }\n\n  get sequential(): boolean {\n    return this._sequential;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio mudar o passo do `thf-stepper`. */\n  @Output('t-change-step') onChangeStep = new EventEmitter<number | ThfStepComponent>();\n\n}\n","import { AfterContentInit, ChangeDetectorRef, Component, ContentChildren, QueryList } from '@angular/core';\n\nimport { ThfStepComponent } from './thf-step/thf-step.component';\nimport { ThfStepperBaseComponent } from './thf-stepper-base.component';\nimport { ThfStepperItem } from './thf-stepper-item.interface';\nimport { ThfStepperStatus } from './enums/thf-stepper-status.enum';\n\n/**\n * @docsExtends ThfStepperBaseComponent\n *\n * @example\n *\n * <example name=\"thf-stepper-basic\" title=\"Totvs Stepper Basic\">\n *  <file name=\"sample-thf-stepper-basic/sample-thf-stepper-basic.component.html\"> </file>\n *  <file name=\"sample-thf-stepper-basic/sample-thf-stepper-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-stepper-labs\" title=\"Totvs Stepper Labs\">\n *  <file name=\"sample-thf-stepper-labs/sample-thf-stepper-labs.component.html\"> </file>\n *  <file name=\"sample-thf-stepper-labs/sample-thf-stepper-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-stepper-sales\" title=\"Totvs Stepper - Sales\">\n *  <file name=\"sample-thf-stepper-sales/sample-thf-stepper-sales.component.html\"> </file>\n *  <file name=\"sample-thf-stepper-sales/sample-thf-stepper-sales.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-stepper',\n  templateUrl: './thf-stepper.component.html'\n})\nexport class ThfStepperComponent extends ThfStepperBaseComponent implements AfterContentInit {\n\n  @ContentChildren(ThfStepComponent) thfSteps: QueryList<ThfStepComponent>;\n\n  private currentActiveStep: ThfStepComponent;\n  private previousActiveStep: ThfStepComponent;\n\n  get currentStepIndex(): number {\n    return this.step - 1;\n  }\n\n  get stepList(): QueryList<ThfStepComponent> | Array<ThfStepperItem> {\n    return this.useThfSteps && this.thfSteps || this.steps;\n  }\n\n  get useThfSteps(): boolean {\n    return !!this.thfSteps.length;\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    this.activeFirstStep();\n\n    this.thfSteps.changes.subscribe(() => {\n      this.controlStepsStatus(0, this.thfSteps.first);\n    });\n  }\n\n  /**\n   * Altera o status do *step* para ativo.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**thf-step**](/documentation/thf-step).\n   *\n   * @param index {number} Ãndice do `thf-step` que se deseja ativar.\n   */\n  active(index: number): void {\n    if (!this.useThfSteps) {\n      return;\n    }\n\n    const stepsArray = this.getThfSteps();\n    const step = stepsArray[index];\n    const isDisabledStep = step.status === ThfStepperStatus.Disabled;\n    const isErrorStep = step.status === ThfStepperStatus.Error;\n\n    if (!isDisabledStep || isErrorStep) {\n      this.changeStep(index, step);\n    }\n\n  }\n\n  /**\n   * Ativa o primeiro *step*.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**thf-step**](/documentation/thf-step).\n   */\n  first(): void {\n    if (!this.useThfSteps) {\n      return;\n    }\n\n    const firstStep = this.thfSteps.first;\n    const firstStepIndex = 0;\n\n    this.changeStep(firstStepIndex, firstStep);\n  }\n\n  /**\n   * Ativa o prÃ³ximo *step*.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**thf-step**](/documentation/thf-step).\n   */\n  next(): void {\n    if (!this.useThfSteps) {\n      return;\n    }\n\n    const { steps, stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\n    const nextIndex = stepIndex + 1;\n    const nextStep = steps[nextIndex];\n\n    this.changeStep(nextIndex, nextStep);\n  }\n\n  /**\n   * Ativa o *step* anterior.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**thf-step**](/documentation/thf-step).\n   */\n  previous(): void {\n    if (!this.useThfSteps) {\n      return;\n    }\n\n    const { steps, stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\n    const previousIndex = stepIndex - 1;\n    const previousStep = steps[previousIndex];\n\n    this.changeStep(previousIndex, previousStep);\n  }\n\n  changeStep(stepIndex: number, step?: ThfStepComponent): void {\n    const isDifferentStep = (!this.currentActiveStep || step.id !== this.currentActiveStep.id);\n\n    if (this.useThfSteps && isDifferentStep && this.allowNextStep(stepIndex)) {\n      this.controlStepsStatus(stepIndex, step);\n\n      this.onChangeStep.emit(step);\n    } else if (!this.useThfSteps && stepIndex !== this.currentStepIndex && this.allowNextStep(stepIndex)) {\n      // if para tratamento do modelo antigo do thf-stepper\n      this.onChangeStep.emit(stepIndex + 1);\n    }\n  }\n\n  onStepActive(step: ThfStepComponent) {\n    this.currentActiveStep = step;\n\n    this.previousActiveStep = this.thfSteps.find(stepChild => stepChild.status === ThfStepperStatus.Active && stepChild.id !== step.id);\n\n    this.setPreviousStepAsDone();\n  }\n\n  trackByFn(step: ThfStepComponent) {\n    return step.id;\n  }\n\n  private activeFirstStep() {\n    const hasStepActive = this.thfSteps.some(thfStep => thfStep.status === ThfStepperStatus.Active);\n\n    if (this.useThfSteps && !hasStepActive) {\n      this.changeStep(0, this.thfSteps.first);\n    }\n  }\n\n  private allowNextStep(nextStepIndex: number): boolean {\n    if (!this.sequential) {\n      return true;\n    }\n\n    if (this.useThfSteps) {\n      return this.isBeforeStep(nextStepIndex) || this.canActiveNextStep(this.currentActiveStep);\n    }\n\n    return this.steps.slice(this.step, nextStepIndex).every(step => step.status === ThfStepperStatus.Done);\n  }\n\n  private canActiveNextStep(currentActiveStep = <any> {}) {\n    if (!currentActiveStep.canActiveNextStep) {\n      return true;\n    }\n\n    const canActiveNextStep = currentActiveStep.canActiveNextStep(currentActiveStep);\n\n    currentActiveStep.status = this.getStepperStatusByCanActive(canActiveNextStep);\n\n    return canActiveNextStep;\n  }\n\n  private controlStepsStatus(stepIndex: number, step: ThfStepComponent): void {\n    if (this.useThfSteps) {\n\n      this.setStepAsActive(step);\n      this.setNextStepAsDefault(step);\n\n      if (this.isBeforeStep(stepIndex)) {\n        this.setFinalSteppersAsDisabled(stepIndex);\n      }\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n  private getStepperStatusByCanActive(canActiveNextStep): ThfStepperStatus {\n    return canActiveNextStep ? ThfStepperStatus.Done : ThfStepperStatus.Error;\n  }\n\n  private getStepsAndIndex(step: ThfStepComponent = <any> {}): { steps: Array<ThfStepComponent>, stepIndex: number } {\n    const steps = this.getThfSteps();\n    const stepIndex = steps.findIndex(thfStep => thfStep.id === step.id);\n\n    return { steps, stepIndex };\n  }\n\n  private getThfSteps(): Array<ThfStepComponent> {\n    return this.thfSteps.toArray();\n  }\n\n  private isBeforeStep(stepIndex: number): boolean {\n    const currentActiveStepIndex = () => this.getThfSteps().findIndex(step => step.id === this.currentActiveStep.id);\n\n    return !!this.currentActiveStep && currentActiveStepIndex() >= stepIndex;\n  }\n\n  private setFinalSteppersAsDisabled(stepIndex: number): void {\n    this.getThfSteps()\n      .filter((step, index) => step && index >= stepIndex + 2)\n      .forEach(step => step.status = ThfStepperStatus.Disabled);\n  }\n\n  private setStepAsActive(step: ThfStepComponent): void {\n    step.status = ThfStepperStatus.Active;\n  }\n\n  private setNextStepAsDefault(currentStep: ThfStepComponent): void {\n    const { steps, stepIndex } = this.getStepsAndIndex(currentStep);\n    const nextIndex = stepIndex + 1;\n\n    if (nextIndex < this.thfSteps.length) {\n      steps[nextIndex].status = ThfStepperStatus.Default;\n    }\n  }\n\n  private setPreviousStepAsDone(): void {\n    if (this.previousActiveStep) {\n      this.previousActiveStep.status = ThfStepperStatus.Done;\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir as legendas dos *steps*.\n */\n@Component({\n  selector: 'thf-stepper-label',\n  templateUrl: './thf-stepper-label.component.html'\n})\n\nexport class ThfStepperLabelComponent {\n\n  // ConteÃºdo da label.\n  @Input('t-content') content: string;\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isTypeof, thfLocaleDefault } from './../../../utils/util';\n\nimport { ThfStepperOrientation } from '../enums/thf-stepper-orientation.enum';\nimport { ThfStepperStatus } from '../enums/thf-stepper-status.enum';\n\nconst thfStepperStepSizeDefault = 24;\nconst thfStepperStepSizeMax = 64;\nconst thfStepLiteralsDefault = {\n  en: { label: 'Step' },\n  es: { label: 'Paso' },\n  pt: { label: 'Passo' }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que representa um *step* contendo as ligaÃ§Ãµes das laterais (`thf-stepper-step-bar`) e a label.\n */\n@Component({\n  selector: 'thf-stepper-step',\n  templateUrl: 'thf-stepper-step.component.html'\n})\nexport class ThfStepperStepComponent {\n\n  private _label: string;\n  private _status: ThfStepperStatus;\n  private _stepIcons?: boolean = false;\n  private _stepSize: number = thfStepperStepSizeDefault;\n\n  readonly literals = {\n    ...thfStepLiteralsDefault[thfLocaleDefault],\n    ...thfStepLiteralsDefault[browserLanguage()]\n  };\n\n  // ConteÃºdo que serÃ¡ repassado para o componente `t-circle-content` atravÃ©s da propriedade `t-content`.\n  @Input('t-circle-content') circleContent: any;\n\n  // Label do *step*.\n  @Input('t-label') set label(value: string) {\n    this._label = isTypeof(value, 'string') ? value : `${this.literals.label} ${this.circleContent}`;\n  }\n\n  get label(): string {\n    return this._label;\n  }\n\n  // Define a orientaÃ§Ã£o de exibiÃ§Ã£o.\n  @Input('t-orientation') orientation: ThfStepperOrientation;\n\n  // Define o estado de exibiÃ§Ã£o.\n  @Input('t-status') set status(value: ThfStepperStatus) {\n    this._status = (value as string) ? value : undefined;\n\n    if (this.status === ThfStepperStatus.Active) {\n      this.activated.emit();\n    }\n  }\n\n  get status(): ThfStepperStatus {\n    return this._status;\n  }\n\n  @Input('t-step-icons') set stepIcons(stepIcons: boolean) {\n    this._stepIcons = convertToBoolean(stepIcons);\n  }\n\n  get stepIcons(): boolean {\n    return this._stepIcons;\n  }\n\n  // Tamanho do `step` em *pixels*, possibilitando um maior destaque.\n  // O valor informado deve ser entre `24` e `64`.\n  @Input('t-step-size') set stepSize(value: number) {\n    this._stepSize = (value >= thfStepperStepSizeDefault && value <= thfStepperStepSizeMax) ? value : thfStepperStepSizeDefault;\n  }\n\n  get stepSize(): number {\n    return this._stepSize;\n  }\n\n  // Evento que serÃ¡ emitido quando o status do *step* estiver ativo (`ThfStepperStatus.Active`).\n  @Output('t-activated') activated = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido ao clicar no *step*.\n  @Output('t-click') click = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido ao focar no *step* e pressionar a tecla *enter*.\n  @Output('t-enter') enter = new EventEmitter<any>();\n\n  get halfStepSize(): number {\n    return this.stepSize / 2;\n  }\n\n  get isVerticalOrientation(): boolean {\n    return this.orientation === ThfStepperOrientation.Vertical;\n  }\n\n  get marginHorizontalBar(): number {\n    return this.isVerticalOrientation ? undefined : this.halfStepSize;\n  }\n\n  getStatusClass(status: string): string {\n    switch (status) {\n      case ThfStepperStatus.Active:\n        return 'thf-stepper-step-active';\n      case ThfStepperStatus.Disabled:\n        return 'thf-stepper-step-disabled';\n      case ThfStepperStatus.Done:\n        return 'thf-stepper-step-done';\n      case ThfStepperStatus.Error:\n        return 'thf-stepper-step-error';\n      default:\n        return 'thf-stepper-step-default';\n    }\n  }\n\n  onClick(): void {\n    if (this.status !== ThfStepperStatus.Disabled) {\n      this.click.emit();\n    }\n  }\n\n  onEnter(): void {\n    if (this.status !== ThfStepperStatus.Disabled) {\n      this.enter.emit();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfStepComponent } from './thf-step/thf-step.component';\nimport { ThfStepperCircleComponent } from './thf-stepper-circle/thf-stepper-circle.component';\nimport { ThfStepperComponent } from './thf-stepper.component';\nimport { ThfStepperLabelComponent } from './thf-stepper-label/thf-stepper-label.component';\nimport { ThfStepperStepComponent } from './thf-stepper-step/thf-stepper-step.component';\n\n/**\n * @description\n * MÃ³dulo do componente thf-stepper\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    ThfStepComponent,\n    ThfStepperCircleComponent,\n    ThfStepperComponent,\n    ThfStepperLabelComponent,\n    ThfStepperStepComponent\n  ],\n  exports: [\n    ThfStepComponent,\n    ThfStepperComponent\n  ]\n})\nexport class ThfStepperModule { }\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por manipular os botÃµes de aba.\n */\n@Component({\n  selector: 'thf-tab-button',\n  templateUrl: './thf-tab-button.component.html'\n})\nexport class ThfTabButtonComponent implements OnChanges {\n\n  private _active: boolean;\n  private _hide: boolean;\n\n  // Ativa o botÃ£o\n  @Input('t-active') set active(value: boolean) {\n    this._active = value;\n\n    this.emitActivated();\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  // Desabilita o botÃ£o\n  @Input('t-disabled') disabled: boolean;\n\n  // Oculta o botÃ£o\n  @Input('t-hide') set hide(value: boolean) {\n    this._hide = convertToBoolean(value);\n\n    this.setDisplayOnHide();\n  }\n\n  get hide(): boolean {\n    return this._hide;\n  }\n\n  // Identificador do componente\n  @Input('t-id') id: string;\n\n  // RÃ³tulo do botÃ£o\n  @Input('t-label') label: string;\n\n  // Diminui o tamanho do botÃ£o\n  @Input('t-small') small: boolean;\n\n  // FunÃ§Ã£o sera emitida quando a tab ficar ativada\n  @Output('t-activated') activated = new EventEmitter();\n\n  // FunÃ§Ã£o sera emitida quando a tab ficar desabilitada ou escondida\n  @Output('t-change-state') changeState = new EventEmitter();\n\n  // MÃ©todo recebido do usuÃ¡rio para ser disparado quando clicar na aba\n  @Output('t-click') click = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ((changes.hide && changes.hide.currentValue) || (changes.disabled && changes.disabled.currentValue)) {\n      this.changeState.emit(this);\n    }\n  }\n\n  onClick() {\n    if (!this.disabled) {\n      this.click.emit(this.id);\n    }\n  }\n\n  private emitActivated() {\n    if (this.active) {\n      this.activated.emit(this);\n    }\n  }\n\n  private setDisplayOnHide() {\n    this.elementRef.nativeElement.style.display = this.hide ? 'none' : '';\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, uuid } from '../../../utils/util';\n\n/**\n * @description\n *\n * O componente `thf-tab` renderiza uma aba na qual envolve um conteÃºdo HTML.\n *\n * Com este componente Ã© possÃ­vel atribuir um rÃ³tulo para auxiliar na identificaÃ§Ã£o do conteÃºdo, ativar para que o mesmo seja exibido,\n * desabilitar para impossibilitar o acesso, bem como ocultar para indisponibilizar a aba.\n *\n * > Para controlar a navegaÃ§Ã£o entre diversas abas, utilizar o componente [`thf-tabs`](/documentation/thf-tabs).\n */\nexport abstract class ThfTabBaseComponent {\n\n  private _active?: boolean = false;\n  private _disabled?: boolean = false;\n  private _hide?: boolean = false;\n\n  // ID da aba\n  id?: string = uuid();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ativa a aba exibindo seu conteÃºdo.\n   *\n   * > Sugere-se utilizar na aba de conteÃºdo inicial.\n   *\n   * @default `false`\n   */\n  @Input('t-active') set active(active: boolean) {\n    this._active = convertToBoolean(active);\n    this.setDisplayOnActive();\n  }\n\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a aba.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta a aba.\n   *\n   * @default `false`\n   */\n  @Input('t-hide') set hide(hide: boolean) {\n    this._hide = convertToBoolean(hide);\n  }\n\n  get hide(): boolean {\n    return this._hide;\n  }\n\n  /** RÃ³tulo da aba. */\n  @Input('t-label') label: string;\n\n  /** MÃ©todo disparado ao clicar na aba. */\n  @Output('t-click') click = new EventEmitter();\n\n  protected abstract setDisplayOnActive();\n\n}\n","import { AfterContentInit, Component, ElementRef } from '@angular/core';\n\nimport { ThfTabBaseComponent } from './thf-tab-base.component';\n\n/**\n * @docsExtends ThfTabBaseComponent\n */\n@Component({\n  selector: 'thf-tab',\n  templateUrl: './thf-tab.component.html'\n})\nexport class ThfTabComponent extends ThfTabBaseComponent implements AfterContentInit {\n\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    this.setDisplayOnActive();\n  }\n\n  protected setDisplayOnActive() {\n    this.elementRef.nativeElement.style.display = this.active ? '' : 'none';\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { ThfPopoverComponent } from '../../thf-popover/thf-popover.component';\nimport { ThfTabComponent } from '../thf-tab/thf-tab.component';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para agrupamento de componentes `thf-tab-button` que os rendereiza em uma um caixa de diÃ¡logo\n * no formato de lista.\n */\n@Component({\n  selector: 'thf-tab-dropdown',\n  templateUrl: './thf-tab-dropdown.component.html'\n})\nexport class ThfTabDropdownComponent {\n\n  @ViewChild('popover', { static: true }) popover: ThfPopoverComponent;\n  @ViewChild('tabDrop', { read: ElementRef, static: true }) tabDropdown: ElementRef;\n\n  // RÃ³tulo do `thf-tab-button`\n  @Input('t-label') label: string;\n\n  // Diminui o tamanho do botÃ£o\n  @Input('t-small') small: boolean;\n\n  // Lista de abas\n  @Input('t-tabs') tabs: Array<ThfTabComponent> = [];\n\n  // Evento que serÃ¡ emitido ao ativar uma aba\n  @Output('t-activated') activated = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido a aba for desabilitada ou ocultada\n  @Output('t-change-state') changeState = new EventEmitter<any>();\n\n  // Evento de click\n  @Output('t-click') click = new EventEmitter<any>();\n\n  getContainerClass() {\n    return this.small ? 'thf-tab-dropdown-container-sm' : 'thf-tab-dropdown-container';\n  }\n\n  togglePopover(): void {\n    this.popover.isHidden ? this.popover.open() : this.popover.close();\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\n/**\n * @description\n *\n * O componente `thf-tabs` Ã© responsÃ¡vel por agrupar [abas](/documentation/thf-tab) dispostas numa linha horizontal,\n * ideal para facilitar a organizaÃ§Ã£o de conteÃºdos.\n *\n * AtÃ© cinco abas o componente exibe todas normalmente. Contudo, a partir de seis abas, o componente torna visÃ­vel\n * apenas as quatro primeiras, agrupando todas as demais na quinta aba rotulada de **Mais**.\n *\n * > As abas que estiverem agrupadas serÃ£o dispostas numa cascata suspensa que serÃ¡ exibida ao clicar no botÃ£o **Mais**.\n *\n * Ã possÃ­vel realizar a navegaÃ§Ã£o entre as abas atravÃ©s da tecla TAB do teclado.\n * Caso uma aba estiver desabilitada, nÃ£o receberÃ¡ foco de navegaÃ§Ã£o.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite utilizar uma quantidade excessiva de abas, pois irÃ¡ gerar um *scroll* muito longo no `dropdown`;\n * - Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos.\n */\nexport class ThfTabsBaseComponent {\n\n  private _small?: boolean = false;\n\n  /**\n   * @optinal\n   *\n   * @description\n   *\n   * Diminui o tamanho das abas.\n   *\n   * @default `false`\n   */\n  @Input('t-small') set small(value: boolean) {\n    this._small = convertToBoolean(value);\n  }\n\n  get small(): boolean {\n    return this._small;\n  }\n\n}\n","import { ChangeDetectorRef, Component, ContentChildren, QueryList, ViewChild } from '@angular/core';\n\nimport { ThfTabComponent } from './thf-tab/thf-tab.component';\nimport { ThfTabDropdownComponent } from './thf-tab-dropdown/thf-tab-dropdown.component';\nimport { ThfTabsBaseComponent } from './thf-tabs-base.component';\n\nconst thfTabsMaxNumberOfTabs = 5;\n\n/**\n * @docsExtends ThfTabsBaseComponent\n *\n * @example\n *\n * <example name=\"thf-tabs-basic\" title=\"Totvs Tabs Basic\">\n *  <file name=\"sample-thf-tabs-basic/sample-thf-tabs-basic.component.html\"> </file>\n *  <file name=\"sample-thf-tabs-basic/sample-thf-tabs-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-tabs-labs\" title=\"Totvs Tabs Labs\">\n *  <file name=\"sample-thf-tabs-labs/sample-thf-tabs-labs.component.html\"> </file>\n *  <file name=\"sample-thf-tabs-labs/sample-thf-tabs-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-tabs-travel\" title=\"Totvs Tabs - Travel\">\n *  <file name=\"sample-thf-tabs-travel/sample-thf-tabs-travel.component.html\"> </file>\n *  <file name=\"sample-thf-tabs-travel/sample-thf-tabs-travel.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-tabs-business-conf\" title=\"Totvs Tabs - Business Conference\">\n *  <file name=\"sample-thf-tabs-business-conf/sample-thf-tabs-business-conf.component.html\"> </file>\n *  <file name=\"sample-thf-tabs-business-conf/sample-thf-tabs-business-conf.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-tabs',\n  templateUrl: './thf-tabs.component.html'\n})\nexport class ThfTabsComponent extends ThfTabsBaseComponent {\n\n  maxNumberOfTabs = thfTabsMaxNumberOfTabs;\n\n  private previousActiveTab: ThfTabComponent;\n\n  // Tabs utilizados no ng-content\n  @ContentChildren(ThfTabComponent) tabs: QueryList<ThfTabComponent>;\n\n  @ViewChild('tabDropdown', { static: true }) tabDropdown: ThfTabDropdownComponent;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  get isShowTabDropdown() {\n    return this.visibleTabs.length > this.maxNumberOfTabs;\n  }\n\n  // tabs que serÃ£o apresentadas na aba \"Mais\"\n  get overflowedTabs() {\n    return this.visibleTabs.filter((_tab, index) => index > (this.maxNumberOfTabs - 2));\n  }\n\n  get visibleTabs() {\n    return this.tabs.filter(tab => !tab.hide);\n  }\n\n  closePopover(): void {\n    const containsPopoverVisible = this.tabDropdown && this.tabDropdown.popover && !this.tabDropdown.popover.isHidden;\n\n    if (containsPopoverVisible) {\n      this.tabDropdown.popover.close();\n    }\n  }\n\n  isVisibleTab(tab) {\n    const visibleTabIndex = this.visibleTabs.findIndex(visibleTab => visibleTab.id === tab.id);\n\n    return (this.visibleTabs.length <= this.maxNumberOfTabs) || (visibleTabIndex < (this.maxNumberOfTabs - 1));\n  }\n\n  // FunÃ§Ã£o disparada quando alguma tab ficar ativa\n  onTabActive(tab) {\n    this.previousActiveTab = this.tabs.find(tabChild => tabChild.active && tabChild.id !== tab.id);\n\n    this.deactivateTab();\n  }\n\n  // funcao serÃ¡ disparada quando mudar o estado do thfTab para desabilitado ou escondido.\n  onTabChangeState(tab: ThfTabComponent) {\n    if (tab.active) {\n      tab.active = false;\n\n      this.activeDistinctTab();\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n  // selectiona a aba informada por parametro, caso houver click faz a emiÃ§Ã£o do evento.\n  selectedTab(tab: ThfTabComponent) {\n    tab.active = true;\n\n    if (tab.click) {\n      tab.click.emit(tab);\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n  trackByFn(_i, tab: ThfTabComponent) {\n    return tab.id;\n  }\n\n  // ativa a previousActiveTab ou primeira tab encontrada.\n  private activeDistinctTab() {\n    if (this.previousActiveTab) {\n      this.previousActiveTab.active = true;\n    } else {\n      this.activeFirstTab();\n    }\n  }\n\n  // Ativa a primeira Tab que nÃ£o estiver desabilitada ou escondida.\n  private activeFirstTab() {\n    this.tabs.some(tabChild => {\n      if (!tabChild.disabled && !tabChild.hide) {\n        tabChild.active = true;\n        return true;\n      }\n    });\n  }\n\n  // desativa previousActiveTab e dispara a detecÃ§Ã£o de mudanÃ§a.\n  private deactivateTab() {\n    if (this.previousActiveTab) {\n      this.previousActiveTab.active = false;\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThfPopoverModule } from '../thf-popover/thf-popover.module';\n\nimport { ThfTabButtonComponent } from './thf-tab-button/thf-tab-button.component';\nimport { ThfTabComponent } from './thf-tab/thf-tab.component';\nimport { ThfTabDropdownComponent } from './thf-tab-dropdown/thf-tab-dropdown.component';\nimport { ThfTabsComponent } from './thf-tabs.component';\n\n/**\n * @description\n * MÃ³dulo do componente thf-tabs\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ThfPopoverModule\n  ],\n  declarations: [\n    ThfTabButtonComponent,\n    ThfTabComponent,\n    ThfTabDropdownComponent,\n    ThfTabsComponent\n  ],\n  entryComponents: [\n    ThfTabButtonComponent,\n    ThfTabDropdownComponent\n  ],\n  exports: [\n    ThfTabComponent,\n    ThfTabsComponent\n  ]\n})\nexport class ThfTabsModule { }\n","import { Component, Input } from '@angular/core';\n\nimport { isTypeof } from '../../../utils/util';\nimport { ThfControlPositionService } from '../../../services/thf-control-position/thf-control-position.service';\n\nimport { ThfToolbarAction } from '../thf-toolbar-action.interface';\n\nconst thfToolbarActionsIconDefault = 'thf-icon-more';\n\n/**\n * @docsPrivate\n *\n * @usedBy ThfToolbarComponent\n *\n * @description\n *\n * O componente `thf-toolbar-actions` tem como objetivo receber uma lista de aÃ§Ãµes e um Ã­cone que podem ser personalizados.\n */\n@Component({\n  selector: 'thf-toolbar-actions',\n  templateUrl: './thf-toolbar-actions.component.html',\n  providers: [ ThfControlPositionService ]\n})\nexport class ThfToolbarActionsComponent {\n\n  private _actionsIcon?: string = thfToolbarActionsIconDefault;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('t-actions') actions?: Array<ThfToolbarAction>;\n\n  /** Define o Ã­cone das aÃ§Ãµes. */\n  @Input('t-actions-icon') set actionsIcon(icon: string) {\n    this._actionsIcon = isTypeof(icon, 'string') ? icon : thfToolbarActionsIconDefault;\n  }\n\n  get actionsIcon() {\n    return this._actionsIcon;\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToInt } from '../../utils/util';\n\nimport { ThfToolbarAction } from './thf-toolbar-action.interface';\nimport { ThfToolbarProfile } from './thf-toolbar-profile/thf-toolbar-profile.interface';\n\n/**\n * @description\n *\n * O componente `thf-toolbar` Ã© um cabeÃ§alho para o tÃ­tulo da aplicaÃ§Ã£o e informaÃ§Ãµes de usuÃ¡rio e notificaÃ§Ãµes quando houver necessidade.\n */\nexport class ThfToolbarBaseComponent {\n\n  private _notificationNumber?: number;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes que serÃ£o exibidas ao clicar no Ã­cone declarado em `t-actions-icon`.\n   */\n  @Input('t-actions') actions?: Array<ThfToolbarAction>;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define um [Ã­cone](/guides/icons) para a propriedade `t-actions`.\n   *\n   * > Caso nÃ£o haja aÃ§Ãµes definidas em `t-actions`, o Ã­cone nÃ£o serÃ¡ exibido.\n   *\n   * @default `thf-icon-more`\n   */\n  @Input('t-actions-icon') actionsIcon?: string;\n\n /** Define o objeto que serÃ¡ o cabeÃ§alho da lista de aÃ§Ãµes com as informaÃ§Ãµes do perfil. */\n  @Input('t-profile') profile?: ThfToolbarProfile;\n\n /** Define uma lista de aÃ§Ãµes que serÃ£o exibidas ao clicar no Ã­cone do perfil. */\n  @Input('t-profile-actions') profileActions?: Array<ThfToolbarAction>;\n\n  /** Se falso, oculta o Ã­cone de notificaÃ§Ãµes. */\n  @Input('t-show-notification') showNotification?: boolean = true;\n\n  /** TÃ­tulo do *toolbar* e aplicaÃ§Ã£o. */\n  @Input('t-title') title: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de aÃ§Ãµes da notificaÃ§Ã£o.\n   */\n  @Input('t-notification-actions') notificationActions?: Array<ThfToolbarAction>;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * NÃºmero de notificaÃ§Ãµes.\n   */\n  @Input('t-notification-number') set notificationNumber(value: number) {\n    this._notificationNumber = convertToInt(value, 0);\n  }\n\n  get notificationNumber(): number {\n    return this._notificationNumber;\n  }\n\n  get isShowProfile() {\n    return this.profile || this.profileActions;\n  }\n}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { ThfToolbarBaseComponent } from './thf-toolbar-base.component';\n\n/**\n * @docsExtends ThfToolbarBaseComponent\n *\n * @example\n *\n * <example name=\"thf-toolbar-basic\" title=\"Totvs Toolbar Basic\">\n *  <file name=\"sample-thf-toolbar-basic/sample-thf-toolbar-basic.component.html\"> </file>\n *  <file name=\"sample-thf-toolbar-basic/sample-thf-toolbar-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-toolbar-labs\" title=\"Totvs Toolbar Labs\">\n *  <file name=\"sample-thf-toolbar-labs/sample-thf-toolbar-labs.component.html\"> </file>\n *  <file name=\"sample-thf-toolbar-labs/sample-thf-toolbar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-toolbar-logged\" title=\"Totvs Toolbar - Logged\">\n *  <file name=\"sample-thf-toolbar-logged/sample-thf-toolbar-logged.component.html\"> </file>\n *  <file name=\"sample-thf-toolbar-logged/sample-thf-toolbar-logged.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'thf-toolbar',\n  templateUrl: './thf-toolbar.component.html'\n})\nexport class ThfToolbarComponent extends ThfToolbarBaseComponent implements OnInit {\n\n  parentRef: any;\n\n  constructor(private titleService: Title, viewRef: ViewContainerRef) {\n    super();\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  ngOnInit(): void {\n    this.setTitle(this.title);\n  }\n\n  private setTitle(newTitle: string) {\n    this.titleService.setTitle(newTitle);\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ThfControlPositionService } from '../../../services/thf-control-position/thf-control-position.service';\n\nimport { ThfToolbarAction } from '../thf-toolbar-action.interface';\n\n/**\n * @docsPrivate\n *\n * @usedBy ThfToolbarComponent\n *\n * @description\n *\n * O componente `thf-toolbar-notification` tem como objetivo notificar o usuÃ¡rio de novas aÃ§Ãµes da aplicaÃ§Ã£o que necessitam de atenÃ§Ã£o,\n * como por exemplo um alerta de nova mensagem.\n *\n * O mesmo tambÃ©m permite que a cada nova notificaÃ§Ã£o seja incrementado e exibido, ou nÃ£o, este nÃºmero em uma *tag* ao lado do\n * Ã­cone de notificaÃ§Ãµes.\n */\n@Component({\n  selector: 'thf-toolbar-notification',\n  templateUrl: './thf-toolbar-notification.component.html',\n  providers: [ ThfControlPositionService ]\n})\nexport class ThfToolbarNotificationComponent {\n\n  private _notificationNumber?: number = 0;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('t-notification-actions') notificationActions?: Array<ThfToolbarAction>;\n\n  /** Define o nÃºmero de notificaÃ§Ãµes. */\n  @Input('t-notification-number') set notificationNumber(value: number) {\n    this._notificationNumber = Number.isInteger(value) ? value : 0;\n  }\n\n  get notificationNumber() {\n    return this._notificationNumber;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ThfControlPositionService } from '../../../services/thf-control-position/thf-control-position.service';\n\nimport { ThfToolbarProfile } from './thf-toolbar-profile.interface';\nimport { ThfToolbarAction } from '../thf-toolbar-action.interface';\n\nconst thfToolbarProfileDefaultAvatar = './assets/images/totvs-logo-user.svg';\n\n/**\n * @docsPrivate\n *\n * @docsExtends ThfToolbarProfileComponent\n *\n * @description\n *\n * Componente `thf-toolbar-profile`.\n */\n@Component({\n  selector: 'thf-toolbar-profile',\n  templateUrl: './thf-toolbar-profile.component.html',\n  providers: [ ThfControlPositionService ]\n})\nexport class ThfToolbarProfileComponent {\n\n  /** Objeto que implementa a interface `ThfToolbarProfile`. */\n  @Input('t-profile') profile: ThfToolbarProfile;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('t-profile-actions') profileActions?: Array<ThfToolbarAction>;\n\n  readonly defaultAvatar = thfToolbarProfileDefaultAvatar;\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfAvatarModule } from './../thf-avatar/thf-avatar.module';\nimport { ThfPopupModule } from '../thf-popup/thf-popup.module';\nimport { ThfToolbarActionsComponent } from './thf-toolbar-actions/thf-toolbar-actions.component';\nimport { ThfToolbarComponent } from './thf-toolbar.component';\nimport { ThfToolbarNotificationComponent } from './thf-toolbar-notification/thf-toolbar-notification.component';\nimport { ThfToolbarProfileComponent } from './thf-toolbar-profile/thf-toolbar-profile.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-toolbar\n *\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ThfAvatarModule,\n    ThfPopupModule\n  ],\n  declarations: [\n    ThfToolbarActionsComponent,\n    ThfToolbarComponent,\n    ThfToolbarNotificationComponent,\n    ThfToolbarProfileComponent\n  ],\n  exports: [\n    ThfToolbarComponent\n  ],\n  providers: [],\n  schemas: []\n})\nexport class ThfToolbarModule { }\n","import { Input, Output, EventEmitter } from '@angular/core';\n\nimport { convertToBoolean, isTypeof } from '../../utils/util';\n\n/**\n *\n * @description\n *\n * O componente `thf-widget` Ã© recomendado para exibiÃ§Ã£o de *dashboards*, podendo ser utilizado\n * para incluir vÃ¡rios tipos de conteÃºdo como: grÃ¡ficos, tabelas, grids e imagens.\n *\n * AlÃ©m da exibiÃ§Ã£o de conteÃºdos, este componente possibilita adicionar aÃ§Ãµes e um link\n * para ajuda, como tambÃ©m possibilita ser utilizado com ou sem sombra.\n *\n * Para controlar sua largura, Ã© possÃ­vel utilizar o [Grid System](/guides/grid-system) para um maior\n * controle de seu redimensionamento, assim possibilitando o tratamento para diferentes resoluÃ§Ãµes.\n */\nexport abstract class ThfWidgetBaseComponent {\n\n  private _background?: string;\n  private _disabled?: boolean = false;\n  private _height?: number;\n  private _help?: string;\n  private _noShadow?: boolean = false;\n  private _primary?: boolean = false;\n  private _primaryLabel?: string;\n  private _title?: string;\n\n  containerHeight?: string = 'auto';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AplicaÃ§Ã£o de imagem de fundo.\n   * > Se a imagem escolhida intervir na legibilidade do texto contido no `t-widget`,\n   * pode-se utilizar a propriedade `t-primary` em conjunto para que os textos fiquem na cor branca.\n   *\n   */\n  @Input('t-background') set background(value: string) {\n    this._background = (value && typeof value === 'string') ? value : undefined;\n  }\n\n  get background() {\n    return this._background;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita todas as aÃ§Ãµes do componente.\n   *\n   * @default `false`\n   */\n  @Input('t-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.onDisabled.emit(this.disabled);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `thf-widget`.\n   * A altura mÃ­nima para o `thf-widget` depende do que serÃ¡ exibido atravÃ©s das propriedades `t-primary-label`,\n   * `t-setting`, `t-help` e `t-title`.\n   * > Caso nÃ£o seja informado valor, a propriedade irÃ¡ assumir o tamanho do conteÃºdo.\n   */\n  @Input('t-height') set height(value: number) {\n    this._height = parseInt(<any> value, 10);\n    this.setHeight(this.height);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Link de ajuda\n   */\n  @Input('t-help') set help(value: string) {\n    this._help = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get help(): string {\n    return this._help;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a sombra do `thf-widget`.\n   *\n   * @default `true`\n   */\n  @Input('t-no-shadow') set noShadow(value: boolean) {\n    this._noShadow = <any>value === '' ? true : convertToBoolean(value);\n    this.setHeight(this.height);\n  }\n\n  get noShadow(): boolean {\n    return this._noShadow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * OpÃ§Ã£o para que o `thf-widget` fique em destaque.\n   *\n   * @default `false`\n   */\n  @Input('t-primary') set primary(value: boolean) {\n    this._primary = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get primary(): boolean {\n    return this._primary;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DescriÃ§Ã£o da primeira aÃ§Ã£o.\n   *\n   * @default `false`\n   */\n  @Input('t-primary-label') set primaryLabel(value: string) {\n    this._primaryLabel = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get primaryLabel(): string {\n    return this._primaryLabel;\n  }\n\n  /** DescriÃ§Ã£o da segunda aÃ§Ã£o. */\n  @Input('t-secondary-label') secondaryLabel?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * TÃ­tulo do `thf-widget`.\n   *\n   * @default `false`\n   */\n  @Input('t-title') set title(value: string) {\n    this._title = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio clicar sobre a Ã¡rea total do `thf-widget`. */\n  @Output('t-click') click?: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /** FunÃ§Ã£o que serÃ¡ disparada com o valor do `t-disabled` quando esta propriedade for alterada. */\n  @Output('t-on-disabled') onDisabled?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada na primeira aÃ§Ã£o. */\n  @Output('t-primary-action') primaryAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada na segunda aÃ§Ã£o. */\n  @Output('t-secondary-action') secondaryAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o chamada ao clicar no Ã­cone de configuraÃ§Ã£o */\n  @Output('t-setting') setting?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada ao clicar no tÃ­tulo. */\n  @Output('t-title-action') titleAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  abstract setHeight(height: number);\n\n}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\n\nimport { ThfWidgetBaseComponent } from './thf-widget-base.component';\n\n/**\n * @docsExtends ThfWidgetBaseComponent\n *\n * @example\n *\n * <example name=\"thf-widget-basic\" title=\"Totvs Widget Basic\">\n *  <file name=\"sample-thf-widget-basic/sample-thf-widget-basic.component.html\"> </file>\n *  <file name=\"sample-thf-widget-basic/sample-thf-widget-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-widget-labs\" title=\"Totvs Widget Labs\">\n *  <file name=\"sample-thf-widget-labs/sample-thf-widget-labs.component.html\"> </file>\n *  <file name=\"sample-thf-widget-labs/sample-thf-widget-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-widget-finance-dashboard\" title=\"Totvs Widget - Finance dashboard\">\n *  <file name=\"sample-thf-widget-finance-dashboard/sample-thf-widget-finance-dashboard.component.html\"> </file>\n *  <file name=\"sample-thf-widget-finance-dashboard/sample-thf-widget-finance-dashboard.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-widget-card\" title=\"Totvs Widget - Card\">\n *  <file name=\"sample-thf-widget-card/sample-thf-widget-card.component.html\"> </file>\n *  <file name=\"sample-thf-widget-card/sample-thf-widget-card.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'thf-widget',\n  templateUrl: './thf-widget.component.html'\n})\nexport class ThfWidgetComponent extends ThfWidgetBaseComponent implements OnInit {\n\n  get showTitleAction(): boolean {\n    return !!this.titleAction.observers[0];\n  }\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.setHeight(this.height);\n  }\n\n  hasTitleHelpOrSetting(): boolean {\n    return !!this.title || !!this.help || !!this.setting.observers[0];\n  }\n\n  onClick(event: MouseEvent) {\n    if (!this.disabled) {\n      this.click.emit(event);\n    }\n  }\n\n  openHelp(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      window.open(this.help, '_blank');\n    }\n  }\n\n  runPrimaryAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.primaryAction.emit();\n    }\n  }\n\n  runSecondaryAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.secondaryAction.emit();\n    }\n  }\n\n  runTitleAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.titleAction.emit();\n    }\n  }\n\n  setHeight(height: number) {\n    if (height) {\n      let bodyHeight = height;\n      const hasSettingOrHelp = this.setting.observers.length > 0 || this.help;\n      const footerBorder = 1;\n      const footerHeight = 40;\n      const settingHeight = 37;\n      const shadowHeight = 2;\n      const titleHeight = 50;\n\n      if (this.noShadow) {\n        bodyHeight -= shadowHeight;\n      }\n\n      if (hasSettingOrHelp && !this.title) {\n        bodyHeight -= settingHeight;\n      }\n\n      if (this.title) {\n        bodyHeight -= titleHeight;\n      }\n\n      if (this.primaryLabel) {\n        bodyHeight -= footerHeight + footerBorder;\n      }\n\n      this.containerHeight = `${bodyHeight}px`;\n    } else {\n      this.containerHeight = `auto`;\n    }\n  }\n\n  settingOutput(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.setting.emit();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfContainerModule } from '../thf-container/index';\nimport { ThfWidgetComponent } from './thf-widget.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente thf-widget\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ThfContainerModule\n  ],\n  exports: [\n    ThfWidgetComponent\n  ],\n  declarations: [ThfWidgetComponent]\n})\nexport class ThfWidgetModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfAvatarModule } from './thf-avatar/thf-avatar.module';\nimport { ThfBreadcrumbModule } from './thf-breadcrumb/thf-breadcrumb.module';\nimport { ThfButtonModule } from './thf-button/thf-button.module';\nimport { ThfButtonGroupModule } from './thf-button-group/thf-button-group.module';\nimport { ThfCalendarModule } from './thf-calendar/thf-calendar.module';\nimport { ThfChartModule } from './thf-chart/thf-chart.module';\nimport { ThfContainerModule } from './thf-container/thf-container.module';\nimport { ThfDisclaimerGroupModule } from './thf-disclaimer-group/thf-disclaimer-group.module';\nimport { ThfDisclaimerModule } from './thf-disclaimer/thf-disclaimer.module';\nimport { ThfDividerModule } from './thf-divider/thf-divider.module';\nimport { ThfDropdownModule } from './thf-dropdown/thf-dropdown.module';\nimport { ThfDynamicModule } from './thf-dynamic/thf-dynamic.module';\nimport { ThfFieldModule } from './thf-field/thf-field.module';\nimport { ThfGridModule } from './thf-grid/thf-grid.module';\nimport { ThfInfoModule } from './thf-info/thf-info.module';\nimport { ThfListViewModule } from './thf-list-view/thf-list-view.module';\nimport { ThfLoadingModule } from './thf-loading/thf-loading.module';\nimport { ThfMenuModule } from './thf-menu/thf-menu.module';\nimport { ThfMenuPanelModule } from './thf-menu-panel/thf-menu-panel.module';\nimport { ThfModalModule } from './thf-modal/thf-modal.module';\nimport { ThfNavbarModule } from './thf-navbar/thf-navbar.module';\nimport { ThfPageModule } from './thf-page/thf-page.module';\nimport { ThfPopoverModule } from './thf-popover/thf-popover.module';\nimport { ThfPopupModule } from './thf-popup/thf-popup.module';\nimport { ThfSlideModule } from './thf-slide/thf-slide.module';\nimport { ThfStepperModule } from './thf-stepper/thf-stepper.module';\nimport { ThfTableModule } from './thf-table/thf-table.module';\nimport { ThfTabsModule } from './thf-tabs/thf-tabs.module';\nimport { ThfTagModule } from './thf-tag/thf-tag.module';\nimport { ThfToolbarModule } from './thf-toolbar/thf-toolbar.module';\nimport { ThfWidgetModule } from './thf-widget/thf-widget.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    ThfAvatarModule,\n    ThfBreadcrumbModule,\n    ThfButtonModule,\n    ThfButtonGroupModule,\n    ThfCalendarModule,\n    ThfChartModule,\n    ThfContainerModule,\n    ThfDisclaimerGroupModule,\n    ThfDisclaimerModule,\n    ThfDividerModule,\n    ThfDropdownModule,\n    ThfDynamicModule,\n    ThfFieldModule,\n    ThfGridModule,\n    ThfInfoModule,\n    ThfListViewModule,\n    ThfLoadingModule,\n    ThfMenuModule,\n    ThfMenuPanelModule,\n    ThfModalModule,\n    ThfNavbarModule,\n    ThfPageModule,\n    ThfPopoverModule,\n    ThfPopupModule,\n    ThfSlideModule,\n    ThfStepperModule,\n    ThfTableModule,\n    ThfTabsModule,\n    ThfTagModule,\n    ThfToolbarModule,\n    ThfWidgetModule\n  ],\n  exports: [\n    ThfAvatarModule,\n    ThfBreadcrumbModule,\n    ThfButtonModule,\n    ThfButtonGroupModule,\n    ThfCalendarModule,\n    ThfChartModule,\n    ThfContainerModule,\n    ThfDisclaimerGroupModule,\n    ThfDisclaimerModule,\n    ThfDividerModule,\n    ThfDropdownModule,\n    ThfDynamicModule,\n    ThfFieldModule,\n    ThfGridModule,\n    ThfInfoModule,\n    ThfListViewModule,\n    ThfLoadingModule,\n    ThfMenuModule,\n    ThfMenuPanelModule,\n    ThfModalModule,\n    ThfNavbarModule,\n    ThfPageModule,\n    ThfPopoverModule,\n    ThfPopupModule,\n    ThfSlideModule,\n    ThfStepperModule,\n    ThfTableModule,\n    ThfTabsModule,\n    ThfTagModule,\n    ThfToolbarModule,\n    ThfWidgetModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class ThfComponentsModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfTooltipModule } from './thf-tooltip/thf-tooltip.module';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    ThfTooltipModule\n  ],\n  exports: [\n    ThfTooltipModule\n  ],\n  providers: [],\n  bootstrap: []\n})\n\nexport class ThfDirectivesModule { }\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [],\n  bootstrap: []\n})\nexport class ThfGuardsModule { }\n","/**\n * @docsPrivate\n *\n * @usedBy ThfDialogService\n *\n * @description\n * Enums para as aÃ§Ãµes do componente thf-dialog-base.service.\n */\nexport enum ThfDialogType {\n  // Enum para alert\n  Alert,\n  // Enum para confirm\n  Confirm\n}\n","import { ThfDialogAlertOptions, ThfDialogConfirmOptions } from './interfaces/thf-dialog.interface';\nimport { ThfDialogType } from './thf-dialog.enum';\n\n/**\n * @description\n *\n * O thf-dialog Ã© um serviÃ§o para exibiÃ§Ã£o de caixas de diÃ¡logo, Ã© possÃ­vel customiza-los passando alguns parÃ¢metros de acordo com a\n * necessidade do desenvolvedor.\n */\n\nexport abstract class ThfDialogBaseService {\n\n  /** Exibe um diÃ¡logo de confirmaÃ§Ã£o, Ã© possÃ­vel definir aÃ§Ãµes para as opÃ§Ãµes de confirmaÃ§Ã£o e cancelamento. */\n  confirm(confirmOptions: ThfDialogConfirmOptions): void {\n    this.openDialog(ThfDialogType.Confirm, confirmOptions);\n  }\n\n  /** Exibe um diÃ¡logo de alerta. */\n  alert(alertOptions: ThfDialogAlertOptions): void {\n    this.openDialog(ThfDialogType.Alert, alertOptions);\n  }\n\n  // Usado para chamar um diÃ¡logo\n  abstract openDialog(dialogType: ThfDialogType, dialogOptions: (ThfDialogAlertOptions | ThfDialogConfirmOptions)): void;\n}\n","import { Component, ComponentRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { browserLanguage, thfLocaleDefault } from '../../utils/util';\n\nimport { ThfDialogAlertLiterals } from './interfaces/thf-dialog-alert-literals.interface';\nimport { ThfDialogAlertOptions, ThfDialogConfirmOptions } from './interfaces/thf-dialog.interface';\nimport { ThfDialogConfirmLiterals } from './interfaces/thf-dialog-confirm-literals.interface';\nimport { ThfDialogType } from './thf-dialog.enum';\nimport { ThfModalAction } from '../../components/thf-modal/thf-modal-action.interface';\nimport { ThfModalComponent } from '../../components/thf-modal/thf-modal.component';\n\nexport const thfDialogAlertLiteralsDefault = {\n  en: <ThfDialogAlertLiterals> { ok: 'Ok' },\n  es: <ThfDialogAlertLiterals> { ok: 'Ok' },\n  pt: <ThfDialogAlertLiterals> { ok: 'Ok' }\n};\n\nexport const thfDialogConfirmLiteralsDefault = {\n  en: <ThfDialogConfirmLiterals> { cancel: 'Cancel', confirm: 'Confirm' },\n  es: <ThfDialogConfirmLiterals> { cancel: 'Cancelar', confirm: 'Confirmar' },\n  pt: <ThfDialogConfirmLiterals> { cancel: 'Cancelar', confirm: 'Confirmar' }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que serve como container do thf-dialog.service\n */\n\n@Component({\n  templateUrl: './thf-dialog.component.html'\n})\nexport class ThfDialogComponent implements OnDestroy, OnInit {\n  // ViewChild para o uso do thf-modal.component\n  @ViewChild(ThfModalComponent, { static: true }) thfModal: ThfModalComponent;\n\n  // Title do thfModal\n  title: string;\n\n  // Message do thfModal\n  message: string;\n\n  // Objeto primary do thfModal\n  primaryAction: ThfModalAction = { label: 'ok', action: () => { } };\n\n  // Objeto secondary do thfModal\n  secondaryAction: ThfModalAction;\n\n  // Literais usadas nos botÃ£o de alerta do thfModal\n  literalsAlert: ThfDialogAlertLiterals;\n\n  // Literais usadas nos botÃµes de confirmaÃ§Ã£o do thfModal\n  literalsConfirm: ThfDialogConfirmLiterals;\n\n  // Atributo para armazenar a referencia do componente criado via serviÃ§o.\n  private componentRef: ComponentRef<ThfDialogComponent>;\n  private closeSubscription: Subscription;\n\n  ngOnDestroy() {\n    this.closeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.closeSubscription = this.thfModal.onXClosed.subscribe(close => this.destroy());\n  }\n\n    // Fecha o thfModal\n  close(): void {\n    this.thfModal.close();\n    this.destroy();\n  }\n\n  destroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n  }\n\n  // Insere os valores recebidos de this.open para o thfModal\n  configDialog(primaryLabel?, primaryAction?, secondaryLabel?, secondaryAction?) {\n\n    this.primaryAction = {\n      label: primaryLabel,\n      action: () => {\n          if (primaryAction) {\n            primaryAction();\n          }\n          this.close();\n      }\n    };\n\n    if (secondaryLabel) {\n      this.secondaryAction = {\n        label: secondaryLabel,\n        action: () => {\n          if (secondaryAction) {\n            secondaryAction();\n          }\n          this.close();\n        }\n      };\n    }\n  }\n\n  // Insere os valores recebidos de thf-dialog.service de acordo com o tipo de diÃ¡lago solicitado\n  open(dialogOptions: (ThfDialogConfirmOptions | ThfDialogAlertOptions),\n       dialogType: ThfDialogType,\n       componentRef?: ComponentRef<ThfDialogComponent>): void {\n\n    this.title = dialogOptions.title;\n    this.message = dialogOptions.message;\n\n    this.componentRef = componentRef;\n\n    this.setDialogLiterals(dialogOptions, dialogType);\n\n    switch (dialogType) {\n      case ThfDialogType.Confirm: {\n        this.configDialog(\n          this.literalsConfirm.confirm, (<ThfDialogConfirmOptions>dialogOptions).confirm,\n          this.literalsConfirm.cancel, (<ThfDialogConfirmOptions>dialogOptions).cancel);\n        break;\n      }\n      case ThfDialogType.Alert: {\n        this.configDialog(this.literalsAlert.ok, (<ThfDialogAlertOptions>dialogOptions).ok);\n        break;\n      }\n    }\n\n    this.thfModal.open();\n  }\n\n  private setDialogLiterals(dialogOptions: ThfDialogConfirmOptions | ThfDialogAlertOptions, dialogType: ThfDialogType) {\n    const alertLiterals = thfDialogAlertLiteralsDefault;\n    const confirmLiterals = thfDialogConfirmLiteralsDefault;\n    const literals = dialogOptions.literals;\n\n    if (dialogType === ThfDialogType.Alert) {\n      this.literalsAlert = {...alertLiterals[thfLocaleDefault], ...alertLiterals[browserLanguage()], ...literals};\n    } else {\n      this.literalsConfirm = {...confirmLiterals[thfLocaleDefault], ...confirmLiterals[browserLanguage()], ...literals};\n    }\n  }\n}\n","import { Injectable, ComponentRef } from '@angular/core';\n\nimport { ThfComponentInjectorService } from './../thf-component-injector/thf-component-injector.service';\nimport { ThfDialogAlertOptions, ThfDialogConfirmOptions } from './interfaces/thf-dialog.interface';\nimport { ThfDialogBaseService } from './thf-dialog-base.service';\nimport { ThfDialogComponent } from './thf-dialog.component';\nimport { ThfDialogType } from './thf-dialog.enum';\n\n/**\n * @docsExtends ThfDialogBaseService\n *\n * @example\n *\n * <example name=\"thf-dialog-basic\" title=\"Totvs Dialog Basic\">\n *  <file name=\"sample-thf-dialog-basic/sample-thf-dialog-basic.component.html\"> </file>\n *  <file name=\"sample-thf-dialog-basic/sample-thf-dialog-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-dialog-labs\" title=\"Totvs Dialog Labs\">\n *  <file name=\"sample-thf-dialog-labs/sample-thf-dialog-labs.component.html\"> </file>\n *  <file name=\"sample-thf-dialog-labs/sample-thf-dialog-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-dialog-cancel-credit-card\" title=\"Totvs Dialog - Cancel Credit Card\">\n *  <file name=\"sample-thf-dialog-cancel-credit-card/sample-thf-dialog-cancel-credit-card.component.html\"> </file>\n *  <file name=\"sample-thf-dialog-cancel-credit-card/sample-thf-dialog-cancel-credit-card.component.ts\"> </file>\n * </example>\n */\n@Injectable()\nexport class ThfDialogService extends ThfDialogBaseService {\n\n  constructor(private thfComponentInjector: ThfComponentInjectorService) {\n    super();\n  }\n\n  openDialog(dialogType: ThfDialogType, dialogOptions: ThfDialogAlertOptions | ThfDialogConfirmOptions): void {\n    const componentRef: ComponentRef<any> = this.thfComponentInjector.createComponentInApplication(ThfDialogComponent);\n    componentRef.changeDetectorRef.detectChanges();\n    componentRef.instance.open(dialogOptions, dialogType, componentRef);\n  }\n}\n","/**\n * @docsPrivate\n *\n * Enums para a orientaÃ§Ã£o da notificaÃ§Ã£o, do componente thf-toaster-base.component.\n */\nexport enum ThfToasterOrientation {\n  /** OrientÃ§Ã£o do componente fica no rodapÃ© */\n  Bottom,\n  /** OrientÃ§Ã£o do componente fica no topo */\n  Top\n}\n","/**\n * @docsPrivate\n *\n * Enums para os tipos de notificaÃ§Ã£o, do componente thf-toaster-base.component.\n */\nexport enum ThfToasterType {\n  /** Enum para informaÃ§Ãµes do tipo \"Erro\" */\n  Error,\n  /** Enum para informaÃ§Ãµes do tipo \"InformaÃ§Ã£o\" */\n  Information,\n  /** Enum para informaÃ§Ãµes do tipo \"Sucesso\" */\n  Success,\n  /** Enum para informaÃ§Ãµes do tipo \"AtenÃ§Ã£o\" */\n  Warning\n}\n","import { ComponentRef } from '@angular/core';\n\nimport { ThfNotification } from './thf-notification.interface';\nimport { ThfToaster } from './thf-toaster/thf-toaster.interface';\nimport { ThfToasterOrientation } from './thf-toaster/thf-toaster-orientation.enum';\nimport { ThfToasterType } from './thf-toaster/thf-toaster-type.enum';\n\n/**\n * @description\n *\n * ServiÃ§o responsÃ¡vel por emitir as notificaÃ§Ãµes em uma pÃ¡gina. SÃ£o disponibilizados os mÃ©todos de:\n *\n * - success,\n * - warning,\n * - error,\n * - information.\n *\n * Cada um destes mÃ©todos recebe como parÃ¢metro o objeto \"ThfNotification\" que contÃ©m os dados da mensagem e o\n * objeto ViewContainerRef que Ã© a representaÃ§Ã£o do container do componente onde serÃ¡ criada a notificaÃ§Ã£o.\n *\n * Estas notificaÃ§Ãµes serÃ£o exibidas durante 10 segundos, apÃ³s este tempo a mesma Ã© removida automaticamente.\n */\nexport abstract class ThfNotificationBaseService {\n\n   // Array responsÃ¡vel por guardar a instÃ¢ncia de thf-toaster's superiores.\n  stackTop: Array<ComponentRef<any>> = [];\n\n  // Array responsÃ¡vel por guardar a instÃ¢ncia de thf-toaster's inferiores.\n  stackBottom: Array<ComponentRef<any>> = [];\n\n  // DuraÃ§Ã£o do toaster ativo.\n  protected durationToaster = 10000;\n\n  /**\n   * Emite uma notificaÃ§Ã£o de sucesso.\n   *\n   * @param notification {ThfNotification | string} Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o.\n   */\n  public success(notification: ThfNotification | string) {\n    this.createToaster(this.buildToaster(notification, ThfToasterType.Success));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de atenÃ§Ã£o.\n   *\n   * @param notification {ThfNotification | string} Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public warning(notification: ThfNotification | string) {\n    this.createToaster(this.buildToaster(notification, ThfToasterType.Warning));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de erro.\n   *\n   * @param notification {ThfNotification | string} Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public error(notification: ThfNotification | string) {\n    this.createToaster(this.buildToaster(notification, ThfToasterType.Error));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de informaÃ§Ã£o.\n   *\n   * @param notification {ThfNotification | string} Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public information(notification: ThfNotification | string) {\n    this.createToaster(this.buildToaster(notification, ThfToasterType.Information));\n  }\n\n  /**\n   * @docsPrivate\n   *\n   * Cria um objeto do tipo ThfToaster de acordo o tipo.\n   *\n   * @param notification {ThfNotification | string} Objeto ThfNotification com os dados da notificaÃ§Ã£o\n   */\n  private buildToaster(notification: ThfNotification | string, type: ThfToasterType): ThfToaster {\n    let index = 0;\n    let orientation;\n\n    if ((<ThfNotification>notification).orientation === undefined ||\n        (<ThfNotification>notification).orientation === ThfToasterOrientation.Bottom) {\n      index = this.stackBottom.length;\n      orientation = ThfToasterOrientation.Bottom;\n    } else {\n      index = this.stackTop.length;\n      orientation = ThfToasterOrientation.Top;\n    }\n\n    const toaster: ThfToaster = {\n      componentRef: undefined,\n      message: (<ThfNotification>notification).message || <string>notification,\n      type: type,\n      orientation: orientation,\n      action: (<ThfNotification>notification).action,\n      actionLabel: (<ThfNotification>notification).actionLabel,\n      position: index\n    };\n\n    if ((<ThfNotification>notification).action) {\n      toaster.action = (param: any) => {\n        (<ThfNotification>notification).action();\n        this.destroyToaster(param.componentRef);\n      };\n    }\n\n    return toaster;\n  }\n\n  /**\n   * @docsPrivate\n   *\n   * MÃ©todo responsÃ¡vel por criar o thf-toaster.\n   *\n   * @param toaster {ThfToaster} Objeto contendo as informaÃ§Ãµes do toaster.\n   */\n  abstract createToaster(toaster: ThfToaster): void;\n\n  /**\n   * @docsPrivate\n   *\n   * MÃ©todo responsÃ¡vel por destruir o thf-toaster.\n   *\n   * @param toaster {ComponentRef} NÃºmero da posiÃ§Ã£o ou instancia do toaster a ser destruÃ­do.\n   * @param orientation {ThfToasterOrientation} OrientaÃ§Ã£o do ThfToaster: Top ou Bottom\n   */\n  abstract destroyToaster(toaster: ComponentRef<any>): void;\n\n}\n","import { ThfToasterOrientation } from './thf-toaster-orientation.enum';\nimport { ThfToasterType } from './thf-toaster-type.enum';\nimport { ThfToaster } from './thf-toaster.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente thf-toaster foi construÃ­do para exibir notificaÃ§Ãµes para o usuÃ¡rio.\n */\nexport abstract class ThfToasterBaseComponent {\n\n  /** Disponibiliza uma aÃ§Ã£o para a notificaÃ§Ã£o. */\n  action: Function;\n\n  /** Permite alterar o label do botÃ£o quando houver uma aÃ§Ã£o definida. */\n  actionLabel: string;\n\n  /** Mensagem a ser exibida na notificaÃ§Ã£o. */\n  message: string;\n\n  /** OrientaÃ§Ã£o da notificaÃ§Ã£o, a mesma pode ser exibida na parte superior ou inferior da pÃ¡gina. */\n  orientation: ThfToasterOrientation = ThfToasterOrientation.Bottom;\n\n  /** ComponentRef */\n  componentRef: any;\n\n  /** PosiÃ§Ã£o para notificaÃ§Ã£o aparecer na tela. */\n  position: number;\n\n  /** Tipo de notificaÃ§Ã£o. */\n  type: ThfToasterType;\n\n  /** Fecha a notificaÃ§Ã£o. */\n  abstract close(): void;\n\n  /**\n   * Altera a posiÃ§Ã£o da notificaÃ§Ã£o.\n   * @param number value\n   */\n  abstract changePosition(value: number): void;\n\n  /**\n   * Configura o componente thf-toaster de acordo com as definiÃ§Ãµes do usuÃ¡rio.\n   * @param ThfToaster thfToaster\n   * @param ComponentRef comp\n   */\n  abstract configToaster(thfToaster: ThfToaster): void;\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { ThfToasterBaseComponent } from './thf-toaster-base.component';\nimport { ThfToaster } from './thf-toaster.interface';\nimport { ThfToasterType } from './thf-toaster-type.enum';\nimport { ThfToasterOrientation } from './thf-toaster-orientation.enum';\n\n/**\n * @docsPrivate\n *\n * @docsExtends ThfToasterBaseComponent\n */\n@Component({\n  selector: 'thf-toaster',\n  templateUrl: './thf-toaster.component.html'\n})\nexport class ThfToasterComponent extends ThfToasterBaseComponent {\n\n  /* Ãcone do Toaster */\n  private icon: string;\n  /* Margem do Toaster referÃªnte Ã  sua orientaÃ§Ã£o e posiÃ§Ã£o*/\n  private margin: number = 20;\n  /* Observable para monitorar o Close to Toaster */\n  private observableOnClose = new Subject<any>();\n  /* Mostra ou oculta o Toaster */\n  private showToaster: boolean = true;\n  /* PosiÃ§Ã£o do Toaster*/\n  private toasterPosition: string = 'thf-toaster-bottom';\n  /* Tipo do Toaster */\n  private toasterType: string;\n\n  /* Componente toaster */\n  @ViewChild('toaster', { static: false }) toaster: ElementRef;\n\n  constructor(public changeDetector: ChangeDetectorRef, private elementeRef?: ElementRef) {\n    super();\n  }\n\n  /* Muda a posiÃ§Ã£o do Toaster na tela*/\n  changePosition(position: number): void {\n    this.elementeRef.nativeElement.style.display = 'table';\n\n    this.margin = 6 + (44 * (position)) + position * 6;\n\n    if (this.orientation === ThfToasterOrientation.Top) {\n      this.toaster.nativeElement.style.top = this.margin + 'px';\n    } else {\n      this.toaster.nativeElement.style.bottom = this.margin + 'px';\n    }\n\n  }\n\n  /* Fecha o componente Toaster */\n  close(): void {\n    this.showToaster = false;\n    this.observableOnClose.next(true);\n  }\n\n  /* Configura o Toaster com os atributos passados para ele */\n  configToaster(thfToaster: ThfToaster) {\n    this.type = thfToaster.type;\n    this.message = thfToaster.message;\n    this.orientation = thfToaster.orientation;\n    this.position = thfToaster.position;\n    this.action = thfToaster.action;\n    this.actionLabel = (thfToaster.actionLabel) ? thfToaster.actionLabel : 'Fechar';\n    this.componentRef = thfToaster.componentRef;\n\n    /* Muda a orientaÃ§Ã£o do Toaster */\n    if (this.orientation === ThfToasterOrientation.Top) {\n      this.toasterPosition = 'thf-toaster-top';\n    }\n\n    /* Muda a posiÃ§Ã£o do Toaster */\n    this.changePosition(this.position);\n\n    /* Switch para o tipo de Toaster */\n    switch (this.type) {\n      case ThfToasterType.Error: {\n        this.toasterType = 'thf-toaster-error';\n        this.icon = 'thf-icon-close';\n        break;\n      }\n      case ThfToasterType.Information: {\n        this.toasterType = 'thf-toaster-info';\n        this.icon = 'thf-icon-info';\n        break;\n      }\n      case ThfToasterType.Success: {\n        this.toasterType = 'thf-toaster-success';\n        this.icon = 'thf-icon-ok';\n        break;\n      }\n      case ThfToasterType.Warning: {\n        this.toasterType = 'thf-toaster-warning';\n        this.icon = 'thf-icon-warning';\n        break;\n      }\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n  getShowToaster() {\n    return this.showToaster;\n  }\n\n  getIcon() {\n    return this.icon;\n  }\n\n  getToasterPosition() {\n    return this.toasterPosition;\n  }\n\n  getToasterType() {\n    return this.toasterType;\n  }\n\n  /* Chama a funÃ§Ã£o passada pelo atributo `action` */\n  thfToasterAction(): void {\n    this.action(this);\n  }\n\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { ThfComponentInjectorService } from './../thf-component-injector/thf-component-injector.service';\nimport { ThfNotificationBaseService } from './thf-notification-base.service';\nimport { ThfToaster } from './thf-toaster/thf-toaster.interface';\nimport { ThfToasterOrientation } from './thf-toaster/thf-toaster-orientation.enum';\nimport { ThfToasterComponent } from './thf-toaster/thf-toaster.component';\n\n/**\n * @docsExtends ThfNotificationBaseService\n *\n * @example\n *\n * <example name=\"thf-notification-basic\" title=\"Totvs Notification Basic\">\n *  <file name=\"sample-thf-notification-basic/sample-thf-notification-basic.component.html\"> </file>\n *  <file name=\"sample-thf-notification-basic/sample-thf-notification-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-notification-labs\" title=\"Totvs Notification Labs\">\n *  <file name=\"sample-thf-notification-labs/sample-thf-notification-labs.component.html\"> </file>\n *  <file name=\"sample-thf-notification-labs/sample-thf-notification-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"thf-notification-sales\" title=\"Totvs Notification - Sales\">\n *  <file name=\"sample-thf-notification-sales/sample-thf-notification-sales.component.html\"> </file>\n *  <file name=\"sample-thf-notification-sales/sample-thf-notification-sales.component.ts\"> </file>\n * </example>\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThfNotificationService extends ThfNotificationBaseService {\n\n  constructor(private thfComponentInjector: ThfComponentInjectorService) {\n    super();\n  }\n\n  createToaster(toaster: ThfToaster): void {\n    const componentRef: ComponentRef<any> = this.thfComponentInjector.createComponentInApplication(ThfToasterComponent);\n\n    toaster.componentRef = componentRef;\n\n    componentRef.changeDetectorRef.detectChanges();\n    componentRef.instance.configToaster(toaster);\n\n    if (toaster.orientation === ThfToasterOrientation.Top) {\n      this.stackTop.push(componentRef);\n    } else {\n      this.stackBottom.push(componentRef);\n    }\n\n    this.observableOnClose(componentRef);\n\n    if (toaster.action === undefined) {\n      setTimeout(() => {\n        this.destroyToaster(componentRef);\n      }, this.durationToaster);\n    }\n  }\n\n  destroyToaster(toaster: any): void {\n    let stack;\n\n    if (toaster.instance.orientation === ThfToasterOrientation.Top) {\n      stack = this.stackTop;\n    } else {\n      stack = this.stackBottom;\n    }\n\n    const index = stack.indexOf(toaster);\n    stack.splice(index, 1);\n\n    this.thfComponentInjector.destroyComponentInApplication(toaster);\n\n    for (let count = 0; count < stack.length; count++) {\n      stack[count].instance.changePosition(count);\n    }\n  }\n\n  private observableOnClose(componentRef: any) {\n    componentRef.instance.observableOnClose.subscribe(() => {\n      this.destroyToaster(componentRef);\n    });\n  }\n\n}\n","import { HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpEvent, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst NO_ERROR_HEADER_PARAM = 'X-Totvs-No-Error';\n\n/**\n * @description\n *\n * O serviÃ§o Totvs Http Interceptor realiza o tratamento de requisiÃ§Ãµes HTTP conforme o padrÃ£o do\n * [**Guia de implementaÃ§Ã£o das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395) para adaptÃ¡-lo\n * ao modelo do THF.\n *\n * Ao analisar o objeto `_messages` retornado pela requisiÃ§Ã£o, o serviÃ§o exibirÃ¡ notificaÃ§Ãµes com mensagens na tela.\n * Os retornos de erros com cÃ³digos 4xx e 5xx sÃ£o tratados automaticamente, sem a necessidade de incluir o `_messages`.\n *\n * TambÃ©m existe a possibilidade de nÃ£o apresentar a notificaÃ§Ã£o quando houver algum erro com cÃ³digos 4xx e 5xx,\n * utilizando o parÃ¢metro `X-Totvs-No-Error` que foi definido conforme o\n * [**Guia de implementaÃ§Ã£o das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395) (em CabeÃ§alhos Customizados).\n * O parÃ¢metro `X-Totvs-No-Error` deve ser informado no cabeÃ§alho da requisiÃ§Ã£o com o valor `'true'` para funcionar corretamente,\n * por exemplo:\n *\n * ```\n * ...\n *  const headers = { 'X-Totvs-No-Error': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n * > ApÃ³s a validaÃ§Ã£o no interceptor, o parÃ¢metro serÃ¡ removido do cabeÃ§alho da requisiÃ§Ã£o.\n *\n * O `Content-Type` deve ser `application/json` e a estrutura de mensagem recebida pelo serviÃ§o deve seguir o\n * [**Guia de implementaÃ§Ã£o das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395)\n * (em Mensagens de sucesso para coleÃ§Ãµes), exemplo:\n *  - _messages: lista de mensagens de erro ou informativo resultante do serviÃ§o.\n *    - type: success, warning, error, e information;\n *    - code: tÃ­tulo ou cÃ³digo da mensagem;\n *    - message: texto da mensagem;\n *    - detailedMessage: detalhamento do erro ou informativo;\n *\n * Ao importar o mÃ³dulo `ThfModule` na aplicaÃ§Ã£o, o `thf-http-interceptor` Ã© automaticamente configurado sem a necessidade\n * de qualquer configuraÃ§Ã£o extra.\n *\n * Ao realizar requisiÃ§Ãµes utilize o `HttpClient`, conforme exemplo abaixo:\n *\n * ```\n * import { HttpClient } from '@angular/common/http';\n *\n * ...\n *\n * @Injectable()\n * export class UserService {\n *\n *   constructor(private http: HttpClient) { }\n *\n *   getUsers() {\n *     return this.http.get('/api/users');\n *   }\n *\n *   ...\n *\n * }\n * ```\n *\n */\nexport abstract class ThfHttpInterceptorBaseService implements HttpInterceptor {\n\n  notificationTypes = ['success', 'warning', 'error', 'information'];\n\n  constructor(private notification: any, private dialog: any) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const cloneRequest = request.clone();\n\n    request = request.headers.has(NO_ERROR_HEADER_PARAM) ? this.cloneRequestWithoutNoErrorHeaderParam(request) : request;\n\n    return next.handle(request).pipe(tap((response: HttpEvent<any>) => {\n\n      if (response instanceof HttpResponse) {\n\n        this.processResponse(response);\n\n      }\n    }, (error: HttpErrorResponse) => {\n\n      this.processErrorResponse(error, cloneRequest);\n\n    }));\n  }\n\n  processResponse(response: HttpResponse<any>) {\n    if (response.body && response.body._messages) {\n\n      const messages = response.body._messages;\n\n      if (messages instanceof Array) {\n        messages.forEach((message: any) => {\n          this.showNotification(message);\n        });\n      } else {\n        this.showNotification(messages);\n      }\n    }\n  }\n\n  processErrorResponse(response: HttpErrorResponse, request: HttpRequest<any>) {\n    const errorResponse = response.status !== 0\n      ? response.error\n      : { code: 0, message: 'Servidor nÃ£o estÃ¡ respondendo.', detailedMessage: response.message };\n\n    const hasNoErrorParam = this.hasNoErrorParam(request);\n\n    // not show the notification when has NoError parameter on header of request.\n    if (errorResponse && errorResponse.message && !hasNoErrorParam) {\n      this.showNotification({ ...errorResponse, type: 'error' });\n    }\n  }\n\n  private cloneRequestWithoutNoErrorHeaderParam(request: HttpRequest<any>): HttpRequest<any> {\n    return request && request.clone({headers: request.headers.delete(NO_ERROR_HEADER_PARAM)});\n  }\n\n  private hasNoErrorParam(request: HttpRequest<any>): boolean {\n    const noErrorParam = request && request.headers.get(NO_ERROR_HEADER_PARAM);\n\n    return noErrorParam && noErrorParam.toString().toLocaleLowerCase() === 'true';\n  }\n\n  private showNotification(response: any) {\n    const typeNotification = this.notificationTypes.includes(response.type) ? response.type : 'information';\n\n    const notificationAction = this.generateNotificationAction(response);\n\n    this.notification[typeNotification]({\n      message: response.message,\n      actionLabel: notificationAction.label,\n      action: notificationAction.action\n    });\n  }\n\n  private generateNotificationAction(errorResponse: any) {\n\n    let notificationAction;\n    let notificationLabel;\n\n    let notificationMessage = errorResponse.message.concat(` ${errorResponse.detailedMessage}`);\n\n    if (errorResponse.details && errorResponse.details instanceof Array) {\n      errorResponse.details.forEach((detailError: any) => {\n        notificationMessage += `\\n${detailError.message}`;\n      });\n    }\n\n    if (errorResponse.helpUrl && !(errorResponse.detailedMessage || errorResponse.details)) {\n      notificationLabel = 'Ajuda';\n      notificationAction = this.generateUrlHelpFunction(errorResponse.helpUrl);\n\n    } else if (errorResponse.detailedMessage || errorResponse.details) {\n      notificationLabel = 'Detalhes';\n      notificationAction = this.generateDialogDetailFunction(errorResponse, notificationMessage);\n    }\n    return { label: notificationLabel, action: notificationAction };\n  }\n\n  private generateUrlHelpFunction(helpUrl: string) {\n    return () => { window.open(helpUrl, '_blank'); };\n  }\n\n  private generateDialogDetailFunction(errorResponse: any, notificationMessage: string) {\n    return () => {\n      this.dialog.alert({\n        title: errorResponse.code,\n        message: notificationMessage,\n        ok: errorResponse.helpUrl ? this.generateUrlHelpFunction(errorResponse.helpUrl) : undefined\n      });\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ThfHttpInterceptorBaseService } from './thf-http-interceptor-base.service';\nimport { ThfNotificationService } from './../../services/thf-notification/thf-notification.service';\nimport { ThfDialogService } from './../../services/thf-dialog/thf-dialog.service';\n\n/**\n * @docsExtends ThfHttpInterceptorBaseService\n *\n * @example\n * <example name='thf-http-interceptor-labs' title='Totvs Http Interceptor Labs'>\n *  <file name='sample-thf-http-interceptor-labs.component.ts'> </file>\n *  <file name='sample-thf-http-interceptor-labs.component.html'> </file>\n * </example>\n */\n@Injectable()\nexport class ThfHttpInterceptorService extends ThfHttpInterceptorBaseService {\n  constructor(notification: ThfNotificationService, dialog: ThfDialogService) {\n    super(notification, dialog);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { ThfDialogService } from './../../services/thf-dialog/thf-dialog.service';\nimport { ThfNotificationService } from './../../services/thf-notification/thf-notification.service';\nimport { ThfHttpInterceptorService } from './thf-http-interceptor.service';\n\n@NgModule({\n  providers: [\n    ThfHttpInterceptorService,\n    ThfDialogService,\n    ThfNotificationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ThfHttpInterceptorService,\n      multi: true\n    }\n  ]\n})\nexport class ThfHttpInterceptorModule { }\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * ServiÃ§o responsÃ¡vel por efetuar o controle de interaÃ§Ã£o com o serviÃ§o de interceptor `ThfHttpRequestInterceptorService`\n * gerenciando o seu estado.\n */\n@Injectable()\nexport class ThfHttpRequesControltService {\n\n  controlHttpRequest: Subject<number> = new Subject<number>();\n\n  getControlHttpRequest(): Observable<any> {\n    return this.controlHttpRequest.asObservable();\n  }\n\n  send(value: number = 0) {\n    this.controlHttpRequest.next(value);\n  }\n\n}\n","import { ComponentRef, Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { ThfComponentInjectorService } from '../../services/thf-component-injector/thf-component-injector.service';\nimport { ThfLoadingOverlayComponent } from '../../components/thf-loading/thf-loading-overlay/thf-loading-overlay.component';\n\nimport { ThfHttpRequesControltService } from './thf-http-request-control-service';\n\nconst noCountPendingRequests = 'X-Totvs-No-Count-Pending-Requests';\nconst screenLock = 'X-Totvs-Screen-Lock';\n\n/**\n * @description\n *\n * O serviÃ§o Totvs Http Request Interceptor realiza a contabilizaÃ§Ã£o de requisiÃ§Ãµes pendentes na aplicaÃ§Ã£o.\n *\n * Existe a possibilidade de nÃ£o efetuar a contabilizaÃ§Ã£o das requisiÃ§Ãµes pendentes, utilizando o parÃ¢metro\n * `X-Totvs-No-Count-Pending-Requests`. Para isso deve ser informado no cabeÃ§alho da requisiÃ§Ã£o com o valor `'true'`,\n * por exemplo:\n *\n * ```\n * ...\n *  const headers = { 'X-Totvs-No-Count-Pending-Requests': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n * Para obter a quantidade de requisiÃ§Ãµes pendentes, deve inscrever-se no mÃ©todo `getCountPendingRequests` do\n * serviÃ§o `ThfHttpRequestInterceptorService`, com isso, ao realizar requisiÃ§Ãµes utilizando `HttpClient`,\n * serÃ¡ retornado a quantidade de requisiÃ§Ãµes pendentes.\n *\n * TambÃ©m existe a possibildade de travar a tela e mostrar uma imagem de _loading_ durante o processamento de uma requisiÃ§Ã£o\n * deve-se passar o parÃ¢metro `X-Totvs-Screen-Lock` no cabeÃ§alho da requisiÃ§Ã£o com valor `'true'`.\n *\n * por exemplo:\n *\n * ```\n * ...\n *  const headers = { 'X-Totvs-Screen-Lock': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n * > ApÃ³s a validaÃ§Ã£o no interceptor, o parÃ¢metro serÃ¡ removido do cabeÃ§alho da requisiÃ§Ã£o.\n *\n * Ao importar o mÃ³dulo `ThfModule` na aplicaÃ§Ã£o, o `thf-http-request-interceptor` Ã© automaticamente configurado sem a necessidade\n * de qualquer configuraÃ§Ã£o extra.\n *\n *\n * Segue abaixo um exemplo de uso:\n *\n * ```\n * import { HttpClient } from '@angular/common/http';\n *\n * ...\n *\n * @Injectable()\n * export class CustomersService {\n *\n *  headers = { 'X-Totvs-No-Count-Pending-Requests': true, 'X-Totvs-Screen-Lock': 'true' }\n *  pendingRequests: number = 0;\n *  subscription: Subscription;\n *\n *  constructor(\n *    private http: HttpClient,\n *    private httpRequestInterceptor: ThfHttpRequestInterceptorService) { }\n *\n *  ngOnDestroy(): void {\n *    this.subscription.unsubscribe();\n *  }\n *\n *  ngOnInit(): void {\n *    this.subscription = this.httpRequestInterceptor.getCountPendingRequests().subscribe(data => {\n *      this.pendingRequests = data;\n *    });\n *  }\n *\n *  getCustomers() {\n *    return this.http.get(`/customers/1`, { headers: headers });\n *  }\n *\n *  ...\n *\n * }\n * ```\n *\n * @example\n * <example name='thf-http-request-interceptor-labs' title='Totvs Http Request Interceptor Labs'>\n *  <file name='sample-thf-http-request-interceptor-labs.component.ts'> </file>\n *  <file name='sample-thf-http-request-interceptor-labs.component.html'> </file>\n * </example>\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThfHttpRequestInterceptorService implements HttpInterceptor {\n\n  private loadingOverlayComponent: ComponentRef<ThfLoadingOverlayComponent> = undefined;\n\n  private pendingRequests: number = 0;\n  private overlayRequests: number = 0;\n\n  constructor(\n    private controlHttpRequest: ThfHttpRequesControltService,\n    private thfComponentInjector: ThfComponentInjectorService) {  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n\n    const requestClone = request.clone();\n\n    request = this.requestCloneWithoutHeaderParam([noCountPendingRequests, screenLock], request);\n\n    this.setCountPendingRequests(true, requestClone);\n    this.setCountOverlayRequests(true, requestClone);\n\n    return next.handle(request).pipe(\n      tap((response: HttpEvent<any>) => {\n        if (response instanceof HttpResponse) {\n          this.setCountPendingRequests(false, requestClone);\n          this.setCountOverlayRequests(false, requestClone);\n        }\n      }),\n      catchError(error => {\n        this.setCountPendingRequests(false, requestClone);\n        this.setCountOverlayRequests(false, requestClone);\n\n        return throwError(error);\n      })\n    );\n  }\n\n  getCountPendingRequests(): Observable<any> {\n    return this.controlHttpRequest.getControlHttpRequest();\n  }\n\n  private buildLoading() {\n    if (!this.loadingOverlayComponent) {\n      this.loadingOverlayComponent = this.thfComponentInjector.createComponentInApplication(ThfLoadingOverlayComponent);\n      this.loadingOverlayComponent.instance.screenLock = true;\n      this.loadingOverlayComponent.instance.changeDetector.detectChanges();\n    }\n  }\n\n  private destroyLoading() {\n    if (this.loadingOverlayComponent) {\n      this.thfComponentInjector.destroyComponentInApplication(this.loadingOverlayComponent);\n      this.loadingOverlayComponent = undefined;\n    }\n  }\n\n  private requestCloneWithoutHeaderParam(headersParams: Array<string>, request: HttpRequest<any>): HttpRequest<any> {\n    let isRequestClone = false;\n\n    headersParams.forEach(headerParam => {\n      if (request.headers.has(headerParam)) {\n        request.headers.delete(headerParam);\n        isRequestClone = true;\n      }\n\n    });\n\n    return isRequestClone ? request.clone({headers: request.headers}) : request;\n  }\n\n  private setCountPendingRequests(isIncrement: boolean, request: HttpRequest<any>) {\n\n    const hasCountPendingRequestHeaderParam = request.headers.has(noCountPendingRequests);\n    const headerParam = request.headers.get(noCountPendingRequests);\n\n    if (hasCountPendingRequestHeaderParam && (headerParam.toString().toLowerCase() === 'true' ) ) {\n      return;\n    }\n\n    this.pendingRequests += isIncrement ? 1 : -1;\n    this.controlHttpRequest.send(this.pendingRequests);\n\n  }\n\n  private setCountOverlayRequests(isIncrement: boolean, request: HttpRequest<any>) {\n    const hasOverlayRequestHeaderParam = request.headers.has(screenLock);\n\n    if (hasOverlayRequestHeaderParam) {\n      const headerParam = request.headers.get(screenLock);\n\n      if (headerParam.toString().toLowerCase() === 'false') {\n        return;\n      }\n\n      this.overlayRequests += isIncrement ? 1 : -1;\n      this.overlayRequests > 0 ? this.buildLoading() : this.destroyLoading();\n    }\n  }\n\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { ThfComponentInjectorService } from '../../services/thf-component-injector/thf-component-injector.service';\nimport { ThfHttpRequesControltService } from './thf-http-request-control-service';\nimport { ThfHttpRequestInterceptorService } from './thf-http-request-interceptor.service';\n\nimport { ThfLoadingComponent } from '../../components/thf-loading/thf-loading.component';\nimport { ThfLoadingOverlayComponent } from '../../components/thf-loading/thf-loading-overlay/thf-loading-overlay.component';\n\n@NgModule({\n  providers: [\n    ThfHttpRequesControltService,\n    ThfHttpRequestInterceptorService,\n    ThfComponentInjectorService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ThfHttpRequestInterceptorService,\n      multi: true\n    }\n  ],\n  entryComponents: [ThfLoadingOverlayComponent, ThfLoadingComponent]\n})\nexport class ThfHttpRequestModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfHttpInterceptorModule } from './thf-http-interceptor/thf-http-interceptor.module';\nimport { ThfHttpRequestModule } from './thf-http-request/thf-http-request.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    ThfHttpInterceptorModule,\n    ThfHttpRequestModule\n  ],\n  exports: [\n    ThfHttpInterceptorModule,\n    ThfHttpRequestModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class ThfInterceptorsModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfTimeModule } from '../pipes/thf-time/thf-time.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    ThfTimeModule\n  ],\n  exports: [\n    ThfTimeModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class ThfPipesModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfColorPaletteService } from './thf-color-palette.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `thf-color-palette`.\n */\n@NgModule({\n  providers: [\n    ThfColorPaletteService\n  ],\n  bootstrap: []\n})\nexport class ThfColorPaletteModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfComponentInjectorService } from './thf-component-injector.service';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    ThfComponentInjectorService\n  ],\n  bootstrap: []\n})\nexport class ThfComponentInjectorModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfControlPositionService } from './thf-control-position.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o thf-control-position.\n */\n@NgModule({\n  providers: [\n    ThfControlPositionService\n  ]\n})\nexport class ThfControlPositionModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfDateService } from './thf-date.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `thf-date`.\n */\n@NgModule({\n  providers: [\n    ThfDateService\n  ],\n  bootstrap: []\n})\nexport class ThfDateTimeModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfModalModule } from '../../components/thf-modal/thf-modal.module';\nimport { ThfDialogComponent } from './thf-dialog.component';\nimport { ThfDialogService } from './thf-dialog.service';\n\n@NgModule({\n  declarations: [\n    ThfDialogComponent\n  ],\n  imports: [\n    ThfModalModule\n  ],\n  exports: [\n    ThfDialogComponent\n  ],\n  entryComponents: [\n    ThfDialogComponent\n  ],\n  providers: [\n    ThfDialogService\n  ]\n})\nexport class ThfDialogModule { }\n","import { PipeTransform } from '@angular/core';\n\n/**\n * @description\n *\n * O pipe thf-i18n Ã© responsÃ¡vel por tratar literais parÃ¢metrizadas, dando mais flexibilidade as literais de traduÃ§Ã£o.\n * O nÃºmero de parÃ¢metros inseridos nas literais deve coincidir com a quantia de parÃ¢metros passados por parÃ¢metro,\n * os parÃ¢metros serÃ£o substituidos de acordo com a ordem informada.\n *\n * Para inserir um parÃ¢metro em uma literal, o mesmo deverÃ¡ ser inserido entre chaves dentro da literal e posicionado\n * de acordo como deve ser exibido apÃ³s a sua transformaÃ§Ã£o.\n *\n * ```\n * const i18nPT = {\n *   pagination: 'PÃ¡gina {1} de {2} pÃ¡ginas.',\n *   totalPages: 'Total de {totalPages} encontradas.'\n * };\n * ```\n *\n * Ã possÃ­vel passar um valor ou um array de valores para o pipe, caso seja passado um array, os valores devem obedecer a ordem\n * informada na literal.\n *\n * ```\n * {{ i18nPT.pagination | thfI18n:[1,10] }}\n * {{ i18nPT.totalPages | thfI18n:10 }}\n * ```\n */\nexport class ThfI18nBasePipe implements PipeTransform {\n\n  transform(value: string, args: any): string {\n    if (!value) {\n      return '';\n    }\n\n    if (!(args instanceof Array)) {\n      args = [args];\n    }\n\n    for (const arg of args) {\n      value = value.replace(/(\\{\\w*\\})+/,  arg);\n    }\n\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ThfI18nBasePipe } from './thf-i18n-base.pipe';\n\n/**\n * @docsExtends ThfI18nBasePipe\n *\n * @example\n * <example name='thf-i18n-pipe-labs' title='Totvs i18n Pipe Labs' >\n *  <file name='sample-thf-i18n-pipe-labs.component.html'> </file>\n *  <file name='sample-thf-i18n-pipe-labs.component.ts'> </file>\n *  <file name='sample-thf-i18n-pipe.component.html'> </file>\n *  <file name='sample-thf-i18n-pipe.component.ts'> </file>\n * </example>\n */\n@Pipe({\n  name: 'thfI18n'\n})\nexport class ThfI18nPipe extends ThfI18nBasePipe implements PipeTransform { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThfToasterComponent } from './thf-toaster/thf-toaster.component';\n\n@NgModule({\n  declarations: [\n    ThfToasterComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n  ],\n  entryComponents: [\n    ThfToasterComponent\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class ThfNotificationModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfColorPaletteModule } from './thf-color-palette/thf-color-palette.module';\nimport { ThfComponentInjectorModule } from './thf-component-injector/thf-component-injector.module';\nimport { ThfControlPositionModule } from './thf-control-position/thf-control-position.module';\nimport { ThfDateTimeModule } from './thf-date/thf-date.module';\nimport { ThfDialogModule } from './thf-dialog/thf-dialog.module';\nimport { ThfI18nPipe } from './thf-i18n/thf-i18n.pipe';\nimport { ThfLanguageModule } from './thf-language/thf-language.module';\nimport { ThfNotificationModule } from './thf-notification/thf-notification.module' ;\n\n@NgModule({\n  declarations: [\n    ThfI18nPipe\n  ],\n  imports: [\n    ThfColorPaletteModule,\n    ThfComponentInjectorModule,\n    ThfControlPositionModule,\n    ThfDateTimeModule,\n    ThfDialogModule,\n    ThfLanguageModule,\n    ThfNotificationModule\n  ],\n  exports: [\n    ThfColorPaletteModule,\n    ThfComponentInjectorModule,\n    ThfControlPositionModule,\n    ThfDateTimeModule,\n    ThfDialogModule,\n    ThfI18nPipe,\n    ThfNotificationModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class ThfServicesModule { }\n","import { NgModule } from '@angular/core';\n\nimport { ThfComponentsModule } from './components/components.module';\nimport { ThfDirectivesModule } from './directives/directives.module';\nimport { ThfGuardsModule } from './guards/guards.module';\nimport { ThfInterceptorsModule } from './interceptors/interceptors.module';\nimport { ThfPipesModule } from './pipes/pipes.module';\nimport { ThfServicesModule } from './services/services.module';\nimport { ThfNotificationService } from './services/thf-notification/thf-notification.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    ThfComponentsModule,\n    ThfDirectivesModule,\n    ThfGuardsModule,\n    ThfInterceptorsModule,\n    ThfPipesModule,\n    ThfServicesModule\n  ],\n  exports: [\n    ThfComponentsModule,\n    ThfDirectivesModule,\n    ThfInterceptorsModule,\n    ThfGuardsModule,\n    ThfPipesModule,\n    ThfServicesModule\n  ],\n  providers: [ ThfNotificationService ],\n  bootstrap: []\n})\nexport class ThfModule { }\n","import { InjectionToken } from '@angular/core';\n\nimport { ThfI18nConfig } from './interfaces/thf-i18n-config.interface';\n\nexport const I18N_CONFIG = new InjectionToken<ThfI18nConfig>('I18N_CONFIG');\n","import { HttpClient } from '@angular/common/http';\nimport { Inject } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { isLanguage, reloadCurrentPage } from '../../utils/util';\nimport { ThfLanguageService } from '../thf-language/thf-language.service';\n\nimport { I18N_CONFIG } from './thf-i18n-config-injection-token';\nimport { ThfI18nConfig } from './interfaces/thf-i18n-config.interface';\nimport { ThfI18nLiterals } from './interfaces/thf-i18n-literals.interface';\n\n/**\n * @description\n *\n * O serviÃ§o `ThfI18nService` possibilita utilizar mÃºltiplos idiomas e contextos na aplicaÃ§Ã£o.\n *\n * > Antes da utilizaÃ§Ã£o do serviÃ§o, Ã© necessÃ¡rio realizar a\n * [importaÃ§Ã£o e configuraÃ§Ã£o do mÃ³dulo `ThfI18nModule`](/documentation/thf-i18n#i18n-config).\n *\n * **UtilizaÃ§Ã£o do serviÃ§o `ThfI18nService`:**\n *\n * Para utilizar o serviÃ§o basta importÃ¡-lo nos componentes que necessitarem de literais e fazer a injeÃ§Ã£o de\n * dependÃªncia no construtor:\n * ```\n *  import { ThfI18nService } from '@totvs/thf-ui';\n *  ...\n *  constructor(private thfI18nService: ThfI18nService) { }\n *  ...\n * ```\n *\n * Por fim realizar a busca pelas literais, inscrevendo-se no [Observable](https://angular.io/guide/observables) pelo\n * mÃ©todo `getLiterals()`.\n *\n * > O mÃ©todo `getLiterals()` pode receber um objeto do tipo da interface `ThfI18nLiterals` como parÃ¢metro,\n * porÃ©m, nenhuma das propriedades sÃ£o obrigatÃ³rias. Caso nenhum parÃ¢metro seja passado, serÃ£o buscadas\n * todas as literais do contexto definido com padrÃ£o, no idioma definido como padrÃ£o.\n *\n * Exemplos de requisiÃ§Ã£o:\n * ```\n * literals = {};\n * literalsEn = {};\n * literalsCrm = {};\n *\n * constructor(private thfI18nService: ThfI18nService) {\n *   thfI18nService.getLiterals()\n *     .subscribe((literals) => {\n *       this.literals = literals;\n *     });\n *\n *   thfI18nService.getLiterals({context: 'crm', literals: ['add', 'remove']})\n *     .subscribe((literals) => {\n *       this.literalsCrm = literals;\n *     });\n *\n *   thfI18nService.getLiterals({language: 'en-us'})\n *     .subscribe((literals) => {\n *       this.literalsEn = literals;\n *     });\n * }\n * ```\n *\n * Para apresentar as literais capturadas acima no HTML do componente, deve-se utilizar o\n * seguinte cÃ³digo:\n *\n * <pre ngNonBindable>\n * {{ literals?.add }}\n * {{ literals?.remove }}\n * </pre>\n *\n * Caso as literais contenham variÃ¡veis que precisem ser substituÃ­das, pode-se utilizar o *pipe* `thfI18n`.\n * Ã possÃ­vel informar propriedades do componente como `name` e `nickname` ou\n * informar o valor diretamente com \"\" ou nÃºmero, conforme o exemplo abaixo:\n *\n * <pre ngNonBindable>\n * {{ literals?.people | thfI18n:[120] }}\n * {{ literals?.greeting | thfI18n:[name, nickname] }}\n * {{ literals?.greeting | thfI18n:[\"Brad\", \"Green\"] }}\n * </pre>\n *\n * > Ã importante o uso do operador `?` (Elvis) para evitar erros enquanto as literais nÃ£o forem carregadas.\n *\n * ### Teste unitÃ¡rio\n *\n * Abaixo segue um exemplo de *setup* inicial de teste unitÃ¡rio do *AppComponent* que utiliza o `ThfI18nService`:\n *\n * ```\n * import { async, TestBed } from '@angular/core/testing';\n * import { HttpClientTestingModule } from '@angular/common/http/testing';\n *\n * import { ThfI18nModule } from '@totvs/thf-ui';\n *\n * import { AppComponent } from './app.component';\n *\n * describe('AppComponent', () => {\n *   const anotherPT = {\n *     text: 'texto',\n *     add: 'adicionar',\n *     remove: 'remover'\n *   };\n *\n *   const generalPT = {\n *     text: 'texto',\n *     add: 'adicionar',\n *     remove: 'remover'\n *   };\n *\n *   const config = {\n *     default: {\n *       language: 'pt-BR',\n *       context: 'general',\n *       cache: false\n *     },\n *     contexts: {\n *       general: {\n *         'pt-br': generalPT\n *       },\n *       another: {\n *         'pt-br': anotherPT\n *       }\n *     }\n *   };\n *\n *   beforeEach(async(() => {\n *     TestBed.configureTestingModule({\n *       declarations: [\n *         AppComponent\n *       ],\n *       imports: [\n *         HttpClientTestingModule,\n *         ThfI18nModule.config(config)\n *       ]\n *     }).compileComponents();\n *   }));\n *\n *   it('should create the app', async(() => {\n *     const fixture = TestBed.createComponent(AppComponent);\n *     const app = fixture.debugElement.componentInstance;\n *\n *     expect(app).toBeTruthy();\n *   }));\n *\n * });\n * ```\n */\n\nexport class ThfI18nBaseService {\n\n  private varI18n: any = {};\n\n  private contextDefault: string;\n\n  private useCache: boolean = false;\n\n  private servicesContext: any = {};\n\n  constructor(\n    @Inject(I18N_CONFIG) private config?: ThfI18nConfig,\n    @Inject(HttpClient) private http?: HttpClient,\n    private languageService?: ThfLanguageService) {\n\n    this.setConfig(config);\n  }\n\n  /**\n   * <a id=\"get-language\"></a>\n   * MÃ©todo que retorna o idioma padrÃ£o ativo.\n   *\n   * A busca deste idioma pelo mÃ©todo serÃ¡ feita na seguinte ordem:\n   *\n   *   1 - o idioma que foi armazenado no *localStorage*, atravÃ©s do mÃ©todo [`setLanguage()`](documentation/thf-i18n#setLanguage).\n   *\n   *   2 - o valor inserido no mÃ³dulo do i18n atravÃ©s do parÃ¢metro `config`, sendo o idioma inserido na propriedade\n   * `language` da interface [`ThfI18nConfigDefault`](documentation/thf-i18n#thfI18nConfigDefault).\n   *\n   *   3 - o idioma do navegador utilizado.\n   *\n   * > Caso o idioma do navegador nÃ£o seja suportado pelo THF (`pt`, `en` ou `es`), serÃ¡ retornado valor `pt`.\n   *\n   * **Retorno:**\n   *\n   * `string` com a sigla do idioma padrÃ£o.\n   */\n  getLanguage(): string {\n    return this.languageService.getLanguage();\n  }\n\n  /**\n   * MÃ©todo que retorna o idioma padrÃ£o ativo, com somente a abreviaÃ§Ã£o do idioma (duas primeiras letras).\n   * Por exemplo: \"pt\" ou \"es\".\n   *\n   * A busca deste idioma Ã© baseada no mÃ©todo [**getLanguage()**](/documentation/thf-i18n#get-language).\n   *\n   * **Retorno:**\n   *\n   * `string` com a sigla do idioma padrÃ£o.\n   */\n  getShortLanguage(): string {\n    return this.languageService.getShortLanguage();\n  }\n\n  /**\n   * <a id=\"setLanguage\"></a>\n   * MÃ©todo para alterar o idioma padrÃ£o do mÃ³dulo do i18n.\n   *\n   * Ao utilizar este mÃ©todo, o idioma ficarÃ¡ gravado no armazenamento local do navegador, que serÃ¡ utilizado pelo\n   * serviÃ§o do `i18n` para buscar as literais no idioma padrÃ£o.\n   *\n   * @param language {string} Sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   *\n   * @param reload {boolean} Indica se a pÃ¡gina atual poderÃ¡ ser recarregada apÃ³s a alteraÃ§Ã£o do idioma.\n   *\n   * Este recurso pode ser Ãºtil para os usuÃ¡rios que utilizam o mÃ©todo `getLiterals()` do serviÃ§o do i18n para poder\n   * buscar novamente as literais no novo idioma configurado.\n   */\n  setLanguage(language: string, reload?: boolean): void {\n\n    if (!isLanguage(language)) {\n      return;\n    }\n\n    this.languageService.setLanguage(language);\n\n    if (reload) {\n      reloadCurrentPage();\n    }\n\n  }\n\n  private setConfig(config: ThfI18nConfig) {\n    // Seta as configuraÃ§Ãµes padrÃµes definidas no importaÃ§Ã£o do mÃ³dulo\n    if (config['default']) {\n\n      this.languageService.setLanguageDefault(config['default']['language']);\n\n      this.contextDefault = (config['default']['context']) ? config['default']['context'] : '';\n      this.useCache = (config['default']['cache']) ? config['default']['cache'] : false;\n    }\n\n    // Carrega a lista dos contextos e as contantes informadas\n    if (config['contexts']) {\n      this.setVarI18n(config['contexts']);\n\n      // Se nenhum contexto foi definido como padrÃ£o,\n      // entÃ£o define o primeiro contexto\n      if (!this.contextDefault) {\n        for (const context in config['contexts']) {\n          if (this.config['contexts'].hasOwnProperty(context)) {\n            this.contextDefault = context;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  getLiterals(options: ThfI18nLiterals = {}): Observable<object> {\n    const language = options['language'] ? options['language'].toLowerCase() : this.getLanguage();\n    const context = (options['context']) ? options['context'] : this.contextDefault;\n    const literals: Array<string> = (options['literals']) ? options['literals'] : [];\n\n    return new Observable(observer => {\n      if (this.servicesContext[context]) {\n        // Faz o processo de busca de um contexto que contÃ©m serviÃ§o\n        this.getLiteralsFromContextService(language, context, literals, observer);\n      } else {\n        // Faz o processo de busca de um contexto que utiliza constante\n        this.getLiteralsFromContextConstant(language, context, literals, observer);\n      }\n    });\n  }\n\n  // Processo de busca de um contexto que contÃ©m serviÃ§o.\n  //    1 - Procura na variÃ¡vel I18n deste serviÃ§o\n  //    2 - Procura no local storage (Se o cache estiver definido como true na configuraÃ§Ã£o do mÃ³dulo)\n  //    3 - Dispara o serviÃ§o, mesmo que jÃ¡ tenha encontrado no local storage, para garantir a atualizaÃ§Ã£o\n  //    4 - Se nenhuma literal for encontrada, entÃ£o busca em pt-br\n  private getLiteralsFromContextService(language: string,\n                                        context: string,\n                                        literals: Array<string>,\n                                        observer: any,\n                                        translations: any = {},\n                                        languageAlternative: string = null) {\n\n    // Idioma usado para tentar buscar as literais faltantes\n    const languageSearch = (languageAlternative) ? languageAlternative : language;\n\n    translations = this.mergeObject(translations, this.searchInVarI18n(languageSearch, context, literals));\n\n    if (this.countObject(translations) > 0) {\n      observer.next(translations);\n    }\n\n    // realiza a busca no localStorage e em seguida no serviÃ§o\n    this.getLiteralsLocalStorageAndCache(languageSearch, context, literals, observer, translations, languageAlternative);\n  }\n\n  // Procura no local storage e em seguida no serviÃ§o\n  // Caso nÃ£o encontre nem no serviÃ§o, recomeÃ§a a busca em pt-br\n  private getLiteralsLocalStorageAndCache(language: string,\n                                          context: string,\n                                          literals: Array<string>,\n                                          observer: any,\n                                          translations: any,\n                                          languageAlternative: string = null) {\n\n    const languageSearch = (languageAlternative) ? languageAlternative : language;\n    let translationTemp;\n    // Verifica se usa cache\n    if (this.useCache) {\n      translationTemp = this.searchInLocalStorage(languageSearch, context, literals);\n      if (this.countObject(translationTemp) > 0) {\n        this.updateVarI18n(language, context, translationTemp);\n        translations = this.mergeObject(translationTemp, translations);\n        observer.next(translations);\n      }\n    }\n\n    // Busca do ServiÃ§o\n    this.getHttpService(this.servicesContext[context], languageSearch, literals)\n      .subscribe(\n        response => {\n          if (response) {\n            this.updateLocalStorage(language, context, response);\n            this.updateVarI18n(language, context, response);\n            translationTemp = this.searchInVarI18n(language, context, literals);\n            translations = this.mergeObject(translationTemp, translations);\n            observer.next(translations);\n          }\n\n          // Se nÃ£o encontrou todas as literais pesquisadas no idioma\n          // EntÃ£o refaz o processo procurando em portuguÃªs\n          if (literals.length > this.countObject(translations)) {\n            if (languageAlternative === 'pt-br') {\n              // Se nÃ£o encontrou nem em portuguÃªs, entÃ£o retorna o nome das literais\n              translations = this.completeFaultLiterals(language, context, literals, translations);\n              this.updateLocalStorage(language, context, translations);\n              this.updateVarI18n(language, context, translations);\n              observer.next(translations);\n            } else {\n              this.getLiteralsFromContextService(language, context, literals, observer, translations, 'pt-br');\n            }\n          }\n        });\n  }\n\n  // Procura pela lista de literais\n  // Se nÃ£o encontrar todas, procura em pt-br\n  private getLiteralsFromContextConstant(language: string,\n                                         context: string,\n                                         literals: Array<string>,\n                                         observer: any,\n                                         translations: any = {}) {\n\n    translations = this.mergeObject(translations, this.searchInVarI18n(language, context, literals));\n    if (this.countObject(translations) > 0) {\n      observer.next(translations);\n    }\n\n    // Se foi pesquisado por literais\n    if (literals.length > 0) {\n      // Se nÃ£o encontrou todas as literais pesquisadas no idioma, procura em portuguÃªs\n      if (literals.length > this.countObject(translations)) {\n        if (language === 'pt-br') {\n          // Se nÃ£o encontrou nem em portuguÃªs, entÃ£o retorna o nome das literais\n          translations = this.completeFaultLiterals(language, context, literals, translations);\n          observer.next(translations);\n        } else {\n          this.getLiteralsFromContextConstant('pt-br', context, literals, observer, translations);\n        }\n      }\n    } else {\n      // Se nÃ£o encontrar nenhuma literal, procura em portuguÃªs\n      if (this.countObject(translations) === 0 && language !== 'pt-br') {\n        this.getLiteralsFromContextConstant('pt-br', context, literals, observer, translations);\n      }\n\n      // caso nÃ£o informar literais e nÃ£o houver traduÃ§Ã£o\n      observer.next(translations);\n      observer.complete();\n    }\n  }\n\n  // Busca pelas literais no local storage\n  private searchInLocalStorage(language: string, context: string, literals: Array<string>): any {\n    const translations: any = {};\n\n    if (literals.length > 0) {\n      for (let i = 0; i < literals.length; i++) {\n        const literal = literals[i];\n        const translation = localStorage.getItem(language + '-' + context + '-' + literal);\n        if (translation) {\n          translations[literal] = translation;\n        }\n      }\n    }\n    return translations;\n  }\n\n  // Busca pelas literais na variÃ¡vel do serviÃ§o\n  private searchInVarI18n(language: string, context: string, literals: Array<string>): any {\n    let translations: any = {};\n\n    if (this.varI18n[language] && this.varI18n[language][context]) {\n      const content = this.varI18n[language][context];\n\n      if (literals.length > 0) {\n        // Busca as literais desejadas\n        for (let i = 0; i < literals.length; i++) {\n          const literal = literals[i];\n          if (content.hasOwnProperty(literal)) {\n            translations[literal] = content[literal];\n          }\n        }\n      } else {\n        // Atribui todas as literais\n        translations = { ...content };\n      }\n    }\n    return translations;\n  }\n\n  // Atualiza o local storage\n  private updateLocalStorage(language: string, context: string, data: any) {\n    if (this.useCache) {\n      for (const literal in data) {\n        if (data.hasOwnProperty(literal)) {\n          localStorage.setItem(language + '-' + context + '-' + literal, data[literal]);\n        }\n      }\n    }\n  }\n\n  // Atualiza a variÃ¡vel local com as literais com os objetos passados na configuraÃ§Ã£o\n  private setVarI18n(contexts: any) {\n    // Percorre os contextos\n    for (const context in contexts) {\n      if (contexts.hasOwnProperty(context)) {\n        const contextContent = contexts[context];\n\n        // Percorre os idiomas dentro do contexto\n        for (const language in contextContent) {\n          if (contextContent.hasOwnProperty(language)) {\n            const languageContent = contextContent[language];\n\n            if (language === 'url') {\n              this.servicesContext[context] = languageContent;\n            } else {\n              this.updateVarI18n(language, context, languageContent);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Atualiza a variÃ¡vel local com as literais idioma e contexto\n  private updateVarI18n(language: string, context: string, data: any) {\n    language = language.toLowerCase();\n\n    if (!this.varI18n[language]) {\n      this.varI18n[language] = {[context]: {}};\n    }\n    if (!this.varI18n[language][context]) {\n      this.varI18n[language][context] = {};\n    }\n\n    // Cria ou atualiza o contexto dentro do storage\n    this.varI18n[language][context] = this.mergeObject(data, this.varI18n[language][context]);\n  }\n\n  private getHttpService(url: string, language: string, literals: Array<string>): Observable<object> {\n    let param = '?language=' + language;\n    if (literals.length > 0) {\n      param += '&literals=' + literals.join();\n    }\n\n    // Remove a barra final do endereÃ§o\n    url = (url.lastIndexOf('/') === url.length - 1) ? url.substr(0, url.length - 1) : url;\n\n    return this.http.get(url + param);\n  }\n\n  // Completa com o nome da literais, as que nÃ£o foram encontradas\n  private completeFaultLiterals(language: string,\n                                context: string,\n                                literals: Array<string>,\n                                translations: any) {\n    for (let i = 0; i < literals.length; i++) {\n      const literal = literals[i];\n      if (!translations[literal]) {\n        translations[literal] = literal;\n      }\n    }\n    return translations;\n  }\n\n  // Conta os atributos do objeto\n  private countObject(obj: object) {\n    return Object.keys(obj).length;\n  }\n\n  // Faz o merge dos objetos, sempre dando preferÃªncia para o primeiro objeto de parÃ¢metro\n  private mergeObject(objPermanent: any, obj: any) {\n    return { ...obj, ...objPermanent };\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ThfLanguageService } from './../thf-language/thf-language.service';\n\nimport { ThfI18nBaseService } from './thf-i18n-base.service';\nimport { ThfI18nConfig } from './interfaces/thf-i18n-config.interface';\n\n/**\n * @docsExtends ThfI18nBaseService\n */\n\n@Injectable()\nexport class ThfI18nService extends ThfI18nBaseService { }\n\n// FunÃ§Ã£o usada para retornar instÃ¢ncia para o mÃ³dulo thf-i18n.module\nexport function returnThfI18nService(config: ThfI18nConfig, http: HttpClient, languageService: ThfLanguageService) {\n  return new ThfI18nService(config, http, languageService);\n}\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ThfLanguageService } from './../thf-language/thf-language.service';\n\nimport { I18N_CONFIG } from './thf-i18n-config-injection-token';\nimport { returnThfI18nService, ThfI18nService } from './thf-i18n.service';\nimport { ThfI18nConfig } from './interfaces/thf-i18n-config.interface';\nimport { ThfLanguageModule } from '../thf-language/thf-language.module';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `ThfI18nService` para controle de idiomas com THF.\n *\n * Para utilizaÃ§Ã£o do serviÃ§o de idiomas `ThfI18nService`, deve-se importar este mÃ³dulo mesmo jÃ¡ havendo importado\n * o mÃ³dulo `ThfModule`. Na importaÃ§Ã£o deve ser invocado o mÃ©todo `config`, informando um objeto que deve implementar\n * a interface [`ThfI18nConfig`](documentation/thf-i18n#thfI18nConfig) para configuraÃ§Ã£o.\n *\n * <a id=\"i18n-config\"></a>\n * **Exemplo de configuraÃ§Ã£o do mÃ³dulo do i18n:**\n * ```\n * import { ThfI18nConfig } from '@totvs/thf-ui';\n *\n * import { generalEn } from './i18n/general-en';\n * import { generalPt } from './i18n/general-pt';\n *\n * const i18nConfig: ThfI18nConfig = {\n *   default: {\n *     language: 'pt-BR',\n *     context: 'general',\n *     cache: true\n *   },\n *   contexts: {\n *     general: {\n *       'pt-BR': generalPt,\n *       'en-US': generalEn\n *     },\n *     hcm: {\n *       url: 'http://10.1.1.1/api/translations/hcm/'\n *     }\n *   }\n * };\n *\n * @NgModule({\n *   declarations: [],\n *   imports: [\n *     ThfModule,\n *     ThfI18nModule.config(i18nConfig)\n *   ],\n *   bootstrap: [AppComponent]\n * })\n * ```\n *\n * Para cada contexto Ã© possÃ­vel definir a origem das literais, que podem ser de um serviÃ§o REST ou\n * de um objeto. Exemplo:\n *\n * Arquivo general-pt.ts\n * ```\n * export const generalPt = {\n *  add: 'Adicionar',\n *  greeting: 'Prazer, {0} {1}',\n *  people: '{0} Pessoas,\n *  remove: 'Remover'\n * }\n * ```\n *\n * Arquivo general-en.ts\n * ```\n * export const generalEn = {\n *  add: 'Add',\n *  greeting: 'Nice to meet you, {0} {1}',\n *  people: '{0} People,\n *  remove: 'Remove'\n * }\n * ```\n *\n * **Exemplo de configuraÃ§Ã£o de contextos usando constantes externas:**\n * ```\n * import { ThfI18nConfig } from '@totvs/thf-ui';\n *\n * import { generalEn } from './i18n/general-en';\n * import { generalPt } from './i18n/general-pt';\n *\n * const i18nConfig: ThfI18nConfig = {\n *   contexts: {\n *     general: {\n *       'pt-BR': generalPt, // constantes em arquivos separados\n *       'en-US': generalEn // constantes em arquivos separados\n *     },\n *     crm: {\n *       url: 'http://10.0.0.1:3000/api/translations/crm'\n *     }\n *   },\n *   default: {}\n * }\n * ```\n *\n * **Exemplo de configuraÃ§Ã£o de um contexto utilizando serviÃ§o:**\n *\n * Ao optar por utilizar um serviÃ§o para configuraÃ§Ã£o de contexto, deverÃ¡ ser definida a URL\n * especÃ­fica do contexto, como nos exemplos abaixo:\n *\n *  - http://10.0.0.1:3000/api/translations/crm\n *  - http://10.0.0.1:3000/api/translations/general\n *\n * Os idiomas e literais serÃ£o automaticamente buscados com parÃ¢metros na prÃ³pria URL:\n * - **language**: o idioma serÃ¡ sempre passado por parÃ¢metro e Ã© recomendado utilizar uma das linguagens\n * suportadas pelo THF (`pt-br`, `en-us` ou `es-es`).\n * - **literals**: as literais serÃ£o separadas por vÃ­rgula. Caso esse parÃ¢metro nÃ£o seja informado, o\n * serviÃ§o deve retornar todas as literais do idioma.\n *\n * Exemplos de requisiÃ§Ã£o:\n *\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br&literals=add,remove,text\n *\n * > Sempre que o idioma solicitado nÃ£o for encontrado, serÃ¡ buscado por `pt-br`.\n *\n * AlÃ©m dos contextos, Ã© possÃ­vel definir as configuraÃ§Ãµes *default* do sistema na configuraÃ§Ã£o do\n * mÃ³dulo utilizando a interface [`ThfI18nConfig`](documentation/thf-i18n#thfI18nConfig):\n *\n * **Exemplo de padrÃµes definidos:**\n * ```\n * const i18nConfig: ThfI18nConfig = {\n *   contexts: {\n *     general: { }\n *   },\n *   default: {\n *    language: 'pt-BR',\n *    context: 'general',\n *    cache: true\n *   }\n * }\n * ```\n *\n * **Importante:**\n *\n * Recomenda-se que as definiÃ§Ãµes *default* sejam realizadas apenas uma vez na aplicaÃ§Ã£o,\n * preferencialmente no mÃ³dulo `AppModule`.\n *\n * **i18n com *Lazy loading***\n *\n * Para aplicaÃ§Ãµes que utilizem a abordagem de mÃ³dulos com carregamento *lazy loading*, caso seja\n * definida outra configuraÃ§Ã£o do `ThfI18nModule`, deve-se atentar os seguintes detalhes:\n *\n * - Caso existam literais comuns na aplicaÃ§Ã£o, estas devem ser reimportadas;\n * - NÃ£o defina outra *default language* para este mÃ³dulo. Caso for definida, serÃ¡ sobreposta para\n * toda a aplicaÃ§Ã£o;\n * - Caso precise de mÃ³dulos carregados via *lazy loading* com linguagens diferentes, utilize o\n * mÃ©todo [`setLanguage()`](documentation/thf-i18n#setLanguage) disponibilizado pelo `ThfI18nService`\n * para definir a linguagem da aplicaÃ§Ã£o e dos mÃ³dulos com as linguagens diferentes.\n */\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    ThfLanguageModule\n  ]\n})\nexport class ThfI18nModule {\n\n  static config(config: ThfI18nConfig): ModuleWithProviders {\n    return {\n      ngModule: ThfI18nModule,\n      providers: [\n        {\n          provide: I18N_CONFIG,\n          useValue: config\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initializeLanguageDefault,\n          multi: true,\n          deps: [I18N_CONFIG, ThfLanguageService]\n        },\n        {\n          provide: ThfI18nService,\n          useFactory: returnThfI18nService,\n          deps: [I18N_CONFIG, HttpClient, ThfLanguageService]\n        }\n      ]\n    };\n  }\n\n}\n\nexport function initializeLanguageDefault(config: ThfI18nConfig, languageService: ThfLanguageService) {\n  // tslint:disable-next-line:prefer-immediate-return\n  const setDefaultLanguage = () => {\n    if (config.default.language) {\n      languageService.setLanguageDefault(config.default.language);\n    }\n  };\n  return setDefaultLanguage;\n}\n"],"names":["tslib_1.__extends","uuid","thfCalendarLocaleDefault","thfCalendarLocales","ThfCalendarService","ThfCalendarLangService","ThfCalendarComponent","tslib_1.__values"],"mappings":"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"}