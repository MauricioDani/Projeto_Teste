/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ThfColorPaletteEnum } from '../../enums/thf-color-palette.enum';
var ThfColorPaletteService = /** @class */ (function () {
    function ThfColorPaletteService() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    ThfColorPaletteService.prototype.getColor = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return ((/** @type {?} */ (Object))).values(ThfColorPaletteEnum).includes(value.color) ?
            value.color : this.getColorFromType(value.type || value.color);
    };
    /**
     * @private
     * @param {?} type
     * @return {?}
     */
    ThfColorPaletteService.prototype.getColorFromType = /**
     * @private
     * @param {?} type
     * @return {?}
     */
    function (type) {
        switch (type) {
            case 'danger':
                return ThfColorPaletteEnum.Color07;
            case 'success':
                return ThfColorPaletteEnum.Color11;
            case 'warning':
                return ThfColorPaletteEnum.Color08;
            default:
                return ThfColorPaletteEnum.Color01;
        }
    };
    ThfColorPaletteService.decorators = [
        { type: Injectable }
    ];
    return ThfColorPaletteService;
}());
export { ThfColorPaletteService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWNvbG9yLXBhbGV0dGUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvdGhmLWNvbG9yLXBhbGV0dGUvdGhmLWNvbG9yLXBhbGV0dGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUV6RTtJQUFBO0lBcUJBLENBQUM7Ozs7O0lBbEJDLHlDQUFROzs7O0lBQVIsVUFBUyxLQUF3QztRQUMvQyxPQUFPLENBQUMsbUJBQUssTUFBTSxFQUFBLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDdEUsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25FLENBQUM7Ozs7OztJQUVPLGlEQUFnQjs7Ozs7SUFBeEIsVUFBeUIsSUFBWTtRQUNuQyxRQUFRLElBQUksRUFBRTtZQUNaLEtBQUssUUFBUTtnQkFDWCxPQUFPLG1CQUFtQixDQUFDLE9BQU8sQ0FBQztZQUNyQyxLQUFLLFNBQVM7Z0JBQ1osT0FBTyxtQkFBbUIsQ0FBQyxPQUFPLENBQUM7WUFDckMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sbUJBQW1CLENBQUMsT0FBTyxDQUFDO1lBQ3JDO2dCQUNFLE9BQU8sbUJBQW1CLENBQUMsT0FBTyxDQUFDO1NBQ3RDO0lBQ0gsQ0FBQzs7Z0JBbkJGLFVBQVU7O0lBcUJYLDZCQUFDO0NBQUEsQUFyQkQsSUFxQkM7U0FwQlksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaGZDb2xvclBhbGV0dGVFbnVtIH0gZnJvbSAnLi4vLi4vZW51bXMvdGhmLWNvbG9yLXBhbGV0dGUuZW51bSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUaGZDb2xvclBhbGV0dGVTZXJ2aWNlIHtcblxuICBnZXRDb2xvcih2YWx1ZTogeyBjb2xvcj86IHN0cmluZywgdHlwZT86IHN0cmluZyB9KTogc3RyaW5nIHtcbiAgICByZXR1cm4gKDxhbnk+T2JqZWN0KS52YWx1ZXMoVGhmQ29sb3JQYWxldHRlRW51bSkuaW5jbHVkZXModmFsdWUuY29sb3IpID9cbiAgICAgIHZhbHVlLmNvbG9yIDogdGhpcy5nZXRDb2xvckZyb21UeXBlKHZhbHVlLnR5cGUgfHwgdmFsdWUuY29sb3IpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRDb2xvckZyb21UeXBlKHR5cGU6IHN0cmluZyk6IFRoZkNvbG9yUGFsZXR0ZUVudW0ge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSAnZGFuZ2VyJzpcbiAgICAgICAgcmV0dXJuIFRoZkNvbG9yUGFsZXR0ZUVudW0uQ29sb3IwNztcbiAgICAgIGNhc2UgJ3N1Y2Nlc3MnOlxuICAgICAgICByZXR1cm4gVGhmQ29sb3JQYWxldHRlRW51bS5Db2xvcjExO1xuICAgICAgY2FzZSAnd2FybmluZyc6XG4gICAgICAgIHJldHVybiBUaGZDb2xvclBhbGV0dGVFbnVtLkNvbG9yMDg7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gVGhmQ29sb3JQYWxldHRlRW51bS5Db2xvcjAxO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=