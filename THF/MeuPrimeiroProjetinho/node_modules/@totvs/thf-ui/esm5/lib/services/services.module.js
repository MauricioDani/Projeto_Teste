/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { ThfColorPaletteModule } from './thf-color-palette/thf-color-palette.module';
import { ThfComponentInjectorModule } from './thf-component-injector/thf-component-injector.module';
import { ThfControlPositionModule } from './thf-control-position/thf-control-position.module';
import { ThfDateTimeModule } from './thf-date/thf-date.module';
import { ThfDialogModule } from './thf-dialog/thf-dialog.module';
import { ThfI18nPipe } from './thf-i18n/thf-i18n.pipe';
import { ThfLanguageModule } from './thf-language/thf-language.module';
import { ThfNotificationModule } from './thf-notification/thf-notification.module';
var ThfServicesModule = /** @class */ (function () {
    function ThfServicesModule() {
    }
    ThfServicesModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        ThfI18nPipe
                    ],
                    imports: [
                        ThfColorPaletteModule,
                        ThfComponentInjectorModule,
                        ThfControlPositionModule,
                        ThfDateTimeModule,
                        ThfDialogModule,
                        ThfLanguageModule,
                        ThfNotificationModule
                    ],
                    exports: [
                        ThfColorPaletteModule,
                        ThfComponentInjectorModule,
                        ThfControlPositionModule,
                        ThfDateTimeModule,
                        ThfDialogModule,
                        ThfI18nPipe,
                        ThfNotificationModule
                    ],
                    providers: [],
                    bootstrap: []
                },] }
    ];
    return ThfServicesModule;
}());
export { ThfServicesModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9zZXJ2aWNlcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDckYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFDcEcsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFDOUYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBRTtBQUVwRjtJQUFBO0lBeUJpQyxDQUFDOztnQkF6QmpDLFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osV0FBVztxQkFDWjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AscUJBQXFCO3dCQUNyQiwwQkFBMEI7d0JBQzFCLHdCQUF3Qjt3QkFDeEIsaUJBQWlCO3dCQUNqQixlQUFlO3dCQUNmLGlCQUFpQjt3QkFDakIscUJBQXFCO3FCQUN0QjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AscUJBQXFCO3dCQUNyQiwwQkFBMEI7d0JBQzFCLHdCQUF3Qjt3QkFDeEIsaUJBQWlCO3dCQUNqQixlQUFlO3dCQUNmLFdBQVc7d0JBQ1gscUJBQXFCO3FCQUN0QjtvQkFDRCxTQUFTLEVBQUUsRUFBRTtvQkFDYixTQUFTLEVBQUUsRUFBRTtpQkFDZDs7SUFDZ0Msd0JBQUM7Q0FBQSxBQXpCbEMsSUF5QmtDO1NBQXJCLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZkNvbG9yUGFsZXR0ZU1vZHVsZSB9IGZyb20gJy4vdGhmLWNvbG9yLXBhbGV0dGUvdGhmLWNvbG9yLXBhbGV0dGUubW9kdWxlJztcbmltcG9ydCB7IFRoZkNvbXBvbmVudEluamVjdG9yTW9kdWxlIH0gZnJvbSAnLi90aGYtY29tcG9uZW50LWluamVjdG9yL3RoZi1jb21wb25lbnQtaW5qZWN0b3IubW9kdWxlJztcbmltcG9ydCB7IFRoZkNvbnRyb2xQb3NpdGlvbk1vZHVsZSB9IGZyb20gJy4vdGhmLWNvbnRyb2wtcG9zaXRpb24vdGhmLWNvbnRyb2wtcG9zaXRpb24ubW9kdWxlJztcbmltcG9ydCB7IFRoZkRhdGVUaW1lTW9kdWxlIH0gZnJvbSAnLi90aGYtZGF0ZS90aGYtZGF0ZS5tb2R1bGUnO1xuaW1wb3J0IHsgVGhmRGlhbG9nTW9kdWxlIH0gZnJvbSAnLi90aGYtZGlhbG9nL3RoZi1kaWFsb2cubW9kdWxlJztcbmltcG9ydCB7IFRoZkkxOG5QaXBlIH0gZnJvbSAnLi90aGYtaTE4bi90aGYtaTE4bi5waXBlJztcbmltcG9ydCB7IFRoZkxhbmd1YWdlTW9kdWxlIH0gZnJvbSAnLi90aGYtbGFuZ3VhZ2UvdGhmLWxhbmd1YWdlLm1vZHVsZSc7XG5pbXBvcnQgeyBUaGZOb3RpZmljYXRpb25Nb2R1bGUgfSBmcm9tICcuL3RoZi1ub3RpZmljYXRpb24vdGhmLW5vdGlmaWNhdGlvbi5tb2R1bGUnIDtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgVGhmSTE4blBpcGVcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIFRoZkNvbG9yUGFsZXR0ZU1vZHVsZSxcbiAgICBUaGZDb21wb25lbnRJbmplY3Rvck1vZHVsZSxcbiAgICBUaGZDb250cm9sUG9zaXRpb25Nb2R1bGUsXG4gICAgVGhmRGF0ZVRpbWVNb2R1bGUsXG4gICAgVGhmRGlhbG9nTW9kdWxlLFxuICAgIFRoZkxhbmd1YWdlTW9kdWxlLFxuICAgIFRoZk5vdGlmaWNhdGlvbk1vZHVsZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgVGhmQ29sb3JQYWxldHRlTW9kdWxlLFxuICAgIFRoZkNvbXBvbmVudEluamVjdG9yTW9kdWxlLFxuICAgIFRoZkNvbnRyb2xQb3NpdGlvbk1vZHVsZSxcbiAgICBUaGZEYXRlVGltZU1vZHVsZSxcbiAgICBUaGZEaWFsb2dNb2R1bGUsXG4gICAgVGhmSTE4blBpcGUsXG4gICAgVGhmTm90aWZpY2F0aW9uTW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW10sXG4gIGJvb3RzdHJhcDogW11cbn0pXG5leHBvcnQgY2xhc3MgVGhmU2VydmljZXNNb2R1bGUgeyB9XG4iXX0=