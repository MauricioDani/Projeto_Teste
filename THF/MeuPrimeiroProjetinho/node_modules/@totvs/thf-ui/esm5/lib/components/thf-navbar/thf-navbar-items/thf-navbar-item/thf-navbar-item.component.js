/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
import { isExternalLink } from '../../../../utils/util';
var ThfNavbarItemComponent = /** @class */ (function () {
    function ThfNavbarItemComponent() {
        this.click = new EventEmitter();
    }
    Object.defineProperty(ThfNavbarItemComponent.prototype, "type", {
        get: /**
         * @return {?}
         */
        function () {
            if (isExternalLink(this.link)) {
                return 'externalLink';
            }
            return 'internalLink';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ThfNavbarItemComponent.prototype.itemClick = /**
     * @return {?}
     */
    function () {
        if (this.action) {
            this.action({ label: this.label, link: this.link });
        }
        this.click.emit();
    };
    ThfNavbarItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-navbar-item',
                    template: "<ng-container [ngSwitch]=\"type\">\n\n  <a *ngSwitchCase=\"'externalLink'\"\n    class=\"thf-navbar-item-link\"\n    [class.thf-clickable]=\"clickable\"\n    [href]=\"link\" \n    target=\"_blank\"\n    (click)=\"itemClick()\">{{ label }}</a>\n\n  <a *ngSwitchCase=\"'internalLink'\"\n    class=\"thf-navbar-item-link\"\n    [class.thf-clickable]=\"clickable\"\n    [routerLink]=\"link\"\n    (click)=\"itemClick()\">{{ label }}</a>\n\n</ng-container>\n"
                }] }
    ];
    ThfNavbarItemComponent.propDecorators = {
        action: [{ type: Input, args: ['t-action',] }],
        clickable: [{ type: Input, args: ['t-clickable',] }],
        label: [{ type: Input, args: ['t-label',] }],
        link: [{ type: Input, args: ['t-link',] }],
        click: [{ type: Output, args: ['t-click',] }]
    };
    return ThfNavbarItemComponent;
}());
export { ThfNavbarItemComponent };
if (false) {
    /** @type {?} */
    ThfNavbarItemComponent.prototype.action;
    /** @type {?} */
    ThfNavbarItemComponent.prototype.clickable;
    /** @type {?} */
    ThfNavbarItemComponent.prototype.label;
    /** @type {?} */
    ThfNavbarItemComponent.prototype.link;
    /** @type {?} */
    ThfNavbarItemComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW5hdmJhci1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtbmF2YmFyL3RoZi1uYXZiYXItaXRlbXMvdGhmLW5hdmJhci1pdGVtL3RoZi1uYXZiYXItaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJdkUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXhEO0lBQUE7UUFjcUIsVUFBSyxHQUFnQyxJQUFJLFlBQVksRUFBaUIsQ0FBQztJQWtCNUYsQ0FBQztJQWhCQyxzQkFBSSx3Q0FBSTs7OztRQUFSO1lBQ0UsSUFBSSxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM3QixPQUFPLGNBQWMsQ0FBQzthQUN2QjtZQUVELE9BQU8sY0FBYyxDQUFDO1FBQ3hCLENBQUM7OztPQUFBOzs7O0lBRUQsMENBQVM7OztJQUFUO1FBRUUsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUNyRDtRQUVELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDcEIsQ0FBQzs7Z0JBL0JGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixpZEFBK0M7aUJBQ2hEOzs7eUJBR0UsS0FBSyxTQUFDLFVBQVU7NEJBRWhCLEtBQUssU0FBQyxhQUFhO3dCQUVuQixLQUFLLFNBQUMsU0FBUzt1QkFFZixLQUFLLFNBQUMsUUFBUTt3QkFFZCxNQUFNLFNBQUMsU0FBUzs7SUFrQm5CLDZCQUFDO0NBQUEsQUFoQ0QsSUFnQ0M7U0E1Qlksc0JBQXNCOzs7SUFFakMsd0NBQW9DOztJQUVwQywyQ0FBMEM7O0lBRTFDLHVDQUFnQzs7SUFFaEMsc0NBQStCOztJQUUvQix1Q0FBMEYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBFdmVudEVtaXR0ZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaGZOYXZiYXJJdGVtIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy90aGYtbmF2YmFyLWl0ZW0uaW50ZXJmYWNlJztcblxuaW1wb3J0IHsgaXNFeHRlcm5hbExpbmsgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlscy91dGlsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLW5hdmJhci1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1uYXZiYXItaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmTmF2YmFySXRlbUNvbXBvbmVudCB7XG5cbiAgQElucHV0KCd0LWFjdGlvbicpIGFjdGlvbjogRnVuY3Rpb247XG5cbiAgQElucHV0KCd0LWNsaWNrYWJsZScpIGNsaWNrYWJsZT86IGJvb2xlYW47XG5cbiAgQElucHV0KCd0LWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICBASW5wdXQoJ3QtbGluaycpIGxpbms/OiBzdHJpbmc7XG5cbiAgQE91dHB1dCgndC1jbGljaycpIGNsaWNrOiBFdmVudEVtaXR0ZXI8VGhmTmF2YmFySXRlbT4gPSBuZXcgRXZlbnRFbWl0dGVyPFRoZk5hdmJhckl0ZW0+KCk7XG5cbiAgZ2V0IHR5cGUoKSB7XG4gICAgaWYgKGlzRXh0ZXJuYWxMaW5rKHRoaXMubGluaykpIHtcbiAgICAgIHJldHVybiAnZXh0ZXJuYWxMaW5rJztcbiAgICB9XG5cbiAgICByZXR1cm4gJ2ludGVybmFsTGluayc7XG4gIH1cblxuICBpdGVtQ2xpY2soKSB7XG5cbiAgICBpZiAodGhpcy5hY3Rpb24pIHtcbiAgICAgIHRoaXMuYWN0aW9uKHsgbGFiZWw6IHRoaXMubGFiZWwsIGxpbms6IHRoaXMubGluayB9KTtcbiAgICB9XG5cbiAgICB0aGlzLmNsaWNrLmVtaXQoKTtcbiAgfVxufVxuIl19