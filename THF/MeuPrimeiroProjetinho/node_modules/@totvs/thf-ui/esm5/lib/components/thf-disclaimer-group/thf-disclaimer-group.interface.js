/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * \@usedBy
 *
 * ThfPageListComponent
 *
 * \@description
 *
 * Interface que representa o objeto `thf-disclaimer-group`.
 * @record
 */
export function ThfDisclaimerGroup() { }
if (false) {
    /**
     * \@optional
     *
     * \@description
     *
     * Função que será disparada quando a lista de *disclaimers* for modificada.
     * Será passado por parâmetro a nova lista de *disclaimers*.
     * @type {?|undefined}
     */
    ThfDisclaimerGroup.prototype.change;
    /**
     *
     * \@description
     *
     * Lista de *disclaimers*.
     *
     * Exemplo:
     * ```
     *  disclaimers: [
     *    { property: 'type', label: 'Hotel', value: 'hotel' },
     *    { property: 'cost', label: '$500,00', value: '500'  },
     *    { property: 'dates', label: '10/05/2018 - 15/05/2018', value: '10/05/2018|15/05/2018'  }
     *   ]
     * ```
     *
     * Para que a lista de *disclaimers* seja atualizada dinamicamente deve-se passar uma nova referência do array de `ThfDisclaimer`.
     *
     * Exemplo:
     * ```
     * this.disclaimerGroup.disclaimers = [...this.disclaimers];
     * ```
     * @type {?}
     */
    ThfDisclaimerGroup.prototype.disclaimers;
    /**
     * \@optional
     *
     * \@description
     *
     * Oculta o botão para remover todos os *disclaimers* do grupo.
     *
     * > Por padrão, o mesmo é exibido à partir de dois ou mais *disclaimers* com a opção `hideClose` habilitada.
     *
     * \@default `false`
     * @type {?|undefined}
     */
    ThfDisclaimerGroup.prototype.hideRemoveAll;
    /**
     * \@optional
     *
     * \@description
     *
     * Título do grupo de *disclaimers*.
     * @type {?}
     */
    ThfDisclaimerGroup.prototype.title;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWRpc2NsYWltZXItZ3JvdXAuaW50ZXJmYWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1kaXNjbGFpbWVyLWdyb3VwL3RoZi1kaXNjbGFpbWVyLWdyb3VwLmludGVyZmFjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQVdBLHdDQTBEQzs7Ozs7Ozs7Ozs7SUFoREMsb0NBQWtCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUF3QmxCLHlDQUFrQzs7Ozs7Ozs7Ozs7OztJQWFsQywyQ0FBd0I7Ozs7Ozs7OztJQVN4QixtQ0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRoZkRpc2NsYWltZXIgfSBmcm9tICcuLi90aGYtZGlzY2xhaW1lci90aGYtZGlzY2xhaW1lci5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEB1c2VkQnlcbiAqXG4gKiBUaGZQYWdlTGlzdENvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEludGVyZmFjZSBxdWUgcmVwcmVzZW50YSBvIG9iamV0byBgdGhmLWRpc2NsYWltZXItZ3JvdXBgLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRoZkRpc2NsYWltZXJHcm91cCB7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRnVuw6fDo28gcXVlIHNlcsOhIGRpc3BhcmFkYSBxdWFuZG8gYSBsaXN0YSBkZSAqZGlzY2xhaW1lcnMqIGZvciBtb2RpZmljYWRhLlxuICAgKiBTZXLDoSBwYXNzYWRvIHBvciBwYXLDom1ldHJvIGEgbm92YSBsaXN0YSBkZSAqZGlzY2xhaW1lcnMqLlxuICAgKi9cbiAgY2hhbmdlPzogRnVuY3Rpb247XG5cbiAgLyoqXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBMaXN0YSBkZSAqZGlzY2xhaW1lcnMqLlxuICAgKlxuICAgKiBFeGVtcGxvOlxuICAgKiBgYGBcbiAgICogIGRpc2NsYWltZXJzOiBbXG4gICAqICAgIHsgcHJvcGVydHk6ICd0eXBlJywgbGFiZWw6ICdIb3RlbCcsIHZhbHVlOiAnaG90ZWwnIH0sXG4gICAqICAgIHsgcHJvcGVydHk6ICdjb3N0JywgbGFiZWw6ICckNTAwLDAwJywgdmFsdWU6ICc1MDAnICB9LFxuICAgKiAgICB7IHByb3BlcnR5OiAnZGF0ZXMnLCBsYWJlbDogJzEwLzA1LzIwMTggLSAxNS8wNS8yMDE4JywgdmFsdWU6ICcxMC8wNS8yMDE4fDE1LzA1LzIwMTgnICB9XG4gICAqICAgXVxuICAgKiBgYGBcbiAgICpcbiAgICogUGFyYSBxdWUgYSBsaXN0YSBkZSAqZGlzY2xhaW1lcnMqIHNlamEgYXR1YWxpemFkYSBkaW5hbWljYW1lbnRlIGRldmUtc2UgcGFzc2FyIHVtYSBub3ZhIHJlZmVyw6puY2lhIGRvIGFycmF5IGRlIGBUaGZEaXNjbGFpbWVyYC5cbiAgICpcbiAgICogRXhlbXBsbzpcbiAgICogYGBgXG4gICAqIHRoaXMuZGlzY2xhaW1lckdyb3VwLmRpc2NsYWltZXJzID0gWy4uLnRoaXMuZGlzY2xhaW1lcnNdO1xuICAgKiBgYGBcbiAgICovXG4gIGRpc2NsYWltZXJzOiBBcnJheTxUaGZEaXNjbGFpbWVyPjtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBPY3VsdGEgbyBib3TDo28gcGFyYSByZW1vdmVyIHRvZG9zIG9zICpkaXNjbGFpbWVycyogZG8gZ3J1cG8uXG4gICAqXG4gICAqID4gUG9yIHBhZHLDo28sIG8gbWVzbW8gw6kgZXhpYmlkbyDDoCBwYXJ0aXIgZGUgZG9pcyBvdSBtYWlzICpkaXNjbGFpbWVycyogY29tIGEgb3DDp8OjbyBgaGlkZUNsb3NlYCBoYWJpbGl0YWRhLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBoaWRlUmVtb3ZlQWxsPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBUw610dWxvIGRvIGdydXBvIGRlICpkaXNjbGFpbWVycyouXG4gICAqL1xuICB0aXRsZTogc3RyaW5nO1xuXG59XG4iXX0=