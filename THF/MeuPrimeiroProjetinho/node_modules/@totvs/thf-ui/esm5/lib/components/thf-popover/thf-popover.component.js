/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';
import { ThfControlPositionService } from './../../services/thf-control-position/thf-control-position.service';
import { ThfPopoverBaseComponent } from './thf-popover-base.component';
/**
 *
 * \@docsExtends ThfPopoverBaseComponent
 *
 * \@example
 *
 * <example name="thf-popover-basic" title="Totvs Popover Basic">
 *   <file name="sample-thf-popover-basic/sample-thf-popover-basic.component.html"> </file>
 *   <file name="sample-thf-popover-basic/sample-thf-popover-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-popover-labs" title="Totvs Popover Labs">
 *   <file name="sample-thf-popover-labs/sample-thf-popover-labs.component.html"> </file>
 *   <file name="sample-thf-popover-labs/sample-thf-popover-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-popover-credit-card" title="Totvs Popover - Credit Card">
 *   <file name="sample-thf-popover-credit-card/sample-thf-popover-credit-card.component.html"> </file>
 *   <file name="sample-thf-popover-credit-card/sample-thf-popover-credit-card.component.ts"> </file>
 * </example>
 */
var ThfPopoverComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfPopoverComponent, _super);
    function ThfPopoverComponent(renderer, thfControlPosition) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.thfControlPosition = thfControlPosition;
        _this.arrowDirection = 'left';
        return _this;
    }
    /**
     * @return {?}
     */
    ThfPopoverComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.initEventListenerFunction();
        /** @type {?} */
        var popoverOffset = 8;
        this.thfControlPosition.setElements(this.popoverElement.nativeElement, popoverOffset, this.target);
        this.setRendererListenInit();
    };
    /**
     * @return {?}
     */
    ThfPopoverComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.removeListeners();
    };
    /**
     * @return {?}
     */
    ThfPopoverComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.isHidden = true;
    };
    /**
     * @return {?}
     */
    ThfPopoverComponent.prototype.debounceResize = /**
     * @return {?}
     */
    function () {
        var _this = this;
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout((/**
         * @return {?}
         */
        function () {
            _this.setPopoverPosition();
        }), 200);
    };
    /**
     * @return {?}
     */
    ThfPopoverComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.addScrollEventListener();
        this.isHidden = false;
        this.setOpacity(0);
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.thfControlPosition.adjustPosition(_this.position);
            _this.arrowDirection = _this.thfControlPosition.getArrowDirection();
            _this.setOpacity(1);
        }));
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ThfPopoverComponent.prototype.setOpacity = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.popoverElement.nativeElement.style.opacity = value;
    };
    /**
     * @return {?}
     */
    ThfPopoverComponent.prototype.setPopoverPosition = /**
     * @return {?}
     */
    function () {
        this.thfControlPosition.adjustPosition(this.position);
        this.arrowDirection = this.thfControlPosition.getArrowDirection();
    };
    /**
     * @return {?}
     */
    ThfPopoverComponent.prototype.setRendererListenInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (!_this.isHidden) {
                _this.debounceResize();
            }
        }));
        if (this.trigger === 'hover') {
            this.mouseEnterListener = this.renderer.listen(this.target.nativeElement, 'mouseenter', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                _this.open();
            }));
            this.mouseLeaveListener = this.renderer.listen(this.target.nativeElement, 'mouseleave', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                _this.close();
            }));
        }
        else {
            this.clickoutListener = this.renderer.listen('document', 'click', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                _this.togglePopup(event);
            }));
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ThfPopoverComponent.prototype.togglePopup = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this.isHidden && !this.popoverElement.nativeElement.contains(event.target) &&
            !this.target.nativeElement.contains(event.target)) {
            this.close();
        }
        else if (this.target.nativeElement.contains(event.target)) {
            this.popoverElement.nativeElement.hidden ? this.open() : this.close();
        }
    };
    /**
     * @private
     * @return {?}
     */
    ThfPopoverComponent.prototype.addScrollEventListener = /**
     * @private
     * @return {?}
     */
    function () {
        window.addEventListener('scroll', this.eventListenerFunction, true);
    };
    /**
     * @private
     * @return {?}
     */
    ThfPopoverComponent.prototype.initEventListenerFunction = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.eventListenerFunction = (/**
         * @return {?}
         */
        function () {
            _this.setPopoverPosition();
        });
    };
    /**
     * @private
     * @return {?}
     */
    ThfPopoverComponent.prototype.removeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.clickoutListener) {
            this.clickoutListener();
        }
        if (this.mouseEnterListener) {
            this.mouseEnterListener();
        }
        if (this.mouseLeaveListener) {
            this.mouseLeaveListener();
        }
        this.resizeListener();
        window.removeEventListener('scroll', this.eventListenerFunction, true);
    };
    ThfPopoverComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-popover',
                    template: "<div [hidden]=\"isHidden\" class=\"thf-popover\" #popoverElement>\n\n  <div *ngIf=\"!hideArrow\" class=\"thf-popover-arrow thf-arrow-{{ arrowDirection }}\"></div>\n\n  <div class=\"thf-popover-content\">\n    <span *ngIf=\"title\" class=\"thf-popover-title\">{{ title }}</span>\n    <ng-content></ng-content>\n  </div>\n</div>\n",
                    providers: [ThfControlPositionService]
                }] }
    ];
    /** @nocollapse */
    ThfPopoverComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ThfControlPositionService }
    ]; };
    ThfPopoverComponent.propDecorators = {
        popoverElement: [{ type: ViewChild, args: ['popoverElement', { read: ElementRef, static: true },] }]
    };
    return ThfPopoverComponent;
}(ThfPopoverBaseComponent));
export { ThfPopoverComponent };
if (false) {
    /** @type {?} */
    ThfPopoverComponent.prototype.arrowDirection;
    /** @type {?} */
    ThfPopoverComponent.prototype.timeoutResize;
    /** @type {?} */
    ThfPopoverComponent.prototype.eventListenerFunction;
    /** @type {?} */
    ThfPopoverComponent.prototype.popoverElement;
    /**
     * @type {?}
     * @private
     */
    ThfPopoverComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    ThfPopoverComponent.prototype.thfControlPosition;
}
//# sourceMappingURL=data:application/json;base64,