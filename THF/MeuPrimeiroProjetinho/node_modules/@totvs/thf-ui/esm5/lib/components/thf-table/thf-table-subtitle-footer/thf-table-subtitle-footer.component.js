/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, Renderer2 } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a criação de um conjunto de legendas.
 */
var ThfTableSubtitleFooterComponent = /** @class */ (function () {
    function ThfTableSubtitleFooterComponent(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    /**
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.initializeResizeListener();
        this.debounceResize();
    };
    /**
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.removeResizeListener();
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.debounceResize = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout((/**
         * @return {?}
         */
        function () {
            _this.toggleShowCompleteSubtitle();
        }));
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.getContainerSize = /**
     * @private
     * @return {?}
     */
    function () {
        return this.element.nativeElement.querySelector('.thf-table-subtitle-footer-container').offsetWidth;
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.getItemsSize = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var items = this.element.nativeElement.querySelectorAll('.thf-table-subtitle-footer');
        return Array.from(items).map((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item['offsetWidth']; })).reduce((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        function (a, b) { return a + b; }), 16);
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.initializeResizeListener = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            _this.debounceResize();
        }));
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.removeResizeListener = /**
     * @private
     * @return {?}
     */
    function () {
        this.resizeListener();
    };
    /**
     * @private
     * @return {?}
     */
    ThfTableSubtitleFooterComponent.prototype.toggleShowCompleteSubtitle = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var containerSize = this.getContainerSize();
        /** @type {?} */
        var itemsSize = this.getItemsSize();
        this.showSubtitle = itemsSize > containerSize;
    };
    ThfTableSubtitleFooterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-table-subtitle-footer',
                    template: "<div class=\"thf-table-subtitle-footer-container\">\n  <div *ngFor=\"let subtitle of subtitles\" class=\"thf-table-subtitle-footer\">\n    <thf-table-subtitle-circle\n      t-hide-title=\"true\"\n      [t-subtitle]=\"subtitle\">\n    </thf-table-subtitle-circle>\n    <span class=\"thf-table-subtitle-text\">{{ subtitle.label }}</span>\n  </div>\n  <thf-table-show-subtitle *ngIf=\"showSubtitle\"\n    [t-literals]=\"literals\"\n    [t-subtitles]=\"subtitles\">\n  </thf-table-show-subtitle>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    ThfTableSubtitleFooterComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    ThfTableSubtitleFooterComponent.propDecorators = {
        literals: [{ type: Input, args: ['t-literals',] }],
        subtitles: [{ type: Input, args: ['t-subtitles',] }]
    };
    return ThfTableSubtitleFooterComponent;
}());
export { ThfTableSubtitleFooterComponent };
if (false) {
    /** @type {?} */
    ThfTableSubtitleFooterComponent.prototype.showSubtitle;
    /**
     * @type {?}
     * @private
     */
    ThfTableSubtitleFooterComponent.prototype.timeoutResize;
    /**
     * @type {?}
     * @protected
     */
    ThfTableSubtitleFooterComponent.prototype.resizeListener;
    /**
     * Propriedade que recebe as literais definidas no `thf-table`.
     * @type {?}
     */
    ThfTableSubtitleFooterComponent.prototype.literals;
    /**
     * Propriedade que recebe as legendas definidas no `ThfTableSubtitleCircleComponent`.
     * @type {?}
     */
    ThfTableSubtitleFooterComponent.prototype.subtitles;
    /**
     * @type {?}
     * @private
     */
    ThfTableSubtitleFooterComponent.prototype.element;
    /** @type {?} */
    ThfTableSubtitleFooterComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRhYmxlLXN1YnRpdGxlLWZvb3Rlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXRhYmxlL3RoZi10YWJsZS1zdWJ0aXRsZS1mb290ZXIvdGhmLXRhYmxlLXN1YnRpdGxlLWZvb3Rlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQWEsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQVdsRztJQWlCRSx5Q0FBb0IsT0FBbUIsRUFBUyxRQUFtQjtRQUEvQyxZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQVMsYUFBUSxHQUFSLFFBQVEsQ0FBVztJQUFJLENBQUM7Ozs7SUFFeEUseURBQWU7OztJQUFmO1FBQ0UsSUFBSSxDQUFDLHdCQUF3QixFQUFFLENBQUM7UUFDaEMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7Ozs7SUFFRCxxREFBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztJQUM5QixDQUFDOzs7OztJQUVPLHdEQUFjOzs7O0lBQXRCO1FBQUEsaUJBS0M7UUFKQyxZQUFZLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxhQUFhLEdBQUcsVUFBVTs7O1FBQUM7WUFDOUIsS0FBSSxDQUFDLDBCQUEwQixFQUFFLENBQUM7UUFDcEMsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7OztJQUVPLDBEQUFnQjs7OztJQUF4QjtRQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLHNDQUFzQyxDQUFDLENBQUMsV0FBVyxDQUFDO0lBQ3RHLENBQUM7Ozs7O0lBRU8sc0RBQVk7Ozs7SUFBcEI7O1lBQ1EsS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLDRCQUE0QixDQUFDO1FBRXZGLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHOzs7O1FBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQW5CLENBQW1CLEVBQUMsQ0FBQyxNQUFNOzs7OztRQUFDLFVBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSyxPQUFBLENBQUMsR0FBRyxDQUFDLEVBQUwsQ0FBSyxHQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3hGLENBQUM7Ozs7O0lBRU8sa0VBQXdCOzs7O0lBQWhDO1FBQUEsaUJBSUM7UUFIQyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxRQUFROzs7O1FBQUUsVUFBQyxLQUFpQjtZQUMvRSxLQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDeEIsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7OztJQUVPLDhEQUFvQjs7OztJQUE1QjtRQUNFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN4QixDQUFDOzs7OztJQUVPLG9FQUEwQjs7OztJQUFsQzs7WUFDUSxhQUFhLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixFQUFFOztZQUN2QyxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRTtRQUVyQyxJQUFJLENBQUMsWUFBWSxHQUFHLFNBQVMsR0FBRyxhQUFhLENBQUM7SUFDaEQsQ0FBQzs7Z0JBNURGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxpZ0JBQXlEO2lCQUMxRDs7OztnQkFka0MsVUFBVTtnQkFBb0IsU0FBUzs7OzJCQXVCdkUsS0FBSyxTQUFDLFlBQVk7NEJBR2xCLEtBQUssU0FBQyxhQUFhOztJQStDdEIsc0NBQUM7Q0FBQSxBQTlERCxJQThEQztTQTFEWSwrQkFBK0I7OztJQUUxQyx1REFBc0I7Ozs7O0lBRXRCLHdEQUFzQjs7Ozs7SUFDdEIseURBQXFDOzs7OztJQUdyQyxtREFBOEI7Ozs7O0lBRzlCLG9EQUErRDs7Ozs7SUFFbkQsa0RBQTJCOztJQUFFLG1EQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIE9uRGVzdHJveSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZlRhYmxlU3VidGl0bGVDb2x1bW4gfSBmcm9tICcuL3RoZi10YWJsZS1zdWJ0aXRsZS1jb2x1bW4uaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHBhcmEgYSBjcmlhw6fDo28gZGUgdW0gY29uanVudG8gZGUgbGVnZW5kYXMuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi10YWJsZS1zdWJ0aXRsZS1mb290ZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXRhYmxlLXN1YnRpdGxlLWZvb3Rlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmVGFibGVTdWJ0aXRsZUZvb3RlckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG5cbiAgc2hvd1N1YnRpdGxlOiBib29sZWFuO1xuXG4gIHByaXZhdGUgdGltZW91dFJlc2l6ZTtcbiAgcHJvdGVjdGVkIHJlc2l6ZUxpc3RlbmVyOiAoKSA9PiB2b2lkO1xuXG4gIC8qKiBQcm9wcmllZGFkZSBxdWUgcmVjZWJlIGFzIGxpdGVyYWlzIGRlZmluaWRhcyBubyBgdGhmLXRhYmxlYC4gKi9cbiAgQElucHV0KCd0LWxpdGVyYWxzJykgbGl0ZXJhbHM7XG5cbiAgLyoqIFByb3ByaWVkYWRlIHF1ZSByZWNlYmUgYXMgbGVnZW5kYXMgZGVmaW5pZGFzIG5vIGBUaGZUYWJsZVN1YnRpdGxlQ2lyY2xlQ29tcG9uZW50YC4gKi9cbiAgQElucHV0KCd0LXN1YnRpdGxlcycpIHN1YnRpdGxlczogQXJyYXk8VGhmVGFibGVTdWJ0aXRsZUNvbHVtbj47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmLCBwdWJsaWMgcmVuZGVyZXI6IFJlbmRlcmVyMikgeyB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMuaW5pdGlhbGl6ZVJlc2l6ZUxpc3RlbmVyKCk7XG4gICAgdGhpcy5kZWJvdW5jZVJlc2l6ZSgpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5yZW1vdmVSZXNpemVMaXN0ZW5lcigpO1xuICB9XG5cbiAgcHJpdmF0ZSBkZWJvdW5jZVJlc2l6ZSgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0UmVzaXplKTtcbiAgICB0aGlzLnRpbWVvdXRSZXNpemUgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMudG9nZ2xlU2hvd0NvbXBsZXRlU3VidGl0bGUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0Q29udGFpbmVyU2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnRoZi10YWJsZS1zdWJ0aXRsZS1mb290ZXItY29udGFpbmVyJykub2Zmc2V0V2lkdGg7XG4gIH1cblxuICBwcml2YXRlIGdldEl0ZW1zU2l6ZSgpIHtcbiAgICBjb25zdCBpdGVtcyA9IHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50aGYtdGFibGUtc3VidGl0bGUtZm9vdGVyJyk7XG5cbiAgICByZXR1cm4gQXJyYXkuZnJvbShpdGVtcykubWFwKGl0ZW0gPT4gaXRlbVsnb2Zmc2V0V2lkdGgnXSkucmVkdWNlKChhLCBiKSA9PiBhICsgYiwgMTYpO1xuICB9XG5cbiAgcHJpdmF0ZSBpbml0aWFsaXplUmVzaXplTGlzdGVuZXIoKSB7XG4gICAgdGhpcy5yZXNpemVMaXN0ZW5lciA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCd3aW5kb3cnLCAncmVzaXplJywgKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XG4gICAgICB0aGlzLmRlYm91bmNlUmVzaXplKCk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZVJlc2l6ZUxpc3RlbmVyKCkge1xuICAgIHRoaXMucmVzaXplTGlzdGVuZXIoKTtcbiAgfVxuXG4gIHByaXZhdGUgdG9nZ2xlU2hvd0NvbXBsZXRlU3VidGl0bGUoKSB7XG4gICAgY29uc3QgY29udGFpbmVyU2l6ZSA9IHRoaXMuZ2V0Q29udGFpbmVyU2l6ZSgpO1xuICAgIGNvbnN0IGl0ZW1zU2l6ZSA9IHRoaXMuZ2V0SXRlbXNTaXplKCk7XG5cbiAgICB0aGlzLnNob3dTdWJ0aXRsZSA9IGl0ZW1zU2l6ZSA+IGNvbnRhaW5lclNpemU7XG4gIH1cblxufVxuIl19