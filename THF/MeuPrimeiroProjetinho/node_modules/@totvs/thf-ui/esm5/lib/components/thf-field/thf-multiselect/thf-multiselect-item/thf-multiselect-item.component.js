/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que constrói cada item no dropdown, contendo o checkbox e o label.
 */
var ThfMultiselectItemComponent = /** @class */ (function () {
    function ThfMultiselectItemComponent() {
        /**
         * Opção que irá gerar o item, implementando a interface ThfMultiselectOption.
         */
        this.option = null;
        /**
         * Esta propriedade indica se o campo está selecionado ou não.
         */
        this.selected = false;
        /**
         * Evento que será disparado toda vez que o usuário marcar ou desmarcar um item.
         */
        this.change = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ThfMultiselectItemComponent.prototype.itemClicked = /**
     * @return {?}
     */
    function () {
        this.selected = !this.selected;
        this.change.emit(this.selected);
    };
    ThfMultiselectItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-multiselect-item',
                    template: "<li [value]=\"option?.value\"\n  (click)=\"itemClicked()\"\n  [class.thf-multiselect-item-selected]=\"selected\">\n\n  <a class=\"thf-multiselect-item\">\n    <input\n      [checked]=\"selected\"\n      class=\"thf-multiselect-checkbox-input\"\n      [class.thf-multiselect-checkbox-input-checked]=\"selected\"\n      type=\"checkbox\">\n\n    <label class=\"thf-multiselect-checkbox-label thf-clickable\">\n      {{ option?.label }}\n    </label>\n  </a>\n</li>\n"
                }] }
    ];
    ThfMultiselectItemComponent.propDecorators = {
        option: [{ type: Input, args: ['t-option',] }],
        selected: [{ type: Input, args: ['t-selected',] }],
        change: [{ type: Output, args: ['t-change',] }]
    };
    return ThfMultiselectItemComponent;
}());
export { ThfMultiselectItemComponent };
if (false) {
    /**
     * Opção que irá gerar o item, implementando a interface ThfMultiselectOption.
     * @type {?}
     */
    ThfMultiselectItemComponent.prototype.option;
    /**
     * Esta propriedade indica se o campo está selecionado ou não.
     * @type {?}
     */
    ThfMultiselectItemComponent.prototype.selected;
    /**
     * Evento que será disparado toda vez que o usuário marcar ou desmarcar um item.
     * @type {?}
     */
    ThfMultiselectItemComponent.prototype.change;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW11bHRpc2VsZWN0LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1maWVsZC90aGYtbXVsdGlzZWxlY3QvdGhmLW11bHRpc2VsZWN0LWl0ZW0vdGhmLW11bHRpc2VsZWN0LWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQVd2RTtJQUFBOzs7O1FBT3FCLFdBQU0sR0FBeUIsSUFBSSxDQUFDOzs7O1FBR2xDLGFBQVEsR0FBYSxLQUFLLENBQUM7Ozs7UUFHNUIsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFNbEQsQ0FBQzs7OztJQUpDLGlEQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsQyxDQUFDOztnQkFsQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLDRkQUFvRDtpQkFDckQ7Ozt5QkFJRSxLQUFLLFNBQUMsVUFBVTsyQkFHaEIsS0FBSyxTQUFDLFlBQVk7eUJBR2xCLE1BQU0sU0FBQyxVQUFVOztJQU1wQixrQ0FBQztDQUFBLEFBbkJELElBbUJDO1NBZlksMkJBQTJCOzs7Ozs7SUFHdEMsNkNBQXVEOzs7OztJQUd2RCwrQ0FBZ0Q7Ozs7O0lBR2hELDZDQUFnRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZk11bHRpc2VsZWN0T3B0aW9uIH0gZnJvbSAnLi8uLi90aGYtbXVsdGlzZWxlY3Qtb3B0aW9uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBxdWUgY29uc3Ryw7NpIGNhZGEgaXRlbSBubyBkcm9wZG93biwgY29udGVuZG8gbyBjaGVja2JveCBlIG8gbGFiZWwuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1tdWx0aXNlbGVjdC1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1tdWx0aXNlbGVjdC1pdGVtLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZNdWx0aXNlbGVjdEl0ZW1Db21wb25lbnQge1xuXG4gIC8qKiBPcMOnw6NvIHF1ZSBpcsOhIGdlcmFyIG8gaXRlbSwgaW1wbGVtZW50YW5kbyBhIGludGVyZmFjZSBUaGZNdWx0aXNlbGVjdE9wdGlvbi4gKi9cbiAgQElucHV0KCd0LW9wdGlvbicpIG9wdGlvbjogVGhmTXVsdGlzZWxlY3RPcHRpb24gPSBudWxsO1xuXG4gIC8qKiBFc3RhIHByb3ByaWVkYWRlIGluZGljYSBzZSBvIGNhbXBvIGVzdMOhIHNlbGVjaW9uYWRvIG91IG7Do28uICovXG4gIEBJbnB1dCgndC1zZWxlY3RlZCcpIHNlbGVjdGVkPzogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKiBFdmVudG8gcXVlIHNlcsOhIGRpc3BhcmFkbyB0b2RhIHZleiBxdWUgbyB1c3XDoXJpbyBtYXJjYXIgb3UgZGVzbWFyY2FyIHVtIGl0ZW0uICovXG4gIEBPdXRwdXQoJ3QtY2hhbmdlJykgY2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGl0ZW1DbGlja2VkKCkge1xuICAgIHRoaXMuc2VsZWN0ZWQgPSAhdGhpcy5zZWxlY3RlZDtcbiAgICB0aGlzLmNoYW5nZS5lbWl0KHRoaXMuc2VsZWN0ZWQpO1xuICB9XG59XG4iXX0=