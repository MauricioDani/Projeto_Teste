/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input, ViewChild } from '@angular/core';
import { browserLanguage, thfLocaleDefault } from './../../../utils/util';
import { ThfPageContentComponent } from '../thf-page-content/thf-page-content.component';
/** @type {?} */
export var thfPageDetailLiteralsDefault = {
    en: (/** @type {?} */ ({
        back: 'Back',
        edit: 'Edit',
        remove: 'Remove'
    })),
    es: (/** @type {?} */ ({
        back: 'Volver',
        edit: 'Editar',
        remove: 'Eliminar'
    })),
    pt: (/** @type {?} */ ({
        back: 'Voltar',
        edit: 'Editar',
        remove: 'Remover'
    }))
};
/**
 * \@description
 *
 * O componente **thf-page-detail** é utilizado como container principal para a tela de detalhamento de um registro.
 * Por padrão possui 3 ações, cada ação na tela executa uma função no componente que está utilizando o thf-page-detail,
 * são elas:
 *  - Voltar (função: back);
 *  - Editar (função: edit);
 *  - Remover (função: remove);
 *
 * Caso não estiver implementado alguma função, listado anteriormente, o mesmo não será apresentado.
 */
var ThfPageDetailBaseComponent = /** @class */ (function () {
    function ThfPageDetailBaseComponent() {
    }
    Object.defineProperty(ThfPageDetailBaseComponent.prototype, "literals", {
        get: /**
         * @return {?}
         */
        function () {
            return this._literals || thfPageDetailLiteralsDefault[browserLanguage()];
        },
        /**
         * @optional
         *
         * @description
         *
         * Objeto com as literais usadas no `thf-page-detail`.
         *
         * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
         *
         * ```
         *  const customLiterals: ThfPageDetailLiterals = {
         *    edit: 'Edição',
         *    remove: 'Exclusão',
         *    back: 'Menu'
         *  };
         * ```
         *
         * Ou passando apenas as literais que deseja customizar:
         *
         * ```
         *  const customLiterals: ThfPageDetailLiterals = {
         *    remove: 'Excluir registro permanentemente'
         *  };
         * ```
         *
         * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
         *
         * ```
         * <thf-page-detail
         *   [t-literals]="customLiterals">
         * </thf-page-detail>
         * ```
         *
         *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Objeto com as literais usadas no `thf-page-detail`.
         *
         * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
         *
         * ```
         *  const customLiterals: ThfPageDetailLiterals = {
         *    edit: 'Edição',
         *    remove: 'Exclusão',
         *    back: 'Menu'
         *  };
         * ```
         *
         * Ou passando apenas as literais que deseja customizar:
         *
         * ```
         *  const customLiterals: ThfPageDetailLiterals = {
         *    remove: 'Excluir registro permanentemente'
         *  };
         * ```
         *
         * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
         *
         * ```
         * <thf-page-detail
         *   [t-literals]="customLiterals">
         * </thf-page-detail>
         * ```
         *
         *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value instanceof Object && !(value instanceof Array)) {
                this._literals = tslib_1.__assign({}, thfPageDetailLiteralsDefault[thfLocaleDefault], thfPageDetailLiteralsDefault[browserLanguage()], value);
            }
            else {
                this._literals = thfPageDetailLiteralsDefault[browserLanguage()];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDetailBaseComponent.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            return this._title;
        },
        /** Título da página. */
        set: /**
         * Título da página.
         * @param {?} title
         * @return {?}
         */
        function (title) {
            this._title = title;
            this.thfPageContent.recalculateHeaderSize();
        },
        enumerable: true,
        configurable: true
    });
    ThfPageDetailBaseComponent.propDecorators = {
        thfPageContent: [{ type: ViewChild, args: [ThfPageContentComponent, { static: true },] }],
        breadcrumb: [{ type: Input, args: ['t-breadcrumb',] }],
        literals: [{ type: Input, args: ['t-literals',] }],
        title: [{ type: Input, args: ['t-title',] }]
    };
    return ThfPageDetailBaseComponent;
}());
export { ThfPageDetailBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageDetailBaseComponent.prototype._literals;
    /**
     * @type {?}
     * @private
     */
    ThfPageDetailBaseComponent.prototype._title;
    /** @type {?} */
    ThfPageDetailBaseComponent.prototype.thfPageContent;
    /**
     * Objeto com propriedades do breadcrumb.
     * @type {?}
     */
    ThfPageDetailBaseComponent.prototype.breadcrumb;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2UtZGV0YWlsLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1wYWdlL3RoZi1wYWdlLWRldGFpbC90aGYtcGFnZS1kZXRhaWwtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFHMUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZ0RBQWdELENBQUM7O0FBR3pGLE1BQU0sS0FBTyw0QkFBNEIsR0FBRztJQUMxQyxFQUFFLEVBQUUsbUJBQXdCO1FBQzFCLElBQUksRUFBRSxNQUFNO1FBQ1osSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsUUFBUTtLQUNqQixFQUFBO0lBQ0QsRUFBRSxFQUFFLG1CQUF3QjtRQUMxQixJQUFJLEVBQUUsUUFBUTtRQUNkLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLFVBQVU7S0FDbkIsRUFBQTtJQUNELEVBQUUsRUFBRSxtQkFBd0I7UUFDMUIsSUFBSSxFQUFFLFFBQVE7UUFDZCxJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxTQUFTO0tBQ2xCLEVBQUE7Q0FDRjs7Ozs7Ozs7Ozs7OztBQWNEO0lBQUE7SUFzRUEsQ0FBQztJQXpCQyxzQkFBeUIsZ0RBQVE7Ozs7UUFXakM7WUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLElBQUksNEJBQTRCLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQztRQUMzRSxDQUFDO1FBaEREOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1dBa0NHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQUNILFVBQWtDLEtBQTRCO1lBQzVELElBQUksS0FBSyxZQUFZLE1BQU0sSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLEtBQUssQ0FBQyxFQUFFO2dCQUN4RCxJQUFJLENBQUMsU0FBUyx3QkFDVCw0QkFBNEIsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUM5Qyw0QkFBNEIsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxFQUMvQyxLQUFLLENBQ1QsQ0FBQzthQUNIO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxTQUFTLEdBQUcsNEJBQTRCLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQzthQUNsRTtRQUNILENBQUM7OztPQUFBO0lBTUQsc0JBQXNCLDZDQUFLOzs7O1FBSzNCO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3JCLENBQUM7UUFSRCx3QkFBd0I7Ozs7OztRQUN4QixVQUE0QixLQUFhO1lBQ3ZDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ3BCLElBQUksQ0FBQyxjQUFjLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUM5QyxDQUFDOzs7T0FBQTs7aUNBM0RBLFNBQVMsU0FBQyx1QkFBdUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7NkJBR25ELEtBQUssU0FBQyxjQUFjOzJCQXFDcEIsS0FBSyxTQUFDLFlBQVk7d0JBZ0JsQixLQUFLLFNBQUMsU0FBUzs7SUFTbEIsaUNBQUM7Q0FBQSxBQXRFRCxJQXNFQztTQXRFWSwwQkFBMEI7Ozs7OztJQUVyQywrQ0FBeUM7Ozs7O0lBQ3pDLDRDQUF1Qjs7SUFFdkIsb0RBQThGOzs7OztJQUc5RixnREFBaUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGJyb3dzZXJMYW5ndWFnZSwgdGhmTG9jYWxlRGVmYXVsdCB9IGZyb20gJy4vLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFRoZkJyZWFkY3J1bWIgfSBmcm9tICcuLi8uLi90aGYtYnJlYWRjcnVtYi90aGYtYnJlYWRjcnVtYi5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgVGhmUGFnZUNvbnRlbnRDb21wb25lbnQgfSBmcm9tICcuLi90aGYtcGFnZS1jb250ZW50L3RoZi1wYWdlLWNvbnRlbnQuY29tcG9uZW50JztcbmltcG9ydCB7IFRoZlBhZ2VEZXRhaWxMaXRlcmFscyB9IGZyb20gJy4vdGhmLXBhZ2UtZGV0YWlsLWxpdGVyYWxzLmludGVyZmFjZSc7XG5cbmV4cG9ydCBjb25zdCB0aGZQYWdlRGV0YWlsTGl0ZXJhbHNEZWZhdWx0ID0ge1xuICBlbjogPFRoZlBhZ2VEZXRhaWxMaXRlcmFscz4ge1xuICAgIGJhY2s6ICdCYWNrJyxcbiAgICBlZGl0OiAnRWRpdCcsXG4gICAgcmVtb3ZlOiAnUmVtb3ZlJ1xuICB9LFxuICBlczogPFRoZlBhZ2VEZXRhaWxMaXRlcmFscz4ge1xuICAgIGJhY2s6ICdWb2x2ZXInLFxuICAgIGVkaXQ6ICdFZGl0YXInLFxuICAgIHJlbW92ZTogJ0VsaW1pbmFyJ1xuICB9LFxuICBwdDogPFRoZlBhZ2VEZXRhaWxMaXRlcmFscz4ge1xuICAgIGJhY2s6ICdWb2x0YXInLFxuICAgIGVkaXQ6ICdFZGl0YXInLFxuICAgIHJlbW92ZTogJ1JlbW92ZXInXG4gIH1cbn07XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlICoqdGhmLXBhZ2UtZGV0YWlsKiogw6kgdXRpbGl6YWRvIGNvbW8gY29udGFpbmVyIHByaW5jaXBhbCBwYXJhIGEgdGVsYSBkZSBkZXRhbGhhbWVudG8gZGUgdW0gcmVnaXN0cm8uXG4gKiBQb3IgcGFkcsOjbyBwb3NzdWkgMyBhw6fDtWVzLCBjYWRhIGHDp8OjbyBuYSB0ZWxhIGV4ZWN1dGEgdW1hIGZ1bsOnw6NvIG5vIGNvbXBvbmVudGUgcXVlIGVzdMOhIHV0aWxpemFuZG8gbyB0aGYtcGFnZS1kZXRhaWwsXG4gKiBzw6NvIGVsYXM6XG4gKiAgLSBWb2x0YXIgKGZ1bsOnw6NvOiBiYWNrKTtcbiAqICAtIEVkaXRhciAoZnVuw6fDo286IGVkaXQpO1xuICogIC0gUmVtb3ZlciAoZnVuw6fDo286IHJlbW92ZSk7XG4gKlxuICogQ2FzbyBuw6NvIGVzdGl2ZXIgaW1wbGVtZW50YWRvIGFsZ3VtYSBmdW7Dp8OjbywgbGlzdGFkbyBhbnRlcmlvcm1lbnRlLCBvIG1lc21vIG7Do28gc2Vyw6EgYXByZXNlbnRhZG8uXG4gKi9cbmV4cG9ydCBjbGFzcyBUaGZQYWdlRGV0YWlsQmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfbGl0ZXJhbHM6IFRoZlBhZ2VEZXRhaWxMaXRlcmFscztcbiAgcHJpdmF0ZSBfdGl0bGU6IHN0cmluZztcblxuICBAVmlld0NoaWxkKFRoZlBhZ2VDb250ZW50Q29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSB0aGZQYWdlQ29udGVudDogVGhmUGFnZUNvbnRlbnRDb21wb25lbnQ7XG5cbiAgLyoqIE9iamV0byBjb20gcHJvcHJpZWRhZGVzIGRvIGJyZWFkY3J1bWIuICovXG4gIEBJbnB1dCgndC1icmVhZGNydW1iJykgYnJlYWRjcnVtYjogVGhmQnJlYWRjcnVtYjtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBPYmpldG8gY29tIGFzIGxpdGVyYWlzIHVzYWRhcyBubyBgdGhmLXBhZ2UtZGV0YWlsYC5cbiAgICpcbiAgICogRXhpc3RlbSBkdWFzIG1hbmVpcmFzIGRlIGN1c3RvbWl6YXIgbyBjb21wb25lbnRlLCBwYXNzYW5kbyB1bSBvYmpldG8gY29tIHRvZGFzIGFzIGxpdGVyYWlzIGRpc3BvbsOtdmVpczpcbiAgICpcbiAgICogYGBgXG4gICAqICBjb25zdCBjdXN0b21MaXRlcmFsczogVGhmUGFnZURldGFpbExpdGVyYWxzID0ge1xuICAgKiAgICBlZGl0OiAnRWRpw6fDo28nLFxuICAgKiAgICByZW1vdmU6ICdFeGNsdXPDo28nLFxuICAgKiAgICBiYWNrOiAnTWVudSdcbiAgICogIH07XG4gICAqIGBgYFxuICAgKlxuICAgKiBPdSBwYXNzYW5kbyBhcGVuYXMgYXMgbGl0ZXJhaXMgcXVlIGRlc2VqYSBjdXN0b21pemFyOlxuICAgKlxuICAgKiBgYGBcbiAgICogIGNvbnN0IGN1c3RvbUxpdGVyYWxzOiBUaGZQYWdlRGV0YWlsTGl0ZXJhbHMgPSB7XG4gICAqICAgIHJlbW92ZTogJ0V4Y2x1aXIgcmVnaXN0cm8gcGVybWFuZW50ZW1lbnRlJ1xuICAgKiAgfTtcbiAgICogYGBgXG4gICAqXG4gICAqIEUgcGFyYSBjYXJyZWdhciBhcyBsaXRlcmFpcyBjdXN0b21pemFkYXMsIGJhc3RhIGFwZW5hcyBwYXNzYXIgbyBvYmpldG8gcGFyYSBvIGNvbXBvbmVudGUuXG4gICAqXG4gICAqIGBgYFxuICAgKiA8dGhmLXBhZ2UtZGV0YWlsXG4gICAqICAgW3QtbGl0ZXJhbHNdPVwiY3VzdG9tTGl0ZXJhbHNcIj5cbiAgICogPC90aGYtcGFnZS1kZXRhaWw+XG4gICAqIGBgYFxuICAgKlxuICAgKiAgPiBPIG9iamV0byBwYWRyw6NvIGRlIGxpdGVyYWlzIHNlcsOhIHRyYWR1emlkbyBkZSBhY29yZG8gY29tIG8gaWRpb21hIGRvIGJyb3dzZXIgKHB0LCBlbiwgZXMpLlxuICAgKi9cbiAgQElucHV0KCd0LWxpdGVyYWxzJykgc2V0IGxpdGVyYWxzKHZhbHVlOiBUaGZQYWdlRGV0YWlsTGl0ZXJhbHMpIHtcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgISh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5KSkge1xuICAgICAgdGhpcy5fbGl0ZXJhbHMgPSB7XG4gICAgICAgIC4uLnRoZlBhZ2VEZXRhaWxMaXRlcmFsc0RlZmF1bHRbdGhmTG9jYWxlRGVmYXVsdF0sXG4gICAgICAgIC4uLnRoZlBhZ2VEZXRhaWxMaXRlcmFsc0RlZmF1bHRbYnJvd3Nlckxhbmd1YWdlKCldLFxuICAgICAgICAuLi52YWx1ZVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fbGl0ZXJhbHMgPSB0aGZQYWdlRGV0YWlsTGl0ZXJhbHNEZWZhdWx0W2Jyb3dzZXJMYW5ndWFnZSgpXTtcbiAgICB9XG4gIH1cbiAgZ2V0IGxpdGVyYWxzKCkge1xuICAgIHJldHVybiB0aGlzLl9saXRlcmFscyB8fCB0aGZQYWdlRGV0YWlsTGl0ZXJhbHNEZWZhdWx0W2Jyb3dzZXJMYW5ndWFnZSgpXTtcbiAgfVxuXG4gIC8qKiBUw610dWxvIGRhIHDDoWdpbmEuICovXG4gIEBJbnB1dCgndC10aXRsZScpIHNldCB0aXRsZSh0aXRsZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fdGl0bGUgPSB0aXRsZTtcbiAgICB0aGlzLnRoZlBhZ2VDb250ZW50LnJlY2FsY3VsYXRlSGVhZGVyU2l6ZSgpO1xuICB9XG5cbiAgZ2V0IHRpdGxlKCkge1xuICAgIHJldHVybiB0aGlzLl90aXRsZTtcbiAgfVxuXG59XG4iXX0=