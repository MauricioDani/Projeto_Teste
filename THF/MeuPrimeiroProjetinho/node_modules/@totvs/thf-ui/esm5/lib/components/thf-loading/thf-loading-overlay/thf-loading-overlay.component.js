/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ChangeDetectorRef } from '@angular/core';
import { ThfLanguageService } from './../../../services/thf-language/thf-language.service';
import { ThfLoadingOverlayBaseComponent } from './thf-loading-overlay-base.component';
/**
 *
 * \@docsExtends ThfLoadingOverlayBaseComponent
 *
 * \@example
 *
 * <example name="thf-loading-overlay-basic" title="Totvs Loading Overlay Basic">
 *  <file name="sample-thf-loading-overlay-basic/sample-thf-loading-overlay-basic.component.html"> </file>
 *  <file name="sample-thf-loading-overlay-basic/sample-thf-loading-overlay-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-loading-overlay-labs" title="Totvs Loading Overlay Labs">
 *  <file name="sample-thf-loading-overlay-labs/sample-thf-loading-overlay-labs.component.html"> </file>
 *  <file name="sample-thf-loading-overlay-labs/sample-thf-loading-overlay-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-loading-overlay-connection-test" title="Totvs Loading Overlay - Connection Test">
 *  <file name="sample-thf-loading-overlay-connection-test/sample-thf-loading-overlay-connection-test.component.html"> </file>
 *  <file name="sample-thf-loading-overlay-connection-test/sample-thf-loading-overlay-connection-test.component.ts"> </file>
 * </example>
 */
var ThfLoadingOverlayComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfLoadingOverlayComponent, _super);
    function ThfLoadingOverlayComponent(changeDetector, languageService) {
        var _this = _super.call(this, languageService) || this;
        _this.changeDetector = changeDetector;
        return _this;
    }
    ThfLoadingOverlayComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-loading-overlay',
                    template: "<div\n  [class.thf-overlay-absolute]=\"!screenLock\"\n  [class.thf-overlay-fixed]=\"screenLock\">\n  <thf-loading class=\"thf-loading-overlay-content\" [t-text]=\"text\"></thf-loading>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    ThfLoadingOverlayComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ThfLanguageService }
    ]; };
    return ThfLoadingOverlayComponent;
}(ThfLoadingOverlayBaseComponent));
export { ThfLoadingOverlayComponent };
if (false) {
    /** @type {?} */
    ThfLoadingOverlayComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWxvYWRpbmctb3ZlcmxheS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWxvYWRpbmcvdGhmLWxvYWRpbmctb3ZlcmxheS90aGYtbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFN0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFFM0YsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QnRGO0lBSWdELHNEQUE4QjtJQUU1RSxvQ0FBbUIsY0FBaUMsRUFBRSxlQUFtQztRQUF6RixZQUNFLGtCQUFNLGVBQWUsQ0FBQyxTQUN2QjtRQUZrQixvQkFBYyxHQUFkLGNBQWMsQ0FBbUI7O0lBRXBELENBQUM7O2dCQVJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUscUJBQXFCO29CQUMvQiw4TUFBaUQ7aUJBQ2xEOzs7O2dCQTlCbUIsaUJBQWlCO2dCQUU1QixrQkFBa0I7O0lBbUMzQixpQ0FBQztDQUFBLEFBVkQsQ0FJZ0QsOEJBQThCLEdBTTdFO1NBTlksMEJBQTBCOzs7SUFFekIsb0RBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaGZMYW5ndWFnZVNlcnZpY2UgfSBmcm9tICcuLy4uLy4uLy4uL3NlcnZpY2VzL3RoZi1sYW5ndWFnZS90aGYtbGFuZ3VhZ2Uuc2VydmljZSc7XG5cbmltcG9ydCB7IFRoZkxvYWRpbmdPdmVybGF5QmFzZUNvbXBvbmVudCB9IGZyb20gJy4vdGhmLWxvYWRpbmctb3ZlcmxheS1iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICpcbiAqIEBkb2NzRXh0ZW5kcyBUaGZMb2FkaW5nT3ZlcmxheUJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtbG9hZGluZy1vdmVybGF5LWJhc2ljXCIgdGl0bGU9XCJUb3R2cyBMb2FkaW5nIE92ZXJsYXkgQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1sb2FkaW5nLW92ZXJsYXktYmFzaWMvc2FtcGxlLXRoZi1sb2FkaW5nLW92ZXJsYXktYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWxvYWRpbmctb3ZlcmxheS1iYXNpYy9zYW1wbGUtdGhmLWxvYWRpbmctb3ZlcmxheS1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtbG9hZGluZy1vdmVybGF5LWxhYnNcIiB0aXRsZT1cIlRvdHZzIExvYWRpbmcgT3ZlcmxheSBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbG9hZGluZy1vdmVybGF5LWxhYnMvc2FtcGxlLXRoZi1sb2FkaW5nLW92ZXJsYXktbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbG9hZGluZy1vdmVybGF5LWxhYnMvc2FtcGxlLXRoZi1sb2FkaW5nLW92ZXJsYXktbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdFwiIHRpdGxlPVwiVG90dnMgTG9hZGluZyBPdmVybGF5IC0gQ29ubmVjdGlvbiBUZXN0XCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdC9zYW1wbGUtdGhmLWxvYWRpbmctb3ZlcmxheS1jb25uZWN0aW9uLXRlc3QuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWxvYWRpbmctb3ZlcmxheS1jb25uZWN0aW9uLXRlc3Qvc2FtcGxlLXRoZi1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0LmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1sb2FkaW5nLW92ZXJsYXknLFxuICB0ZW1wbGF0ZVVybDogJ3RoZi1sb2FkaW5nLW92ZXJsYXkuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoZkxvYWRpbmdPdmVybGF5Q29tcG9uZW50IGV4dGVuZHMgVGhmTG9hZGluZ092ZXJsYXlCYXNlQ29tcG9uZW50IHtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmLCBsYW5ndWFnZVNlcnZpY2U6IFRoZkxhbmd1YWdlU2VydmljZSkge1xuICAgIHN1cGVyKGxhbmd1YWdlU2VydmljZSk7XG4gIH1cblxufVxuIl19