/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewContainerRef } from '@angular/core';
import { ThfCleanBaseComponent } from './thf-clean-base.component';
/**
 * \@docsPrivate
 *
 * \@docsExtends ThfCleanBaseComponent
 *
 * \@examplePrivate
 *
 * <example-private name="thf-clean-labs" title="Totvs Clean Labs">
 *   <file name="sample-thf-clean-labs.component.html"> </file>
 *   <file name="sample-thf-clean-labs.component.ts"> </file>
 * </example-private>
 */
var ThfCleanComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfCleanComponent, _super);
    function ThfCleanComponent(viewRef) {
        var _this = _super.call(this) || this;
        _this.viewRef = viewRef;
        _this.parentComponent = _this.viewRef['_view']['component'];
        return _this;
    }
    /**
     * @param {?=} value
     * @return {?}
     */
    ThfCleanComponent.prototype.setInputValue = /**
     * @param {?=} value
     * @return {?}
     */
    function (value) {
        if (this.inputRef && this.inputRef.nativeElement) {
            this.inputRef.nativeElement.value = value;
        }
    };
    /**
     * @return {?}
     */
    ThfCleanComponent.prototype.getInputValue = /**
     * @return {?}
     */
    function () {
        if (this.inputRef && this.inputRef.nativeElement) {
            return this.inputRef.nativeElement.value;
        }
    };
    ThfCleanComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-clean',
                    template: "<span *ngIf=\"showIcon()\"\n  class=\"thf-icon thf-field-icon thf-icon-close\"\n  (click)=\"clear()\">\n</span>\n"
                }] }
    ];
    /** @nocollapse */
    ThfCleanComponent.ctorParameters = function () { return [
        { type: ViewContainerRef }
    ]; };
    return ThfCleanComponent;
}(ThfCleanBaseComponent));
export { ThfCleanComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfCleanComponent.prototype.viewRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWNsZWFuLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZmllbGQvdGhmLWNsZWFuL3RoZi1jbGVhbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7Ozs7Ozs7Ozs7O0FBY25FO0lBSXVDLDZDQUFxQjtJQUUxRCwyQkFBb0IsT0FBeUI7UUFBN0MsWUFDRSxpQkFBTyxTQUVSO1FBSG1CLGFBQU8sR0FBUCxPQUFPLENBQWtCO1FBRTNDLEtBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQzs7SUFDNUQsQ0FBQzs7Ozs7SUFFRCx5Q0FBYTs7OztJQUFiLFVBQWMsS0FBYztRQUMxQixJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLEVBQUU7WUFDaEQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztTQUMzQztJQUNILENBQUM7Ozs7SUFFRCx5Q0FBYTs7O0lBQWI7UUFDRSxJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLEVBQUU7WUFDaEQsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUM7U0FDMUM7SUFDSCxDQUFDOztnQkFyQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQiw2SEFBeUM7aUJBQzFDOzs7O2dCQW5CbUIsZ0JBQWdCOztJQXVDcEMsd0JBQUM7Q0FBQSxBQXZCRCxDQUl1QyxxQkFBcUIsR0FtQjNEO1NBbkJZLGlCQUFpQjs7Ozs7O0lBRWhCLG9DQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaGZDbGVhbkJhc2VDb21wb25lbnQgfSBmcm9tICcuL3RoZi1jbGVhbi1iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRvY3NFeHRlbmRzIFRoZkNsZWFuQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlUHJpdmF0ZVxuICpcbiAqIDxleGFtcGxlLXByaXZhdGUgbmFtZT1cInRoZi1jbGVhbi1sYWJzXCIgdGl0bGU9XCJUb3R2cyBDbGVhbiBMYWJzXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWNsZWFuLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1jbGVhbi1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGUtcHJpdmF0ZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLWNsZWFuJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1jbGVhbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmQ2xlYW5Db21wb25lbnQgZXh0ZW5kcyBUaGZDbGVhbkJhc2VDb21wb25lbnQge1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdmlld1JlZjogVmlld0NvbnRhaW5lclJlZikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5wYXJlbnRDb21wb25lbnQgPSB0aGlzLnZpZXdSZWZbJ192aWV3J11bJ2NvbXBvbmVudCddO1xuICB9XG5cbiAgc2V0SW5wdXRWYWx1ZSh2YWx1ZT86IHN0cmluZykge1xuICAgIGlmICh0aGlzLmlucHV0UmVmICYmIHRoaXMuaW5wdXRSZWYubmF0aXZlRWxlbWVudCkge1xuICAgICAgdGhpcy5pbnB1dFJlZi5uYXRpdmVFbGVtZW50LnZhbHVlID0gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgZ2V0SW5wdXRWYWx1ZSgpIHtcbiAgICBpZiAodGhpcy5pbnB1dFJlZiAmJiB0aGlzLmlucHV0UmVmLm5hdGl2ZUVsZW1lbnQpIHtcbiAgICAgIHJldHVybiB0aGlzLmlucHV0UmVmLm5hdGl2ZUVsZW1lbnQudmFsdWU7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==