/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * \@usedBy ThfDynamicFormComponent, ThfAdvancedFilterComponent
 *
 * \@docsExtends ThfDynamicField
 *
 * \@description
 *
 * Interface para definição das propriedades dos campos de entrada que serão criados dinamicamente.
 * @record
 */
export function ThfDynamicFormField() { }
if (false) {
    /**
     * Define as colunas para utilização da busca avançada. Usada somente em conjunto com a propriedade `searchService`,
     * essa propriedade deve receber um array de objetos que implementam a interface [`ThfLookupColumn`](/documentation/thf-lookup).
     *
     * > Caso sejam informadas colunas, deve-se obrigatoriamente conter colunas definidas como *label* e *value* para valores
     * de tela e do model respectivamente.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.columns;
    /**
     * Define a obrigatoriedade do campo.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.required;
    /**
     * Lista de opções que serão exibidos em um componente, podendo selecionar uma opção.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.options;
    /**
     * Permite que o usuário faça múltipla seleção dentro da lista de opções.
     *
     * > Caso utilizar a propriedade `optionsService` esta propriedade será ignorada.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.optionsMulti;
    /**
     * Serviço que será utilizado para buscar os itens e preencher a lista de opções dinamicamente.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.optionsService;
    /**
     * Serviço que será utilizado para realizar a busca avançada. Pode ser utilizado em conjunto com a propriedade `columns`.
     *
     * **Importante:**
     * > Caso utilizar a propriedade `optionsService` esta propriedade será ignorada.
     * > Para que funcione corretamente, é importante que o serviço siga o
     * [guia de API da TOTVS](http://tdn.totvs.com/pages/releaseview.action?pageId=271660444).
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.searchService;
    /**
     * Máscara para o campo.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.mask;
    /**
     * Regex para validação do campo.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.pattern;
    /**
     * Tamanho mínimo de caracteres.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.minLength;
    /**
     * Tamanho máximo de caracteres.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.maxLength;
    /**
     * Desabilita o campo caso informar o valor *true*.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.disabled;
    /**
     * Texto de ajuda.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.help;
    /**
     * Texto exibido quando o valor do componente for *true*.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.booleanTrue;
    /**
     * Texto exibido quando o valor do componente for *false*.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.booleanFalse;
    /**
     * Valor máximo a ser informado no componente, podendo ser utilizado quando o tipo de dado por *number*, *date* ou *dateTime*.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.maxValue;
    /**
     * Valor mínimo a ser informado no componente, podendo ser utilizado quando o tipo de dado por *number*, *date* ou *dateTime*.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.minValue;
    /**
     * Quantidade de linhas exibidas no thf-textarea
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.rows;
    /**
     * Esconde a informação estilo *password*, pode ser utilizado quando o tipo de dado for *string*.
     * @type {?|undefined}
     */
    ThfDynamicFormField.prototype.secret;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWR5bmFtaWMtZm9ybS1maWVsZC5pbnRlcmZhY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWR5bmFtaWMvdGhmLWR5bmFtaWMtZm9ybS90aGYtZHluYW1pYy1mb3JtLWZpZWxkLmludGVyZmFjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQWVBLHlDQXlFQzs7Ozs7Ozs7OztJQWhFQyxzQ0FBaUM7Ozs7O0lBR2pDLHVDQUFtQjs7Ozs7SUFHbkIsc0NBQStFOzs7Ozs7O0lBTy9FLDJDQUF1Qjs7Ozs7SUFHdkIsNkNBQXdCOzs7Ozs7Ozs7O0lBVXhCLDRDQUF1Qjs7Ozs7SUFHdkIsbUNBQWM7Ozs7O0lBR2Qsc0NBQWlCOzs7OztJQUdqQix3Q0FBbUI7Ozs7O0lBR25CLHdDQUFtQjs7Ozs7SUFHbkIsdUNBQW1COzs7OztJQUduQixtQ0FBYzs7Ozs7SUFHZCwwQ0FBcUI7Ozs7O0lBR3JCLDJDQUFzQjs7Ozs7SUFHdEIsdUNBQTJCOzs7OztJQUczQix1Q0FBMkI7Ozs7O0lBRzNCLG1DQUFjOzs7OztJQUdkLHFDQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRoZkxvb2t1cENvbHVtbiB9IGZyb20gJy4uLy4uL3RoZi1maWVsZC90aGYtbG9va3VwL2ludGVyZmFjZXMvdGhmLWxvb2t1cC1jb2x1bW4uaW50ZXJmYWNlJztcbmltcG9ydCB7IFRoZk11bHRpc2VsZWN0T3B0aW9uIH0gZnJvbSAnLi4vLi4vdGhmLWZpZWxkL3RoZi1tdWx0aXNlbGVjdC90aGYtbXVsdGlzZWxlY3Qtb3B0aW9uLmludGVyZmFjZSc7XG5pbXBvcnQgeyBUaGZTZWxlY3RPcHRpb24gfSBmcm9tICcuLi8uLi90aGYtZmllbGQvdGhmLXNlbGVjdC90aGYtc2VsZWN0LW9wdGlvbi5pbnRlcmZhY2UnO1xuXG5pbXBvcnQgeyBUaGZEeW5hbWljRmllbGQgfSBmcm9tICcuLi90aGYtZHluYW1pYy1maWVsZC5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEB1c2VkQnkgVGhmRHluYW1pY0Zvcm1Db21wb25lbnQsIFRoZkFkdmFuY2VkRmlsdGVyQ29tcG9uZW50XG4gKlxuICogQGRvY3NFeHRlbmRzIFRoZkR5bmFtaWNGaWVsZFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEludGVyZmFjZSBwYXJhIGRlZmluacOnw6NvIGRhcyBwcm9wcmllZGFkZXMgZG9zIGNhbXBvcyBkZSBlbnRyYWRhIHF1ZSBzZXLDo28gY3JpYWRvcyBkaW5hbWljYW1lbnRlLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRoZkR5bmFtaWNGb3JtRmllbGQgZXh0ZW5kcyBUaGZEeW5hbWljRmllbGQge1xuXG4gIC8qKlxuICAgKiBEZWZpbmUgYXMgY29sdW5hcyBwYXJhIHV0aWxpemHDp8OjbyBkYSBidXNjYSBhdmFuw6dhZGEuIFVzYWRhIHNvbWVudGUgZW0gY29uanVudG8gY29tIGEgcHJvcHJpZWRhZGUgYHNlYXJjaFNlcnZpY2VgLFxuICAgKiBlc3NhIHByb3ByaWVkYWRlIGRldmUgcmVjZWJlciB1bSBhcnJheSBkZSBvYmpldG9zIHF1ZSBpbXBsZW1lbnRhbSBhIGludGVyZmFjZSBbYFRoZkxvb2t1cENvbHVtbmBdKC9kb2N1bWVudGF0aW9uL3RoZi1sb29rdXApLlxuICAgKlxuICAgKiA+IENhc28gc2VqYW0gaW5mb3JtYWRhcyBjb2x1bmFzLCBkZXZlLXNlIG9icmlnYXRvcmlhbWVudGUgY29udGVyIGNvbHVuYXMgZGVmaW5pZGFzIGNvbW8gKmxhYmVsKiBlICp2YWx1ZSogcGFyYSB2YWxvcmVzXG4gICAqIGRlIHRlbGEgZSBkbyBtb2RlbCByZXNwZWN0aXZhbWVudGUuXG4gICAqL1xuICBjb2x1bW5zPzogQXJyYXk8VGhmTG9va3VwQ29sdW1uPjtcblxuICAvKiogRGVmaW5lIGEgb2JyaWdhdG9yaWVkYWRlIGRvIGNhbXBvLiAqL1xuICByZXF1aXJlZD86IGJvb2xlYW47XG5cbiAgLyoqIExpc3RhIGRlIG9ww6fDtWVzIHF1ZSBzZXLDo28gZXhpYmlkb3MgZW0gdW0gY29tcG9uZW50ZSwgcG9kZW5kbyBzZWxlY2lvbmFyIHVtYSBvcMOnw6NvLiAqL1xuICBvcHRpb25zPzogQXJyYXk8c3RyaW5nPiB8IEFycmF5PFRoZlNlbGVjdE9wdGlvbj4gfCBBcnJheTxUaGZNdWx0aXNlbGVjdE9wdGlvbj47XG5cbiAgLyoqXG4gICAqIFBlcm1pdGUgcXVlIG8gdXN1w6FyaW8gZmHDp2EgbcO6bHRpcGxhIHNlbGXDp8OjbyBkZW50cm8gZGEgbGlzdGEgZGUgb3DDp8O1ZXMuXG4gICAqXG4gICAqID4gQ2FzbyB1dGlsaXphciBhIHByb3ByaWVkYWRlIGBvcHRpb25zU2VydmljZWAgZXN0YSBwcm9wcmllZGFkZSBzZXLDoSBpZ25vcmFkYS5cbiAgICovXG4gIG9wdGlvbnNNdWx0aT86IGJvb2xlYW47XG5cbiAgLyoqIFNlcnZpw6dvIHF1ZSBzZXLDoSB1dGlsaXphZG8gcGFyYSBidXNjYXIgb3MgaXRlbnMgZSBwcmVlbmNoZXIgYSBsaXN0YSBkZSBvcMOnw7VlcyBkaW5hbWljYW1lbnRlLiAqL1xuICBvcHRpb25zU2VydmljZT86IHN0cmluZztcblxuICAvKipcbiAgICogU2VydmnDp28gcXVlIHNlcsOhIHV0aWxpemFkbyBwYXJhIHJlYWxpemFyIGEgYnVzY2EgYXZhbsOnYWRhLiBQb2RlIHNlciB1dGlsaXphZG8gZW0gY29uanVudG8gY29tIGEgcHJvcHJpZWRhZGUgYGNvbHVtbnNgLlxuICAgKlxuICAgKiAqKkltcG9ydGFudGU6KipcbiAgICogPiBDYXNvIHV0aWxpemFyIGEgcHJvcHJpZWRhZGUgYG9wdGlvbnNTZXJ2aWNlYCBlc3RhIHByb3ByaWVkYWRlIHNlcsOhIGlnbm9yYWRhLlxuICAgKiA+IFBhcmEgcXVlIGZ1bmNpb25lIGNvcnJldGFtZW50ZSwgw6kgaW1wb3J0YW50ZSBxdWUgbyBzZXJ2acOnbyBzaWdhIG9cbiAgICogW2d1aWEgZGUgQVBJIGRhIFRPVFZTXShodHRwOi8vdGRuLnRvdHZzLmNvbS9wYWdlcy9yZWxlYXNldmlldy5hY3Rpb24/cGFnZUlkPTI3MTY2MDQ0NCkuXG4gICAqL1xuICBzZWFyY2hTZXJ2aWNlPzogc3RyaW5nO1xuXG4gIC8qKiBNw6FzY2FyYSBwYXJhIG8gY2FtcG8uICovXG4gIG1hc2s/OiBzdHJpbmc7XG5cbiAgLyoqIFJlZ2V4IHBhcmEgdmFsaWRhw6fDo28gZG8gY2FtcG8uICovXG4gIHBhdHRlcm4/OiBzdHJpbmc7XG5cbiAgLyoqIFRhbWFuaG8gbcOtbmltbyBkZSBjYXJhY3RlcmVzLiAqL1xuICBtaW5MZW5ndGg/OiBudW1iZXI7XG5cbiAgLyoqIFRhbWFuaG8gbcOheGltbyBkZSBjYXJhY3RlcmVzLiAqL1xuICBtYXhMZW5ndGg/OiBudW1iZXI7XG5cbiAgLyoqIERlc2FiaWxpdGEgbyBjYW1wbyBjYXNvIGluZm9ybWFyIG8gdmFsb3IgKnRydWUqLiAqL1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG5cbiAgLyoqIFRleHRvIGRlIGFqdWRhLiAqL1xuICBoZWxwPzogc3RyaW5nO1xuXG4gIC8qKiBUZXh0byBleGliaWRvIHF1YW5kbyBvIHZhbG9yIGRvIGNvbXBvbmVudGUgZm9yICp0cnVlKi4gKi9cbiAgYm9vbGVhblRydWU/OiBzdHJpbmc7XG5cbiAgLyoqIFRleHRvIGV4aWJpZG8gcXVhbmRvIG8gdmFsb3IgZG8gY29tcG9uZW50ZSBmb3IgKmZhbHNlKi4gKi9cbiAgYm9vbGVhbkZhbHNlPzogc3RyaW5nO1xuXG4gIC8qKiBWYWxvciBtw6F4aW1vIGEgc2VyIGluZm9ybWFkbyBubyBjb21wb25lbnRlLCBwb2RlbmRvIHNlciB1dGlsaXphZG8gcXVhbmRvIG8gdGlwbyBkZSBkYWRvIHBvciAqbnVtYmVyKiwgKmRhdGUqIG91ICpkYXRlVGltZSouICovXG4gIG1heFZhbHVlPzogc3RyaW5nIHwgbnVtYmVyO1xuXG4gIC8qKiBWYWxvciBtw61uaW1vIGEgc2VyIGluZm9ybWFkbyBubyBjb21wb25lbnRlLCBwb2RlbmRvIHNlciB1dGlsaXphZG8gcXVhbmRvIG8gdGlwbyBkZSBkYWRvIHBvciAqbnVtYmVyKiwgKmRhdGUqIG91ICpkYXRlVGltZSouICovXG4gIG1pblZhbHVlPzogc3RyaW5nIHwgbnVtYmVyO1xuXG4gIC8qKiBRdWFudGlkYWRlIGRlIGxpbmhhcyBleGliaWRhcyBubyB0aGYtdGV4dGFyZWEgKi9cbiAgcm93cz86IG51bWJlcjtcblxuICAvKiogRXNjb25kZSBhIGluZm9ybWHDp8OjbyBlc3RpbG8gKnBhc3N3b3JkKiwgcG9kZSBzZXIgdXRpbGl6YWRvIHF1YW5kbyBvIHRpcG8gZGUgZGFkbyBmb3IgKnN0cmluZyouICovXG4gIHNlY3JldD86IGJvb2xlYW47XG5cbn1cbiJdfQ==