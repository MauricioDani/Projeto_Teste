/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Serviço que implementa a comunicação entre os items do thf-menu-panel.
 */
var ThfMenuPanelItemsService = /** @class */ (function () {
    function ThfMenuPanelItemsService() {
        this.subjectChild = new Subject();
        this.subjectParent = new Subject();
    }
    // Recebe do thf-menu-panel-item sua informação de click.
    // Recebe do thf-menu-panel-item sua informação de click.
    /**
     * @return {?}
     */
    ThfMenuPanelItemsService.prototype.receiveFromChildMenuClicked = 
    // Recebe do thf-menu-panel-item sua informação de click.
    /**
     * @return {?}
     */
    function () {
        return this.subjectChild.asObservable();
    };
    // Recebe do thf-menu-panel as informações processadas do click de um thf-menu-panel-item.
    // Recebe do thf-menu-panel as informações processadas do click de um thf-menu-panel-item.
    /**
     * @return {?}
     */
    ThfMenuPanelItemsService.prototype.receiveFromParentMenuClicked = 
    // Recebe do thf-menu-panel as informações processadas do click de um thf-menu-panel-item.
    /**
     * @return {?}
     */
    function () {
        return this.subjectParent.asObservable();
    };
    // Envia informações do click do thf-menu-panel-item para o thf-menu
    // Envia informações do click do thf-menu-panel-item para o thf-menu
    /**
     * @param {?} menu
     * @return {?}
     */
    ThfMenuPanelItemsService.prototype.sendToParentMenuClicked = 
    // Envia informações do click do thf-menu-panel-item para o thf-menu
    /**
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        this.subjectChild.next(menu);
    };
    // Envia para os thf-menu-panel-item a resposta do processamento de click de um thf-menu-panel-item.
    // Envia para os thf-menu-panel-item a resposta do processamento de click de um thf-menu-panel-item.
    /**
     * @param {?} menu
     * @return {?}
     */
    ThfMenuPanelItemsService.prototype.sendToChildMenuClicked = 
    // Envia para os thf-menu-panel-item a resposta do processamento de click de um thf-menu-panel-item.
    /**
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        this.subjectParent.next(menu);
    };
    ThfMenuPanelItemsService.decorators = [
        { type: Injectable }
    ];
    return ThfMenuPanelItemsService;
}());
export { ThfMenuPanelItemsService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfMenuPanelItemsService.prototype.subjectChild;
    /**
     * @type {?}
     * @private
     */
    ThfMenuPanelItemsService.prototype.subjectParent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW1lbnUtcGFuZWwtaXRlbXMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtbWVudS1wYW5lbC9zZXJ2aWNlcy90aGYtbWVudS1wYW5lbC1pdGVtcy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBYyxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7Ozs7Ozs7O0FBUzNDO0lBQUE7UUFHVSxpQkFBWSxHQUFHLElBQUksT0FBTyxFQUFPLENBQUM7UUFDbEMsa0JBQWEsR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDO0lBc0I3QyxDQUFDO0lBcEJDLHlEQUF5RDs7Ozs7SUFDekQsOERBQTJCOzs7OztJQUEzQjtRQUNFLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMxQyxDQUFDO0lBRUQsMEZBQTBGOzs7OztJQUMxRiwrREFBNEI7Ozs7O0lBQTVCO1FBQ0UsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzNDLENBQUM7SUFFRCxvRUFBb0U7Ozs7OztJQUNwRSwwREFBdUI7Ozs7OztJQUF2QixVQUF3QixJQUFZO1FBQ2xDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxvR0FBb0c7Ozs7OztJQUNwRyx5REFBc0I7Ozs7OztJQUF0QixVQUF1QixJQUFZO1FBQ2pDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hDLENBQUM7O2dCQXhCRixVQUFVOztJQTBCWCwrQkFBQztDQUFBLEFBMUJELElBMEJDO1NBekJZLHdCQUF3Qjs7Ozs7O0lBRW5DLGdEQUEwQzs7Ozs7SUFDMUMsaURBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogU2VydmnDp28gcXVlIGltcGxlbWVudGEgYSBjb211bmljYcOnw6NvIGVudHJlIG9zIGl0ZW1zIGRvIHRoZi1tZW51LXBhbmVsLlxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVGhmTWVudVBhbmVsSXRlbXNTZXJ2aWNlIHtcblxuICBwcml2YXRlIHN1YmplY3RDaGlsZCA9IG5ldyBTdWJqZWN0PGFueT4oKTtcbiAgcHJpdmF0ZSBzdWJqZWN0UGFyZW50ID0gbmV3IFN1YmplY3Q8YW55PigpO1xuXG4gIC8vIFJlY2ViZSBkbyB0aGYtbWVudS1wYW5lbC1pdGVtIHN1YSBpbmZvcm1hw6fDo28gZGUgY2xpY2suXG4gIHJlY2VpdmVGcm9tQ2hpbGRNZW51Q2xpY2tlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdWJqZWN0Q2hpbGQuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICAvLyBSZWNlYmUgZG8gdGhmLW1lbnUtcGFuZWwgYXMgaW5mb3JtYcOnw7VlcyBwcm9jZXNzYWRhcyBkbyBjbGljayBkZSB1bSB0aGYtbWVudS1wYW5lbC1pdGVtLlxuICByZWNlaXZlRnJvbVBhcmVudE1lbnVDbGlja2VkKCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuc3ViamVjdFBhcmVudC5hc09ic2VydmFibGUoKTtcbiAgfVxuXG4gIC8vIEVudmlhIGluZm9ybWHDp8O1ZXMgZG8gY2xpY2sgZG8gdGhmLW1lbnUtcGFuZWwtaXRlbSBwYXJhIG8gdGhmLW1lbnVcbiAgc2VuZFRvUGFyZW50TWVudUNsaWNrZWQobWVudTogb2JqZWN0KSB7XG4gICAgdGhpcy5zdWJqZWN0Q2hpbGQubmV4dChtZW51KTtcbiAgfVxuXG4gIC8vIEVudmlhIHBhcmEgb3MgdGhmLW1lbnUtcGFuZWwtaXRlbSBhIHJlc3Bvc3RhIGRvIHByb2Nlc3NhbWVudG8gZGUgY2xpY2sgZGUgdW0gdGhmLW1lbnUtcGFuZWwtaXRlbS5cbiAgc2VuZFRvQ2hpbGRNZW51Q2xpY2tlZChtZW51OiBvYmplY3QpIHtcbiAgICB0aGlzLnN1YmplY3RQYXJlbnQubmV4dChtZW51KTtcbiAgfVxuXG59XG4iXX0=