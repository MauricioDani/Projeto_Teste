/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { ThfTextareaBaseComponent } from './thf-textarea-base.component';
/**
 * \@docsExtends ThfTextareaBaseComponent
 *
 * \@example
 *
 * <example name="thf-textarea-basic" title="Totvs Textarea Basic" >
 *  <file name="sample-thf-textarea-basic/sample-thf-textarea-basic.component.html"> </file>
 *  <file name="sample-thf-textarea-basic/sample-thf-textarea-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-textarea-labs" title="Totvs Textarea Labs" >
 *  <file name="sample-thf-textarea-labs/sample-thf-textarea-labs.component.html"> </file>
 *  <file name="sample-thf-textarea-labs/sample-thf-textarea-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-textarea-email" title="Totvs Textarea - Email" >
 *  <file name="sample-thf-textarea-email/sample-thf-textarea-email.component.html"> </file>
 *  <file name="sample-thf-textarea-email/sample-thf-textarea-email.component.ts"> </file>
 * </example>
 *
 * <example name="thf-textarea-email-reactive-form" title="Totvs Textarea - Email Reactive Form" >
 *  <file name="sample-thf-textarea-email-reactive-form/sample-thf-textarea-email-reactive-form.component.html"> </file>
 *  <file name="sample-thf-textarea-email-reactive-form/sample-thf-textarea-email-reactive-form.component.ts"> </file>
 * </example>
 *
 */
var ThfTextareaComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfTextareaComponent, _super);
    function ThfTextareaComponent() {
        var _this = _super.call(this) || this;
        _this.fireChange = false;
        return _this;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    ThfTextareaComponent.prototype.writeValueModel = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (this.inputEl) {
            if (!value) {
                // Se for o valor for undefined, deve limpar o campo
                this.inputEl.nativeElement.value = '';
            }
            else {
                this.inputEl.nativeElement.value = value;
            }
        }
        // Emite evento quando o model é atualizado, inclusive a primeira vez
        if (value) {
            this.change.emit(value);
        }
    };
    /**
     * @param {?} maxlength
     * @param {?} value
     * @return {?}
     */
    ThfTextareaComponent.prototype.validMaxLength = /**
     * @param {?} maxlength
     * @param {?} value
     * @return {?}
     */
    function (maxlength, value) {
        return (maxlength && value.length > maxlength) ? value.toString().substring(0, maxlength) : value;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ThfTextareaComponent.prototype.eventOnInput = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var value = this.validMaxLength(this.maxlength, event.target.value);
        this.callOnChange(value);
        this.inputEl.nativeElement.value = value;
    };
    /**
     * @return {?}
     */
    ThfTextareaComponent.prototype.eventOnFocus = /**
     * @return {?}
     */
    function () {
        // Atualiza valor da variável que será usada para verificar se o campo teve alteração
        this.valueBeforeChange = this.inputEl.nativeElement.value;
        // Dispara evento quando o usuário entrar no campo
        // Este evento também é disparado quando o campo inicia com foco.
        this.enter.emit();
    };
    /**
     * @return {?}
     */
    ThfTextareaComponent.prototype.eventOnBlur = /**
     * @return {?}
     */
    function () {
        this.blur.emit();
        this.controlChangeEmitter();
    };
    /**
     * @return {?}
     */
    ThfTextareaComponent.prototype.controlChangeEmitter = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var elementValue = this.inputEl.nativeElement.value;
        if (elementValue !== this.valueBeforeChange) {
            this.change.emit(elementValue);
        }
    };
    ThfTextareaComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-textarea',
                    template: "<thf-field-container\n  [t-help]=\"help\"\n  [t-label]=\"label\"\n  [t-optional]=\"!required && optional\">\n\n  <div class=\"thf-field-container-content\">\n    <textarea #inp\n      class=\"thf-textarea\"\n      (blur)=\"eventOnBlur()\"\n      (focus)=\"eventOnFocus()\"\n      (input)=\"eventOnInput($event)\"\n      [attr.name]=\"name\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [rows]=\"rows\">\n    </textarea>\n  </div>\n\n  <thf-field-container-bottom></thf-field-container-bottom>\n</thf-field-container>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfTextareaComponent; })),
                            multi: true,
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfTextareaComponent; })),
                            multi: true,
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    ThfTextareaComponent.ctorParameters = function () { return []; };
    ThfTextareaComponent.propDecorators = {
        inputEl: [{ type: ViewChild, args: ['inp', { read: ElementRef, static: true },] }]
    };
    return ThfTextareaComponent;
}(ThfTextareaBaseComponent));
export { ThfTextareaComponent };
if (false) {
    /** @type {?} */
    ThfTextareaComponent.prototype.inputEl;
    /** @type {?} */
    ThfTextareaComponent.prototype.valueBeforeChange;
    /** @type {?} */
    ThfTextareaComponent.prototype.fireChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRleHRhcmVhLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZmllbGQvdGhmLXRleHRhcmVhL3RoZi10ZXh0YXJlYS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdFLE9BQU8sRUFBRSxhQUFhLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVsRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEJ6RTtJQWdCMEMsZ0RBQXdCO0lBT2hFO1FBQUEsWUFDRSxpQkFBTyxTQUNSO1FBSkQsZ0JBQVUsR0FBWSxLQUFLLENBQUM7O0lBSTVCLENBQUM7Ozs7O0lBRUQsOENBQWU7Ozs7SUFBZixVQUFnQixLQUFVO1FBQ3hCLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUNWLG9EQUFvRDtnQkFDcEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQzthQUN2QztpQkFBTTtnQkFDTCxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO2FBQzFDO1NBQ0Y7UUFFRCxxRUFBcUU7UUFDckUsSUFBSSxLQUFLLEVBQUU7WUFDVCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN6QjtJQUNILENBQUM7Ozs7OztJQUVELDZDQUFjOzs7OztJQUFkLFVBQWUsU0FBaUIsRUFBRSxLQUFhO1FBQzdDLE9BQU8sQ0FBQyxTQUFTLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUNwRyxDQUFDOzs7OztJQUVELDJDQUFZOzs7O0lBQVosVUFBYSxLQUFVOztZQUNmLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDckUsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQzNDLENBQUM7Ozs7SUFFRCwyQ0FBWTs7O0lBQVo7UUFDRSxxRkFBcUY7UUFDckYsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztRQUUxRCxrREFBa0Q7UUFDbEQsaUVBQWlFO1FBQ2pFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDcEIsQ0FBQzs7OztJQUVELDBDQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7SUFDOUIsQ0FBQzs7OztJQUVELG1EQUFvQjs7O0lBQXBCOztZQUNRLFlBQVksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLO1FBRXJELElBQUksWUFBWSxLQUFLLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMzQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNoQztJQUNILENBQUM7O2dCQXpFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGNBQWM7b0JBQ3hCLDhtQkFBNEM7b0JBQzVDLFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixXQUFXLEVBQUUsVUFBVTs7OzRCQUFDLGNBQU0sT0FBQSxvQkFBb0IsRUFBcEIsQ0FBb0IsRUFBQzs0QkFDbkQsS0FBSyxFQUFFLElBQUk7eUJBQ1o7d0JBQ0Q7NEJBQ0UsT0FBTyxFQUFFLGFBQWE7NEJBQ3RCLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLG9CQUFvQixFQUFwQixDQUFvQixFQUFDOzRCQUNuRCxLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFDRjtpQkFDRjs7Ozs7MEJBR0UsU0FBUyxTQUFDLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7SUF5RHJELDJCQUFDO0NBQUEsQUEzRUQsQ0FnQjBDLHdCQUF3QixHQTJEakU7U0EzRFksb0JBQW9COzs7SUFFL0IsdUNBQXlFOztJQUV6RSxpREFBdUI7O0lBQ3ZCLDBDQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgZm9yd2FyZFJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOR19WQUxJREFUT1JTLCBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgVGhmVGV4dGFyZWFCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtdGV4dGFyZWEtYmFzZS5jb21wb25lbnQnO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBUaGZUZXh0YXJlYUJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtdGV4dGFyZWEtYmFzaWNcIiB0aXRsZT1cIlRvdHZzIFRleHRhcmVhIEJhc2ljXCIgPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXRleHRhcmVhLWJhc2ljL3NhbXBsZS10aGYtdGV4dGFyZWEtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXRleHRhcmVhLWJhc2ljL3NhbXBsZS10aGYtdGV4dGFyZWEtYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLXRleHRhcmVhLWxhYnNcIiB0aXRsZT1cIlRvdHZzIFRleHRhcmVhIExhYnNcIiA+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtdGV4dGFyZWEtbGFicy9zYW1wbGUtdGhmLXRleHRhcmVhLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXRleHRhcmVhLWxhYnMvc2FtcGxlLXRoZi10ZXh0YXJlYS1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi10ZXh0YXJlYS1lbWFpbFwiIHRpdGxlPVwiVG90dnMgVGV4dGFyZWEgLSBFbWFpbFwiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi10ZXh0YXJlYS1lbWFpbC9zYW1wbGUtdGhmLXRleHRhcmVhLWVtYWlsLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi10ZXh0YXJlYS1lbWFpbC9zYW1wbGUtdGhmLXRleHRhcmVhLWVtYWlsLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi10ZXh0YXJlYS1lbWFpbC1yZWFjdGl2ZS1mb3JtXCIgdGl0bGU9XCJUb3R2cyBUZXh0YXJlYSAtIEVtYWlsIFJlYWN0aXZlIEZvcm1cIiA+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtdGV4dGFyZWEtZW1haWwtcmVhY3RpdmUtZm9ybS9zYW1wbGUtdGhmLXRleHRhcmVhLWVtYWlsLXJlYWN0aXZlLWZvcm0uY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXRleHRhcmVhLWVtYWlsLXJlYWN0aXZlLWZvcm0vc2FtcGxlLXRoZi10ZXh0YXJlYS1lbWFpbC1yZWFjdGl2ZS1mb3JtLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtdGV4dGFyZWEnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXRleHRhcmVhLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUaGZUZXh0YXJlYUNvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUaGZUZXh0YXJlYUNvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgVGhmVGV4dGFyZWFDb21wb25lbnQgZXh0ZW5kcyBUaGZUZXh0YXJlYUJhc2VDb21wb25lbnQge1xuXG4gIEBWaWV3Q2hpbGQoJ2lucCcsIHtyZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgaW5wdXRFbDogRWxlbWVudFJlZjtcblxuICB2YWx1ZUJlZm9yZUNoYW5nZTogYW55O1xuICBmaXJlQ2hhbmdlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHdyaXRlVmFsdWVNb2RlbCh2YWx1ZTogYW55KTogdm9pZCB7XG4gICAgaWYgKHRoaXMuaW5wdXRFbCkge1xuICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICAvLyBTZSBmb3IgbyB2YWxvciBmb3IgdW5kZWZpbmVkLCBkZXZlIGxpbXBhciBvIGNhbXBvXG4gICAgICAgIHRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlID0gJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC52YWx1ZSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEVtaXRlIGV2ZW50byBxdWFuZG8gbyBtb2RlbCDDqSBhdHVhbGl6YWRvLCBpbmNsdXNpdmUgYSBwcmltZWlyYSB2ZXpcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuY2hhbmdlLmVtaXQodmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhbGlkTWF4TGVuZ3RoKG1heGxlbmd0aDogbnVtYmVyLCB2YWx1ZTogc3RyaW5nKSB7XG4gICAgcmV0dXJuIChtYXhsZW5ndGggJiYgdmFsdWUubGVuZ3RoID4gbWF4bGVuZ3RoKSA/IHZhbHVlLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDAsIG1heGxlbmd0aCkgOiB2YWx1ZTtcbiAgfVxuXG4gIGV2ZW50T25JbnB1dChldmVudDogYW55KSB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLnZhbGlkTWF4TGVuZ3RoKHRoaXMubWF4bGVuZ3RoLCBldmVudC50YXJnZXQudmFsdWUpO1xuICAgIHRoaXMuY2FsbE9uQ2hhbmdlKHZhbHVlKTtcbiAgICB0aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC52YWx1ZSA9IHZhbHVlO1xuICB9XG5cbiAgZXZlbnRPbkZvY3VzKCkge1xuICAgIC8vIEF0dWFsaXphIHZhbG9yIGRhIHZhcmnDoXZlbCBxdWUgc2Vyw6EgdXNhZGEgcGFyYSB2ZXJpZmljYXIgc2UgbyBjYW1wbyB0ZXZlIGFsdGVyYcOnw6NvXG4gICAgdGhpcy52YWx1ZUJlZm9yZUNoYW5nZSA9IHRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlO1xuXG4gICAgLy8gRGlzcGFyYSBldmVudG8gcXVhbmRvIG8gdXN1w6FyaW8gZW50cmFyIG5vIGNhbXBvXG4gICAgLy8gRXN0ZSBldmVudG8gdGFtYsOpbSDDqSBkaXNwYXJhZG8gcXVhbmRvIG8gY2FtcG8gaW5pY2lhIGNvbSBmb2NvLlxuICAgIHRoaXMuZW50ZXIuZW1pdCgpO1xuICB9XG5cbiAgZXZlbnRPbkJsdXIoKSB7XG4gICAgdGhpcy5ibHVyLmVtaXQoKTtcbiAgICB0aGlzLmNvbnRyb2xDaGFuZ2VFbWl0dGVyKCk7XG4gIH1cblxuICBjb250cm9sQ2hhbmdlRW1pdHRlcigpIHtcbiAgICBjb25zdCBlbGVtZW50VmFsdWUgPSB0aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC52YWx1ZTtcblxuICAgIGlmIChlbGVtZW50VmFsdWUgIT09IHRoaXMudmFsdWVCZWZvcmVDaGFuZ2UpIHtcbiAgICAgIHRoaXMuY2hhbmdlLmVtaXQoZWxlbWVudFZhbHVlKTtcbiAgICB9XG4gIH1cblxufVxuIl19