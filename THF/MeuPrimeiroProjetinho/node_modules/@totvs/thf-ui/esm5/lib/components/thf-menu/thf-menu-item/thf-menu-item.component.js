/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, ViewChild } from '@angular/core';
import { convertToInt, convertToBoolean } from '../../../utils/util';
import { ThfMenuItemsService } from '../services/thf-menu-items.service';
// valor para que caibam 3 linhas de `label`
/** @type {?} */
var thfMenuItemSubItemSize = 98;
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que implementa cada item do thf-menu.
 */
var ThfMenuItemComponent = /** @class */ (function () {
    function ThfMenuItemComponent(menuItemsService) {
        this.menuItemsService = menuItemsService;
        this._isSelected = false;
        this._isSubItem = false;
        this.maxHeight = 0;
    }
    Object.defineProperty(ThfMenuItemComponent.prototype, "badgeValue", {
        get: /**
         * @return {?}
         */
        function () {
            return this._badgeValue;
        },
        // Valor do badge.
        set: 
        // Valor do badge.
        /**
         * @param {?} badgeValue
         * @return {?}
         */
        function (badgeValue) {
            this._badgeValue = convertToInt(badgeValue);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuItemComponent.prototype, "isSelected", {
        get: /**
         * @return {?}
         */
        function () {
            return this._isSelected;
        },
        // Indica se o item está selecionado.
        set: 
        // Indica se o item está selecionado.
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._isSelected = convertToBoolean(value);
            this.isSelectedSubItem = this.isSelected && this.isSubItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuItemComponent.prototype, "isSubItem", {
        get: /**
         * @return {?}
         */
        function () {
            return this._isSubItem;
        },
        // Indica se o item é um sub item
        set: 
        // Indica se o item é um sub item
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._isSubItem = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuItemComponent.prototype, "subItems", {
        get: /**
         * @return {?}
         */
        function () {
            return this._subItems;
        },
        // Lista de sub-items.
        set: 
        // Lista de sub-items.
        /**
         * @param {?} subitems
         * @return {?}
         */
        function (subitems) {
            this._subItems = subitems;
            if (this.isOpened) {
                this.calcMenuSubItemsMaxHeight();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuItemComponent.prototype, "canShowBadge", {
        get: /**
         * @return {?}
         */
        function () {
            return this.type !== 'subItems' && (this.badgeValue || this.badgeValue === 0) && this.badgeValue >= 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ThfMenuItemComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.itemSubscription.unsubscribe();
    };
    /**
     * @return {?}
     */
    ThfMenuItemComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // subscribe to menu component messages
        this.itemSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe((/**
         * @param {?} menu
         * @return {?}
         */
        function (menu) {
            _this.processMenuItem(menu);
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ThfMenuItemComponent.prototype.clickMenuItem = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!(event.ctrlKey || event.metaKey)) {
            event.preventDefault();
            // Emmit to parent
            this.menuItemsService.sendToParentMenuClicked({
                link: this.link,
                action: this.action,
                id: this.id,
                icon: this.icon,
                label: this.label,
                level: this.level,
                subItems: this.subItems,
                isSelected: this.isSelected,
                isOpened: this.isOpened,
                shortLabel: this.shortLabel,
                type: this.type
            });
        }
    };
    /**
     * @private
     * @param {?} menuActive
     * @param {?} menuOpened
     * @param {?} hasSubItemOpened
     * @param {?} activatedByRoute
     * @return {?}
     */
    ThfMenuItemComponent.prototype.accordionAnimation = /**
     * @private
     * @param {?} menuActive
     * @param {?} menuOpened
     * @param {?} hasSubItemOpened
     * @param {?} activatedByRoute
     * @return {?}
     */
    function (menuActive, menuOpened, hasSubItemOpened, activatedByRoute) {
        if (this.id === menuOpened['id']) {
            this.maxHeight = this.subItems.length * thfMenuItemSubItemSize;
        }
        if (hasSubItemOpened) {
            this.maxHeight = menuOpened['isOpened'] ?
                (this.maxHeight + menuOpened.subItems.length * thfMenuItemSubItemSize) :
                (this.maxHeight - menuOpened.subItems.length * thfMenuItemSubItemSize);
            if (activatedByRoute) {
                this.maxHeight = this.getMinimumHeight(0, this, menuActive);
            }
        }
    };
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    ThfMenuItemComponent.prototype.activateMenu = /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        this.isSelected = menu && this.id === menu.id;
    };
    /**
     * @private
     * @return {?}
     */
    ThfMenuItemComponent.prototype.calcMenuSubItemsMaxHeight = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var subItems = Array.from(_this.menuSubItems.nativeElement.querySelectorAll('.thf-menu-item'));
            subItems.forEach((/**
             * @param {?} menuItem
             * @return {?}
             */
            function (menuItem) { return _this.maxHeight += menuItem.offsetHeight; }));
        }));
    };
    /**
     * @private
     * @param {?} minimumHeight
     * @param {?} menuItem
     * @param {?} menuActive
     * @return {?}
     */
    ThfMenuItemComponent.prototype.getMinimumHeight = /**
     * @private
     * @param {?} minimumHeight
     * @param {?} menuItem
     * @param {?} menuActive
     * @return {?}
     */
    function (minimumHeight, menuItem, menuActive) {
        minimumHeight += thfMenuItemSubItemSize;
        if (menuItem.subItems && this.hasSubItem(menuItem.subItems, menuActive['id'])) {
            for (var index = 0; index < menuItem.subItems.length; index++) {
                minimumHeight = this.getMinimumHeight(minimumHeight, menuItem.subItems[index], menuActive);
            }
        }
        return minimumHeight;
    };
    /**
     * @private
     * @param {?} menuActive
     * @param {?} menuOpened
     * @param {?=} activatedByRoute
     * @return {?}
     */
    ThfMenuItemComponent.prototype.groupedMenu = /**
     * @private
     * @param {?} menuActive
     * @param {?} menuOpened
     * @param {?=} activatedByRoute
     * @return {?}
     */
    function (menuActive, menuOpened, activatedByRoute) {
        if (activatedByRoute === void 0) { activatedByRoute = false; }
        /** @type {?} */
        var hasSubItemOpened = (menuOpened && this.id !== menuOpened['id']) ? this.hasSubItem(this.subItems, menuOpened['id']) : false;
        this.isOpened = this.isMenuOpened(menuOpened, hasSubItemOpened);
        this.isSelected = (menuActive && !this.isOpened) ? this.hasSubItem(this.subItems, menuActive['id']) : false;
        if (!this.isOpened) {
            this.maxHeight = 0;
            return;
        }
        this.accordionAnimation(menuActive, menuOpened, hasSubItemOpened, activatedByRoute);
    };
    /**
     * @private
     * @param {?} subItems
     * @param {?} id
     * @return {?}
     */
    ThfMenuItemComponent.prototype.hasSubItem = /**
     * @private
     * @param {?} subItems
     * @param {?} id
     * @return {?}
     */
    function (subItems, id) {
        var _this = this;
        if (subItems) {
            return subItems.some((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                return item['id'] === id ? true : _this.hasSubItem(item.subItems, id);
            }));
        }
    };
    /**
     * @private
     * @param {?} menuOpened
     * @param {?} hasSubItemOpened
     * @return {?}
     */
    ThfMenuItemComponent.prototype.isMenuOpened = /**
     * @private
     * @param {?} menuOpened
     * @param {?} hasSubItemOpened
     * @return {?}
     */
    function (menuOpened, hasSubItemOpened) {
        if (menuOpened) {
            return (this.id === menuOpened['id']) ? menuOpened['isOpened'] : hasSubItemOpened;
        }
        return false;
    };
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    ThfMenuItemComponent.prototype.processMenuItem = /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        if (this.type === 'internalLink') {
            this.activateMenu(menu.active);
            return;
        }
        if (this.type === 'subItems') {
            this.groupedMenu(menu.active, menu.grouped, menu.activatedByRoute);
            return;
        }
    };
    ThfMenuItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-menu-item',
                    template: "<!-- menu com link interno -->\n<a *ngIf=\"type === 'internalLink'\" class=\"thf-menu-item-link\" [routerLink]=\"link\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n<!-- menu com link externo -->\n<a *ngIf=\"type === 'externalLink'\" class=\"thf-menu-item-link\" [href]=\"link\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n<!-- menu sem link -->\n<a *ngIf=\"type === 'noLink'\" class=\"thf-menu-item-link\" href=\"javascript:;\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n<!-- menu com sub itens -->\n<div *ngIf=\"type === 'subItems'\" class=\"thf-menu-item-link thf-clickable\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate;\"></ng-container>\n  <div #menuSubItems\n    class=\"thf-menu-sub-items\"\n    [hidden]=\"collapsedMenu\"\n    [style.maxHeight.px]=\"maxHeight\">\n    <div *ngFor=\"let subItem of subItems\">\n      <thf-menu-item\n        t-is-sub-item\n        [t-action]=\"subItem.action\"\n        [t-badge-alert]=\"subItem.badgeAlert\"\n        [t-badge-color]=\"subItem.badge ? subItem.badge.color : undefined\"\n        [t-badge-value]=\"subItem.badge ? subItem.badge.value : undefined\"\n        [t-id]=\"subItem.id\"\n        [t-label]=\"subItem.label\"\n        [t-level]=\"subItem.level\"\n        [t-link]=\"subItem.link\"\n        [t-sub-items]=\"subItem.subItems\"\n        [t-type]=\"subItem.type\">\n      </thf-menu-item>\n    </div>\n  </div>\n</div>\n\n<ng-template #menuItemTemplate>\n  <div class=\"thf-menu-item\"\n    [class.thf-menu-icon-container]=\"level === 1 && icon\"\n    [class.thf-menu-item-selected]=\"isSelected\"\n    [class.thf-menu-item-level-two]=\"level === 2\"\n    [class.thf-menu-item-level-three]=\"level === 3\"\n    [class.thf-menu-item-level-four]=\"level === 4\"\n    [class.thf-menu-item-grouper-up]=\"type === 'subItems' && isOpened\"\n    [class.thf-menu-item-grouper-down]=\"type === 'subItems' && !isOpened\"\n    [class.thf-menu-sub-item-selected]=\"isSelectedSubItem\"\n    (click)=\"clickMenuItem($event);\">\n    <thf-badge *ngIf=\"canShowBadge\"\n      [ngClass]=\"!collapsedMenu ? 'thf-menu-badge-align' : 'thf-menu-badge-align-collapsed'\"\n      [t-color]=\"badgeColor\"\n      [t-value]=\"badgeValue\">\n    </thf-badge>\n    <span *ngIf=\"level === 1 && icon\" class=\"thf-icon {{icon}} thf-menu-icon-item\"></span>\n    <div *ngIf=\"badgeAlert\"\n      class=\"thf-color-07\"\n      [ngClass]=\"!collapsedMenu ? 'thf-menu-badge-alert' : 'thf-menu-badge-alert-collapsed'\">\n    </div>\n    <span *ngIf=\"type === 'subItems' && !collapsedMenu\"\n      class=\"thf-icon thf-menu-group-icon\"\n      [class.thf-icon-arrow-up]=\"isOpened\"\n      [class.thf-icon-arrow-down]=\"!isOpened\">\n    </span>\n    <div [class.thf-menu-icon-label]=\"level === 1 && icon\">\n      {{ label }}\n    </div>\n    <div *ngIf=\"collapsedMenu\" class=\"thf-menu-short-label\">{{ shortLabel }}</div>\n  </div>\n</ng-template>\n"
                }] }
    ];
    /** @nocollapse */
    ThfMenuItemComponent.ctorParameters = function () { return [
        { type: ThfMenuItemsService }
    ]; };
    ThfMenuItemComponent.propDecorators = {
        action: [{ type: Input, args: ['t-action',] }],
        badgeAlert: [{ type: Input, args: ['t-badge-alert',] }],
        badgeColor: [{ type: Input, args: ['t-badge-color',] }],
        badgeValue: [{ type: Input, args: ['t-badge-value',] }],
        collapsedMenu: [{ type: Input, args: ['t-collapsed-menu',] }],
        icon: [{ type: Input, args: ['t-icon',] }],
        id: [{ type: Input, args: ['t-id',] }],
        isOpened: [{ type: Input, args: ['t-is-opened',] }],
        isSelected: [{ type: Input, args: ['t-is-selected',] }],
        isSubItem: [{ type: Input, args: ['t-is-sub-item',] }],
        label: [{ type: Input, args: ['t-label',] }],
        level: [{ type: Input, args: ['t-level',] }],
        link: [{ type: Input, args: ['t-link',] }],
        shortLabel: [{ type: Input, args: ['t-short-label',] }],
        subItems: [{ type: Input, args: ['t-sub-items',] }],
        type: [{ type: Input, args: ['t-type',] }],
        menuSubItems: [{ type: ViewChild, args: ['menuSubItems', { static: false },] }]
    };
    return ThfMenuItemComponent;
}());
export { ThfMenuItemComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfMenuItemComponent.prototype._badgeValue;
    /**
     * @type {?}
     * @private
     */
    ThfMenuItemComponent.prototype._isSelected;
    /**
     * @type {?}
     * @private
     */
    ThfMenuItemComponent.prototype._isSubItem;
    /**
     * @type {?}
     * @private
     */
    ThfMenuItemComponent.prototype._subItems;
    /** @type {?} */
    ThfMenuItemComponent.prototype.isSelectedSubItem;
    /** @type {?} */
    ThfMenuItemComponent.prototype.maxHeight;
    /**
     * @type {?}
     * @private
     */
    ThfMenuItemComponent.prototype.itemSubscription;
    /** @type {?} */
    ThfMenuItemComponent.prototype.action;
    /** @type {?} */
    ThfMenuItemComponent.prototype.badgeAlert;
    /** @type {?} */
    ThfMenuItemComponent.prototype.badgeColor;
    /** @type {?} */
    ThfMenuItemComponent.prototype.collapsedMenu;
    /** @type {?} */
    ThfMenuItemComponent.prototype.icon;
    /** @type {?} */
    ThfMenuItemComponent.prototype.id;
    /** @type {?} */
    ThfMenuItemComponent.prototype.isOpened;
    /** @type {?} */
    ThfMenuItemComponent.prototype.label;
    /** @type {?} */
    ThfMenuItemComponent.prototype.level;
    /** @type {?} */
    ThfMenuItemComponent.prototype.link;
    /** @type {?} */
    ThfMenuItemComponent.prototype.shortLabel;
    /** @type {?} */
    ThfMenuItemComponent.prototype.type;
    /** @type {?} */
    ThfMenuItemComponent.prototype.menuSubItems;
    /**
     * @type {?}
     * @private
     */
    ThfMenuItemComponent.prototype.menuItemsService;
}
//# sourceMappingURL=data:application/json;base64,