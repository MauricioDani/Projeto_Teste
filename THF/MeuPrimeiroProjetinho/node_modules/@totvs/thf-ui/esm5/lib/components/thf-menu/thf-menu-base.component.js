/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input } from '@angular/core';
import { v4 as uuid } from 'uuid';
import { browserLanguage, convertToBoolean, convertToInt, isExternalLink, isTypeof, thfLocaleDefault, validValue } from '../../utils/util';
/** @type {?} */
export var thfMenuLiteralsDefault = {
    en: { itemNotFound: 'Item not found.' },
    es: { itemNotFound: 'Elemento no encontrado.' },
    pt: { itemNotFound: 'Item não encontrado.' }
};
/**
 * \@description
 *
 * Este é um componente de menu lateral que é utilizado para navegação nas páginas de uma aplicação.
 *
 * O componente thf-menu recebe uma lista de objetos do tipo `MenuItem` com as informações dos itens de menu como
 * textos, links para redirecionamento, ações, até 4 níveis de menu e ícones para o primeiro nível de menu.
 * @abstract
 */
var ThfMenuBaseComponent = /** @class */ (function () {
    function ThfMenuBaseComponent(menuService) {
        this.menuService = menuService;
        this._collapsed = false;
        this._filter = false;
        this._maxLevel = 4;
        this._menus = [];
        this.literals = tslib_1.__assign({}, thfMenuLiteralsDefault[thfLocaleDefault], thfMenuLiteralsDefault[browserLanguage()]);
    }
    Object.defineProperty(ThfMenuBaseComponent.prototype, "collapsed", {
        get: /**
         * @return {?}
         */
        function () {
            return this._collapsed;
        },
        /**
         * @optional
         *
         * @description
         *
         * Colapsa (retrai) o menu e caso receba o valor `false` expande o menu.
         *
         * > Utilize esta propriedade para iniciar o menu colapsado.
         *
         * > Ao utilizar os métodos [`colapse`](documentation/thf-menu#colapseMethod), [`expand`](documentation/thf-menu#expandMethod) e
         * [`toggle`](documentation/thf-menu#toggleMethod) o valor desta propriedade não é alterado.
         *
         * **Importante:**
         *
         * > O menu será colapsado/expandido apenas se todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Colapsa (retrai) o menu e caso receba o valor `false` expande o menu.
         *
         * > Utilize esta propriedade para iniciar o menu colapsado.
         *
         * > Ao utilizar os métodos [`colapse`](documentation/thf-menu#colapseMethod), [`expand`](documentation/thf-menu#expandMethod) e
         * [`toggle`](documentation/thf-menu#toggleMethod) o valor desta propriedade não é alterado.
         *
         * **Importante:**
         *
         * > O menu será colapsado/expandido apenas se todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.
         *
         * \@default `false`
         * @param {?} collapsed
         * @return {?}
         */
        function (collapsed) {
            this._collapsed = convertToBoolean(collapsed);
            this.validateCollapseClass();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuBaseComponent.prototype, "menus", {
        get: /**
         * @return {?}
         */
        function () {
            return this._menus;
        },
        /** Lista dos itens do menu. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio. */
        set: /**
         * Lista dos itens do menu. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio.
         * @param {?} menus
         * @return {?}
         */
        function (menus) {
            this._menus = Array.isArray(menus) ? menus : [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuBaseComponent.prototype, "maxLevel", {
        get: /**
         * @return {?}
         */
        function () {
            return this._maxLevel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuBaseComponent.prototype, "filter", {
        get: /**
         * @return {?}
         */
        function () {
            return this._filter;
        },
        /**
         * @optional
         *
         * @description
         *
         * Habilita um campo para pesquisa no menu.
         * A pesquisa é realizada em todos os níveis do menu e busca apenas pelos itens que contém uma ação e/ou link definidos,
         * ou também, pode ser realizada através de um serviço definido na propriedade `t-service`.
         *
         * > O campo de pesquisa é desabilitado se o menu estiver colapsado.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Habilita um campo para pesquisa no menu.
         * A pesquisa é realizada em todos os níveis do menu e busca apenas pelos itens que contém uma ação e/ou link definidos,
         * ou também, pode ser realizada através de um serviço definido na propriedade `t-service`.
         *
         * > O campo de pesquisa é desabilitado se o menu estiver colapsado.
         *
         * \@default `false`
         * @param {?} filter
         * @return {?}
         */
        function (filter) {
            this._filter = (/** @type {?} */ (filter)) === '' ? true : convertToBoolean(filter);
            this.filteredItems = tslib_1.__spread(this._menus);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuBaseComponent.prototype, "service", {
        get: /**
         * @return {?}
         */
        function () {
            return this._service;
        },
        /**
         * @optional
         *
         * @description
         *
         * Nesta propriedade deve ser informada a URL do serviço em que será utilizado para realizar o filtro de itens do
         * menu quando realizar uma busca. Caso haja a necessidade de customização, pode ser informado um
         * serviço implementando a interface `ThfMenuFilter`.
         *
         * Caso utilizada uma URL, o serviço deve retornar os dados conforme o
         * [Guia de implementação de API da Totvs](http://tdn.totvs.com/display/public/INT/Guia+de+implementacao+das+APIs+TOTVS).
         *
         * Quando utilizada uma URL de serviço, será realizado um *GET* na URL informada, passando o valor digitado
         * no parâmetro `search`, veja exemplo:
         *
         * > O filtro no serviço será realizado caso contenha no mínimo três caracteres no campo de busca, por exemplo `tot`.
         *
         * ```
         * <thf-menu t-service="/api/v1/fnd/menu">
         * </thf-menu>
         *
         * Requisição: GET /api/v1/fnd/menu?search=contas
         * ```
         *
         * > É necessário que propriedade `t-filter` esteja habilitada.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Nesta propriedade deve ser informada a URL do serviço em que será utilizado para realizar o filtro de itens do
         * menu quando realizar uma busca. Caso haja a necessidade de customização, pode ser informado um
         * serviço implementando a interface `ThfMenuFilter`.
         *
         * Caso utilizada uma URL, o serviço deve retornar os dados conforme o
         * [Guia de implementação de API da Totvs](http://tdn.totvs.com/display/public/INT/Guia+de+implementacao+das+APIs+TOTVS).
         *
         * Quando utilizada uma URL de serviço, será realizado um *GET* na URL informada, passando o valor digitado
         * no parâmetro `search`, veja exemplo:
         *
         * > O filtro no serviço será realizado caso contenha no mínimo três caracteres no campo de busca, por exemplo `tot`.
         *
         * ```
         * <thf-menu t-service="/api/v1/fnd/menu">
         * </thf-menu>
         *
         * Requisição: GET /api/v1/fnd/menu?search=contas
         * ```
         *
         * > É necessário que propriedade `t-filter` esteja habilitada.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._service = value || undefined;
            this.configService(this.service);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuBaseComponent.prototype, "params", {
        get: /**
         * @return {?}
         */
        function () {
            return this._params;
        },
        /**
         * @optional
         *
         * @description
         *
         * Deve ser informado um objeto que deseja-se utilizar na requisição de filtro dos itens de menu.
         *
         * Caso utilizado um serviço customizado, implementando a interface `ThfMenuFilter`, o valor desta propriedade
         * será passado como parâmetro, na função `getFilteredData`.
         *
         * Quando utilizada uma URL de serviço, será realizado um *GET* na URL informada, passando os valores informados
         * nesta propriedade em conjunto com o parâmetro `search`, veja exemplo:
         *
         * ```
         * <thf-menu t-service="/api/v1/fnd/menu" [t-params]="{ company: 1, user: 297767512 }">
         * </thf-menu>
         *
         * Requisição: GET /api/v1/fnd/menu?search=contas&company=1&user=297767512
         * ```
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Deve ser informado um objeto que deseja-se utilizar na requisição de filtro dos itens de menu.
         *
         * Caso utilizado um serviço customizado, implementando a interface `ThfMenuFilter`, o valor desta propriedade
         * será passado como parâmetro, na função `getFilteredData`.
         *
         * Quando utilizada uma URL de serviço, será realizado um *GET* na URL informada, passando os valores informados
         * nesta propriedade em conjunto com o parâmetro `search`, veja exemplo:
         *
         * ```
         * <thf-menu t-service="/api/v1/fnd/menu" [t-params]="{ company: 1, user: 297767512 }">
         * </thf-menu>
         *
         * Requisição: GET /api/v1/fnd/menu?search=contas&company=1&user=297767512
         * ```
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._params = value && isTypeof(value, 'object') ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuBaseComponent.prototype, "logo", {
        get: /**
         * @return {?}
         */
        function () {
            return this._logo;
        },
        /**
         * @optional
         *
         * @description
         *
         * Caminho para a logomarca, que será exibida quando o componente estiver expandido, localizada na parte superior.
         *
         * > **Importante:**
         * - Caso esta propriedade estiver indefinida ou inválida o espaço para logomarca será removido.
         * - Como boa prática, indica-se utilizar imagens com até `24px` de altura e `224px` de largura,
         * caso ultrapassar esses valores a imagem será readequada no espaço disponível.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Caminho para a logomarca, que será exibida quando o componente estiver expandido, localizada na parte superior.
         *
         * > **Importante:**
         * - Caso esta propriedade estiver indefinida ou inválida o espaço para logomarca será removido.
         * - Como boa prática, indica-se utilizar imagens com até `24px` de altura e `224px` de largura,
         * caso ultrapassar esses valores a imagem será readequada no espaço disponível.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuBaseComponent.prototype, "shortLogo", {
        get: /**
         * @return {?}
         */
        function () {
            return this._shortLogo;
        },
        /**
         * @optional
         *
         * @description
         *
         * Caminho para a logomarca, que será exibida quando o componente estiver colapsado, localizada na parte superior.
         *
         * > **Importante:**
         * - Caso esta propriedade estiver indefinida ou inválida passa a assumir o valor informado na propriedade `t-logo` e na ausência desta o
         * espaço para logomarca será removido.
         * - Como boa prática, indica-se utilizar imagens com até `48px` de altura e `48px` de largura,
         * caso ultrapassar esses valores a imagem será readequada no espaço disponível.
         * - Caso não informar um valor, esta propriedade passa a assumir o valor informado na propriedade `t-logo`.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Caminho para a logomarca, que será exibida quando o componente estiver colapsado, localizada na parte superior.
         *
         * > **Importante:**
         * - Caso esta propriedade estiver indefinida ou inválida passa a assumir o valor informado na propriedade `t-logo` e na ausência desta o
         * espaço para logomarca será removido.
         * - Como boa prática, indica-se utilizar imagens com até `48px` de altura e `48px` de largura,
         * caso ultrapassar esses valores a imagem será readequada no espaço disponível.
         * - Caso não informar um valor, esta propriedade passa a assumir o valor informado na propriedade `t-logo`.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._shortLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @param {?} service
     * @return {?}
     */
    ThfMenuBaseComponent.prototype.configService = /**
     * @private
     * @param {?} service
     * @return {?}
     */
    function (service) {
        if (typeof service === 'string' && service.trim()) {
            // service url
            this.menuService.configProperties(service);
            this.filterService = this.menuService;
        }
        else if (typeof service === 'object' && service.getFilteredData) {
            // custom service
            this.filterService = service;
        }
        else {
            this.filterService = undefined;
        }
    };
    /**
     * @protected
     * @return {?}
     */
    ThfMenuBaseComponent.prototype.setMenuExtraProperties = /**
     * @protected
     * @return {?}
     */
    function () {
        var _this = this;
        this.allowIcons = !!this.menus.length;
        this.allowCollapseMenu = !!this.menus.length;
        this.menus.forEach((/**
         * @param {?} menuItem
         * @return {?}
         */
        function (menuItem) {
            _this._level = 1;
            _this.allowIcons = _this.allowIcons ? validValue(menuItem.icon) : false;
            _this.allowCollapseMenu = _this.allowCollapseMenu && _this.allowIcons ? validValue(menuItem.shortLabel) : false;
            _this.removeBadgeAlert(menuItem);
            _this.setMenuItemProperties(menuItem);
            if (menuItem.subItems) {
                _this._level++;
                _this.processSubItems(menuItem);
            }
        }));
    };
    /**
     * @protected
     * @param {?} menuItem
     * @return {?}
     */
    ThfMenuBaseComponent.prototype.setMenuItemProperties = /**
     * @protected
     * @param {?} menuItem
     * @return {?}
     */
    function (menuItem) {
        menuItem['id'] = menuItem['id'] || uuid();
        menuItem['level'] = this._level;
        menuItem['type'] = this.setMenuType(menuItem);
    };
    /**
     * @protected
     * @param {?} menus
     * @return {?}
     */
    ThfMenuBaseComponent.prototype.validateMenus = /**
     * @protected
     * @param {?} menus
     * @return {?}
     */
    function (menus) {
        var _this = this;
        menus.forEach((/**
         * @param {?} menu
         * @return {?}
         */
        function (menu) { return _this.validateMenu(menu); }));
    };
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    ThfMenuBaseComponent.prototype.processSubItems = /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        var _this = this;
        menu.subItems.forEach((/**
         * @param {?} menuItem
         * @param {?} index
         * @param {?} menuItems
         * @return {?}
         */
        function (menuItem, index, menuItems) {
            /** @type {?} */
            var previousItem = menuItems[index - 1];
            if (previousItem && previousItem.subItems) {
                _this._level = previousItem['level'];
            }
            if (_this._level <= _this.maxLevel) {
                _this.setMenuItemProperties(menuItem);
                if (menuItem.subItems) {
                    _this._level++;
                    _this.processSubItems(menuItem);
                }
            }
            if (!menu['badgeAlert']) {
                menu = _this.setMenuBadgeAlert(menu, menuItem);
            }
        }));
        menu.subItems = Object.assign([], menu.subItems);
    };
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    ThfMenuBaseComponent.prototype.removeBadgeAlert = /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    function (menuItem) {
        var _this = this;
        if (menuItem['badgeAlert']) {
            delete menuItem['badgeAlert'];
        }
        if (menuItem.subItems) {
            menuItem.subItems.forEach((/**
             * @param {?} subItem
             * @return {?}
             */
            function (subItem) { return _this.removeBadgeAlert(subItem); }));
        }
    };
    /**
     * @private
     * @param {?} parent
     * @param {?} child
     * @return {?}
     */
    ThfMenuBaseComponent.prototype.setMenuBadgeAlert = /**
     * @private
     * @param {?} parent
     * @param {?} child
     * @return {?}
     */
    function (parent, child) {
        /** @type {?} */
        var childHasSubItems = child.subItems && child.subItems.length;
        /** @type {?} */
        var childHasBadgeAlert = child['badgeAlert'];
        /** @type {?} */
        var childHasBadge = child.badge && convertToInt(child.badge.value) >= 0;
        parent['badgeAlert'] = childHasBadgeAlert || (childHasBadge && !childHasSubItems);
        return parent;
    };
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    ThfMenuBaseComponent.prototype.setMenuType = /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    function (menuItem) {
        if (menuItem.subItems && menuItem.subItems.length > 0 && this._level < this.maxLevel) {
            return 'subItems';
        }
        if (!menuItem.link) {
            return 'noLink';
        }
        if (isExternalLink(menuItem.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    };
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    ThfMenuBaseComponent.prototype.validateMenu = /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    function (menuItem) {
        var _this = this;
        if (!menuItem.label || menuItem.label.trim() === '') {
            throw new Error('O atributo ThfMenuItem.label não pode ser vazio.');
        }
        else if (menuItem.subItems) {
            menuItem.subItems.forEach((/**
             * @param {?} subItem
             * @return {?}
             */
            function (subItem) {
                _this.validateMenu(subItem);
            }));
        }
    };
    ThfMenuBaseComponent.propDecorators = {
        collapsed: [{ type: Input, args: ['t-collapsed',] }],
        menus: [{ type: Input, args: ['t-menus',] }],
        filter: [{ type: Input, args: ['t-filter',] }],
        service: [{ type: Input, args: ['t-service',] }],
        params: [{ type: Input, args: ['t-params',] }],
        logo: [{ type: Input, args: ['t-logo',] }],
        shortLogo: [{ type: Input, args: ['t-short-logo',] }]
    };
    return ThfMenuBaseComponent;
}());
export { ThfMenuBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfMenuBaseComponent.prototype._collapsed;
    /**
     * @type {?}
     * @private
     */
    ThfMenuBaseComponent.prototype._filter;
    /**
     * @type {?}
     * @private
     */
    ThfMenuBaseComponent.prototype._level;
    /**
     * @type {?}
     * @private
     */
    ThfMenuBaseComponent.prototype._logo;
    /**
     * @type {?}
     * @private
     */
    ThfMenuBaseComponent.prototype._maxLevel;
    /**
     * @type {?}
     * @private
     */
    ThfMenuBaseComponent.prototype._menus;
    /**
     * @type {?}
     * @private
     */
    ThfMenuBaseComponent.prototype._params;
    /**
     * @type {?}
     * @private
     */
    ThfMenuBaseComponent.prototype._service;
    /**
     * @type {?}
     * @private
     */
    ThfMenuBaseComponent.prototype._shortLogo;
    /** @type {?} */
    ThfMenuBaseComponent.prototype.allowIcons;
    /** @type {?} */
    ThfMenuBaseComponent.prototype.allowCollapseMenu;
    /** @type {?} */
    ThfMenuBaseComponent.prototype.filteredItems;
    /** @type {?} */
    ThfMenuBaseComponent.prototype.filterService;
    /** @type {?} */
    ThfMenuBaseComponent.prototype.literals;
    /** @type {?} */
    ThfMenuBaseComponent.prototype.menuService;
    /**
     * @abstract
     * @protected
     * @return {?}
     */
    ThfMenuBaseComponent.prototype.validateCollapseClass = function () { };
}
//# sourceMappingURL=data:application/json;base64,