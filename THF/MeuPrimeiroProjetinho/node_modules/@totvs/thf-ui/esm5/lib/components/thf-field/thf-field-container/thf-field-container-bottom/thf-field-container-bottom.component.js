/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente de uso interno, responsável por gerar uma margem inferior nos componentes que utilizam o thf-field-container.
 * Essa margem inferior pode conter uma mensagem de erro.
 */
var ThfFieldContainerBottomComponent = /** @class */ (function () {
    function ThfFieldContainerBottomComponent() {
        /**
         * Mensagem que será apresentada quando o pattern ou a máscara não for satisfeita.
         * Obs: Esta mensagem não é apresentada quando o campo estiver vazio, mesmo que ele seja requerido.
         */
        this.errorPattern = '';
    }
    ThfFieldContainerBottomComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-field-container-bottom',
                    template: "<div class=\"thf-field-container-bottom\">\n  <span *ngIf=\"errorPattern\"  class=\"thf-field-container-bottom-text-error\">\n    <span class=\"thf-icon thf-icon-warning thf-field-container-icon-error\"></span>\n    {{ errorPattern }}\n  </span>\n</div>\n"
                }] }
    ];
    ThfFieldContainerBottomComponent.propDecorators = {
        errorPattern: [{ type: Input, args: ['t-error-pattern',] }]
    };
    return ThfFieldContainerBottomComponent;
}());
export { ThfFieldContainerBottomComponent };
if (false) {
    /**
     * Mensagem que será apresentada quando o pattern ou a máscara não for satisfeita.
     * Obs: Esta mensagem não é apresentada quando o campo estiver vazio, mesmo que ele seja requerido.
     * @type {?}
     */
    ThfFieldContainerBottomComponent.prototype.errorPattern;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWZpZWxkLWNvbnRhaW5lci1ib3R0b20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1maWVsZC90aGYtZmllbGQtY29udGFpbmVyL3RoZi1maWVsZC1jb250YWluZXItYm90dG9tL3RoZi1maWVsZC1jb250YWluZXItYm90dG9tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7OztBQVVqRDtJQUFBOzs7OztRQVU0QixpQkFBWSxHQUFZLEVBQUUsQ0FBQztJQUV2RCxDQUFDOztnQkFaQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtvQkFDdEMsMlFBQTBEO2lCQUMzRDs7OytCQU9FLEtBQUssU0FBQyxpQkFBaUI7O0lBRTFCLHVDQUFDO0NBQUEsQUFaRCxJQVlDO1NBUlksZ0NBQWdDOzs7Ozs7O0lBTTNDLHdEQUFxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIGRlIHVzbyBpbnRlcm5vLCByZXNwb25zw6F2ZWwgcG9yIGdlcmFyIHVtYSBtYXJnZW0gaW5mZXJpb3Igbm9zIGNvbXBvbmVudGVzIHF1ZSB1dGlsaXphbSBvIHRoZi1maWVsZC1jb250YWluZXIuXG4gKiBFc3NhIG1hcmdlbSBpbmZlcmlvciBwb2RlIGNvbnRlciB1bWEgbWVuc2FnZW0gZGUgZXJyby5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLWZpZWxkLWNvbnRhaW5lci1ib3R0b20nLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLWZpZWxkLWNvbnRhaW5lci1ib3R0b20uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoZkZpZWxkQ29udGFpbmVyQm90dG9tQ29tcG9uZW50IHtcblxuICAvKipcbiAgICogTWVuc2FnZW0gcXVlIHNlcsOhIGFwcmVzZW50YWRhIHF1YW5kbyBvIHBhdHRlcm4gb3UgYSBtw6FzY2FyYSBuw6NvIGZvciBzYXRpc2ZlaXRhLlxuICAgKiBPYnM6IEVzdGEgbWVuc2FnZW0gbsOjbyDDqSBhcHJlc2VudGFkYSBxdWFuZG8gbyBjYW1wbyBlc3RpdmVyIHZhemlvLCBtZXNtbyBxdWUgZWxlIHNlamEgcmVxdWVyaWRvLlxuICAgKi9cbiAgQElucHV0KCd0LWVycm9yLXBhdHRlcm4nKSBlcnJvclBhdHRlcm4/OiBzdHJpbmcgPSAnJztcblxufVxuIl19