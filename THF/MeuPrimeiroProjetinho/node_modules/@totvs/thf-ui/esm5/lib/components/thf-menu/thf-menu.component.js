/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ContentChild, ElementRef, Renderer2, ViewContainerRef } from '@angular/core';
import { NavigationCancel, NavigationEnd, Router } from '@angular/router';
import { map } from 'rxjs/operators';
import { getFormattedLink, isMobile, openExternalLink } from '../../utils/util';
import { ThfMenuBaseComponent } from './thf-menu-base.component';
import { ThfMenuHeaderTemplateDirective } from './thf-menu-header-template/thf-menu-header-template.directive';
import { ThfMenuItemsService } from './services/thf-menu-items.service';
import { ThfMenuService } from './services/thf-menu.service';
/** @type {?} */
var thfMenuDebounceTime = 400;
/** @type {?} */
var thfMenuMinLength = 3;
/** @type {?} */
var thfMenuRootLevel = 1;
/**
 * \@docsExtends ThfMenuBaseComponent
 *
 * \@description
 *
 * Aparece completo em telas com largura maior que 1200px, caso contrário o menu é escondido e chamado por meio de um botão.
 *
 * O menu também pode ser colapsado. Essa opção é habilitada quando todos os itens de primeiro nível possuírem ícones e textos curtos.
 * Se colapsado, somente os itens de primeiro nível serão exibidos e, caso o item selecionado possua sub-níveis,
 * então o menu alternará novamente para o estado aberto.
 *
 * Existe a possibilidade de customizar a logomarca, que é exibida na parte superior do componente.
 *
 * E para adicionar um conteúdo personalizado entre a logomarca e o campo de filtro,
 * basta adicionar este conteúdo com a diretiva [**t-menu-header-template**](/documentation/thf-menu-header-template).
 *
 * Caso utilizar o filtro de menus, é possível realizar buscas em serviço, apenas informando a URL do serviço ou a instância de
 * um serviço customizado implementando a interface `ThfMenuFilter`.
 *
 * Para o menu funcionar corretamente é necessário importar o `RouterModule` e `Routes` do módulo principal de
 *  sua aplicação:
 *
 * ````
 * import { RouterModule, Routes } from '\@angular/router';
 *
 * ...
 *
 * \@NgModule({
 *   imports: [
 *     RouterModule,
 *     Routes,
 *     ...
 *     ThfModule,
 *     ...
 *   ],
 *   declarations: [
 *     AppComponent
 *   ],
 *   providers: [],
 *   bootstrap: [AppComponent]
 * })
 * export class AppModule { }
 * ```
 *
 * Além disso é necessário criar um módulo configurando as rotas da aplicação.
 *
 * ```
 * import { NgModule } from '\@angular/core';
 *
 * import { RouterModule, Routes } from '\@angular/router';
 *
 * import { HelloWorldComponent } from './hello-world/hello-world.component';
 *
 * const routes: Routes = [
 *   {path: 'hello-world', component: HelloWorldComponent}
 * ];
 *
 * \@NgModule({
 *   imports: [RouterModule.forRoot(routes, {useHash: true})],
 *   exports: [RouterModule]
 * })
 * export class AppRoutingModule {}
 * ```
 *
 * \@example
 *
 * <example name="thf-menu-basic" title="Totvs Menu Basic">
 *   <file name="sample-thf-menu-basic/sample-thf-menu-basic.component.html"> </file>
 *   <file name="sample-thf-menu-basic/sample-thf-menu-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-menu-labs" title="Totvs Menu Labs">
 *   <file name="sample-thf-menu-labs/sample-thf-menu-labs.component.html"> </file>
 *   <file name="sample-thf-menu-labs/sample-thf-menu-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-menu-human-resources" title="Totvs Menu - Human Resources">
 *   <file name="sample-thf-menu-human-resources/sample-thf-menu-human-resources.component.html"> </file>
 *   <file name="sample-thf-menu-human-resources/sample-thf-menu-human-resources.component.ts"> </file>
 *   <file name="sample-thf-menu-human-resources/sample-thf-menu-human-resources.service.ts"> </file>
 * </example>
 */
var ThfMenuComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfMenuComponent, _super);
    function ThfMenuComponent(viewRef, element, renderer, router, menuItemsService, changeDetector, menuService) {
        var _this = _super.call(this, menuService) || this;
        _this.element = element;
        _this.renderer = renderer;
        _this.router = router;
        _this.menuItemsService = menuItemsService;
        _this.changeDetector = changeDetector;
        _this.filterLoading = false;
        _this.mobileOpened = false;
        _this.noData = false;
        _this.filteringItems = false;
        _this.menuInitialized = false;
        _this.menuPrevious = null;
        _this.parentRef = viewRef['_view']['component'];
        return _this;
    }
    Object.defineProperty(ThfMenuComponent.prototype, "isActiveItemMenuSubMenu", {
        get: /**
         * @private
         * @return {?}
         */
        function () {
            return this.activeMenuItem['level'] > this.groupedMenuItem['level'];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuComponent.prototype, "enableCollapse", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isCollapsed && !this.collapsedMobile;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuComponent.prototype, "enableCollapseButton", {
        get: /**
         * @return {?}
         */
        function () {
            return this.allowCollapseMenu && !this.collapsed && !this.mobileOpened;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuComponent.prototype, "hasFooter", {
        get: /**
         * @return {?}
         */
        function () {
            return this.allowCollapseMenu && !this.mobileOpened && this.enableCollapseButton || (this.collapsed && !this.collapsedMobile);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfMenuComponent.prototype, "isCollapsed", {
        get: /**
         * @return {?}
         */
        function () {
            return this.allowCollapseMenu && this.collapsed;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ThfMenuComponent.prototype.ngDoCheck = /**
     * @return {?}
     */
    function () {
        if (this.filteringItems && this.filter) {
            return;
        }
        /** @type {?} */
        var menuCurrent = JSON.stringify(this.menus);
        if (this.menuPrevious !== menuCurrent || !this.menuInitialized) {
            this.updateMenu();
            this.validateCollapseClass();
        }
    };
    /**
     * @return {?}
     */
    ThfMenuComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.itemSubscription.unsubscribe();
        this.routeSubscription.unsubscribe();
        if (this.resizeListener) {
            this.resizeListener();
        }
    };
    /**
     * @return {?}
     */
    ThfMenuComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.subscribeToMenuItem();
        this.subscribeToRoute();
        setTimeout((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var urlRouter = _this.checkingRouterChildrenFragments();
            _this.checkActiveMenuByUrl(urlRouter);
        }));
    };
    /**
     * @param {?} urlPath
     * @param {?} menus
     * @return {?}
     */
    ThfMenuComponent.prototype.activateMenuByUrl = /**
     * @param {?} urlPath
     * @param {?} menus
     * @return {?}
     */
    function (urlPath, menus) {
        var _this = this;
        if (menus) {
            return menus.some((/**
             * @param {?} menu
             * @return {?}
             */
            function (menu) {
                /** @type {?} */
                var formattedLink = getFormattedLink(menu.link);
                if (formattedLink === urlPath) {
                    _this.linkActive = formattedLink;
                    _this.activateMenuItem(menu);
                    return true;
                }
                else {
                    return _this.activateMenuByUrl(urlPath, menu.subItems);
                }
            }));
        }
    };
    /**
     * @param {?} urlPath
     * @return {?}
     */
    ThfMenuComponent.prototype.checkActiveMenuByUrl = /**
     * @param {?} urlPath
     * @return {?}
     */
    function (urlPath) {
        if (!this.linkActive || this.linkActive !== urlPath) {
            this.activateMenuByUrl(urlPath, this.menus);
        }
    };
    /**
     * <a id="colapseMethod"></a>
     *
     * *Método para colapsar (retrair) o menu.
     */
    /**
     * <a id="colapseMethod"></a>
     *
     * *Método para colapsar (retrair) o menu.
     * @return {?}
     */
    ThfMenuComponent.prototype.collapse = /**
     * <a id="colapseMethod"></a>
     *
     * *Método para colapsar (retrair) o menu.
     * @return {?}
     */
    function () {
        this.validateToggleMenu(true);
    };
    /**
     * @param {?} filter
     * @return {?}
     */
    ThfMenuComponent.prototype.debounceFilter = /**
     * @param {?} filter
     * @return {?}
     */
    function (filter) {
        var _this = this;
        clearTimeout(this.timeoutFilter);
        this.timeoutFilter = setTimeout((/**
         * @return {?}
         */
        function () {
            _this.filterProcess(filter);
        }), thfMenuDebounceTime);
    };
    /**
     * <a id="expandMethod"></a>
     *
     * *Método para expandir (aumentar) o menu.
     */
    /**
     * <a id="expandMethod"></a>
     *
     * *Método para expandir (aumentar) o menu.
     * @return {?}
     */
    ThfMenuComponent.prototype.expand = /**
     * <a id="expandMethod"></a>
     *
     * *Método para expandir (aumentar) o menu.
     * @return {?}
     */
    function () {
        this.validateToggleMenu(false);
    };
    /**
     * @return {?}
     */
    ThfMenuComponent.prototype.subscribeToMenuItem = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.itemSubscription = this.menuItemsService.receiveFromChildMenuClicked().subscribe((/**
         * @param {?} menu
         * @return {?}
         */
        function (menu) {
            _this.clickMenuItem(menu);
        }));
    };
    /**
     * @return {?}
     */
    ThfMenuComponent.prototype.subscribeToRoute = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.routeSubscription = this.router.events.subscribe((/**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            if (val instanceof NavigationEnd || val instanceof NavigationCancel) {
                /** @type {?} */
                var urlRouter = _this.checkingRouterChildrenFragments();
                _this.checkActiveMenuByUrl(urlRouter);
            }
        }));
    };
    /**
     * <a id="toggleMethod"></a>
     * *Método que colapsa e expande o menu alternadamente.
     *
     * > *Os métodos apenas vão colapsar/expandir o menu se:
     *  - Todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.
     */
    /**
     * <a id="toggleMethod"></a>
     * *Método que colapsa e expande o menu alternadamente.
     *
     * > *Os métodos apenas vão colapsar/expandir o menu se:
     *  - Todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.
     * @return {?}
     */
    ThfMenuComponent.prototype.toggle = /**
     * <a id="toggleMethod"></a>
     * *Método que colapsa e expande o menu alternadamente.
     *
     * > *Os métodos apenas vão colapsar/expandir o menu se:
     *  - Todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.
     * @return {?}
     */
    function () {
        this.validateToggleMenu(!this.collapsed);
    };
    /**
     * @return {?}
     */
    ThfMenuComponent.prototype.toggleMenuMobile = /**
     * @return {?}
     */
    function () {
        this.mobileOpened = !this.mobileOpened;
        this.collapsedMobile = this.collapsed && this.mobileOpened;
        this.validateCollapseClass(this.collapsedMobile);
        if (isMobile()) {
            return;
        }
        if (this.mobileOpened) {
            this.createResizeListener();
        }
    };
    /**
     * @private
     * @return {?}
     */
    ThfMenuComponent.prototype.activateCollapseSubMenuItem = /**
     * @private
     * @return {?}
     */
    function () {
        this.clearGroupMenuIfFirstLevel(this.activeMenuItem);
        if (!this.collapsed && this.activeMenuItem['level'] > thfMenuRootLevel && this.isActiveItemMenuSubMenu) {
            this.openParentMenu(this.activeMenuItem);
        }
    };
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    ThfMenuComponent.prototype.activateMenuItem = /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        this.activeMenuItem = menu;
        this.linkActive = menu.link;
        if (this.activeMenuItem['level'] > thfMenuRootLevel) {
            this.openParentMenu(this.activeMenuItem);
        }
        else {
            this.groupedMenuItem = null;
        }
        this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem, activatedByRoute: true });
    };
    /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    ThfMenuComponent.prototype.areSubMenus = /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    function (menus) {
        return menus.every((/**
         * @param {?} menu
         * @return {?}
         */
        function (menu) { return menu['level'] > thfMenuRootLevel; }));
    };
    /**
     * @private
     * @return {?}
     */
    ThfMenuComponent.prototype.checkingRouterChildrenFragments = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];
        return childrenPrimary ? "/" + childrenPrimary.segments.map((/**
         * @param {?} it
         * @return {?}
         */
        function (it) { return it.path; })).join('/') : '';
    };
    /**
     * @private
     * @param {?} activeMenuItem
     * @return {?}
     */
    ThfMenuComponent.prototype.clearGroupMenuIfFirstLevel = /**
     * @private
     * @param {?} activeMenuItem
     * @return {?}
     */
    function (activeMenuItem) {
        if (activeMenuItem['level'] === thfMenuRootLevel) {
            this.groupedMenuItem = undefined;
        }
    };
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    ThfMenuComponent.prototype.clickMenuItem = /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        if (menu.action) {
            this.executeMenuAction(menu);
        }
        if (menu['type'] === 'externalLink') {
            openExternalLink(menu.link);
        }
        else if (menu['type'] === 'internalLink') {
            this.activateMenuItem(menu);
        }
        else if (menu['type'] === 'subItems') {
            if (this.filteringItems) {
                this.filteringItems = false;
            }
            this.groupMenuItem(menu);
        }
        if (menu['type'] !== 'subItems') {
            this.mobileOpened = false;
        }
    };
    /**
     * @private
     * @param {?=} menuItem
     * @return {?}
     */
    ThfMenuComponent.prototype.convertToMenuItemFiltered = /**
     * @private
     * @param {?=} menuItem
     * @return {?}
     */
    function (menuItem) {
        if (menuItem === void 0) { menuItem = { label: '', link: '' }; }
        var label = menuItem.label, link = menuItem.link;
        /** @type {?} */
        var menuItemFiltered = { label: label, link: link };
        this.setMenuItemProperties(menuItemFiltered);
        return menuItemFiltered;
    };
    /**
     * @private
     * @return {?}
     */
    ThfMenuComponent.prototype.createResizeListener = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @return {?}
         */
        function () {
            _this.toggleResize();
            _this.resizeListener();
        }));
    };
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    ThfMenuComponent.prototype.executeMenuAction = /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        if (typeof menu.action === 'string') {
            this.parentRef[menu.action](menu);
        }
        else {
            menu.action.call(this.parentRef, menu);
        }
    };
    /**
     * @private
     * @param {?} filter
     * @return {?}
     */
    ThfMenuComponent.prototype.filterItems = /**
     * @private
     * @param {?} filter
     * @return {?}
     */
    function (filter) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var trimFilter, _a, _b;
            return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        trimFilter = filter && filter.trim();
                        if (!trimFilter) return [3 /*break*/, 4];
                        this.filteredItems = [];
                        _a = this;
                        if (!this.filterService) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.filterOnService(trimFilter)];
                    case 1:
                        _b = _c.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        _b = this.filterLocalItems(trimFilter);
                        _c.label = 3;
                    case 3:
                        _a.filteredItems = _b;
                        this.filteringItems = true;
                        return [3 /*break*/, 5];
                    case 4:
                        this.filteredItems = tslib_1.__spread(this.menus);
                        this.filteringItems = false;
                        _c.label = 5;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @private
     * @param {?} filter
     * @return {?}
     */
    ThfMenuComponent.prototype.filterLocalItems = /**
     * @private
     * @param {?} filter
     * @return {?}
     */
    function (filter) {
        /** @type {?} */
        var filteredItems = [];
        this.findItems(this.menus, filter.toLowerCase(), filteredItems);
        return filteredItems;
    };
    /**
     * @private
     * @param {?} filter
     * @return {?}
     */
    ThfMenuComponent.prototype.filterProcess = /**
     * @private
     * @param {?} filter
     * @return {?}
     */
    function (filter) {
        var _this = this;
        this.filterLoading = true;
        this.filterItems(filter).then((/**
         * @return {?}
         */
        function () {
            _this.filterLoading = false;
            _this.showNoData();
            _this.changeDetector.detectChanges();
            _this.menuItemsService.sendToChildMenuClicked({ active: _this.activeMenuItem, grouped: _this.groupedMenuItem });
        })).catch((/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.filterLoading = false;
            Promise.reject(error);
        }));
    };
    /**
     * @private
     * @param {?=} search
     * @return {?}
     */
    ThfMenuComponent.prototype.filterOnService = /**
     * @private
     * @param {?=} search
     * @return {?}
     */
    function (search) {
        if (search === void 0) { search = ''; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(search.length >= thfMenuMinLength)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.filterService.getFilteredData(search, this.params)
                                .pipe(map((/**
                             * @param {?} menuItemsFiltered
                             * @return {?}
                             */
                            function (menuItemsFiltered) { return menuItemsFiltered.map((/**
                             * @param {?} menuItem
                             * @return {?}
                             */
                            function (menuItem) { return _this.convertToMenuItemFiltered(menuItem); })); })))
                                .toPromise()];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2: return [2 /*return*/, this.filteredItems];
                }
            });
        });
    };
    /**
     * @private
     * @param {?} menus
     * @param {?} filter
     * @param {?} filteredItems
     * @return {?}
     */
    ThfMenuComponent.prototype.findItems = /**
     * @private
     * @param {?} menus
     * @param {?} filter
     * @param {?} filteredItems
     * @return {?}
     */
    function (menus, filter, filteredItems) {
        var _this = this;
        menus.forEach((/**
         * @param {?} menu
         * @return {?}
         */
        function (menu) {
            if ((menu.label.toLowerCase().includes(filter) && !menu.subItems) ||
                (menu.subItems && _this.findItems(menu.subItems, filter, filteredItems))) {
                filteredItems.push(menu);
            }
        }));
    };
    /**
     * @private
     * @param {?} menus
     * @param {?} menuItem
     * @return {?}
     */
    ThfMenuComponent.prototype.findParent = /**
     * @private
     * @param {?} menus
     * @param {?} menuItem
     * @return {?}
     */
    function (menus, menuItem) {
        /** @type {?} */
        var getParent = (/**
         * @param {?} menuItems
         * @param {?} id
         * @return {?}
         */
        function (menuItems, id) {
            if (menuItems) {
                for (var index = 0; index < menuItems.length; index++) {
                    /** @type {?} */
                    var menu = menuItems[index];
                    if (menu.subItems && menu.subItems.find((/**
                     * @param {?} subItem
                     * @return {?}
                     */
                    function (subItem) { return subItem['id'] === id; }))) {
                        return menu;
                    }
                    /** @type {?} */
                    var found = getParent(menu.subItems, id);
                    if (found) {
                        return found;
                    }
                }
            }
        });
        return getParent(menus, menuItem['id']);
    };
    /**
     * @private
     * @param {?} menus
     * @param {?} menu
     * @return {?}
     */
    ThfMenuComponent.prototype.findRootParent = /**
     * @private
     * @param {?} menus
     * @param {?} menu
     * @return {?}
     */
    function (menus, menu) {
        /** @type {?} */
        var findParent = this.findParent;
        /** @type {?} */
        var getRootParent = (/**
         * @param {?} menuItems
         * @param {?} menuItem
         * @return {?}
         */
        function (menuItems, menuItem) {
            /** @type {?} */
            var parent = findParent(menuItems, menuItem);
            if (parent['level'] !== thfMenuRootLevel) {
                parent = getRootParent(menuItems, parent);
            }
            return parent;
        });
        return getRootParent(menus, menu);
    };
    /**
     * @private
     * @param {?} menus
     * @param {?} activeMenuItem
     * @param {?} groupedMenuItem
     * @return {?}
     */
    ThfMenuComponent.prototype.getActiveMenuParent = /**
     * @private
     * @param {?} menus
     * @param {?} activeMenuItem
     * @param {?} groupedMenuItem
     * @return {?}
     */
    function (menus, activeMenuItem, groupedMenuItem) {
        if (this.areSubMenus([groupedMenuItem, activeMenuItem])) {
            return this.findRootParent(menus, activeMenuItem);
        }
    };
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    ThfMenuComponent.prototype.groupMenuItem = /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        if (this.collapsed) {
            this.toggleMenuCollapse();
        }
        menu['isOpened'] = !menu['isOpened'];
        this.groupedMenuItem = menu;
        if (this.activeMenuItem && menu['isOpened']
            && this.isActiveItemMenuSubMenu
            && this.isRootMenuEqualGroupedMenu(this.menus, this.activeMenuItem, menu)) {
            this.activateMenuItem(this.activeMenuItem);
        }
        this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });
    };
    /**
     * @private
     * @param {?} menus
     * @param {?} activeMenuItem
     * @param {?} groupedMenuItem
     * @return {?}
     */
    ThfMenuComponent.prototype.isRootMenuEqualGroupedMenu = /**
     * @private
     * @param {?} menus
     * @param {?} activeMenuItem
     * @param {?} groupedMenuItem
     * @return {?}
     */
    function (menus, activeMenuItem, groupedMenuItem) {
        /** @type {?} */
        var activeMenuRootParent = this.findRootParent(menus, activeMenuItem);
        return activeMenuRootParent['id'] === groupedMenuItem['id'];
    };
    /**
     * @private
     * @param {?} childMenu
     * @return {?}
     */
    ThfMenuComponent.prototype.openParentMenu = /**
     * @private
     * @param {?} childMenu
     * @return {?}
     */
    function (childMenu) {
        /** @type {?} */
        var parent = this.findParent(this.menus, childMenu);
        parent['isOpened'] = true;
        this.groupedMenuItem = parent;
    };
    /**
     * @private
     * @return {?}
     */
    ThfMenuComponent.prototype.showNoData = /**
     * @private
     * @return {?}
     */
    function () {
        this.noData = this.filteredItems.length === 0;
    };
    /**
     * @private
     * @return {?}
     */
    ThfMenuComponent.prototype.toggleGroupedMenuItem = /**
     * @private
     * @return {?}
     */
    function () {
        this.groupedMenuItem['isOpened'] = !this.collapsed && this.allowCollapseMenu;
    };
    /**
     * @private
     * @param {?=} collapsed
     * @return {?}
     */
    ThfMenuComponent.prototype.toggleMenuCollapse = /**
     * @private
     * @param {?=} collapsed
     * @return {?}
     */
    function (collapsed) {
        if (collapsed === void 0) { collapsed = false; }
        this.collapsed = collapsed;
        if (this.groupedMenuItem && this.activeMenuItem) {
            this.groupedMenuItem = this.getActiveMenuParent(this.menus, this.activeMenuItem, this.groupedMenuItem) || this.groupedMenuItem;
            this.toggleGroupedMenuItem();
        }
        if (this.activeMenuItem) {
            this.activateCollapseSubMenuItem();
            this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem, activatedByRoute: true });
        }
        this.updateMenu();
    };
    /**
     * @private
     * @return {?}
     */
    ThfMenuComponent.prototype.toggleResize = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.mobileOpened) {
            this.mobileOpened = false;
            this.collapsedMobile = false;
            this.validateCollapseClass(this.collapsedMobile);
        }
    };
    /**
     * @private
     * @param {?} collapsed
     * @return {?}
     */
    ThfMenuComponent.prototype.validateToggleMenu = /**
     * @private
     * @param {?} collapsed
     * @return {?}
     */
    function (collapsed) {
        if (!this.allowCollapseMenu) {
            return;
        }
        this.toggleMenuCollapse(collapsed);
    };
    /**
     * @private
     * @return {?}
     */
    ThfMenuComponent.prototype.updateMenu = /**
     * @private
     * @return {?}
     */
    function () {
        this.menuInitialized = true;
        this.setMenuExtraProperties();
        this.filteredItems = tslib_1.__spread(this.menus);
        this.menuPrevious = JSON.stringify(this.menus);
        this.validateMenus(this.menus);
    };
    /**
     * @protected
     * @param {?=} collapsedMobile
     * @return {?}
     */
    ThfMenuComponent.prototype.validateCollapseClass = /**
     * @protected
     * @param {?=} collapsedMobile
     * @return {?}
     */
    function (collapsedMobile) {
        /** @type {?} */
        var wrapper = this.element.nativeElement.parentNode;
        this.renderer[this.isCollapsed && !collapsedMobile ? 'addClass' : 'removeClass'](wrapper, 'thf-collapsed-menu');
    };
    ThfMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-menu',
                    template: "<div *ngIf=\"mobileOpened\" class=\"thf-menu-overlay\" (click)=\"toggleMenuMobile()\"></div>\n<div class=\"thf-menu-mobile thf-clickable\" (click)=\"toggleMenuMobile()\">\n  <span class=\"thf-icon thf-icon-menu\"></span>\n</div>\n\n<div class=\"thf-menu\" [ngClass]=\"{ 'thf-menu-animation' : mobileOpened }\">\n\n  <div class=\"thf-menu-header\">\n    <div *ngIf=\"logo || (shortLogo && enableCollapse)\" class=\"thf-menu-header-container-logo\">\n      <a href=\"./\">\n        <img\n          [ngClass]=\"enableCollapse ? 'thf-menu-short-logo' : 'thf-menu-logo'\"\n          [src]=\"enableCollapse ? shortLogo || logo : logo\">\n      </a>\n    </div>\n\n    <div *ngIf=\"!enableCollapse && menuHeaderTemplate\" class=\"thf-menu-header-template\">\n      <ng-container *ngTemplateOutlet=\"menuHeaderTemplate.templateRef\"></ng-container>\n    </div>\n\n    <thf-menu-filter *ngIf=\"filter && !enableCollapse\"\n      [t-loading]=\"filterLoading\"\n      (t-filter)=\"debounceFilter($event)\">\n    </thf-menu-filter>\n  </div>\n\n  <nav class=\"thf-menu-body\">\n\n    <!-- Inner e outer para esconder scroll -->\n    <div class=\"thf-menu-outer\">\n      <div class=\"thf-menu-inner\">\n\n        <div *ngIf=\"noData\" class=\"thf-menu-item-wrapper\">\n          <div class=\"thf-menu-item-first\">\n            <div class=\"thf-menu-icon-container thf-menu-item-no-data\">\n              <span class=\"thf-icon thf-icon-info thf-menu-icon-item thf-lg-2\"></span>\n              <div class=\"thf-lg-10 thf-menu-icon-label\"> {{literals.itemNotFound}} </div>\n            </div>\n          </div>\n        </div>\n\n        <div *ngFor=\"let menu of filteredItems, let menuIndex = index;\" class=\"thf-menu-item-wrapper\">\n          <thf-menu-item\n            [class.thf-menu-item-first]=\"menuIndex === 0\"\n            [t-action]=\"menu.action\"\n            [t-badge-alert]=\"menu.badgeAlert\"\n            [t-badge-color]=\"menu.badge ? menu.badge.color : undefined\"\n            [t-badge-value]=\"menu.badge ? menu.badge.value : undefined\"\n            [t-collapsed-menu]=\"enableCollapse\"\n            [t-icon]=\"allowIcons ? menu.icon : null\"\n            [t-id]=\"menu.id\"\n            [t-label]=\"menu.label\"\n            [t-level]=\"menu.level\"\n            [t-link]=\"menu.link\"\n            [t-short-label]=\"menu.shortLabel\"\n            [t-sub-items]=\"menu.subItems\"\n            [t-type]=\"menu.type\">\n          </thf-menu-item>\n        </div>\n      </div>\n    </div>\n  </nav>\n\n  <div *ngIf=\"hasFooter\" class=\"thf-menu-footer\">\n    <a\n      class=\"thf-menu-collapse-button-icon thf-clickable\"\n      (click)=\"toggle()\">\n\n      <span class=\"thf-icon\"\n        [class.thf-icon-menu-close]=\"enableCollapseButton\"\n        [class.thf-icon-menu-open]=\"enableCollapse\">\n      </span>\n    </a>\n  </div>\n</div>\n",
                    providers: [ThfMenuItemsService, ThfMenuService]
                }] }
    ];
    /** @nocollapse */
    ThfMenuComponent.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: ElementRef },
        { type: Renderer2 },
        { type: Router },
        { type: ThfMenuItemsService },
        { type: ChangeDetectorRef },
        { type: ThfMenuService }
    ]; };
    ThfMenuComponent.propDecorators = {
        menuHeaderTemplate: [{ type: ContentChild, args: [ThfMenuHeaderTemplateDirective, { static: true },] }]
    };
    return ThfMenuComponent;
}(ThfMenuBaseComponent));
export { ThfMenuComponent };
if (false) {
    /** @type {?} */
    ThfMenuComponent.prototype.menuHeaderTemplate;
    /** @type {?} */
    ThfMenuComponent.prototype.activeMenuItem;
    /** @type {?} */
    ThfMenuComponent.prototype.collapsedMobile;
    /** @type {?} */
    ThfMenuComponent.prototype.filterLoading;
    /** @type {?} */
    ThfMenuComponent.prototype.groupedMenuItem;
    /** @type {?} */
    ThfMenuComponent.prototype.linkActive;
    /** @type {?} */
    ThfMenuComponent.prototype.mobileOpened;
    /** @type {?} */
    ThfMenuComponent.prototype.noData;
    /** @type {?} */
    ThfMenuComponent.prototype.parentRef;
    /** @type {?} */
    ThfMenuComponent.prototype.timeoutFilter;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.filteringItems;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.menuInitialized;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.menuPrevious;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.resizeListener;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.itemSubscription;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.routeSubscription;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.element;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.menuItemsService;
    /**
     * @type {?}
     * @private
     */
    ThfMenuComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW1lbnUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1tZW51L3RoZi1tZW51LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFDTCxpQkFBaUIsRUFDakIsU0FBUyxFQUNULFlBQVksRUFFWixVQUFVLEVBR1YsU0FBUyxFQUNULGdCQUFnQixFQUNqQixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUdyQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDakUsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sK0RBQStELENBQUM7QUFHL0csT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDeEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDZCQUE2QixDQUFDOztJQUV2RCxtQkFBbUIsR0FBRyxHQUFHOztJQUN6QixnQkFBZ0IsR0FBRyxDQUFDOztJQUNwQixnQkFBZ0IsR0FBRyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9GMUI7SUFLc0MsNENBQW9CO0lBc0J4RCwwQkFBWSxPQUF5QixFQUNqQixPQUFtQixFQUNuQixRQUFtQixFQUNuQixNQUFjLEVBQ2QsZ0JBQXFDLEVBQ3JDLGNBQWlDLEVBQ3pDLFdBQTJCO1FBTnZDLFlBUUUsa0JBQU0sV0FB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QUN0Qiw0Q0FBNkM7Ozs7O0lBQzdDLDBDQUF5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIENvbnRlbnRDaGlsZCxcbiAgRG9DaGVjayxcbiAgRWxlbWVudFJlZixcbiAgT25EZXN0cm95LFxuICBPbkluaXQsXG4gIFJlbmRlcmVyMixcbiAgVmlld0NvbnRhaW5lclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTmF2aWdhdGlvbkNhbmNlbCwgTmF2aWdhdGlvbkVuZCwgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IGdldEZvcm1hdHRlZExpbmssIGlzTW9iaWxlLCBvcGVuRXh0ZXJuYWxMaW5rIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFRoZk1lbnVCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtbWVudS1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaGZNZW51SGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUgfSBmcm9tICcuL3RoZi1tZW51LWhlYWRlci10ZW1wbGF0ZS90aGYtbWVudS1oZWFkZXItdGVtcGxhdGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRoZk1lbnVJdGVtIH0gZnJvbSAnLi90aGYtbWVudS1pdGVtLmludGVyZmFjZSc7XG5pbXBvcnQgeyBUaGZNZW51SXRlbUZpbHRlcmVkIH0gZnJvbSAnLi90aGYtbWVudS1pdGVtL3RoZi1tZW51LWl0ZW0tZmlsdGVyZWQuaW50ZXJmYWNlJztcbmltcG9ydCB7IFRoZk1lbnVJdGVtc1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3RoZi1tZW51LWl0ZW1zLnNlcnZpY2UnO1xuaW1wb3J0IHsgVGhmTWVudVNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3RoZi1tZW51LnNlcnZpY2UnO1xuXG5jb25zdCB0aGZNZW51RGVib3VuY2VUaW1lID0gNDAwO1xuY29uc3QgdGhmTWVudU1pbkxlbmd0aCA9IDM7XG5jb25zdCB0aGZNZW51Um9vdExldmVsID0gMTtcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgVGhmTWVudUJhc2VDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBBcGFyZWNlIGNvbXBsZXRvIGVtIHRlbGFzIGNvbSBsYXJndXJhIG1haW9yIHF1ZSAxMjAwcHgsIGNhc28gY29udHLDoXJpbyBvIG1lbnUgw6kgZXNjb25kaWRvIGUgY2hhbWFkbyBwb3IgbWVpbyBkZSB1bSBib3TDo28uXG4gKlxuICogTyBtZW51IHRhbWLDqW0gcG9kZSBzZXIgY29sYXBzYWRvLiBFc3NhIG9ww6fDo28gw6kgaGFiaWxpdGFkYSBxdWFuZG8gdG9kb3Mgb3MgaXRlbnMgZGUgcHJpbWVpcm8gbsOtdmVsIHBvc3N1w61yZW0gw61jb25lcyBlIHRleHRvcyBjdXJ0b3MuXG4gKiBTZSBjb2xhcHNhZG8sIHNvbWVudGUgb3MgaXRlbnMgZGUgcHJpbWVpcm8gbsOtdmVsIHNlcsOjbyBleGliaWRvcyBlLCBjYXNvIG8gaXRlbSBzZWxlY2lvbmFkbyBwb3NzdWEgc3ViLW7DrXZlaXMsXG4gKiBlbnTDo28gbyBtZW51IGFsdGVybmFyw6Egbm92YW1lbnRlIHBhcmEgbyBlc3RhZG8gYWJlcnRvLlxuICpcbiAqIEV4aXN0ZSBhIHBvc3NpYmlsaWRhZGUgZGUgY3VzdG9taXphciBhIGxvZ29tYXJjYSwgcXVlIMOpIGV4aWJpZGEgbmEgcGFydGUgc3VwZXJpb3IgZG8gY29tcG9uZW50ZS5cbiAqXG4gKiBFIHBhcmEgYWRpY2lvbmFyIHVtIGNvbnRlw7pkbyBwZXJzb25hbGl6YWRvIGVudHJlIGEgbG9nb21hcmNhIGUgbyBjYW1wbyBkZSBmaWx0cm8sXG4gKiBiYXN0YSBhZGljaW9uYXIgZXN0ZSBjb250ZcO6ZG8gY29tIGEgZGlyZXRpdmEgWyoqdC1tZW51LWhlYWRlci10ZW1wbGF0ZSoqXSgvZG9jdW1lbnRhdGlvbi90aGYtbWVudS1oZWFkZXItdGVtcGxhdGUpLlxuICpcbiAqIENhc28gdXRpbGl6YXIgbyBmaWx0cm8gZGUgbWVudXMsIMOpIHBvc3PDrXZlbCByZWFsaXphciBidXNjYXMgZW0gc2VydmnDp28sIGFwZW5hcyBpbmZvcm1hbmRvIGEgVVJMIGRvIHNlcnZpw6dvIG91IGEgaW5zdMOibmNpYSBkZVxuICogdW0gc2VydmnDp28gY3VzdG9taXphZG8gaW1wbGVtZW50YW5kbyBhIGludGVyZmFjZSBgVGhmTWVudUZpbHRlcmAuXG4gKlxuICogUGFyYSBvIG1lbnUgZnVuY2lvbmFyIGNvcnJldGFtZW50ZSDDqSBuZWNlc3PDoXJpbyBpbXBvcnRhciBvIGBSb3V0ZXJNb2R1bGVgIGUgYFJvdXRlc2AgZG8gbcOzZHVsbyBwcmluY2lwYWwgZGVcbiAqICBzdWEgYXBsaWNhw6fDo286XG4gKlxuICogYGBgYFxuICogaW1wb3J0IHsgUm91dGVyTW9kdWxlLCBSb3V0ZXMgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuICpcbiAqIC4uLlxuICpcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICBSb3V0ZXJNb2R1bGUsXG4gKiAgICAgUm91dGVzLFxuICogICAgIC4uLlxuICogICAgIFRoZk1vZHVsZSxcbiAqICAgICAuLi5cbiAqICAgXSxcbiAqICAgZGVjbGFyYXRpb25zOiBbXG4gKiAgICAgQXBwQ29tcG9uZW50XG4gKiAgIF0sXG4gKiAgIHByb3ZpZGVyczogW10sXG4gKiAgIGJvb3RzdHJhcDogW0FwcENvbXBvbmVudF1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHsgfVxuICogYGBgXG4gKlxuICogQWzDqW0gZGlzc28gw6kgbmVjZXNzw6FyaW8gY3JpYXIgdW0gbcOzZHVsbyBjb25maWd1cmFuZG8gYXMgcm90YXMgZGEgYXBsaWNhw6fDo28uXG4gKlxuICogYGBgXG4gKiBpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuICpcbiAqIGltcG9ydCB7IFJvdXRlck1vZHVsZSwgUm91dGVzIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbiAqXG4gKiBpbXBvcnQgeyBIZWxsb1dvcmxkQ29tcG9uZW50IH0gZnJvbSAnLi9oZWxsby13b3JsZC9oZWxsby13b3JsZC5jb21wb25lbnQnO1xuICpcbiAqIGNvbnN0IHJvdXRlczogUm91dGVzID0gW1xuICogICB7cGF0aDogJ2hlbGxvLXdvcmxkJywgY29tcG9uZW50OiBIZWxsb1dvcmxkQ29tcG9uZW50fVxuICogXTtcbiAqXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbUm91dGVyTW9kdWxlLmZvclJvb3Qocm91dGVzLCB7dXNlSGFzaDogdHJ1ZX0pXSxcbiAqICAgZXhwb3J0czogW1JvdXRlck1vZHVsZV1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwUm91dGluZ01vZHVsZSB7fVxuICogYGBgXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLW1lbnUtYmFzaWNcIiB0aXRsZT1cIlRvdHZzIE1lbnUgQmFzaWNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbWVudS1iYXNpYy9zYW1wbGUtdGhmLW1lbnUtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1tZW51LWJhc2ljL3NhbXBsZS10aGYtbWVudS1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtbWVudS1sYWJzXCIgdGl0bGU9XCJUb3R2cyBNZW51IExhYnNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbWVudS1sYWJzL3NhbXBsZS10aGYtbWVudS1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbWVudS1sYWJzL3NhbXBsZS10aGYtbWVudS1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1tZW51LWh1bWFuLXJlc291cmNlc1wiIHRpdGxlPVwiVG90dnMgTWVudSAtIEh1bWFuIFJlc291cmNlc1wiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1tZW51LWh1bWFuLXJlc291cmNlcy9zYW1wbGUtdGhmLW1lbnUtaHVtYW4tcmVzb3VyY2VzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbWVudS1odW1hbi1yZXNvdXJjZXMvc2FtcGxlLXRoZi1tZW51LWh1bWFuLXJlc291cmNlcy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1tZW51LWh1bWFuLXJlc291cmNlcy9zYW1wbGUtdGhmLW1lbnUtaHVtYW4tcmVzb3VyY2VzLnNlcnZpY2UudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtbWVudScsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtbWVudS5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogWyBUaGZNZW51SXRlbXNTZXJ2aWNlLCBUaGZNZW51U2VydmljZSBdXG59KVxuZXhwb3J0IGNsYXNzIFRoZk1lbnVDb21wb25lbnQgZXh0ZW5kcyBUaGZNZW51QmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0LCBEb0NoZWNrIHtcblxuICBAQ29udGVudENoaWxkKFRoZk1lbnVIZWFkZXJUZW1wbGF0ZURpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSkgbWVudUhlYWRlclRlbXBsYXRlOiBUaGZNZW51SGVhZGVyVGVtcGxhdGVEaXJlY3RpdmU7XG5cbiAgYWN0aXZlTWVudUl0ZW06IFRoZk1lbnVJdGVtO1xuICBjb2xsYXBzZWRNb2JpbGU6IGJvb2xlYW47XG4gIGZpbHRlckxvYWRpbmcgPSBmYWxzZTtcbiAgZ3JvdXBlZE1lbnVJdGVtOiBUaGZNZW51SXRlbTtcbiAgbGlua0FjdGl2ZTogc3RyaW5nO1xuICBtb2JpbGVPcGVuZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgbm9EYXRhOiBib29sZWFuID0gZmFsc2U7XG4gIHBhcmVudFJlZjogYW55O1xuICB0aW1lb3V0RmlsdGVyOiBhbnk7XG5cbiAgcHJpdmF0ZSBmaWx0ZXJpbmdJdGVtczogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIG1lbnVJbml0aWFsaXplZDogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIG1lbnVQcmV2aW91czogc3RyaW5nID0gbnVsbDtcbiAgcHJpdmF0ZSByZXNpemVMaXN0ZW5lcjogKCkgPT4gdm9pZDtcblxuICBwcml2YXRlIGl0ZW1TdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgcHJpdmF0ZSByb3V0ZVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKHZpZXdSZWY6IFZpZXdDb250YWluZXJSZWYsXG4gICAgICAgICAgICAgIHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZixcbiAgICAgICAgICAgICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLFxuICAgICAgICAgICAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgICAgICAgICAgICBwcml2YXRlIG1lbnVJdGVtc1NlcnZpY2U6IFRoZk1lbnVJdGVtc1NlcnZpY2UsXG4gICAgICAgICAgICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmLFxuICAgICAgICAgICAgICBtZW51U2VydmljZTogVGhmTWVudVNlcnZpY2UpIHtcblxuICAgIHN1cGVyKG1lbnVTZXJ2aWNlKTtcbiAgICB0aGlzLnBhcmVudFJlZiA9IHZpZXdSZWZbJ192aWV3J11bJ2NvbXBvbmVudCddO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXQgaXNBY3RpdmVJdGVtTWVudVN1Yk1lbnUoKSB7XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZlTWVudUl0ZW1bJ2xldmVsJ10gPiB0aGlzLmdyb3VwZWRNZW51SXRlbVsnbGV2ZWwnXTtcbiAgfVxuXG4gIGdldCBlbmFibGVDb2xsYXBzZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pc0NvbGxhcHNlZCAmJiAhdGhpcy5jb2xsYXBzZWRNb2JpbGU7XG4gIH1cblxuICBnZXQgZW5hYmxlQ29sbGFwc2VCdXR0b24oKSB7XG4gICAgcmV0dXJuIHRoaXMuYWxsb3dDb2xsYXBzZU1lbnUgJiYgIXRoaXMuY29sbGFwc2VkICYmICF0aGlzLm1vYmlsZU9wZW5lZDtcbiAgfVxuXG4gIGdldCBoYXNGb290ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuYWxsb3dDb2xsYXBzZU1lbnUgJiYgIXRoaXMubW9iaWxlT3BlbmVkICYmIHRoaXMuZW5hYmxlQ29sbGFwc2VCdXR0b24gfHwgKHRoaXMuY29sbGFwc2VkICYmICF0aGlzLmNvbGxhcHNlZE1vYmlsZSk7XG4gIH1cblxuICBnZXQgaXNDb2xsYXBzZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuYWxsb3dDb2xsYXBzZU1lbnUgJiYgdGhpcy5jb2xsYXBzZWQ7XG4gIH1cblxuICBuZ0RvQ2hlY2soKSB7XG4gICAgaWYgKHRoaXMuZmlsdGVyaW5nSXRlbXMgJiYgdGhpcy5maWx0ZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBtZW51Q3VycmVudCA9IEpTT04uc3RyaW5naWZ5KHRoaXMubWVudXMpO1xuXG4gICAgaWYgKHRoaXMubWVudVByZXZpb3VzICE9PSBtZW51Q3VycmVudCB8fCAhdGhpcy5tZW51SW5pdGlhbGl6ZWQpIHtcbiAgICAgIHRoaXMudXBkYXRlTWVudSgpO1xuICAgICAgdGhpcy52YWxpZGF0ZUNvbGxhcHNlQ2xhc3MoKTtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLml0ZW1TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB0aGlzLnJvdXRlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG5cbiAgICBpZiAodGhpcy5yZXNpemVMaXN0ZW5lcikge1xuICAgICAgdGhpcy5yZXNpemVMaXN0ZW5lcigpO1xuICAgIH1cbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc3Vic2NyaWJlVG9NZW51SXRlbSgpO1xuICAgIHRoaXMuc3Vic2NyaWJlVG9Sb3V0ZSgpO1xuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zdCB1cmxSb3V0ZXIgPSB0aGlzLmNoZWNraW5nUm91dGVyQ2hpbGRyZW5GcmFnbWVudHMoKTtcbiAgICAgIHRoaXMuY2hlY2tBY3RpdmVNZW51QnlVcmwodXJsUm91dGVyKTtcbiAgICB9KTtcbiAgfVxuXG4gIGFjdGl2YXRlTWVudUJ5VXJsKHVybFBhdGg6IHN0cmluZywgbWVudXM6IEFycmF5PFRoZk1lbnVJdGVtPikge1xuICAgIGlmIChtZW51cykge1xuICAgICAgcmV0dXJuIG1lbnVzLnNvbWUobWVudSA9PiB7XG4gICAgICAgIGNvbnN0IGZvcm1hdHRlZExpbmsgPSBnZXRGb3JtYXR0ZWRMaW5rKG1lbnUubGluayk7XG4gICAgICAgIGlmIChmb3JtYXR0ZWRMaW5rID09PSB1cmxQYXRoKSB7XG4gICAgICAgICAgdGhpcy5saW5rQWN0aXZlID0gZm9ybWF0dGVkTGluaztcbiAgICAgICAgICB0aGlzLmFjdGl2YXRlTWVudUl0ZW0obWVudSk7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuYWN0aXZhdGVNZW51QnlVcmwodXJsUGF0aCwgbWVudS5zdWJJdGVtcyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGNoZWNrQWN0aXZlTWVudUJ5VXJsKHVybFBhdGg6IHN0cmluZyk6IHZvaWQge1xuICAgIGlmICghdGhpcy5saW5rQWN0aXZlIHx8IHRoaXMubGlua0FjdGl2ZSAhPT0gdXJsUGF0aCkge1xuICAgICAgdGhpcy5hY3RpdmF0ZU1lbnVCeVVybCh1cmxQYXRoLCB0aGlzLm1lbnVzKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogPGEgaWQ9XCJjb2xhcHNlTWV0aG9kXCI+PC9hPlxuICAgKlxuICAgKiAqTcOpdG9kbyBwYXJhIGNvbGFwc2FyIChyZXRyYWlyKSBvIG1lbnUuXG4gICAqL1xuICBjb2xsYXBzZSgpIHtcbiAgICB0aGlzLnZhbGlkYXRlVG9nZ2xlTWVudSh0cnVlKTtcbiAgfVxuXG4gIGRlYm91bmNlRmlsdGVyKGZpbHRlcjogc3RyaW5nKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dEZpbHRlcik7XG5cbiAgICB0aGlzLnRpbWVvdXRGaWx0ZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuZmlsdGVyUHJvY2VzcyhmaWx0ZXIpO1xuICAgIH0sIHRoZk1lbnVEZWJvdW5jZVRpbWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIDxhIGlkPVwiZXhwYW5kTWV0aG9kXCI+PC9hPlxuICAgKlxuICAgKiAqTcOpdG9kbyBwYXJhIGV4cGFuZGlyIChhdW1lbnRhcikgbyBtZW51LlxuICAgKi9cbiAgZXhwYW5kKCkge1xuICAgIHRoaXMudmFsaWRhdGVUb2dnbGVNZW51KGZhbHNlKTtcbiAgfVxuXG4gIHN1YnNjcmliZVRvTWVudUl0ZW0oKSB7XG4gICAgdGhpcy5pdGVtU3Vic2NyaXB0aW9uID0gdGhpcy5tZW51SXRlbXNTZXJ2aWNlLnJlY2VpdmVGcm9tQ2hpbGRNZW51Q2xpY2tlZCgpLnN1YnNjcmliZSgobWVudTogVGhmTWVudUl0ZW0pID0+IHtcbiAgICAgIHRoaXMuY2xpY2tNZW51SXRlbShtZW51KTtcbiAgICB9KTtcbiAgfVxuXG4gIHN1YnNjcmliZVRvUm91dGUoKSB7XG4gICAgdGhpcy5yb3V0ZVN1YnNjcmlwdGlvbiA9IHRoaXMucm91dGVyLmV2ZW50cy5zdWJzY3JpYmUodmFsID0+IHtcbiAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uRW5kIHx8IHZhbCBpbnN0YW5jZW9mIE5hdmlnYXRpb25DYW5jZWwpIHtcbiAgICAgICAgY29uc3QgdXJsUm91dGVyID0gdGhpcy5jaGVja2luZ1JvdXRlckNoaWxkcmVuRnJhZ21lbnRzKCk7XG4gICAgICAgIHRoaXMuY2hlY2tBY3RpdmVNZW51QnlVcmwodXJsUm91dGVyKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiA8YSBpZD1cInRvZ2dsZU1ldGhvZFwiPjwvYT5cbiAgICogKk3DqXRvZG8gcXVlIGNvbGFwc2EgZSBleHBhbmRlIG8gbWVudSBhbHRlcm5hZGFtZW50ZS5cbiAgICpcbiAgICogPiAqT3MgbcOpdG9kb3MgYXBlbmFzIHbDo28gY29sYXBzYXIvZXhwYW5kaXIgbyBtZW51IHNlOlxuICAgKiAgLSBUb2RvcyBvcyBpdGVucyBkZSBtZW51IHRpdmVyZW0gdmFsb3IgbmFzIHByb3ByaWVkYWRlcyBgaWNvbmAgZSBgc2hvcnRMYWJlbGAuXG4gICAqL1xuICB0b2dnbGUoKSB7XG4gICAgdGhpcy52YWxpZGF0ZVRvZ2dsZU1lbnUoIXRoaXMuY29sbGFwc2VkKTtcbiAgfVxuXG4gIHRvZ2dsZU1lbnVNb2JpbGUoKTogdm9pZCB7XG4gICAgdGhpcy5tb2JpbGVPcGVuZWQgPSAhdGhpcy5tb2JpbGVPcGVuZWQ7XG4gICAgdGhpcy5jb2xsYXBzZWRNb2JpbGUgPSB0aGlzLmNvbGxhcHNlZCAmJiB0aGlzLm1vYmlsZU9wZW5lZDtcblxuICAgIHRoaXMudmFsaWRhdGVDb2xsYXBzZUNsYXNzKHRoaXMuY29sbGFwc2VkTW9iaWxlKTtcblxuICAgIGlmIChpc01vYmlsZSgpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHRoaXMubW9iaWxlT3BlbmVkKSB7XG4gICAgICB0aGlzLmNyZWF0ZVJlc2l6ZUxpc3RlbmVyKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBhY3RpdmF0ZUNvbGxhcHNlU3ViTWVudUl0ZW0oKSB7XG5cbiAgICB0aGlzLmNsZWFyR3JvdXBNZW51SWZGaXJzdExldmVsKHRoaXMuYWN0aXZlTWVudUl0ZW0pO1xuXG4gICAgaWYgKCF0aGlzLmNvbGxhcHNlZCAmJiB0aGlzLmFjdGl2ZU1lbnVJdGVtWydsZXZlbCddID4gdGhmTWVudVJvb3RMZXZlbCAmJiB0aGlzLmlzQWN0aXZlSXRlbU1lbnVTdWJNZW51KSB7XG4gICAgICB0aGlzLm9wZW5QYXJlbnRNZW51KHRoaXMuYWN0aXZlTWVudUl0ZW0pO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYWN0aXZhdGVNZW51SXRlbShtZW51OiBUaGZNZW51SXRlbSk6IHZvaWQge1xuICAgIHRoaXMuYWN0aXZlTWVudUl0ZW0gPSBtZW51O1xuICAgIHRoaXMubGlua0FjdGl2ZSA9IG1lbnUubGluaztcbiAgICBpZiAodGhpcy5hY3RpdmVNZW51SXRlbVsnbGV2ZWwnXSA+IHRoZk1lbnVSb290TGV2ZWwpIHtcbiAgICAgIHRoaXMub3BlblBhcmVudE1lbnUodGhpcy5hY3RpdmVNZW51SXRlbSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZ3JvdXBlZE1lbnVJdGVtID0gbnVsbDtcbiAgICB9XG4gICAgdGhpcy5tZW51SXRlbXNTZXJ2aWNlLnNlbmRUb0NoaWxkTWVudUNsaWNrZWQoeyBhY3RpdmU6IHRoaXMuYWN0aXZlTWVudUl0ZW0sIGdyb3VwZWQ6IHRoaXMuZ3JvdXBlZE1lbnVJdGVtLCBhY3RpdmF0ZWRCeVJvdXRlOiB0cnVlIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBhcmVTdWJNZW51cyhtZW51czogQXJyYXk8VGhmTWVudUl0ZW0+KSB7XG4gICAgcmV0dXJuIG1lbnVzLmV2ZXJ5KG1lbnUgPT4gbWVudVsnbGV2ZWwnXSA+IHRoZk1lbnVSb290TGV2ZWwpO1xuICB9XG5cbiAgcHJpdmF0ZSBjaGVja2luZ1JvdXRlckNoaWxkcmVuRnJhZ21lbnRzKCkge1xuICAgIGNvbnN0IGNoaWxkcmVuUHJpbWFyeSA9IHRoaXMucm91dGVyLnBhcnNlVXJsKHRoaXMucm91dGVyLnVybCkucm9vdC5jaGlsZHJlblsncHJpbWFyeSddO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuUHJpbWFyeSA/IGAvJHtjaGlsZHJlblByaW1hcnkuc2VnbWVudHMubWFwKGl0ID0+IGl0LnBhdGgpLmpvaW4oJy8nKX1gIDogJyc7XG4gIH1cblxuICBwcml2YXRlIGNsZWFyR3JvdXBNZW51SWZGaXJzdExldmVsKGFjdGl2ZU1lbnVJdGVtOiBUaGZNZW51SXRlbSkge1xuICAgIGlmIChhY3RpdmVNZW51SXRlbVsnbGV2ZWwnXSA9PT0gdGhmTWVudVJvb3RMZXZlbCkge1xuICAgICAgdGhpcy5ncm91cGVkTWVudUl0ZW0gPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBjbGlja01lbnVJdGVtKG1lbnU6IFRoZk1lbnVJdGVtKSB7XG4gICAgaWYgKG1lbnUuYWN0aW9uKSB7XG4gICAgICB0aGlzLmV4ZWN1dGVNZW51QWN0aW9uKG1lbnUpO1xuICAgIH1cblxuICAgIGlmIChtZW51Wyd0eXBlJ10gPT09ICdleHRlcm5hbExpbmsnKSB7XG4gICAgICBvcGVuRXh0ZXJuYWxMaW5rKG1lbnUubGluayk7XG5cbiAgICB9IGVsc2UgaWYgKG1lbnVbJ3R5cGUnXSA9PT0gJ2ludGVybmFsTGluaycpIHtcbiAgICAgIHRoaXMuYWN0aXZhdGVNZW51SXRlbShtZW51KTtcblxuICAgIH0gZWxzZSBpZiAobWVudVsndHlwZSddID09PSAnc3ViSXRlbXMnKSB7XG4gICAgICBpZiAodGhpcy5maWx0ZXJpbmdJdGVtcykge1xuICAgICAgICB0aGlzLmZpbHRlcmluZ0l0ZW1zID0gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZ3JvdXBNZW51SXRlbShtZW51KTtcbiAgICB9XG5cbiAgICBpZiAobWVudVsndHlwZSddICE9PSAnc3ViSXRlbXMnKSB7XG4gICAgICB0aGlzLm1vYmlsZU9wZW5lZCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY29udmVydFRvTWVudUl0ZW1GaWx0ZXJlZChtZW51SXRlbTogYW55ID0geyBsYWJlbDogJycsIGxpbms6ICcnIH0pOiBUaGZNZW51SXRlbUZpbHRlcmVkIHtcbiAgICBjb25zdCB7IGxhYmVsLCBsaW5rIH0gPSBtZW51SXRlbTtcblxuICAgIGNvbnN0IG1lbnVJdGVtRmlsdGVyZWQ6IFRoZk1lbnVJdGVtRmlsdGVyZWQgPSB7IGxhYmVsLCBsaW5rIH07XG5cbiAgICB0aGlzLnNldE1lbnVJdGVtUHJvcGVydGllcyhtZW51SXRlbUZpbHRlcmVkKTtcblxuICAgIHJldHVybiBtZW51SXRlbUZpbHRlcmVkO1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVSZXNpemVMaXN0ZW5lcigpIHtcbiAgICB0aGlzLnJlc2l6ZUxpc3RlbmVyID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ3dpbmRvdycsICdyZXNpemUnLCAoKSA9PiB7XG4gICAgICB0aGlzLnRvZ2dsZVJlc2l6ZSgpO1xuICAgICAgdGhpcy5yZXNpemVMaXN0ZW5lcigpO1xuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBleGVjdXRlTWVudUFjdGlvbihtZW51OiBUaGZNZW51SXRlbSk6IHZvaWQge1xuICAgIGlmICh0eXBlb2YgbWVudS5hY3Rpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aGlzLnBhcmVudFJlZlttZW51LmFjdGlvbl0obWVudSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG1lbnUuYWN0aW9uLmNhbGwodGhpcy5wYXJlbnRSZWYsIG1lbnUpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgZmlsdGVySXRlbXMoZmlsdGVyOiBzdHJpbmcpIHtcbiAgICBjb25zdCB0cmltRmlsdGVyID0gZmlsdGVyICYmIGZpbHRlci50cmltKCk7XG5cbiAgICBpZiAodHJpbUZpbHRlcikge1xuICAgICAgdGhpcy5maWx0ZXJlZEl0ZW1zID0gW107XG4gICAgICB0aGlzLmZpbHRlcmVkSXRlbXMgPSB0aGlzLmZpbHRlclNlcnZpY2UgPyBhd2FpdCB0aGlzLmZpbHRlck9uU2VydmljZSh0cmltRmlsdGVyKSA6IHRoaXMuZmlsdGVyTG9jYWxJdGVtcyh0cmltRmlsdGVyKTtcbiAgICAgIHRoaXMuZmlsdGVyaW5nSXRlbXMgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmZpbHRlcmVkSXRlbXMgPSBbLi4udGhpcy5tZW51c107XG4gICAgICB0aGlzLmZpbHRlcmluZ0l0ZW1zID0gZmFsc2U7XG4gICAgfVxuXG4gIH1cblxuICBwcml2YXRlIGZpbHRlckxvY2FsSXRlbXMoZmlsdGVyOiBzdHJpbmcpIHtcbiAgICBjb25zdCBmaWx0ZXJlZEl0ZW1zID0gW107XG5cbiAgICB0aGlzLmZpbmRJdGVtcyh0aGlzLm1lbnVzLCBmaWx0ZXIudG9Mb3dlckNhc2UoKSwgZmlsdGVyZWRJdGVtcyk7XG5cbiAgICByZXR1cm4gZmlsdGVyZWRJdGVtcztcbiAgfVxuXG4gIHByaXZhdGUgZmlsdGVyUHJvY2VzcyhmaWx0ZXI6IHN0cmluZykge1xuICAgIHRoaXMuZmlsdGVyTG9hZGluZyA9IHRydWU7XG5cbiAgICB0aGlzLmZpbHRlckl0ZW1zKGZpbHRlcikudGhlbigoKSA9PiB7XG5cbiAgICAgIHRoaXMuZmlsdGVyTG9hZGluZyA9IGZhbHNlO1xuXG4gICAgICB0aGlzLnNob3dOb0RhdGEoKTtcbiAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IuZGV0ZWN0Q2hhbmdlcygpO1xuICAgICAgdGhpcy5tZW51SXRlbXNTZXJ2aWNlLnNlbmRUb0NoaWxkTWVudUNsaWNrZWQoeyBhY3RpdmU6IHRoaXMuYWN0aXZlTWVudUl0ZW0sIGdyb3VwZWQ6IHRoaXMuZ3JvdXBlZE1lbnVJdGVtIH0pO1xuXG4gICAgfSkuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgdGhpcy5maWx0ZXJMb2FkaW5nID0gZmFsc2U7XG4gICAgICBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGZpbHRlck9uU2VydmljZShzZWFyY2g6IHN0cmluZyA9ICcnKSB7XG4gICAgaWYgKHNlYXJjaC5sZW5ndGggPj0gdGhmTWVudU1pbkxlbmd0aCkge1xuXG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5maWx0ZXJTZXJ2aWNlLmdldEZpbHRlcmVkRGF0YShzZWFyY2gsIHRoaXMucGFyYW1zKVxuICAgICAgICAucGlwZShcbiAgICAgICAgICBtYXAobWVudUl0ZW1zRmlsdGVyZWQgPT4gbWVudUl0ZW1zRmlsdGVyZWQubWFwKG1lbnVJdGVtID0+IHRoaXMuY29udmVydFRvTWVudUl0ZW1GaWx0ZXJlZChtZW51SXRlbSkpKVxuICAgICAgICApXG4gICAgICAgIC50b1Byb21pc2UoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyZWRJdGVtcztcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGZpbmRJdGVtcyhtZW51czogQXJyYXk8VGhmTWVudUl0ZW0+LCBmaWx0ZXI6IHN0cmluZywgZmlsdGVyZWRJdGVtczogQXJyYXk8YW55Pikge1xuICAgIG1lbnVzLmZvckVhY2gobWVudSA9PiB7XG4gICAgICBpZiAoKG1lbnUubGFiZWwudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhmaWx0ZXIpICYmICFtZW51LnN1Ykl0ZW1zKSB8fFxuICAgICAgICAgIChtZW51LnN1Ykl0ZW1zICYmIHRoaXMuZmluZEl0ZW1zKG1lbnUuc3ViSXRlbXMsIGZpbHRlciwgZmlsdGVyZWRJdGVtcykpKSB7XG4gICAgICAgICAgICBmaWx0ZXJlZEl0ZW1zLnB1c2gobWVudSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGZpbmRQYXJlbnQobWVudXM6IEFycmF5PFRoZk1lbnVJdGVtPiwgbWVudUl0ZW06IFRoZk1lbnVJdGVtKTogVGhmTWVudUl0ZW0ge1xuICAgIGNvbnN0IGdldFBhcmVudCA9IGZ1bmN0aW9uKG1lbnVJdGVtczogQXJyYXk8VGhmTWVudUl0ZW0+LCBpZCkge1xuICAgICAgaWYgKG1lbnVJdGVtcykge1xuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgbWVudUl0ZW1zLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgIGNvbnN0IG1lbnUgPSBtZW51SXRlbXNbaW5kZXhdO1xuICAgICAgICAgIGlmIChtZW51LnN1Ykl0ZW1zICYmIG1lbnUuc3ViSXRlbXMuZmluZChzdWJJdGVtID0+IHN1Ykl0ZW1bJ2lkJ10gPT09IGlkKSkge1xuICAgICAgICAgICAgcmV0dXJuIG1lbnU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IGZvdW5kID0gZ2V0UGFyZW50KG1lbnUuc3ViSXRlbXMsIGlkKTtcbiAgICAgICAgICBpZiAoZm91bmQpIHtcbiAgICAgICAgICAgIHJldHVybiBmb3VuZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBnZXRQYXJlbnQobWVudXMsIG1lbnVJdGVtWydpZCddKTtcbiAgfVxuXG4gIHByaXZhdGUgZmluZFJvb3RQYXJlbnQobWVudXM6IEFycmF5PFRoZk1lbnVJdGVtPiwgbWVudTogVGhmTWVudUl0ZW0pOiBUaGZNZW51SXRlbSB7XG5cbiAgICBjb25zdCBmaW5kUGFyZW50ID0gdGhpcy5maW5kUGFyZW50O1xuXG4gICAgY29uc3QgZ2V0Um9vdFBhcmVudCA9IGZ1bmN0aW9uKG1lbnVJdGVtczogQXJyYXk8VGhmTWVudUl0ZW0+LCBtZW51SXRlbSk6IFRoZk1lbnVJdGVtIHtcblxuICAgICAgbGV0IHBhcmVudCA9IGZpbmRQYXJlbnQobWVudUl0ZW1zLCBtZW51SXRlbSk7XG5cbiAgICAgIGlmIChwYXJlbnRbJ2xldmVsJ10gIT09IHRoZk1lbnVSb290TGV2ZWwpIHtcbiAgICAgICAgcGFyZW50ID0gZ2V0Um9vdFBhcmVudChtZW51SXRlbXMsIHBhcmVudCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcGFyZW50O1xuICAgIH07XG4gICAgcmV0dXJuIGdldFJvb3RQYXJlbnQobWVudXMsIG1lbnUpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRBY3RpdmVNZW51UGFyZW50KG1lbnVzOiBBcnJheTxUaGZNZW51SXRlbT4sIGFjdGl2ZU1lbnVJdGVtOiBUaGZNZW51SXRlbSwgZ3JvdXBlZE1lbnVJdGVtOiBUaGZNZW51SXRlbSkge1xuICAgIGlmICh0aGlzLmFyZVN1Yk1lbnVzKFtncm91cGVkTWVudUl0ZW0sIGFjdGl2ZU1lbnVJdGVtXSkpIHtcbiAgICAgIHJldHVybiB0aGlzLmZpbmRSb290UGFyZW50KG1lbnVzLCBhY3RpdmVNZW51SXRlbSk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBncm91cE1lbnVJdGVtKG1lbnU6IFRoZk1lbnVJdGVtKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuY29sbGFwc2VkKSB7XG4gICAgICB0aGlzLnRvZ2dsZU1lbnVDb2xsYXBzZSgpO1xuICAgIH1cblxuICAgIG1lbnVbJ2lzT3BlbmVkJ10gPSAhbWVudVsnaXNPcGVuZWQnXTtcbiAgICB0aGlzLmdyb3VwZWRNZW51SXRlbSA9IG1lbnU7XG5cbiAgICBpZiAodGhpcy5hY3RpdmVNZW51SXRlbSAmJiBtZW51Wydpc09wZW5lZCddXG4gICAgICAmJiB0aGlzLmlzQWN0aXZlSXRlbU1lbnVTdWJNZW51XG4gICAgICAmJiB0aGlzLmlzUm9vdE1lbnVFcXVhbEdyb3VwZWRNZW51KHRoaXMubWVudXMsIHRoaXMuYWN0aXZlTWVudUl0ZW0sIG1lbnUpKSB7XG4gICAgICB0aGlzLmFjdGl2YXRlTWVudUl0ZW0odGhpcy5hY3RpdmVNZW51SXRlbSk7XG4gICAgfVxuXG4gICAgdGhpcy5tZW51SXRlbXNTZXJ2aWNlLnNlbmRUb0NoaWxkTWVudUNsaWNrZWQoeyBhY3RpdmU6IHRoaXMuYWN0aXZlTWVudUl0ZW0sIGdyb3VwZWQ6IHRoaXMuZ3JvdXBlZE1lbnVJdGVtIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBpc1Jvb3RNZW51RXF1YWxHcm91cGVkTWVudShtZW51czogQXJyYXk8VGhmTWVudUl0ZW0+LCBhY3RpdmVNZW51SXRlbTogVGhmTWVudUl0ZW0sIGdyb3VwZWRNZW51SXRlbTogVGhmTWVudUl0ZW0pIHtcbiAgICBjb25zdCBhY3RpdmVNZW51Um9vdFBhcmVudCA9IHRoaXMuZmluZFJvb3RQYXJlbnQobWVudXMsIGFjdGl2ZU1lbnVJdGVtKTtcbiAgICByZXR1cm4gYWN0aXZlTWVudVJvb3RQYXJlbnRbJ2lkJ10gPT09IGdyb3VwZWRNZW51SXRlbVsnaWQnXTtcbiAgfVxuXG4gIHByaXZhdGUgb3BlblBhcmVudE1lbnUoY2hpbGRNZW51OiBUaGZNZW51SXRlbSk6IHZvaWQge1xuICAgIGNvbnN0IHBhcmVudCA9IHRoaXMuZmluZFBhcmVudCh0aGlzLm1lbnVzLCBjaGlsZE1lbnUpO1xuICAgIHBhcmVudFsnaXNPcGVuZWQnXSA9IHRydWU7XG4gICAgdGhpcy5ncm91cGVkTWVudUl0ZW0gPSBwYXJlbnQ7XG4gIH1cblxuICBwcml2YXRlIHNob3dOb0RhdGEoKSB7XG4gICAgdGhpcy5ub0RhdGEgPSB0aGlzLmZpbHRlcmVkSXRlbXMubGVuZ3RoID09PSAwO1xuICB9XG5cbiAgcHJpdmF0ZSB0b2dnbGVHcm91cGVkTWVudUl0ZW0oKSB7XG4gICAgdGhpcy5ncm91cGVkTWVudUl0ZW1bJ2lzT3BlbmVkJ10gPSAhdGhpcy5jb2xsYXBzZWQgJiYgdGhpcy5hbGxvd0NvbGxhcHNlTWVudTtcbiAgfVxuXG4gIHByaXZhdGUgdG9nZ2xlTWVudUNvbGxhcHNlKGNvbGxhcHNlZDogYm9vbGVhbiA9IGZhbHNlKSB7XG5cbiAgICB0aGlzLmNvbGxhcHNlZCA9IGNvbGxhcHNlZDtcblxuICAgIGlmICh0aGlzLmdyb3VwZWRNZW51SXRlbSAmJiB0aGlzLmFjdGl2ZU1lbnVJdGVtKSB7XG4gICAgICB0aGlzLmdyb3VwZWRNZW51SXRlbSA9IHRoaXMuZ2V0QWN0aXZlTWVudVBhcmVudCh0aGlzLm1lbnVzLCB0aGlzLmFjdGl2ZU1lbnVJdGVtLCB0aGlzLmdyb3VwZWRNZW51SXRlbSkgfHwgdGhpcy5ncm91cGVkTWVudUl0ZW07XG4gICAgICB0aGlzLnRvZ2dsZUdyb3VwZWRNZW51SXRlbSgpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmFjdGl2ZU1lbnVJdGVtKSB7XG4gICAgICB0aGlzLmFjdGl2YXRlQ29sbGFwc2VTdWJNZW51SXRlbSgpO1xuICAgICAgdGhpcy5tZW51SXRlbXNTZXJ2aWNlLnNlbmRUb0NoaWxkTWVudUNsaWNrZWQoeyBhY3RpdmU6IHRoaXMuYWN0aXZlTWVudUl0ZW0sIGdyb3VwZWQ6IHRoaXMuZ3JvdXBlZE1lbnVJdGVtLCBhY3RpdmF0ZWRCeVJvdXRlOiB0cnVlIH0pO1xuICAgIH1cblxuICAgIHRoaXMudXBkYXRlTWVudSgpO1xuICB9XG5cbiAgcHJpdmF0ZSB0b2dnbGVSZXNpemUoKSB7XG4gICAgaWYgKHRoaXMubW9iaWxlT3BlbmVkKSB7XG4gICAgICB0aGlzLm1vYmlsZU9wZW5lZCA9IGZhbHNlO1xuICAgICAgdGhpcy5jb2xsYXBzZWRNb2JpbGUgPSBmYWxzZTtcbiAgICAgIHRoaXMudmFsaWRhdGVDb2xsYXBzZUNsYXNzKHRoaXMuY29sbGFwc2VkTW9iaWxlKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHZhbGlkYXRlVG9nZ2xlTWVudShjb2xsYXBzZWQ6IGJvb2xlYW4pIHtcblxuICAgIGlmICghdGhpcy5hbGxvd0NvbGxhcHNlTWVudSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMudG9nZ2xlTWVudUNvbGxhcHNlKGNvbGxhcHNlZCk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZU1lbnUoKSB7XG4gICAgdGhpcy5tZW51SW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgIHRoaXMuc2V0TWVudUV4dHJhUHJvcGVydGllcygpO1xuICAgIHRoaXMuZmlsdGVyZWRJdGVtcyA9IFsuLi50aGlzLm1lbnVzXTtcbiAgICB0aGlzLm1lbnVQcmV2aW91cyA9IEpTT04uc3RyaW5naWZ5KHRoaXMubWVudXMpO1xuICAgIHRoaXMudmFsaWRhdGVNZW51cyh0aGlzLm1lbnVzKTtcbiAgfVxuXG4gIHByb3RlY3RlZCB2YWxpZGF0ZUNvbGxhcHNlQ2xhc3MoY29sbGFwc2VkTW9iaWxlPzogYm9vbGVhbikge1xuICAgIGNvbnN0IHdyYXBwZXIgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5wYXJlbnROb2RlO1xuICAgIHRoaXMucmVuZGVyZXJbdGhpcy5pc0NvbGxhcHNlZCAmJiAhY29sbGFwc2VkTW9iaWxlID8gJ2FkZENsYXNzJyA6ICdyZW1vdmVDbGFzcyddKHdyYXBwZXIsICd0aGYtY29sbGFwc2VkLW1lbnUnKTtcbiAgfVxuXG59XG4iXX0=