/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { ThfPopoverComponent } from '../../thf-popover/thf-popover.component';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para agrupamento de componentes `thf-tab-button` que os rendereiza em uma um caixa de diálogo
 * no formato de lista.
 */
var ThfTabDropdownComponent = /** @class */ (function () {
    function ThfTabDropdownComponent() {
        // Lista de abas
        this.tabs = [];
        // Evento que será emitido ao ativar uma aba
        this.activated = new EventEmitter();
        // Evento que será emitido a aba for desabilitada ou ocultada
        this.changeState = new EventEmitter();
        // Evento de click
        this.click = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ThfTabDropdownComponent.prototype.getContainerClass = /**
     * @return {?}
     */
    function () {
        return this.small ? 'thf-tab-dropdown-container-sm' : 'thf-tab-dropdown-container';
    };
    /**
     * @return {?}
     */
    ThfTabDropdownComponent.prototype.togglePopover = /**
     * @return {?}
     */
    function () {
        this.popover.isHidden ? this.popover.open() : this.popover.close();
    };
    ThfTabDropdownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-tab-dropdown',
                    template: "<div #tabDrop\n  class=\"thf-tab-dropdown-content thf-tab-button-md\"\n  [attr.tabindex]=\"0\"\n  [class.thf-tab-button-sm]=\"small\"\n  (keyup.enter)=\"togglePopover()\">\n  <div class=\"thf-tab-button-label\">\n    {{ label }}\n    <span class=\"thf-icon\" [ngClass]=\"(popover.isHidden ? 'thf-icon-arrow-down' : 'thf-icon-arrow-up')\">\n    </span>\n  </div>\n</div>\n\n<thf-popover #popover\n  t-hide-arrow\n  t-position=\"bottom\"\n  [t-target]=\"tabDropdown\">\n\n  <div [ngClass]=\"getContainerClass()\">\n    <thf-tab-button *ngFor=\"let tab of tabs\"\n      class=\"thf-tab-dropdown-button\"\n      [class.thf-tab-dropdown-button-active]=\"tab.active\"\n      [t-active]=\"tab.active\"\n      [t-disabled]=\"tab.disabled\"\n      [t-hide]=\"tab.hide\"\n      [t-id]=\"tab.id\"\n      [t-label]=\"tab.label\"\n      [t-small]=\"small\"\n      (t-activated)=\"activated.emit(tab)\"\n      (t-change-state)=\"changeState.emit(tab)\"\n      (t-click)=\"popover.close();click.emit(tab);\">\n    </thf-tab-button>\n  </div>\n\n</thf-popover>\n"
                }] }
    ];
    ThfTabDropdownComponent.propDecorators = {
        popover: [{ type: ViewChild, args: ['popover', { static: true },] }],
        tabDropdown: [{ type: ViewChild, args: ['tabDrop', { read: ElementRef, static: true },] }],
        label: [{ type: Input, args: ['t-label',] }],
        small: [{ type: Input, args: ['t-small',] }],
        tabs: [{ type: Input, args: ['t-tabs',] }],
        activated: [{ type: Output, args: ['t-activated',] }],
        changeState: [{ type: Output, args: ['t-change-state',] }],
        click: [{ type: Output, args: ['t-click',] }]
    };
    return ThfTabDropdownComponent;
}());
export { ThfTabDropdownComponent };
if (false) {
    /** @type {?} */
    ThfTabDropdownComponent.prototype.popover;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.tabDropdown;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.label;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.small;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.tabs;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.activated;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.changeState;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRhYi1kcm9wZG93bi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXRhYnMvdGhmLXRhYi1kcm9wZG93bi90aGYtdGFiLWRyb3Bkb3duLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOzs7Ozs7Ozs7QUFXOUU7SUFBQTs7UUFnQm1CLFNBQUksR0FBMkIsRUFBRSxDQUFDOztRQUc1QixjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQzs7UUFHakMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDOztRQUc3QyxVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQVVyRCxDQUFDOzs7O0lBUkMsbURBQWlCOzs7SUFBakI7UUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLCtCQUErQixDQUFDLENBQUMsQ0FBQyw0QkFBNEIsQ0FBQztJQUNyRixDQUFDOzs7O0lBRUQsK0NBQWE7OztJQUFiO1FBQ0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckUsQ0FBQzs7Z0JBakNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixraUNBQWdEO2lCQUNqRDs7OzBCQUdFLFNBQVMsU0FBQyxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOzhCQUNyQyxTQUFTLFNBQUMsU0FBUyxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO3dCQUd2RCxLQUFLLFNBQUMsU0FBUzt3QkFHZixLQUFLLFNBQUMsU0FBUzt1QkFHZixLQUFLLFNBQUMsUUFBUTs0QkFHZCxNQUFNLFNBQUMsYUFBYTs4QkFHcEIsTUFBTSxTQUFDLGdCQUFnQjt3QkFHdkIsTUFBTSxTQUFDLFNBQVM7O0lBVW5CLDhCQUFDO0NBQUEsQUFuQ0QsSUFtQ0M7U0EvQlksdUJBQXVCOzs7SUFFbEMsMENBQXFFOztJQUNyRSw4Q0FBa0Y7O0lBR2xGLHdDQUFnQzs7SUFHaEMsd0NBQWlDOztJQUdqQyx1Q0FBbUQ7O0lBR25ELDRDQUEyRDs7SUFHM0QsOENBQWdFOztJQUdoRSx3Q0FBbUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZlBvcG92ZXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi90aGYtcG9wb3Zlci90aGYtcG9wb3Zlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGhmVGFiQ29tcG9uZW50IH0gZnJvbSAnLi4vdGhmLXRhYi90aGYtdGFiLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBwYXJhIGFncnVwYW1lbnRvIGRlIGNvbXBvbmVudGVzIGB0aGYtdGFiLWJ1dHRvbmAgcXVlIG9zIHJlbmRlcmVpemEgZW0gdW1hIHVtIGNhaXhhIGRlIGRpw6Fsb2dvXG4gKiBubyBmb3JtYXRvIGRlIGxpc3RhLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtdGFiLWRyb3Bkb3duJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi10YWItZHJvcGRvd24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoZlRhYkRyb3Bkb3duQ29tcG9uZW50IHtcblxuICBAVmlld0NoaWxkKCdwb3BvdmVyJywgeyBzdGF0aWM6IHRydWUgfSkgcG9wb3ZlcjogVGhmUG9wb3ZlckNvbXBvbmVudDtcbiAgQFZpZXdDaGlsZCgndGFiRHJvcCcsIHsgcmVhZDogRWxlbWVudFJlZiwgc3RhdGljOiB0cnVlIH0pIHRhYkRyb3Bkb3duOiBFbGVtZW50UmVmO1xuXG4gIC8vIFLDs3R1bG8gZG8gYHRoZi10YWItYnV0dG9uYFxuICBASW5wdXQoJ3QtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8vIERpbWludWkgbyB0YW1hbmhvIGRvIGJvdMOjb1xuICBASW5wdXQoJ3Qtc21hbGwnKSBzbWFsbDogYm9vbGVhbjtcblxuICAvLyBMaXN0YSBkZSBhYmFzXG4gIEBJbnB1dCgndC10YWJzJykgdGFiczogQXJyYXk8VGhmVGFiQ29tcG9uZW50PiA9IFtdO1xuXG4gIC8vIEV2ZW50byBxdWUgc2Vyw6EgZW1pdGlkbyBhbyBhdGl2YXIgdW1hIGFiYVxuICBAT3V0cHV0KCd0LWFjdGl2YXRlZCcpIGFjdGl2YXRlZCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIC8vIEV2ZW50byBxdWUgc2Vyw6EgZW1pdGlkbyBhIGFiYSBmb3IgZGVzYWJpbGl0YWRhIG91IG9jdWx0YWRhXG4gIEBPdXRwdXQoJ3QtY2hhbmdlLXN0YXRlJykgY2hhbmdlU3RhdGUgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICAvLyBFdmVudG8gZGUgY2xpY2tcbiAgQE91dHB1dCgndC1jbGljaycpIGNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgZ2V0Q29udGFpbmVyQ2xhc3MoKSB7XG4gICAgcmV0dXJuIHRoaXMuc21hbGwgPyAndGhmLXRhYi1kcm9wZG93bi1jb250YWluZXItc20nIDogJ3RoZi10YWItZHJvcGRvd24tY29udGFpbmVyJztcbiAgfVxuXG4gIHRvZ2dsZVBvcG92ZXIoKTogdm9pZCB7XG4gICAgdGhpcy5wb3BvdmVyLmlzSGlkZGVuID8gdGhpcy5wb3BvdmVyLm9wZW4oKSA6IHRoaXMucG9wb3Zlci5jbG9zZSgpO1xuICB9XG5cbn1cbiJdfQ==