/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ThfSwitchBaseComponent } from './thf-switch-base.component';
import { ThfSwitchLabelPosition } from './thf-switch-label-position.enum';
/**
 * \@docsExtends ThfSwitchBaseComponent
 *
 * \@example
 *
 * <example name="thf-switch-basic" title="Totvs Switch Basic">
 *   <file name="sample-thf-switch-basic/sample-thf-switch-basic.component.html"> </file>
 *   <file name="sample-thf-switch-basic/sample-thf-switch-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-switch-labs" title="Totvs Switch Labs">
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.html"> </file>
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.ts"> </file>
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.e2e-spec.ts"> </file>
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.po.ts"> </file>
 * </example>
 *
 * <example name="thf-switch-order" title="Totvs Switch - Order Summary">
 *   <file name="sample-thf-switch-order/sample-thf-switch-order.component.html"> </file>
 *   <file name="sample-thf-switch-order/sample-thf-switch-order.component.ts"> </file>
 * </example>
 *
 * <example name="thf-switch-order-reactive-form" title="Totvs Switch - Order Summary Reactive Form">
 *   <file name="sample-thf-switch-order-reactive-form/sample-thf-switch-order-reactive-form.component.html"> </file>
 *   <file name="sample-thf-switch-order-reactive-form/sample-thf-switch-order-reactive-form.component.ts"> </file>
 * </example>
 */
var ThfSwitchComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfSwitchComponent, _super);
    function ThfSwitchComponent(changeDetector) {
        var _this = _super.call(this) || this;
        _this.changeDetector = changeDetector;
        return _this;
    }
    /**
     * @return {?}
     */
    ThfSwitchComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        this.changeDetector.detectChanges();
    };
    /**
     * @return {?}
     */
    ThfSwitchComponent.prototype.getLabelPosition = /**
     * @return {?}
     */
    function () {
        switch (this.labelPosition) {
            case ThfSwitchLabelPosition.Left: return 'left';
            case ThfSwitchLabelPosition.Right: return 'right';
            default: return 'right';
        }
    };
    /**
     * @return {?}
     */
    ThfSwitchComponent.prototype.getSwitchPosition = /**
     * @return {?}
     */
    function () {
        switch (this.labelPosition) {
            case ThfSwitchLabelPosition.Left: return 'right';
            case ThfSwitchLabelPosition.Right: return 'left';
            default: return 'left';
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ThfSwitchComponent.prototype.onKeyDown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.which === 32 || event.keyCode === 32) {
            event.preventDefault();
            this.eventClick();
        }
    };
    ThfSwitchComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-switch',
                    template: "<thf-field-container\n  [t-label]=\"label\"\n  [t-help]=\"help\">\n\n  <div class=\"thf-field-container-content thf-switch-content\" [attr.name]=\"name\">\n    <div class=\"thf-switch-container thf-clickable\"\n      [class.thf-switch-container-disabled]=\"disabled\"\n      [class.thf-switch-container-off]=\"switchValue === false && !disabled\"\n      [class.thf-switch-container-on]=\"switchValue === true && !disabled\"\n      [class.thf-switch-container-right]=\"getSwitchPosition() === 'right'\"\n      [tabindex]=\"disabled ? -1 : 0\"\n      (click)=\"eventClick()\"\n      (keydown)=\"onKeyDown($event)\">\n\n      <div class=\"thf-switch-button\"\n        [class.thf-switch-button-on]=\"switchValue === true\"\n        [class.thf-switch-button-off]=\"switchValue === false\"\n        [class.thf-switch-button-disabled]=\"disabled\">\n\n        <span class=\"thf-icon thf-icon-{{ switchValue === true ? 'ok' : 'close' }}\"></span>\n      </div>\n    </div>\n\n    <span class=\"thf-switch-label thf-clickable thf-switch-label-{{ getLabelPosition() }}\"\n      (click)=\"eventClick()\">\n        {{ switchValue === true ? labelOn : labelOff }}\n    </span>\n  </div>\n\n  <thf-field-container-bottom></thf-field-container-bottom>\n</thf-field-container>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfSwitchComponent; })),
                            multi: true,
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    ThfSwitchComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    return ThfSwitchComponent;
}(ThfSwitchBaseComponent));
export { ThfSwitchComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfSwitchComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXN3aXRjaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWZpZWxkL3RoZi1zd2l0Y2gvdGhmLXN3aXRjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQW9CLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0YsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDckUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2QjFFO0lBV3dDLDhDQUFzQjtJQUU1RCw0QkFBb0IsY0FBaUM7UUFBckQsWUFDRSxpQkFBTyxTQUNSO1FBRm1CLG9CQUFjLEdBQWQsY0FBYyxDQUFtQjs7SUFFckQsQ0FBQzs7OztJQUVELCtDQUFrQjs7O0lBQWxCO1FBQ0UsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN0QyxDQUFDOzs7O0lBRUQsNkNBQWdCOzs7SUFBaEI7UUFDRSxRQUFRLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDMUIsS0FBSyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLE1BQU0sQ0FBQztZQUNoRCxLQUFLLHNCQUFzQixDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sT0FBTyxDQUFDO1lBQ2xELE9BQU8sQ0FBQyxDQUFDLE9BQU8sT0FBTyxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzs7OztJQUVELDhDQUFpQjs7O0lBQWpCO1FBQ0UsUUFBUSxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQzFCLEtBQUssc0JBQXNCLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxPQUFPLENBQUM7WUFDakQsS0FBSyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLE1BQU0sQ0FBQztZQUNqRCxPQUFPLENBQUMsQ0FBQyxPQUFPLE1BQU0sQ0FBQztTQUN4QjtJQUNILENBQUM7Ozs7O0lBRUQsc0NBQVM7Ozs7SUFBVCxVQUFVLEtBQUs7UUFDYixJQUFJLEtBQUssQ0FBQyxLQUFLLEtBQUssRUFBRSxJQUFJLEtBQUssQ0FBQyxPQUFPLEtBQUssRUFBRSxFQUFHO1lBQy9DLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN2QixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7U0FDbkI7SUFDSCxDQUFDOztnQkExQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxZQUFZO29CQUN0QiwwdkNBQTBDO29CQUMxQyxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsa0JBQWtCLEVBQWxCLENBQWtCLEVBQUM7NEJBQ2pELEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUNGO2lCQUNGOzs7O2dCQTNDMEIsaUJBQWlCOztJQTZFNUMseUJBQUM7Q0FBQSxBQTVDRCxDQVd3QyxzQkFBc0IsR0FpQzdEO1NBakNZLGtCQUFrQjs7Ozs7O0lBRWpCLDRDQUF5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0NoZWNrZWQsIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBUaGZTd2l0Y2hCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtc3dpdGNoLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFRoZlN3aXRjaExhYmVsUG9zaXRpb24gfSBmcm9tICcuL3RoZi1zd2l0Y2gtbGFiZWwtcG9zaXRpb24uZW51bSc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFRoZlN3aXRjaEJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtc3dpdGNoLWJhc2ljXCIgdGl0bGU9XCJUb3R2cyBTd2l0Y2ggQmFzaWNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtc3dpdGNoLWJhc2ljL3NhbXBsZS10aGYtc3dpdGNoLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtc3dpdGNoLWJhc2ljL3NhbXBsZS10aGYtc3dpdGNoLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1zd2l0Y2gtbGFic1wiIHRpdGxlPVwiVG90dnMgU3dpdGNoIExhYnNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtc3dpdGNoLWxhYnMvc2FtcGxlLXRoZi1zd2l0Y2gtbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXN3aXRjaC1sYWJzL3NhbXBsZS10aGYtc3dpdGNoLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtc3dpdGNoLWxhYnMvc2FtcGxlLXRoZi1zd2l0Y2gtbGFicy5jb21wb25lbnQuZTJlLXNwZWMudHNcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1zd2l0Y2gtbGFicy9zYW1wbGUtdGhmLXN3aXRjaC1sYWJzLmNvbXBvbmVudC5wby50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1zd2l0Y2gtb3JkZXJcIiB0aXRsZT1cIlRvdHZzIFN3aXRjaCAtIE9yZGVyIFN1bW1hcnlcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtc3dpdGNoLW9yZGVyL3NhbXBsZS10aGYtc3dpdGNoLW9yZGVyLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtc3dpdGNoLW9yZGVyL3NhbXBsZS10aGYtc3dpdGNoLW9yZGVyLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1zd2l0Y2gtb3JkZXItcmVhY3RpdmUtZm9ybVwiIHRpdGxlPVwiVG90dnMgU3dpdGNoIC0gT3JkZXIgU3VtbWFyeSBSZWFjdGl2ZSBGb3JtXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXN3aXRjaC1vcmRlci1yZWFjdGl2ZS1mb3JtL3NhbXBsZS10aGYtc3dpdGNoLW9yZGVyLXJlYWN0aXZlLWZvcm0uY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1zd2l0Y2gtb3JkZXItcmVhY3RpdmUtZm9ybS9zYW1wbGUtdGhmLXN3aXRjaC1vcmRlci1yZWFjdGl2ZS1mb3JtLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1zd2l0Y2gnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXN3aXRjaC5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGhmU3dpdGNoQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBUaGZTd2l0Y2hDb21wb25lbnQgZXh0ZW5kcyBUaGZTd2l0Y2hCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3Q2hlY2tlZCB7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgbmdBZnRlclZpZXdDaGVja2VkKCk6IHZvaWQge1xuICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG5cbiAgZ2V0TGFiZWxQb3NpdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMubGFiZWxQb3NpdGlvbikge1xuICAgICAgY2FzZSBUaGZTd2l0Y2hMYWJlbFBvc2l0aW9uLkxlZnQ6IHJldHVybiAnbGVmdCc7XG4gICAgICBjYXNlIFRoZlN3aXRjaExhYmVsUG9zaXRpb24uUmlnaHQ6IHJldHVybiAncmlnaHQnO1xuICAgICAgZGVmYXVsdDogcmV0dXJuICdyaWdodCc7XG4gICAgfVxuICB9XG5cbiAgZ2V0U3dpdGNoUG9zaXRpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLmxhYmVsUG9zaXRpb24pIHtcbiAgICAgIGNhc2UgVGhmU3dpdGNoTGFiZWxQb3NpdGlvbi5MZWZ0OiByZXR1cm4gJ3JpZ2h0JztcbiAgICAgIGNhc2UgVGhmU3dpdGNoTGFiZWxQb3NpdGlvbi5SaWdodDogcmV0dXJuICdsZWZ0JztcbiAgICAgIGRlZmF1bHQ6IHJldHVybiAnbGVmdCc7XG4gICAgfVxuICB9XG5cbiAgb25LZXlEb3duKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LndoaWNoID09PSAzMiB8fCBldmVudC5rZXlDb2RlID09PSAzMikgIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLmV2ZW50Q2xpY2soKTtcbiAgICB9XG4gIH1cblxufVxuIl19