/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Este é um componente interno utilizado pelo thf-disclaimer-group, se comporta como um botão e recebe uma ação para remover todos os
 * thf-disclaimers do grupo.
 */
var ThfDisclaimerRemoveComponent = /** @class */ (function () {
    function ThfDisclaimerRemoveComponent() {
        /**
         * Ação para remover todos.
         */
        this.removeAllAction = new EventEmitter();
    }
    // Emite a ação de remover todos.
    // Emite a ação de remover todos.
    /**
     * @return {?}
     */
    ThfDisclaimerRemoveComponent.prototype.removeAction = 
    // Emite a ação de remover todos.
    /**
     * @return {?}
     */
    function () {
        this.removeAllAction.emit();
    };
    ThfDisclaimerRemoveComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-disclaimer-remove',
                    template: "<thf-disclaimer\n  class=\"thf-clickable\"\n  tabindex=\"0\"\n  t-hide-close=\"true\"\n  t-type=\"danger\"\n  [t-label]=\"label\"\n  (click)=\"removeAction()\">\n</thf-disclaimer>\n"
                }] }
    ];
    ThfDisclaimerRemoveComponent.propDecorators = {
        label: [{ type: Input, args: ['t-label',] }],
        removeAllAction: [{ type: Output, args: ['t-remove-all-action',] }]
    };
    return ThfDisclaimerRemoveComponent;
}());
export { ThfDisclaimerRemoveComponent };
if (false) {
    /**
     * Texto exibido.
     * @type {?}
     */
    ThfDisclaimerRemoveComponent.prototype.label;
    /**
     * Ação para remover todos.
     * @type {?}
     */
    ThfDisclaimerRemoveComponent.prototype.removeAllAction;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWRpc2NsYWltZXItcmVtb3ZlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZGlzY2xhaW1lci1ncm91cC90aGYtZGlzY2xhaW1lci1yZW1vdmUvdGhmLWRpc2NsYWltZXItcmVtb3ZlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7O0FBU3ZFO0lBQUE7Ozs7UUFVaUMsb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBTXRFLENBQUM7SUFKQyxpQ0FBaUM7Ozs7O0lBQ2pDLG1EQUFZOzs7OztJQUFaO1FBQ0UsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUM5QixDQUFDOztnQkFmRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsaU1BQXFEO2lCQUN0RDs7O3dCQUlFLEtBQUssU0FBQyxTQUFTO2tDQUdmLE1BQU0sU0FBQyxxQkFBcUI7O0lBTS9CLG1DQUFDO0NBQUEsQUFoQkQsSUFnQkM7U0FaWSw0QkFBNEI7Ozs7OztJQUd2Qyw2Q0FBaUM7Ozs7O0lBR2pDLHVEQUFvRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEVzdGUgw6kgdW0gY29tcG9uZW50ZSBpbnRlcm5vIHV0aWxpemFkbyBwZWxvIHRoZi1kaXNjbGFpbWVyLWdyb3VwLCBzZSBjb21wb3J0YSBjb21vIHVtIGJvdMOjbyBlIHJlY2ViZSB1bWEgYcOnw6NvIHBhcmEgcmVtb3ZlciB0b2RvcyBvc1xuICogdGhmLWRpc2NsYWltZXJzIGRvIGdydXBvLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtZGlzY2xhaW1lci1yZW1vdmUnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLWRpc2NsYWltZXItcmVtb3ZlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZEaXNjbGFpbWVyUmVtb3ZlQ29tcG9uZW50IHtcblxuICAvKiogVGV4dG8gZXhpYmlkby4gICovXG4gIEBJbnB1dCgndC1sYWJlbCcpIGxhYmVsPzogc3RyaW5nO1xuXG4gIC8qKiBBw6fDo28gcGFyYSByZW1vdmVyIHRvZG9zLiAgKi9cbiAgQE91dHB1dCgndC1yZW1vdmUtYWxsLWFjdGlvbicpIHJlbW92ZUFsbEFjdGlvbiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAvLyBFbWl0ZSBhIGHDp8OjbyBkZSByZW1vdmVyIHRvZG9zLlxuICByZW1vdmVBY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBbGxBY3Rpb24uZW1pdCgpO1xuICB9XG59XG4iXX0=