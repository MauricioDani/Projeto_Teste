/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, TemplateRef } from '@angular/core';
/**
 * \@usedBy ThfSelectComponent
 *
 * \@description
 *
 * Esta diretiva permite personalizar o conteúdo dos itens exibidos na lista suspensa do componente.
 *
 * > Quando utilizada em _mobile_ será exibido o componente nativo.
 *
 * Para personalizar o conteúdo de cada item da lista deve-se utilizar a diretiva `t-select-option-template` com `ng-template`
 * dentro da tag `thf-select`.
 *
 * Para obter a referência do item atual, use `let-option`, com isso você terá acesso aos valores e poderá personalizar sua exibição.
 *
 * Esta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:
 *
 * ```
 * ...
 * <thf-select
 *   name="select"
 *   [(ngModel)]="select"
 *   [t-options]="options">
 *     <ng-template t-select-option-template let-option>
 *       <option-template [option]="option"></option-template>
 *     </ng-template>
 * </thf-select>
 * ...
 * ```
 *
 * ```
 * ...
 * <thf-select
 *   name="select"
 *   [(ngModel)]="select"
 *   [t-options]="options">
 *     <div *t-select-option-template="let option">
 *       <option-template [option]="option"></option-template>
 *     </div>
 * </thf-select>
 * ...
 *
 * ```
 */
var ThfSelectOptionTemplateDirective = /** @class */ (function () {
    // Necessário manter templateRef para o funcionamento do row template.
    function ThfSelectOptionTemplateDirective(templateRef) {
        this.templateRef = templateRef;
    }
    ThfSelectOptionTemplateDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[t-select-option-template]'
                },] }
    ];
    /** @nocollapse */
    ThfSelectOptionTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    return ThfSelectOptionTemplateDirective;
}());
export { ThfSelectOptionTemplateDirective };
if (false) {
    /** @type {?} */
    ThfSelectOptionTemplateDirective.prototype.templateRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXNlbGVjdC1vcHRpb24tdGVtcGxhdGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1maWVsZC90aGYtc2VsZWN0L3RoZi1zZWxlY3Qtb3B0aW9uLXRlbXBsYXRlL3RoZi1zZWxlY3Qtb3B0aW9uLXRlbXBsYXRlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkN2RDtJQUtFLHNFQUFzRTtJQUN0RSwwQ0FBbUIsV0FBNkI7UUFBN0IsZ0JBQVcsR0FBWCxXQUFXLENBQWtCO0lBQUksQ0FBQzs7Z0JBTnRELFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNEJBQTRCO2lCQUN2Qzs7OztnQkEvQ21CLFdBQVc7O0lBcUQvQix1Q0FBQztDQUFBLEFBUkQsSUFRQztTQUxZLGdDQUFnQzs7O0lBRy9CLHVEQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAdXNlZEJ5IFRoZlNlbGVjdENvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEVzdGEgZGlyZXRpdmEgcGVybWl0ZSBwZXJzb25hbGl6YXIgbyBjb250ZcO6ZG8gZG9zIGl0ZW5zIGV4aWJpZG9zIG5hIGxpc3RhIHN1c3BlbnNhIGRvIGNvbXBvbmVudGUuXG4gKlxuICogPiBRdWFuZG8gdXRpbGl6YWRhIGVtIF9tb2JpbGVfIHNlcsOhIGV4aWJpZG8gbyBjb21wb25lbnRlIG5hdGl2by5cbiAqXG4gKiBQYXJhIHBlcnNvbmFsaXphciBvIGNvbnRlw7pkbyBkZSBjYWRhIGl0ZW0gZGEgbGlzdGEgZGV2ZS1zZSB1dGlsaXphciBhIGRpcmV0aXZhIGB0LXNlbGVjdC1vcHRpb24tdGVtcGxhdGVgIGNvbSBgbmctdGVtcGxhdGVgXG4gKiBkZW50cm8gZGEgdGFnIGB0aGYtc2VsZWN0YC5cbiAqXG4gKiBQYXJhIG9idGVyIGEgcmVmZXLDqm5jaWEgZG8gaXRlbSBhdHVhbCwgdXNlIGBsZXQtb3B0aW9uYCwgY29tIGlzc28gdm9jw6ogdGVyw6EgYWNlc3NvIGFvcyB2YWxvcmVzIGUgcG9kZXLDoSBwZXJzb25hbGl6YXIgc3VhIGV4aWJpw6fDo28uXG4gKlxuICogRXN0YSBkaXJldGl2YSBjb21ww7VlLXNlIGRlIGRvaXMgbWVpb3MgcGFyYSB1c28sIGRlIGZvcm1hIGV4cGzDrWNpdGEgdGFsIGNvbW8gZW0gKnN5bnRheCBzdWdhciouIFZlamEgYSBzZWd1aXIgYW1ib3MsIHJlc3BlY3RpdmFtZW50ZTpcbiAqXG4gKiBgYGBcbiAqIC4uLlxuICogPHRoZi1zZWxlY3RcbiAqICAgbmFtZT1cInNlbGVjdFwiXG4gKiAgIFsobmdNb2RlbCldPVwic2VsZWN0XCJcbiAqICAgW3Qtb3B0aW9uc109XCJvcHRpb25zXCI+XG4gKiAgICAgPG5nLXRlbXBsYXRlIHQtc2VsZWN0LW9wdGlvbi10ZW1wbGF0ZSBsZXQtb3B0aW9uPlxuICogICAgICAgPG9wdGlvbi10ZW1wbGF0ZSBbb3B0aW9uXT1cIm9wdGlvblwiPjwvb3B0aW9uLXRlbXBsYXRlPlxuICogICAgIDwvbmctdGVtcGxhdGU+XG4gKiA8L3RoZi1zZWxlY3Q+XG4gKiAuLi5cbiAqIGBgYFxuICpcbiAqIGBgYFxuICogLi4uXG4gKiA8dGhmLXNlbGVjdFxuICogICBuYW1lPVwic2VsZWN0XCJcbiAqICAgWyhuZ01vZGVsKV09XCJzZWxlY3RcIlxuICogICBbdC1vcHRpb25zXT1cIm9wdGlvbnNcIj5cbiAqICAgICA8ZGl2ICp0LXNlbGVjdC1vcHRpb24tdGVtcGxhdGU9XCJsZXQgb3B0aW9uXCI+XG4gKiAgICAgICA8b3B0aW9uLXRlbXBsYXRlIFtvcHRpb25dPVwib3B0aW9uXCI+PC9vcHRpb24tdGVtcGxhdGU+XG4gKiAgICAgPC9kaXY+XG4gKiA8L3RoZi1zZWxlY3Q+XG4gKiAuLi5cbiAqXG4gKiBgYGBcbiAqL1xuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3Qtc2VsZWN0LW9wdGlvbi10ZW1wbGF0ZV0nXG59KVxuZXhwb3J0IGNsYXNzIFRoZlNlbGVjdE9wdGlvblRlbXBsYXRlRGlyZWN0aXZlIHtcblxuICAvLyBOZWNlc3PDoXJpbyBtYW50ZXIgdGVtcGxhdGVSZWYgcGFyYSBvIGZ1bmNpb25hbWVudG8gZG8gcm93IHRlbXBsYXRlLlxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4pIHsgfVxuXG59XG4iXX0=