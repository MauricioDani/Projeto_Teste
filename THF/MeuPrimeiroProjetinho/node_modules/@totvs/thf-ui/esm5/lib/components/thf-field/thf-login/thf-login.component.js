/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';
import { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';
/**
 * \@docsExtends ThfInputBaseComponent
 *
 * \@description
 * O thf-login é um input específico para login. Já possui tipo, estilo e ícone predefinidos.
 *
 * \@example
 *
 * <example name="thf-login-basic" title="Totvs Login Basic">
 *  <file name="sample-thf-login-basic/sample-thf-login-basic.component.html"> </file>
 *  <file name="sample-thf-login-basic/sample-thf-login-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-login-labs" title="Totvs Login Labs">
 *  <file name="sample-thf-login-labs/sample-thf-login-labs.component.html"> </file>
 *  <file name="sample-thf-login-labs/sample-thf-login-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-login-confirm" title="Totvs Login - Confirm Identity">
 *  <file name="sample-thf-login-confirm/sample-thf-login-confirm.component.html"> </file>
 *  <file name="sample-thf-login-confirm/sample-thf-login-confirm.component.ts"> </file>
 * </example>
 *
 */
var ThfLoginComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfLoginComponent, _super);
    function ThfLoginComponent(el) {
        var _this = _super.call(this, el) || this;
        _this.type = 'text';
        return _this;
    }
    /**
     * @param {?} c
     * @return {?}
     */
    ThfLoginComponent.prototype.extraValidation = /**
     * @param {?} c
     * @return {?}
     */
    function (c) {
        return null;
    };
    ThfLoginComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-login',
                    template: "<thf-field-container\n  [t-label]=\"label\"\n  [t-help]=\"help\"\n  [t-optional]=\"!required && optional\">\n\n  <div class=\"thf-field-container-content\">\n    <div class=\"thf-field-icon-container-left\">\n      <span class=\"thf-icon thf-field-icon thf-icon-user\" [class.thf-field-icon-disabled]=\"disabled\"></span>\n    </div>\n\n    <input #inp\n      class=\"thf-input thf-input-icon-left\"\n      [attr.name]=\"name\"\n      [class.thf-input-icon-right]=\"clean\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [type]=\"type\"\n      (blur)=\"eventOnBlur($event)\"\n      (click)=\"eventOnClick($event)\"\n      (focus)=\"eventOnFocus($event)\"\n      (input)=\"eventOnInput($event)\">\n\n    <div class=\"thf-field-icon-container-right\">\n      <thf-clean [t-element-ref]=\"inputEl\" (t-change-event)=\"clear($event)\"></thf-clean>\n    </div>\n  </div>\n\n  <thf-field-container-bottom\n    [t-error-pattern]=\"getErrorPattern()\">\n  </thf-field-container-bottom>\n\n</thf-field-container>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfLoginComponent; })),
                            multi: true,
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfLoginComponent; })),
                            multi: true,
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    ThfLoginComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ThfLoginComponent;
}(ThfInputGeneric));
export { ThfLoginComponent };
if (false) {
    /** @type {?} */
    ThfLoginComponent.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWxvZ2luLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZmllbGQvdGhmLWxvZ2luL3RoZi1sb2dpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEUsT0FBTyxFQUFtQixpQkFBaUIsRUFBRSxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVuRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwQnpFO0lBZXVDLDZDQUFlO0lBSXBELDJCQUFZLEVBQWM7UUFBMUIsWUFDRSxrQkFBTSxFQUFFLENBQUMsU0FDVjtRQUpELFVBQUksR0FBRyxNQUFNLENBQUM7O0lBSWQsQ0FBQzs7Ozs7SUFFRCwyQ0FBZTs7OztJQUFmLFVBQWdCLENBQWtCO1FBQ2hDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7Z0JBekJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsV0FBVztvQkFDckIsbWxDQUF5QztvQkFDekMsU0FBUyxFQUFFO3dCQUNYOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLGlCQUFpQixFQUFqQixDQUFpQixFQUFDOzRCQUNoRCxLQUFLLEVBQUUsSUFBSTt5QkFDWjt3QkFDRDs0QkFDRSxPQUFPLEVBQUUsYUFBYTs0QkFDdEIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsaUJBQWlCLEVBQWpCLENBQWlCLEVBQUM7NEJBQ2hELEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUFDO2lCQUNIOzs7O2dCQTNDbUIsVUFBVTs7SUF3RDlCLHdCQUFDO0NBQUEsQUEzQkQsQ0FldUMsZUFBZSxHQVlyRDtTQVpZLGlCQUFpQjs7O0lBRTVCLGlDQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIE5HX1ZBTFVFX0FDQ0VTU09SLCBOR19WQUxJREFUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBUaGZJbnB1dEdlbmVyaWMgfSBmcm9tICcuLi90aGYtaW5wdXQtZ2VuZXJpYy90aGYtaW5wdXQtZ2VuZXJpYyc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFRoZklucHV0QmFzZUNvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogTyB0aGYtbG9naW4gw6kgdW0gaW5wdXQgZXNwZWPDrWZpY28gcGFyYSBsb2dpbi4gSsOhIHBvc3N1aSB0aXBvLCBlc3RpbG8gZSDDrWNvbmUgcHJlZGVmaW5pZG9zLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1sb2dpbi1iYXNpY1wiIHRpdGxlPVwiVG90dnMgTG9naW4gQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1sb2dpbi1iYXNpYy9zYW1wbGUtdGhmLWxvZ2luLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1sb2dpbi1iYXNpYy9zYW1wbGUtdGhmLWxvZ2luLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1sb2dpbi1sYWJzXCIgdGl0bGU9XCJUb3R2cyBMb2dpbiBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbG9naW4tbGFicy9zYW1wbGUtdGhmLWxvZ2luLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWxvZ2luLWxhYnMvc2FtcGxlLXRoZi1sb2dpbi1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1sb2dpbi1jb25maXJtXCIgdGl0bGU9XCJUb3R2cyBMb2dpbiAtIENvbmZpcm0gSWRlbnRpdHlcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1sb2dpbi1jb25maXJtL3NhbXBsZS10aGYtbG9naW4tY29uZmlybS5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbG9naW4tY29uZmlybS9zYW1wbGUtdGhmLWxvZ2luLWNvbmZpcm0uY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1sb2dpbicsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtbG9naW4uY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtcbiAge1xuICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRoZkxvZ2luQ29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZSxcbiAgfSxcbiAge1xuICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGhmTG9naW5Db21wb25lbnQpLFxuICAgIG11bHRpOiB0cnVlLFxuICB9XVxufSlcbmV4cG9ydCBjbGFzcyBUaGZMb2dpbkNvbXBvbmVudCBleHRlbmRzIFRoZklucHV0R2VuZXJpYyB7XG5cbiAgdHlwZSA9ICd0ZXh0JztcblxuICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZikge1xuICAgIHN1cGVyKGVsKTtcbiAgfVxuXG4gIGV4dHJhVmFsaWRhdGlvbihjOiBBYnN0cmFjdENvbnRyb2wpOiB7IFtrZXk6IHN0cmluZ106IGFueTsgfSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxufVxuIl19