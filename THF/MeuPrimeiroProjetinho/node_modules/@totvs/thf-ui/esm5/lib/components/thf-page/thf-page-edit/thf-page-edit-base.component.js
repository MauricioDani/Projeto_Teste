/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input, ViewChild } from '@angular/core';
import { browserLanguage, thfLocaleDefault } from './../../../utils/util';
import { ThfPageContentComponent } from '../thf-page-content/thf-page-content.component';
/** @type {?} */
export var thfPageEditLiteralsDefault = {
    en: (/** @type {?} */ ({
        cancel: 'Cancel',
        save: 'Save',
        saveNew: 'Save and New'
    })),
    es: (/** @type {?} */ ({
        cancel: 'Cancelar',
        save: 'Guardar',
        saveNew: 'Guardar y Nuevo'
    })),
    pt: (/** @type {?} */ ({
        cancel: 'Cancelar',
        save: 'Salvar',
        saveNew: 'Salvar e Novo'
    }))
};
/**
 * \@description
 *
 * O componente **thf-page-edit** é utilizado como container principal para tela de edição ou adição de um
 * registro.
 * Por padrão possui 3 ações, cada ação na tela executa uma função no componente que está utilizando o thf-page-edit,
 * são elas:
 *  - Cancelar (função: cancel);
 *  - Salvar e Novo (função: saveNew);
 *  - Salvar (função: save);
 *
 * Caso não estiver implementado alguma função, listado anteriormente, o mesmo não será apresentado.
 *
 * Os botões "Salvar" e "Salvar e Novo" podem ser habilitados/desabilitados utilizando a propriedade t-disable-submit.
 * Esta propriedade pode ser utilizada para desabilitar os botões caso exista um formulário inválido na página ou alguma
 * regra de negócio não tenha sido atendida.
 */
var ThfPageEditBaseComponent = /** @class */ (function () {
    function ThfPageEditBaseComponent() {
    }
    Object.defineProperty(ThfPageEditBaseComponent.prototype, "literals", {
        get: /**
         * @return {?}
         */
        function () {
            return this._literals || thfPageEditLiteralsDefault[browserLanguage()];
        },
        /**
         * @optional
         *
         * @description
         *
         * Objeto com as literais usadas no `thf-page-edit`.
         *
         * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
         *
         * ```
         *  const customLiterals: ThfPageEditLiterals = {
         *    cancel: 'Voltar',
         *    save: 'Confirmar',
         *    saveNew: 'Confirmar e criar um novo'
         *  };
         * ```
         *
         * Ou passando apenas as literais que deseja customizar:
         *
         * ```
         *  const customLiterals: ThfPageEditLiterals = {
         *    cancel: 'Cancelar processo'
         *  };
         * ```
         *
         * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
         *
         * ```
         * <thf-page-edit
         *   [t-literals]="customLiterals">
         * </thf-page-edit>
         * ```
         *
         *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Objeto com as literais usadas no `thf-page-edit`.
         *
         * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
         *
         * ```
         *  const customLiterals: ThfPageEditLiterals = {
         *    cancel: 'Voltar',
         *    save: 'Confirmar',
         *    saveNew: 'Confirmar e criar um novo'
         *  };
         * ```
         *
         * Ou passando apenas as literais que deseja customizar:
         *
         * ```
         *  const customLiterals: ThfPageEditLiterals = {
         *    cancel: 'Cancelar processo'
         *  };
         * ```
         *
         * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
         *
         * ```
         * <thf-page-edit
         *   [t-literals]="customLiterals">
         * </thf-page-edit>
         * ```
         *
         *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value instanceof Object && !(value instanceof Array)) {
                this._literals = tslib_1.__assign({}, thfPageEditLiteralsDefault[thfLocaleDefault], thfPageEditLiteralsDefault[browserLanguage()], value);
            }
            else {
                this._literals = thfPageEditLiteralsDefault[browserLanguage()];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageEditBaseComponent.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            return this._title;
        },
        /** Título da página. */
        set: /**
         * Título da página.
         * @param {?} title
         * @return {?}
         */
        function (title) {
            this._title = title;
            this.thfPageContent.recalculateHeaderSize();
        },
        enumerable: true,
        configurable: true
    });
    ThfPageEditBaseComponent.propDecorators = {
        thfPageContent: [{ type: ViewChild, args: [ThfPageContentComponent, { static: true },] }],
        breadcrumb: [{ type: Input, args: ['t-breadcrumb',] }],
        disableSubmit: [{ type: Input, args: ['t-disable-submit',] }],
        literals: [{ type: Input, args: ['t-literals',] }],
        title: [{ type: Input, args: ['t-title',] }]
    };
    return ThfPageEditBaseComponent;
}());
export { ThfPageEditBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageEditBaseComponent.prototype._literals;
    /**
     * @type {?}
     * @private
     */
    ThfPageEditBaseComponent.prototype._title;
    /** @type {?} */
    ThfPageEditBaseComponent.prototype.thfPageContent;
    /**
     * Objeto com propriedades do breadcrumb.
     * @type {?}
     */
    ThfPageEditBaseComponent.prototype.breadcrumb;
    /**
     * Desabilita botões de submissão (save e saveNew)
     * @type {?}
     */
    ThfPageEditBaseComponent.prototype.disableSubmit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2UtZWRpdC1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtcGFnZS90aGYtcGFnZS1lZGl0L3RoZi1wYWdlLWVkaXQtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFHMUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZ0RBQWdELENBQUM7O0FBR3pGLE1BQU0sS0FBTywwQkFBMEIsR0FBRztJQUN4QyxFQUFFLEVBQUUsbUJBQXNCO1FBQ3hCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLElBQUksRUFBRSxNQUFNO1FBQ1osT0FBTyxFQUFFLGNBQWM7S0FDeEIsRUFBQTtJQUNELEVBQUUsRUFBRSxtQkFBc0I7UUFDeEIsTUFBTSxFQUFFLFVBQVU7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixPQUFPLEVBQUUsaUJBQWlCO0tBQzNCLEVBQUE7SUFDRCxFQUFFLEVBQUUsbUJBQXNCO1FBQ3hCLE1BQU0sRUFBRSxVQUFVO1FBQ2xCLElBQUksRUFBRSxRQUFRO1FBQ2QsT0FBTyxFQUFFLGVBQWU7S0FDekIsRUFBQTtDQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkQ7SUFBQTtJQXlFQSxDQUFDO0lBekJDLHNCQUF5Qiw4Q0FBUTs7OztRQVdqQztZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsSUFBSSwwQkFBMEIsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDO1FBQ3pFLENBQUM7UUFoREQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7V0FrQ0c7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBQ0gsVUFBa0MsS0FBMEI7WUFDMUQsSUFBSSxLQUFLLFlBQVksTUFBTSxJQUFJLENBQUMsQ0FBQyxLQUFLLFlBQVksS0FBSyxDQUFDLEVBQUU7Z0JBQ3hELElBQUksQ0FBQyxTQUFTLHdCQUNULDBCQUEwQixDQUFDLGdCQUFnQixDQUFDLEVBQzVDLDBCQUEwQixDQUFDLGVBQWUsRUFBRSxDQUFDLEVBQzdDLEtBQUssQ0FDVCxDQUFDO2FBQ0g7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFNBQVMsR0FBRywwQkFBMEIsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDO2FBQ2hFO1FBQ0gsQ0FBQzs7O09BQUE7SUFNRCxzQkFBc0IsMkNBQUs7Ozs7UUFLM0I7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDckIsQ0FBQztRQVJELHdCQUF3Qjs7Ozs7O1FBQ3hCLFVBQTRCLEtBQWE7WUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7WUFDcEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1FBQzlDLENBQUM7OztPQUFBOztpQ0E5REEsU0FBUyxTQUFDLHVCQUF1QixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs2QkFHbkQsS0FBSyxTQUFDLGNBQWM7Z0NBR3BCLEtBQUssU0FBQyxrQkFBa0I7MkJBcUN4QixLQUFLLFNBQUMsWUFBWTt3QkFnQmxCLEtBQUssU0FBQyxTQUFTOztJQVNsQiwrQkFBQztDQUFBLEFBekVELElBeUVDO1NBekVZLHdCQUF3Qjs7Ozs7O0lBRW5DLDZDQUF1Qzs7Ozs7SUFDdkMsMENBQXVCOztJQUV2QixrREFBOEY7Ozs7O0lBRzlGLDhDQUFrRDs7Ozs7SUFHbEQsaURBQW1EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBicm93c2VyTGFuZ3VhZ2UsIHRoZkxvY2FsZURlZmF1bHQgfSBmcm9tICcuLy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBUaGZCcmVhZGNydW1iIH0gZnJvbSAnLi4vLi4vdGhmLWJyZWFkY3J1bWIvdGhmLWJyZWFkY3J1bWIuaW50ZXJmYWNlJztcbmltcG9ydCB7IFRoZlBhZ2VDb250ZW50Q29tcG9uZW50IH0gZnJvbSAnLi4vdGhmLXBhZ2UtY29udGVudC90aGYtcGFnZS1jb250ZW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaGZQYWdlRWRpdExpdGVyYWxzIH0gZnJvbSAnLi90aGYtcGFnZS1lZGl0LWxpdGVyYWxzLmludGVyZmFjZSc7XG5cbmV4cG9ydCBjb25zdCB0aGZQYWdlRWRpdExpdGVyYWxzRGVmYXVsdCA9IHtcbiAgZW46IDxUaGZQYWdlRWRpdExpdGVyYWxzPiB7XG4gICAgY2FuY2VsOiAnQ2FuY2VsJyxcbiAgICBzYXZlOiAnU2F2ZScsXG4gICAgc2F2ZU5ldzogJ1NhdmUgYW5kIE5ldydcbiAgfSxcbiAgZXM6IDxUaGZQYWdlRWRpdExpdGVyYWxzPiB7XG4gICAgY2FuY2VsOiAnQ2FuY2VsYXInLFxuICAgIHNhdmU6ICdHdWFyZGFyJyxcbiAgICBzYXZlTmV3OiAnR3VhcmRhciB5IE51ZXZvJ1xuICB9LFxuICBwdDogPFRoZlBhZ2VFZGl0TGl0ZXJhbHM+IHtcbiAgICBjYW5jZWw6ICdDYW5jZWxhcicsXG4gICAgc2F2ZTogJ1NhbHZhcicsXG4gICAgc2F2ZU5ldzogJ1NhbHZhciBlIE5vdm8nXG4gIH1cbn07XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlICoqdGhmLXBhZ2UtZWRpdCoqIMOpIHV0aWxpemFkbyBjb21vIGNvbnRhaW5lciBwcmluY2lwYWwgcGFyYSB0ZWxhIGRlIGVkacOnw6NvIG91IGFkacOnw6NvIGRlIHVtXG4gKiByZWdpc3Ryby5cbiAqIFBvciBwYWRyw6NvIHBvc3N1aSAzIGHDp8O1ZXMsIGNhZGEgYcOnw6NvIG5hIHRlbGEgZXhlY3V0YSB1bWEgZnVuw6fDo28gbm8gY29tcG9uZW50ZSBxdWUgZXN0w6EgdXRpbGl6YW5kbyBvIHRoZi1wYWdlLWVkaXQsXG4gKiBzw6NvIGVsYXM6XG4gKiAgLSBDYW5jZWxhciAoZnVuw6fDo286IGNhbmNlbCk7XG4gKiAgLSBTYWx2YXIgZSBOb3ZvIChmdW7Dp8Ojbzogc2F2ZU5ldyk7XG4gKiAgLSBTYWx2YXIgKGZ1bsOnw6NvOiBzYXZlKTtcbiAqXG4gKiBDYXNvIG7Do28gZXN0aXZlciBpbXBsZW1lbnRhZG8gYWxndW1hIGZ1bsOnw6NvLCBsaXN0YWRvIGFudGVyaW9ybWVudGUsIG8gbWVzbW8gbsOjbyBzZXLDoSBhcHJlc2VudGFkby5cbiAqXG4gKiBPcyBib3TDtWVzIFwiU2FsdmFyXCIgZSBcIlNhbHZhciBlIE5vdm9cIiBwb2RlbSBzZXIgaGFiaWxpdGFkb3MvZGVzYWJpbGl0YWRvcyB1dGlsaXphbmRvIGEgcHJvcHJpZWRhZGUgdC1kaXNhYmxlLXN1Ym1pdC5cbiAqIEVzdGEgcHJvcHJpZWRhZGUgcG9kZSBzZXIgdXRpbGl6YWRhIHBhcmEgZGVzYWJpbGl0YXIgb3MgYm90w7VlcyBjYXNvIGV4aXN0YSB1bSBmb3JtdWzDoXJpbyBpbnbDoWxpZG8gbmEgcMOhZ2luYSBvdSBhbGd1bWFcbiAqIHJlZ3JhIGRlIG5lZ8OzY2lvIG7Do28gdGVuaGEgc2lkbyBhdGVuZGlkYS5cbiAqL1xuZXhwb3J0IGNsYXNzIFRoZlBhZ2VFZGl0QmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfbGl0ZXJhbHM6IFRoZlBhZ2VFZGl0TGl0ZXJhbHM7XG4gIHByaXZhdGUgX3RpdGxlOiBzdHJpbmc7XG5cbiAgQFZpZXdDaGlsZChUaGZQYWdlQ29udGVudENvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgdGhmUGFnZUNvbnRlbnQ6IFRoZlBhZ2VDb250ZW50Q29tcG9uZW50O1xuXG4gIC8qKiBPYmpldG8gY29tIHByb3ByaWVkYWRlcyBkbyBicmVhZGNydW1iLiAqL1xuICBASW5wdXQoJ3QtYnJlYWRjcnVtYicpIGJyZWFkY3J1bWI/OiBUaGZCcmVhZGNydW1iO1xuXG4gIC8qKiBEZXNhYmlsaXRhIGJvdMO1ZXMgZGUgc3VibWlzc8OjbyAoc2F2ZSBlIHNhdmVOZXcpICovXG4gIEBJbnB1dCgndC1kaXNhYmxlLXN1Ym1pdCcpIGRpc2FibGVTdWJtaXQ/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIE9iamV0byBjb20gYXMgbGl0ZXJhaXMgdXNhZGFzIG5vIGB0aGYtcGFnZS1lZGl0YC5cbiAgICpcbiAgICogRXhpc3RlbSBkdWFzIG1hbmVpcmFzIGRlIGN1c3RvbWl6YXIgbyBjb21wb25lbnRlLCBwYXNzYW5kbyB1bSBvYmpldG8gY29tIHRvZGFzIGFzIGxpdGVyYWlzIGRpc3BvbsOtdmVpczpcbiAgICpcbiAgICogYGBgXG4gICAqICBjb25zdCBjdXN0b21MaXRlcmFsczogVGhmUGFnZUVkaXRMaXRlcmFscyA9IHtcbiAgICogICAgY2FuY2VsOiAnVm9sdGFyJyxcbiAgICogICAgc2F2ZTogJ0NvbmZpcm1hcicsXG4gICAqICAgIHNhdmVOZXc6ICdDb25maXJtYXIgZSBjcmlhciB1bSBub3ZvJ1xuICAgKiAgfTtcbiAgICogYGBgXG4gICAqXG4gICAqIE91IHBhc3NhbmRvIGFwZW5hcyBhcyBsaXRlcmFpcyBxdWUgZGVzZWphIGN1c3RvbWl6YXI6XG4gICAqXG4gICAqIGBgYFxuICAgKiAgY29uc3QgY3VzdG9tTGl0ZXJhbHM6IFRoZlBhZ2VFZGl0TGl0ZXJhbHMgPSB7XG4gICAqICAgIGNhbmNlbDogJ0NhbmNlbGFyIHByb2Nlc3NvJ1xuICAgKiAgfTtcbiAgICogYGBgXG4gICAqXG4gICAqIEUgcGFyYSBjYXJyZWdhciBhcyBsaXRlcmFpcyBjdXN0b21pemFkYXMsIGJhc3RhIGFwZW5hcyBwYXNzYXIgbyBvYmpldG8gcGFyYSBvIGNvbXBvbmVudGUuXG4gICAqXG4gICAqIGBgYFxuICAgKiA8dGhmLXBhZ2UtZWRpdFxuICAgKiAgIFt0LWxpdGVyYWxzXT1cImN1c3RvbUxpdGVyYWxzXCI+XG4gICAqIDwvdGhmLXBhZ2UtZWRpdD5cbiAgICogYGBgXG4gICAqXG4gICAqICA+IE8gb2JqZXRvIHBhZHLDo28gZGUgbGl0ZXJhaXMgc2Vyw6EgdHJhZHV6aWRvIGRlIGFjb3JkbyBjb20gbyBpZGlvbWEgZG8gYnJvd3NlciAocHQsIGVuLCBlcykuXG4gICAqL1xuICBASW5wdXQoJ3QtbGl0ZXJhbHMnKSBzZXQgbGl0ZXJhbHModmFsdWU6IFRoZlBhZ2VFZGl0TGl0ZXJhbHMpIHtcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgISh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5KSkge1xuICAgICAgdGhpcy5fbGl0ZXJhbHMgPSB7XG4gICAgICAgIC4uLnRoZlBhZ2VFZGl0TGl0ZXJhbHNEZWZhdWx0W3RoZkxvY2FsZURlZmF1bHRdLFxuICAgICAgICAuLi50aGZQYWdlRWRpdExpdGVyYWxzRGVmYXVsdFticm93c2VyTGFuZ3VhZ2UoKV0sXG4gICAgICAgIC4uLnZhbHVlXG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9saXRlcmFscyA9IHRoZlBhZ2VFZGl0TGl0ZXJhbHNEZWZhdWx0W2Jyb3dzZXJMYW5ndWFnZSgpXTtcbiAgICB9XG4gIH1cbiAgZ2V0IGxpdGVyYWxzKCkge1xuICAgIHJldHVybiB0aGlzLl9saXRlcmFscyB8fCB0aGZQYWdlRWRpdExpdGVyYWxzRGVmYXVsdFticm93c2VyTGFuZ3VhZ2UoKV07XG4gIH1cblxuICAvKiogVMOtdHVsbyBkYSBww6FnaW5hLiAqL1xuICBASW5wdXQoJ3QtdGl0bGUnKSBzZXQgdGl0bGUodGl0bGU6IHN0cmluZykge1xuICAgIHRoaXMuX3RpdGxlID0gdGl0bGU7XG4gICAgdGhpcy50aGZQYWdlQ29udGVudC5yZWNhbGN1bGF0ZUhlYWRlclNpemUoKTtcbiAgfVxuXG4gIGdldCB0aXRsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fdGl0bGU7XG4gIH1cblxufVxuIl19