/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';
import { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';
/**
 * \@docsExtends ThfInputBaseComponent
 *
 * \@description
 *
 * thf-url é um input específico para receber URL, com o pattern já configurado.
 *
 * \@example
 *
 * <example name="thf-url-basic" title="Totvs Url Basic">
 *   <file name="sample-thf-url-basic/sample-thf-url-basic.component.html"> </file>
 *   <file name="sample-thf-url-basic/sample-thf-url-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-url-labs" title="Totvs Url Labs">
 *   <file name="sample-thf-url-labs/sample-thf-url-labs.component.html"> </file>
 *   <file name="sample-thf-url-labs/sample-thf-url-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-url-shortener" title="Totvs Url - Shortener">
 *   <file name="sample-thf-url-shortener/sample-thf-url-shortener.component.html"> </file>
 *   <file name="sample-thf-url-shortener/sample-thf-url-shortener.component.ts"> </file>
 * </example>
 *
 */
var ThfUrlComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfUrlComponent, _super);
    function ThfUrlComponent(el) {
        var _this = _super.call(this, el) || this;
        _this.icon = 'thf-icon-world';
        _this.maxlength = 254;
        _this.type = 'url';
        _this.pattern = '^((https|http):\\/\\/)?' + // protocol
            '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
            '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR ip (v4) address
            '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
            '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
            '(\\#[-a-z\\d_]*)?$';
        _this.mask = '';
        _this.listener = _this.validateClassesForPattern.bind(_this);
        return _this;
    }
    /**
     * @return {?}
     */
    ThfUrlComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // Se não tem ngModel ou reactive form adiciona validação com classes css
        setTimeout((/**
         * @return {?}
         */
        function () {
            if (!_this.onChangePropagate) {
                _this.inputEl.nativeElement.addEventListener('keyup', _this.listener);
            }
        }));
    };
    /**
     * @return {?}
     */
    ThfUrlComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (!this.onChangePropagate) {
            this.inputEl.nativeElement.removeEventListener('keyup', this.listener);
        }
    };
    /**
     * @param {?} c
     * @return {?}
     */
    ThfUrlComponent.prototype.extraValidation = /**
     * @param {?} c
     * @return {?}
     */
    function (c) {
        return null;
    };
    ThfUrlComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-url',
                    template: "<thf-field-container\n  [t-help]=\"help\"\n  [t-label]=\"label\"\n  [t-optional]=\"!required && optional\">\n\n  <div class=\"thf-field-container-content\">\n    <div *ngIf=\"icon\" class=\"thf-field-icon-container-left\">\n      <span class=\"thf-icon thf-field-icon {{ icon }}\" [class.thf-field-icon-disabled]=\"disabled\"></span>\n    </div>\n\n    <input #inp\n      class=\"thf-input\"\n      [attr.name]=\"name\"\n      [class.thf-input-icon-left]=\"icon\"\n      [class.thf-input-icon-right]=\"clean\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [type]=\"type\"\n      (blur)=\"eventOnBlur($event)\"\n      (click)=\"eventOnClick($event)\"\n      (focus)=\"eventOnFocus($event)\"\n      (input)=\"eventOnInput($event)\">\n\n    <div class=\"thf-field-icon-container-right\">\n      <thf-clean [t-element-ref]=\"inputEl\" (t-change-event)=\"clear($event)\"></thf-clean>\n    </div>\n  </div>\n\n  <thf-field-container-bottom\n    [t-error-pattern]=\"getErrorPattern()\">\n  </thf-field-container-bottom>\n\n</thf-field-container>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfUrlComponent; })),
                            multi: true
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfUrlComponent; })),
                            multi: true
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    ThfUrlComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ThfUrlComponent;
}(ThfInputGeneric));
export { ThfUrlComponent };
if (false) {
    /** @type {?} */
    ThfUrlComponent.prototype.icon;
    /** @type {?} */
    ThfUrlComponent.prototype.maxlength;
    /** @type {?} */
    ThfUrlComponent.prototype.type;
    /** @type {?} */
    ThfUrlComponent.prototype.pattern;
    /** @type {?} */
    ThfUrlComponent.prototype.mask;
    /**
     * @type {?}
     * @private
     */
    ThfUrlComponent.prototype.listener;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXVybC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWZpZWxkL3RoZi11cmwvdGhmLXVybC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQWlCLFNBQVMsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQzVGLE9BQU8sRUFBbUIsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdDQUF3QyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCekU7SUFlcUMsMkNBQWU7SUFtQmxELHlCQUFZLEVBQWM7UUFBMUIsWUFDRSxrQkFBTSxFQUFFLENBQUMsU0FDVjtRQW5CRCxVQUFJLEdBQUcsZ0JBQWdCLENBQUM7UUFFeEIsZUFBUyxHQUFXLEdBQUcsQ0FBQztRQUV4QixVQUFJLEdBQUcsS0FBSyxDQUFDO1FBRWIsYUFBTyxHQUFHLHlCQUF5QixHQUFHLFdBQVc7WUFDakQsa0RBQWtELEdBQUcsY0FBYztZQUNuRSw2QkFBNkIsR0FBRyxxQkFBcUI7WUFDckQsaUNBQWlDLEdBQUcsZ0JBQWdCO1lBQ3BELDBCQUEwQixHQUFHLGVBQWU7WUFDNUMsb0JBQW9CLENBQUM7UUFFckIsVUFBSSxHQUFHLEVBQUUsQ0FBQztRQUVGLGNBQVEsR0FBRyxLQUFJLENBQUMseUJBQXlCLENBQUMsSUFBSSxDQUFDLEtBQUksQ0FBQyxDQUFDOztJQUk3RCxDQUFDOzs7O0lBRUQseUNBQWU7OztJQUFmO1FBQUEsaUJBT0M7UUFOQyx5RUFBeUU7UUFDekUsVUFBVTs7O1FBQUM7WUFDVCxJQUFJLENBQUMsS0FBSSxDQUFDLGlCQUFpQixFQUFFO2dCQUMzQixLQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsS0FBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ3JFO1FBQ0gsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7O0lBRUQscUNBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3hFO0lBQ0gsQ0FBQzs7Ozs7SUFFRCx5Q0FBZTs7OztJQUFmLFVBQWdCLENBQWtCO1FBQ2hDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7Z0JBdkRGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsU0FBUztvQkFDbkIsdW5DQUFvRDtvQkFDcEQsU0FBUyxFQUFFO3dCQUNYOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLGVBQWUsRUFBZixDQUFlLEVBQUM7NEJBQzlDLEtBQUssRUFBRSxJQUFJO3lCQUNaO3dCQUNEOzRCQUNFLE9BQU8sRUFBRSxhQUFhOzRCQUN0QixXQUFXLEVBQUUsVUFBVTs7OzRCQUFDLGNBQU0sT0FBQSxlQUFlLEVBQWYsQ0FBZSxFQUFDOzRCQUM5QyxLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFBQztpQkFDSDs7OztnQkE1Q2tDLFVBQVU7O0lBdUY3QyxzQkFBQztDQUFBLEFBekRELENBZXFDLGVBQWUsR0EwQ25EO1NBMUNZLGVBQWU7OztJQUUxQiwrQkFBd0I7O0lBRXhCLG9DQUF3Qjs7SUFFeEIsK0JBQWE7O0lBRWIsa0NBS3FCOztJQUVyQiwrQkFBVTs7Ozs7SUFFVixtQ0FBNkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBOR19WQUxVRV9BQ0NFU1NPUiwgTkdfVkFMSURBVE9SUyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgVGhmSW5wdXRHZW5lcmljIH0gZnJvbSAnLi4vdGhmLWlucHV0LWdlbmVyaWMvdGhmLWlucHV0LWdlbmVyaWMnO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBUaGZJbnB1dEJhc2VDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiB0aGYtdXJsIMOpIHVtIGlucHV0IGVzcGVjw61maWNvIHBhcmEgcmVjZWJlciBVUkwsIGNvbSBvIHBhdHRlcm4gasOhIGNvbmZpZ3VyYWRvLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi11cmwtYmFzaWNcIiB0aXRsZT1cIlRvdHZzIFVybCBCYXNpY1wiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi11cmwtYmFzaWMvc2FtcGxlLXRoZi11cmwtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi11cmwtYmFzaWMvc2FtcGxlLXRoZi11cmwtYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLXVybC1sYWJzXCIgdGl0bGU9XCJUb3R2cyBVcmwgTGFic1wiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi11cmwtbGFicy9zYW1wbGUtdGhmLXVybC1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtdXJsLWxhYnMvc2FtcGxlLXRoZi11cmwtbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtdXJsLXNob3J0ZW5lclwiIHRpdGxlPVwiVG90dnMgVXJsIC0gU2hvcnRlbmVyXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXVybC1zaG9ydGVuZXIvc2FtcGxlLXRoZi11cmwtc2hvcnRlbmVyLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtdXJsLXNob3J0ZW5lci9zYW1wbGUtdGhmLXVybC1zaG9ydGVuZXIuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi11cmwnLFxuICB0ZW1wbGF0ZVVybDogJy4uL3RoZi1pbnB1dC90aGYtaW5wdXQuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtcbiAge1xuICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRoZlVybENvbXBvbmVudCksXG4gICAgbXVsdGk6IHRydWVcbiAgfSxcbiAge1xuICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGhmVXJsQ29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZVxuICB9XVxufSlcbmV4cG9ydCBjbGFzcyBUaGZVcmxDb21wb25lbnQgZXh0ZW5kcyBUaGZJbnB1dEdlbmVyaWMgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuXG4gIGljb24gPSAndGhmLWljb24td29ybGQnO1xuXG4gIG1heGxlbmd0aDogbnVtYmVyID0gMjU0O1xuXG4gIHR5cGUgPSAndXJsJztcblxuICBwYXR0ZXJuID0gJ14oKGh0dHBzfGh0dHApOlxcXFwvXFxcXC8pPycgKyAvLyBwcm90b2NvbFxuICAnKCgoW2EtelxcXFxkXShbYS16XFxcXGQtXSpbYS16XFxcXGRdKSopXFxcXC4pK1thLXpdezIsfXwnICsgLy8gZG9tYWluIG5hbWVcbiAgJygoXFxcXGR7MSwzfVxcXFwuKXszfVxcXFxkezEsM30pKScgKyAvLyBPUiBpcCAodjQpIGFkZHJlc3NcbiAgJyhcXFxcOlxcXFxkKyk/KFxcXFwvWy1hLXpcXFxcZCVfLn4rXSopKicgKyAvLyBwb3J0IGFuZCBwYXRoXG4gICcoXFxcXD9bOyZhLXpcXFxcZCVfLn4rPS1dKik/JyArIC8vIHF1ZXJ5IHN0cmluZ1xuICAnKFxcXFwjWy1hLXpcXFxcZF9dKik/JCc7XG5cbiAgbWFzayA9ICcnO1xuXG4gIHByaXZhdGUgbGlzdGVuZXIgPSB0aGlzLnZhbGlkYXRlQ2xhc3Nlc0ZvclBhdHRlcm4uYmluZCh0aGlzKTtcblxuICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZikge1xuICAgIHN1cGVyKGVsKTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAvLyBTZSBuw6NvIHRlbSBuZ01vZGVsIG91IHJlYWN0aXZlIGZvcm0gYWRpY2lvbmEgdmFsaWRhw6fDo28gY29tIGNsYXNzZXMgY3NzXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMub25DaGFuZ2VQcm9wYWdhdGUpIHtcbiAgICAgICAgdGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLmxpc3RlbmVyKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIGlmICghdGhpcy5vbkNoYW5nZVByb3BhZ2F0ZSkge1xuICAgICAgdGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLmxpc3RlbmVyKTtcbiAgICB9XG4gIH1cblxuICBleHRyYVZhbGlkYXRpb24oYzogQWJzdHJhY3RDb250cm9sKTogeyBba2V5OiBzdHJpbmddOiBhbnk7IH0ge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbn1cbiJdfQ==