/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { ThfContainerModule } from '../thf-container/thf-container.module';
import { ThfSlideCirclesComponent } from './thf-slide-circles/thf-slide-circles.component';
import { ThfSlideComponent } from './thf-slide.component';
import { ThfSlideContentTemplateDirective } from './directives/thf-slide-content-template.directive';
import { ThfSlideControlComponent } from './thf-slide-control/thf-slide-control.component';
import { ThfSlideItemComponent } from './thf-slide-item/thf-slide-item.component';
/**
 * \@description
 *
 * Módulo do componente `thf-slide`.
 *
 * > Para o correto funcionamento do componente `thf-slide`, deve ser importado o módulo `BrowserAnimationsModule` no
 * > módulo principal da sua aplicação.
 *
 * Módulo da aplicação:
 * ```
 * import { BrowserAnimationsModule } from '\@angular/platform-browser/animations';
 * import { ThfModule } from '\@totvs/thf-ui';
 * ...
 *
 * \@NgModule({
 *   imports: [
 *     BrowserModule,
 *     BrowserAnimationsModule,
 *     ...
 *     ThfModule
 *   ],
 *   declarations: [
 *     AppComponent,
 *     ...
 *   ],
 *   providers: [],
 *   bootstrap: [AppComponent]
 * })
 * export class AppModule { }
 * ```
 */
var ThfSlideModule = /** @class */ (function () {
    function ThfSlideModule() {
    }
    ThfSlideModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        RouterModule,
                        ThfContainerModule
                    ],
                    declarations: [
                        ThfSlideCirclesComponent,
                        ThfSlideComponent,
                        ThfSlideControlComponent,
                        ThfSlideContentTemplateDirective,
                        ThfSlideItemComponent,
                    ],
                    exports: [
                        ThfSlideComponent,
                        ThfSlideContentTemplateDirective
                    ],
                    providers: [],
                    schemas: []
                },] }
    ];
    return ThfSlideModule;
}());
export { ThfSlideModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXNsaWRlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtc2xpZGUvdGhmLXNsaWRlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBRTNFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQzNGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3JHLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQzNGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlDbEY7SUFBQTtJQW9COEIsQ0FBQzs7Z0JBcEI5QixRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osWUFBWTt3QkFDWixrQkFBa0I7cUJBQ25CO29CQUNELFlBQVksRUFBRTt3QkFDWix3QkFBd0I7d0JBQ3hCLGlCQUFpQjt3QkFDakIsd0JBQXdCO3dCQUN4QixnQ0FBZ0M7d0JBQ2hDLHFCQUFxQjtxQkFDdEI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLGlCQUFpQjt3QkFDakIsZ0NBQWdDO3FCQUNqQztvQkFDRCxTQUFTLEVBQUUsRUFBRTtvQkFDYixPQUFPLEVBQUUsRUFBRTtpQkFDWjs7SUFDNkIscUJBQUM7Q0FBQSxBQXBCL0IsSUFvQitCO1NBQWxCLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmltcG9ydCB7IFRoZkNvbnRhaW5lck1vZHVsZSB9IGZyb20gJy4uL3RoZi1jb250YWluZXIvdGhmLWNvbnRhaW5lci5tb2R1bGUnO1xuXG5pbXBvcnQgeyBUaGZTbGlkZUNpcmNsZXNDb21wb25lbnQgfSBmcm9tICcuL3RoZi1zbGlkZS1jaXJjbGVzL3RoZi1zbGlkZS1jaXJjbGVzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaGZTbGlkZUNvbXBvbmVudCB9IGZyb20gJy4vdGhmLXNsaWRlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaGZTbGlkZUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy90aGYtc2xpZGUtY29udGVudC10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGhmU2xpZGVDb250cm9sQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtc2xpZGUtY29udHJvbC90aGYtc2xpZGUtY29udHJvbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGhmU2xpZGVJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtc2xpZGUtaXRlbS90aGYtc2xpZGUtaXRlbS5jb21wb25lbnQnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE3Ds2R1bG8gZG8gY29tcG9uZW50ZSBgdGhmLXNsaWRlYC5cbiAqXG4gKiA+IFBhcmEgbyBjb3JyZXRvIGZ1bmNpb25hbWVudG8gZG8gY29tcG9uZW50ZSBgdGhmLXNsaWRlYCwgZGV2ZSBzZXIgaW1wb3J0YWRvIG8gbcOzZHVsbyBgQnJvd3NlckFuaW1hdGlvbnNNb2R1bGVgIG5vXG4gKiA+IG3Ds2R1bG8gcHJpbmNpcGFsIGRhIHN1YSBhcGxpY2HDp8Ojby5cbiAqXG4gKiBNw7NkdWxvIGRhIGFwbGljYcOnw6NvOlxuICogYGBgXG4gKiBpbXBvcnQgeyBCcm93c2VyQW5pbWF0aW9uc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYW5pbWF0aW9ucyc7XG4gKiBpbXBvcnQgeyBUaGZNb2R1bGUgfSBmcm9tICdAdG90dnMvdGhmLXVpJztcbiAqIC4uLlxuICpcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICBCcm93c2VyTW9kdWxlLFxuICogICAgIEJyb3dzZXJBbmltYXRpb25zTW9kdWxlLFxuICogICAgIC4uLlxuICogICAgIFRoZk1vZHVsZVxuICogICBdLFxuICogICBkZWNsYXJhdGlvbnM6IFtcbiAqICAgICBBcHBDb21wb25lbnQsXG4gKiAgICAgLi4uXG4gKiAgIF0sXG4gKiAgIHByb3ZpZGVyczogW10sXG4gKiAgIGJvb3RzdHJhcDogW0FwcENvbXBvbmVudF1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHsgfVxuICogYGBgXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgUm91dGVyTW9kdWxlLFxuICAgIFRoZkNvbnRhaW5lck1vZHVsZVxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBUaGZTbGlkZUNpcmNsZXNDb21wb25lbnQsXG4gICAgVGhmU2xpZGVDb21wb25lbnQsXG4gICAgVGhmU2xpZGVDb250cm9sQ29tcG9uZW50LFxuICAgIFRoZlNsaWRlQ29udGVudFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIFRoZlNsaWRlSXRlbUNvbXBvbmVudCxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIFRoZlNsaWRlQ29tcG9uZW50LFxuICAgIFRoZlNsaWRlQ29udGVudFRlbXBsYXRlRGlyZWN0aXZlXG4gIF0sXG4gIHByb3ZpZGVyczogW10sXG4gIHNjaGVtYXM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIFRoZlNsaWRlTW9kdWxlIHsgfVxuIl19