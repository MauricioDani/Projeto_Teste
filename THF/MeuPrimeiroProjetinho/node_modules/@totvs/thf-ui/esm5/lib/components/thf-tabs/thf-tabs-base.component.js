/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
/**
 * \@description
 *
 * O componente `thf-tabs` é responsável por agrupar [abas](/documentation/thf-tab) dispostas numa linha horizontal,
 * ideal para facilitar a organização de conteúdos.
 *
 * Até cinco abas o componente exibe todas normalmente. Contudo, a partir de seis abas, o componente torna visível
 * apenas as quatro primeiras, agrupando todas as demais na quinta aba rotulada de **Mais**.
 *
 * > As abas que estiverem agrupadas serão dispostas numa cascata suspensa que será exibida ao clicar no botão **Mais**.
 *
 * É possível realizar a navegação entre as abas através da tecla TAB do teclado.
 * Caso uma aba estiver desabilitada, não receberá foco de navegação.
 *
 * #### Boas práticas
 *
 * - Evite utilizar uma quantidade excessiva de abas, pois irá gerar um *scroll* muito longo no `dropdown`;
 * - Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos.
 */
var ThfTabsBaseComponent = /** @class */ (function () {
    function ThfTabsBaseComponent() {
        this._small = false;
    }
    Object.defineProperty(ThfTabsBaseComponent.prototype, "small", {
        get: /**
         * @return {?}
         */
        function () {
            return this._small;
        },
        /**
         * @optinal
         *
         * @description
         *
         * Diminui o tamanho das abas.
         *
         * @default `false`
         */
        set: /**
         * \@optinal
         *
         * \@description
         *
         * Diminui o tamanho das abas.
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._small = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    ThfTabsBaseComponent.propDecorators = {
        small: [{ type: Input, args: ['t-small',] }]
    };
    return ThfTabsBaseComponent;
}());
export { ThfTabsBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfTabsBaseComponent.prototype._small;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRhYnMtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXRhYnMvdGhmLXRhYnMtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJwRDtJQUFBO1FBRVUsV0FBTSxHQUFhLEtBQUssQ0FBQztJQW1CbkMsQ0FBQztJQVJDLHNCQUFzQix1Q0FBSzs7OztRQUkzQjtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNyQixDQUFDO1FBZkQ7Ozs7Ozs7O1dBUUc7Ozs7Ozs7Ozs7OztRQUNILFVBQTRCLEtBQWM7WUFDeEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN4QyxDQUFDOzs7T0FBQTs7d0JBRkEsS0FBSyxTQUFDLFNBQVM7O0lBUWxCLDJCQUFDO0NBQUEsQUFyQkQsSUFxQkM7U0FyQlksb0JBQW9COzs7Ozs7SUFFL0Isc0NBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29udmVydFRvQm9vbGVhbiB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE8gY29tcG9uZW50ZSBgdGhmLXRhYnNgIMOpIHJlc3BvbnPDoXZlbCBwb3IgYWdydXBhciBbYWJhc10oL2RvY3VtZW50YXRpb24vdGhmLXRhYikgZGlzcG9zdGFzIG51bWEgbGluaGEgaG9yaXpvbnRhbCxcbiAqIGlkZWFsIHBhcmEgZmFjaWxpdGFyIGEgb3JnYW5pemHDp8OjbyBkZSBjb250ZcO6ZG9zLlxuICpcbiAqIEF0w6kgY2luY28gYWJhcyBvIGNvbXBvbmVudGUgZXhpYmUgdG9kYXMgbm9ybWFsbWVudGUuIENvbnR1ZG8sIGEgcGFydGlyIGRlIHNlaXMgYWJhcywgbyBjb21wb25lbnRlIHRvcm5hIHZpc8OtdmVsXG4gKiBhcGVuYXMgYXMgcXVhdHJvIHByaW1laXJhcywgYWdydXBhbmRvIHRvZGFzIGFzIGRlbWFpcyBuYSBxdWludGEgYWJhIHJvdHVsYWRhIGRlICoqTWFpcyoqLlxuICpcbiAqID4gQXMgYWJhcyBxdWUgZXN0aXZlcmVtIGFncnVwYWRhcyBzZXLDo28gZGlzcG9zdGFzIG51bWEgY2FzY2F0YSBzdXNwZW5zYSBxdWUgc2Vyw6EgZXhpYmlkYSBhbyBjbGljYXIgbm8gYm90w6NvICoqTWFpcyoqLlxuICpcbiAqIMOJIHBvc3PDrXZlbCByZWFsaXphciBhIG5hdmVnYcOnw6NvIGVudHJlIGFzIGFiYXMgYXRyYXbDqXMgZGEgdGVjbGEgVEFCIGRvIHRlY2xhZG8uXG4gKiBDYXNvIHVtYSBhYmEgZXN0aXZlciBkZXNhYmlsaXRhZGEsIG7Do28gcmVjZWJlcsOhIGZvY28gZGUgbmF2ZWdhw6fDo28uXG4gKlxuICogIyMjIyBCb2FzIHByw6F0aWNhc1xuICpcbiAqIC0gRXZpdGUgdXRpbGl6YXIgdW1hIHF1YW50aWRhZGUgZXhjZXNzaXZhIGRlIGFiYXMsIHBvaXMgaXLDoSBnZXJhciB1bSAqc2Nyb2xsKiBtdWl0byBsb25nbyBubyBgZHJvcGRvd25gO1xuICogLSBFdml0ZSBgbGFiZWxzYCBleHRlbnNvcyBwYXJhIGFzIGB0YWJzYCBwb2lzIHBvZGVtIHF1ZWJyYXIgc2V1ICpsYXlvdXQqLCB1c2UgYGxhYmVsc2AgZGlyZXRvcywgY3VydG9zIGUgaW50dWl0aXZvcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFRoZlRhYnNCYXNlQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9zbWFsbD86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogQG9wdGluYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERpbWludWkgbyB0YW1hbmhvIGRhcyBhYmFzLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3Qtc21hbGwnKSBzZXQgc21hbGwodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9zbWFsbCA9IGNvbnZlcnRUb0Jvb2xlYW4odmFsdWUpO1xuICB9XG5cbiAgZ2V0IHNtYWxsKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9zbWFsbDtcbiAgfVxuXG59XG4iXX0=