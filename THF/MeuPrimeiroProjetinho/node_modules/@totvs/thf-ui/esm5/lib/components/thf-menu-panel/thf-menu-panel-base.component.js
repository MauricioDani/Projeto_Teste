/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { v4 as uuid } from 'uuid';
import { isExternalLink } from '../../utils/util';
/**
 * \@description
 *
 * Este é um componente de menu lateral composto apenas por ícones e com um nível, utilizado para navegação
 * em páginas internas, externas da aplicação ou aciona uma ação.
 *
 * O componente `thf-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informações dos
 * itens de menu como textos, links para redirecionamento, ações e ícones.
 */
var ThfMenuPanelBaseComponent = /** @class */ (function () {
    function ThfMenuPanelBaseComponent() {
    }
    Object.defineProperty(ThfMenuPanelBaseComponent.prototype, "menus", {
        get: /**
         * @return {?}
         */
        function () {
            return this._menus;
        },
        /** Lista dos itens do `thf-menu-panel`. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio. */
        set: /**
         * Lista dos itens do `thf-menu-panel`. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio.
         * @param {?} menus
         * @return {?}
         */
        function (menus) {
            this._menus = Array.isArray(menus) ? menus : [];
            this.setMenuExtraProperties(this._menus);
            this.validateMenus(this._menus);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    ThfMenuPanelBaseComponent.prototype.setMenuExtraProperties = /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    function (menus) {
        var _this = this;
        menus.forEach((/**
         * @param {?} menuItem
         * @return {?}
         */
        function (menuItem) { return _this.setMenuItemProperties((/** @type {?} */ (menuItem))); }));
    };
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    ThfMenuPanelBaseComponent.prototype.setMenuItemProperties = /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    function (menuItem) {
        menuItem.id = menuItem.id || uuid();
        menuItem.type = this.setMenuType(menuItem);
    };
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    ThfMenuPanelBaseComponent.prototype.setMenuType = /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    function (menuItem) {
        if (!menuItem.link) {
            return 'noLink';
        }
        if (isExternalLink(menuItem.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    };
    /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    ThfMenuPanelBaseComponent.prototype.validateMenu = /**
     * @private
     * @param {?} menuItem
     * @return {?}
     */
    function (menuItem) {
        if (!menuItem.label) {
            throw new Error('O atributo ThfMenuPanelItem.label não pode ser vazio.');
        }
        if (!menuItem.icon) {
            throw new Error('O atributo ThfMenuPanelItem.icon não pode ser vazio.');
        }
    };
    /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    ThfMenuPanelBaseComponent.prototype.validateMenus = /**
     * @private
     * @param {?} menus
     * @return {?}
     */
    function (menus) {
        var _this = this;
        menus.forEach((/**
         * @param {?} menu
         * @return {?}
         */
        function (menu) { return _this.validateMenu(menu); }));
    };
    ThfMenuPanelBaseComponent.propDecorators = {
        menus: [{ type: Input, args: ['t-menus',] }]
    };
    return ThfMenuPanelBaseComponent;
}());
export { ThfMenuPanelBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfMenuPanelBaseComponent.prototype._menus;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW1lbnUtcGFuZWwtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLW1lbnUtcGFuZWwvdGhmLW1lbnUtcGFuZWwtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEMsT0FBTyxFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDbEMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7Ozs7Ozs7O0FBY2xEO0lBQUE7SUFtREEsQ0FBQztJQTlDQyxzQkFBc0IsNENBQUs7Ozs7UUFPM0I7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDckIsQ0FBQztRQVZELDZIQUE2SDs7Ozs7O1FBQzdILFVBQTRCLEtBQThCO1lBQ3hELElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFFaEQsSUFBSSxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN6QyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsQyxDQUFDOzs7T0FBQTs7Ozs7O0lBTU8sMERBQXNCOzs7OztJQUE5QixVQUErQixLQUE4QjtRQUE3RCxpQkFFQztRQURDLEtBQUssQ0FBQyxPQUFPOzs7O1FBQUMsVUFBQSxRQUFRLElBQUksT0FBQSxLQUFJLENBQUMscUJBQXFCLENBQUMsbUJBQTJCLFFBQVEsRUFBQSxDQUFDLEVBQS9ELENBQStELEVBQUMsQ0FBQztJQUM3RixDQUFDOzs7Ozs7SUFFTyx5REFBcUI7Ozs7O0lBQTdCLFVBQThCLFFBQWtDO1FBQzlELFFBQVEsQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUNwQyxRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDN0MsQ0FBQzs7Ozs7O0lBRU8sK0NBQVc7Ozs7O0lBQW5CLFVBQW9CLFFBQTBCO1FBQzVDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFO1lBQ2xCLE9BQU8sUUFBUSxDQUFDO1NBQ2pCO1FBRUQsSUFBSSxjQUFjLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2pDLE9BQU8sY0FBYyxDQUFDO1NBQ3ZCO1FBRUQsT0FBTyxjQUFjLENBQUM7SUFDeEIsQ0FBQzs7Ozs7O0lBRU8sZ0RBQVk7Ozs7O0lBQXBCLFVBQXFCLFFBQTBCO1FBQzdDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFO1lBQ25CLE1BQU0sSUFBSSxLQUFLLENBQUMsdURBQXVELENBQUMsQ0FBQztTQUMxRTtRQUVELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFO1lBQ2xCLE1BQU0sSUFBSSxLQUFLLENBQUMsc0RBQXNELENBQUMsQ0FBQztTQUN6RTtJQUNILENBQUM7Ozs7OztJQUVPLGlEQUFhOzs7OztJQUFyQixVQUFzQixLQUFLO1FBQTNCLGlCQUVDO1FBREMsS0FBSyxDQUFDLE9BQU87Ozs7UUFBQyxVQUFBLElBQUksSUFBSSxPQUFBLEtBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQXZCLENBQXVCLEVBQUMsQ0FBQztJQUNqRCxDQUFDOzt3QkE1Q0EsS0FBSyxTQUFDLFNBQVM7O0lBOENsQixnQ0FBQztDQUFBLEFBbkRELElBbURDO1NBbkRZLHlCQUF5Qjs7Ozs7O0lBRXBDLDJDQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgdjQgYXMgdXVpZCB9IGZyb20gJ3V1aWQnO1xuaW1wb3J0IHsgaXNFeHRlcm5hbExpbmsgfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgVGhmTWVudVBhbmVsSXRlbSB9IGZyb20gJy4vdGhmLW1lbnUtcGFuZWwtaXRlbS90aGYtbWVudS1wYW5lbC1pdGVtLmludGVyZmFjZSc7XG5pbXBvcnQgeyBUaGZNZW51UGFuZWxJdGVtSW50ZXJuYWwgfSBmcm9tICcuL3RoZi1tZW51LXBhbmVsLWl0ZW0vdGhmLW1lbnUtcGFuZWwtaXRlbS1pbnRlcm5hbC5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEVzdGUgw6kgdW0gY29tcG9uZW50ZSBkZSBtZW51IGxhdGVyYWwgY29tcG9zdG8gYXBlbmFzIHBvciDDrWNvbmVzIGUgY29tIHVtIG7DrXZlbCwgdXRpbGl6YWRvIHBhcmEgbmF2ZWdhw6fDo29cbiAqIGVtIHDDoWdpbmFzIGludGVybmFzLCBleHRlcm5hcyBkYSBhcGxpY2HDp8OjbyBvdSBhY2lvbmEgdW1hIGHDp8Ojby5cbiAqXG4gKiBPIGNvbXBvbmVudGUgYHRoZi1tZW51LXBhbmVsYCByZWNlYmUgdW1hIGxpc3RhIGRlIG9iamV0b3MgZG8gdGlwbyBgTWVudVBhbmVsSXRlbWAgY29tIGFzIGluZm9ybWHDp8O1ZXMgZG9zXG4gKiBpdGVucyBkZSBtZW51IGNvbW8gdGV4dG9zLCBsaW5rcyBwYXJhIHJlZGlyZWNpb25hbWVudG8sIGHDp8O1ZXMgZSDDrWNvbmVzLlxuICovXG5leHBvcnQgY2xhc3MgVGhmTWVudVBhbmVsQmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfbWVudXM7XG5cbiAgLyoqIExpc3RhIGRvcyBpdGVucyBkbyBgdGhmLW1lbnUtcGFuZWxgLiBTZSBvIHZhbG9yIGVzdGl2ZXIgaW5kZWZpbmlkbyBvdSBpbnbDoWxpZG8sIHNlcsOhIGluaWNpYWxpemFkbyBjb21vIHVtIGFycmF5IHZhemlvLiAqL1xuICBASW5wdXQoJ3QtbWVudXMnKSBzZXQgbWVudXMobWVudXM6IEFycmF5PFRoZk1lbnVQYW5lbEl0ZW0+KSB7XG4gICAgdGhpcy5fbWVudXMgPSBBcnJheS5pc0FycmF5KG1lbnVzKSA/IG1lbnVzIDogW107XG5cbiAgICB0aGlzLnNldE1lbnVFeHRyYVByb3BlcnRpZXModGhpcy5fbWVudXMpO1xuICAgIHRoaXMudmFsaWRhdGVNZW51cyh0aGlzLl9tZW51cyk7XG4gIH1cblxuICBnZXQgbWVudXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lbnVzO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRNZW51RXh0cmFQcm9wZXJ0aWVzKG1lbnVzOiBBcnJheTxUaGZNZW51UGFuZWxJdGVtPikge1xuICAgIG1lbnVzLmZvckVhY2gobWVudUl0ZW0gPT4gdGhpcy5zZXRNZW51SXRlbVByb3BlcnRpZXMoPFRoZk1lbnVQYW5lbEl0ZW1JbnRlcm5hbD4gbWVudUl0ZW0pKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0TWVudUl0ZW1Qcm9wZXJ0aWVzKG1lbnVJdGVtOiBUaGZNZW51UGFuZWxJdGVtSW50ZXJuYWwpIHtcbiAgICBtZW51SXRlbS5pZCA9IG1lbnVJdGVtLmlkIHx8IHV1aWQoKTtcbiAgICBtZW51SXRlbS50eXBlID0gdGhpcy5zZXRNZW51VHlwZShtZW51SXRlbSk7XG4gIH1cblxuICBwcml2YXRlIHNldE1lbnVUeXBlKG1lbnVJdGVtOiBUaGZNZW51UGFuZWxJdGVtKTogc3RyaW5nIHtcbiAgICBpZiAoIW1lbnVJdGVtLmxpbmspIHtcbiAgICAgIHJldHVybiAnbm9MaW5rJztcbiAgICB9XG5cbiAgICBpZiAoaXNFeHRlcm5hbExpbmsobWVudUl0ZW0ubGluaykpIHtcbiAgICAgIHJldHVybiAnZXh0ZXJuYWxMaW5rJztcbiAgICB9XG5cbiAgICByZXR1cm4gJ2ludGVybmFsTGluayc7XG4gIH1cblxuICBwcml2YXRlIHZhbGlkYXRlTWVudShtZW51SXRlbTogVGhmTWVudVBhbmVsSXRlbSkge1xuICAgIGlmICghbWVudUl0ZW0ubGFiZWwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTyBhdHJpYnV0byBUaGZNZW51UGFuZWxJdGVtLmxhYmVsIG7Do28gcG9kZSBzZXIgdmF6aW8uJyk7XG4gICAgfVxuXG4gICAgaWYgKCFtZW51SXRlbS5pY29uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ08gYXRyaWJ1dG8gVGhmTWVudVBhbmVsSXRlbS5pY29uIG7Do28gcG9kZSBzZXIgdmF6aW8uJyk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSB2YWxpZGF0ZU1lbnVzKG1lbnVzKTogdm9pZCB7XG4gICAgbWVudXMuZm9yRWFjaChtZW51ID0+IHRoaXMudmFsaWRhdGVNZW51KG1lbnUpKTtcbiAgfVxuXG59XG4iXX0=