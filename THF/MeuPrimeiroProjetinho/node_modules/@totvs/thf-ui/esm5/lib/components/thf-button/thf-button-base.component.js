/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Input, Output } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
/** @type {?} */
var THF_BUTTON_TYPES = ['default', 'primary', 'danger', 'link'];
/** @type {?} */
var THF_BUTTON_TYPE_DEFAULT = 'default';
/**
 * \@description
 *
 * O `thf-button` permite que o usuário execute ações predefinidas pelo desenvolvedor.
 *
 * Através dos tipos, é possível identificar a importância de cada ação, sendo ela primária (`primary`) ou até mesmo uma
 * ação irreversível (`danger`), como a exclusão de um registro.
 *
 * #### Boas práticas
 *
 * - Evite `labels` extensos que quebram o layout do `thf-button`, use `labels` diretos, curtos e intuitivos.
 * - Utilize apenas um `thf-button` configurado como `primary` por página.
 * - Para ações irreversíveis use sempre o tipo `danger`.
 */
var ThfButtonBaseComponent = /** @class */ (function () {
    function ThfButtonBaseComponent() {
        this._disabled = false;
        this._loading = false;
        this._small = false;
        this._type = 'default';
        /**
         * Ação que será executada quando o usuário clicar sobre o `thf-button`.
         */
        this.click = new EventEmitter();
    }
    Object.defineProperty(ThfButtonBaseComponent.prototype, "loading", {
        get: /**
         * @return {?}
         */
        function () {
            return this._loading;
        },
        /**
         * @optional
         *
         * @description
         *
         * Exibe um ícone de carregamento à esquerda do _label_ do botão.
         *
         * > Quando esta propriedade estiver habilitada, desabilitará o botão.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Exibe um ícone de carregamento à esquerda do _label_ do botão.
         *
         * > Quando esta propriedade estiver habilitada, desabilitará o botão.
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._loading = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfButtonBaseComponent.prototype, "small", {
        get: /**
         * @return {?}
         */
        function () {
            return this._small;
        },
        /**
         * @optional
         *
         * @description
         *
         * Deixa o botão menor.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Deixa o botão menor.
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._small = (/** @type {?} */ (value)) === '' ? true : convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfButtonBaseComponent.prototype, "type", {
        get: /**
         * @return {?}
         */
        function () {
            return this._type;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define o estilo do `thf-button`.
         *
         * Valore válidos:
         *  - `default`: estilo padrão do `thf-button`.
         *  - `primary`: deixa o `thf-button` com destaque, deve ser usado para ações primárias.
         *  - `danger`: deve ser usado para ações que o usuário precisa ter cuidado ao executa-lá.
         *  - `link`: o `thf-button` recebe o estilo de um link.
         *
         * @default `default`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Define o estilo do `thf-button`.
         *
         * Valore válidos:
         *  - `default`: estilo padrão do `thf-button`.
         *  - `primary`: deixa o `thf-button` com destaque, deve ser usado para ações primárias.
         *  - `danger`: deve ser usado para ações que o usuário precisa ter cuidado ao executa-lá.
         *  - `link`: o `thf-button` recebe o estilo de um link.
         *
         * \@default `default`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._type = THF_BUTTON_TYPES.includes(value) ? value : THF_BUTTON_TYPE_DEFAULT;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfButtonBaseComponent.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        /**
         * @optional
         *
         * @description
         *
         * Desabilita o `thf-button` e não permite que o usuário interaja com o mesmo.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Desabilita o `thf-button` e não permite que o usuário interaja com o mesmo.
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._disabled = (/** @type {?} */ (value)) === '' ? true : convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    ThfButtonBaseComponent.propDecorators = {
        label: [{ type: Input, args: ['t-label',] }],
        loading: [{ type: Input, args: ['t-loading',] }],
        icon: [{ type: Input, args: ['t-icon',] }],
        small: [{ type: Input, args: ['t-small',] }],
        type: [{ type: Input, args: ['t-type',] }],
        disabled: [{ type: Input, args: ['t-disabled',] }],
        click: [{ type: Output, args: ['t-click',] }]
    };
    return ThfButtonBaseComponent;
}());
export { ThfButtonBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfButtonBaseComponent.prototype._disabled;
    /**
     * @type {?}
     * @private
     */
    ThfButtonBaseComponent.prototype._loading;
    /**
     * @type {?}
     * @private
     */
    ThfButtonBaseComponent.prototype._small;
    /**
     * @type {?}
     * @private
     */
    ThfButtonBaseComponent.prototype._type;
    /**
     * \@optional
     *
     * \@description
     *
     * Label do botão.
     * @type {?}
     */
    ThfButtonBaseComponent.prototype.label;
    /**
     * Ícone exibido ao lado esquerdo do label do botão.
     *
     * É possível usar qualquer uma dos ícones da [Biblioteca de ícones](/guides/icons).
     * @type {?}
     */
    ThfButtonBaseComponent.prototype.icon;
    /**
     * Ação que será executada quando o usuário clicar sobre o `thf-button`.
     * @type {?}
     */
    ThfButtonBaseComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWJ1dHRvbi1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtYnV0dG9uL3RoZi1idXR0b24tYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU1RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7SUFFOUMsZ0JBQWdCLEdBQUcsQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUM7O0lBQzNELHVCQUF1QixHQUFHLFNBQVM7Ozs7Ozs7Ozs7Ozs7OztBQWdCekM7SUFBQTtRQUVVLGNBQVMsR0FBYSxLQUFLLENBQUM7UUFDNUIsYUFBUSxHQUFhLEtBQUssQ0FBQztRQUMzQixXQUFNLEdBQWEsS0FBSyxDQUFDO1FBQ3pCLFVBQUssR0FBWSxTQUFTLENBQUM7Ozs7UUE0RmhCLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO0lBRXRELENBQUM7SUF4RUMsc0JBQXdCLDJDQUFPOzs7O1FBSS9CO1lBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3ZCLENBQUM7UUFqQkQ7Ozs7Ozs7Ozs7V0FVRzs7Ozs7Ozs7Ozs7Ozs7UUFDSCxVQUFnQyxLQUFjO1lBQzVDLElBQUksQ0FBQyxRQUFRLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUMsQ0FBQzs7O09BQUE7SUFzQkQsc0JBQXNCLHlDQUFLOzs7O1FBRzNCO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3JCLENBQUM7UUFkRDs7Ozs7Ozs7V0FRRzs7Ozs7Ozs7Ozs7O1FBQ0gsVUFBNEIsS0FBYztZQUN4QyxJQUFJLENBQUMsTUFBTSxHQUFHLG1CQUFLLEtBQUssRUFBQSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuRSxDQUFDOzs7T0FBQTtJQW9CRCxzQkFBcUIsd0NBQUk7Ozs7UUFHekI7WUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDcEIsQ0FBQztRQXBCRDs7Ozs7Ozs7Ozs7Ozs7V0FjRzs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBQ0gsVUFBMEIsS0FBYTtZQUNyQyxJQUFJLENBQUMsS0FBSyxHQUFHLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQztRQUNsRixDQUFDOzs7T0FBQTtJQWNELHNCQUF5Qiw0Q0FBUTs7OztRQUdqQztZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUN4QixDQUFDO1FBZEQ7Ozs7Ozs7O1dBUUc7Ozs7Ozs7Ozs7OztRQUNILFVBQWtDLEtBQWM7WUFDOUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxtQkFBSyxLQUFLLEVBQUEsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdEUsQ0FBQzs7O09BQUE7O3dCQTdFQSxLQUFLLFNBQUMsU0FBUzswQkFhZixLQUFLLFNBQUMsV0FBVzt1QkFhakIsS0FBSyxTQUFDLFFBQVE7d0JBV2QsS0FBSyxTQUFDLFNBQVM7dUJBc0JmLEtBQUssU0FBQyxRQUFROzJCQWdCZCxLQUFLLFNBQUMsWUFBWTt3QkFRbEIsTUFBTSxTQUFDLFNBQVM7O0lBRW5CLDZCQUFDO0NBQUEsQUFuR0QsSUFtR0M7U0FuR1ksc0JBQXNCOzs7Ozs7SUFFakMsMkNBQW9DOzs7OztJQUNwQywwQ0FBbUM7Ozs7O0lBQ25DLHdDQUFpQzs7Ozs7SUFDakMsdUNBQW1DOzs7Ozs7Ozs7SUFTbkMsdUNBQWlDOzs7Ozs7O0lBMEJqQyxzQ0FBK0I7Ozs7O0lBeUQvQix1Q0FBb0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29udmVydFRvQm9vbGVhbiB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5jb25zdCBUSEZfQlVUVE9OX1RZUEVTID0gWydkZWZhdWx0JywgJ3ByaW1hcnknLCAnZGFuZ2VyJywgJ2xpbmsnXTtcbmNvbnN0IFRIRl9CVVRUT05fVFlQRV9ERUZBVUxUID0gJ2RlZmF1bHQnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE8gYHRoZi1idXR0b25gIHBlcm1pdGUgcXVlIG8gdXN1w6FyaW8gZXhlY3V0ZSBhw6fDtWVzIHByZWRlZmluaWRhcyBwZWxvIGRlc2Vudm9sdmVkb3IuXG4gKlxuICogQXRyYXbDqXMgZG9zIHRpcG9zLCDDqSBwb3Nzw612ZWwgaWRlbnRpZmljYXIgYSBpbXBvcnTDom5jaWEgZGUgY2FkYSBhw6fDo28sIHNlbmRvIGVsYSBwcmltw6FyaWEgKGBwcmltYXJ5YCkgb3UgYXTDqSBtZXNtbyB1bWFcbiAqIGHDp8OjbyBpcnJldmVyc8OtdmVsIChgZGFuZ2VyYCksIGNvbW8gYSBleGNsdXPDo28gZGUgdW0gcmVnaXN0cm8uXG4gKlxuICogIyMjIyBCb2FzIHByw6F0aWNhc1xuICpcbiAqIC0gRXZpdGUgYGxhYmVsc2AgZXh0ZW5zb3MgcXVlIHF1ZWJyYW0gbyBsYXlvdXQgZG8gYHRoZi1idXR0b25gLCB1c2UgYGxhYmVsc2AgZGlyZXRvcywgY3VydG9zIGUgaW50dWl0aXZvcy5cbiAqIC0gVXRpbGl6ZSBhcGVuYXMgdW0gYHRoZi1idXR0b25gIGNvbmZpZ3VyYWRvIGNvbW8gYHByaW1hcnlgIHBvciBww6FnaW5hLlxuICogLSBQYXJhIGHDp8O1ZXMgaXJyZXZlcnPDrXZlaXMgdXNlIHNlbXByZSBvIHRpcG8gYGRhbmdlcmAuXG4gKi9cbmV4cG9ydCBjbGFzcyBUaGZCdXR0b25CYXNlQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9kaXNhYmxlZD86IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfbG9hZGluZz86IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfc21hbGw/OiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX3R5cGU/OiBzdHJpbmcgPSAnZGVmYXVsdCc7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogTGFiZWwgZG8gYm90w6NvLlxuICAgKi9cbiAgQElucHV0KCd0LWxhYmVsJykgbGFiZWw/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRXhpYmUgdW0gw61jb25lIGRlIGNhcnJlZ2FtZW50byDDoCBlc3F1ZXJkYSBkbyBfbGFiZWxfIGRvIGJvdMOjby5cbiAgICpcbiAgICogPiBRdWFuZG8gZXN0YSBwcm9wcmllZGFkZSBlc3RpdmVyIGhhYmlsaXRhZGEsIGRlc2FiaWxpdGFyw6EgbyBib3TDo28uXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgndC1sb2FkaW5nJykgc2V0IGxvYWRpbmcodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9sb2FkaW5nID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgbG9hZGluZygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fbG9hZGluZztcbiAgfVxuXG4gIC8qKlxuICAgKiDDjWNvbmUgZXhpYmlkbyBhbyBsYWRvIGVzcXVlcmRvIGRvIGxhYmVsIGRvIGJvdMOjby5cbiAgICpcbiAgICogw4kgcG9zc8OtdmVsIHVzYXIgcXVhbHF1ZXIgdW1hIGRvcyDDrWNvbmVzIGRhIFtCaWJsaW90ZWNhIGRlIMOtY29uZXNdKC9ndWlkZXMvaWNvbnMpLlxuICAgKi9cbiAgQElucHV0KCd0LWljb24nKSBpY29uPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlaXhhIG8gYm90w6NvIG1lbm9yLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3Qtc21hbGwnKSBzZXQgc21hbGwodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9zbWFsbCA9IDxhbnk+dmFsdWUgPT09ICcnID8gdHJ1ZSA6IGNvbnZlcnRUb0Jvb2xlYW4odmFsdWUpO1xuICB9XG4gIGdldCBzbWFsbCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fc21hbGw7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZWZpbmUgbyBlc3RpbG8gZG8gYHRoZi1idXR0b25gLlxuICAgKlxuICAgKiBWYWxvcmUgdsOhbGlkb3M6XG4gICAqICAtIGBkZWZhdWx0YDogZXN0aWxvIHBhZHLDo28gZG8gYHRoZi1idXR0b25gLlxuICAgKiAgLSBgcHJpbWFyeWA6IGRlaXhhIG8gYHRoZi1idXR0b25gIGNvbSBkZXN0YXF1ZSwgZGV2ZSBzZXIgdXNhZG8gcGFyYSBhw6fDtWVzIHByaW3DoXJpYXMuXG4gICAqICAtIGBkYW5nZXJgOiBkZXZlIHNlciB1c2FkbyBwYXJhIGHDp8O1ZXMgcXVlIG8gdXN1w6FyaW8gcHJlY2lzYSB0ZXIgY3VpZGFkbyBhbyBleGVjdXRhLWzDoS5cbiAgICogIC0gYGxpbmtgOiBvIGB0aGYtYnV0dG9uYCByZWNlYmUgbyBlc3RpbG8gZGUgdW0gbGluay5cbiAgICpcbiAgICogQGRlZmF1bHQgYGRlZmF1bHRgXG4gICAqL1xuICBASW5wdXQoJ3QtdHlwZScpIHNldCB0eXBlKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl90eXBlID0gVEhGX0JVVFRPTl9UWVBFUy5pbmNsdWRlcyh2YWx1ZSkgPyB2YWx1ZSA6IFRIRl9CVVRUT05fVFlQRV9ERUZBVUxUO1xuICB9XG4gIGdldCB0eXBlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX3R5cGU7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZXNhYmlsaXRhIG8gYHRoZi1idXR0b25gIGUgbsOjbyBwZXJtaXRlIHF1ZSBvIHVzdcOhcmlvIGludGVyYWphIGNvbSBvIG1lc21vLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3QtZGlzYWJsZWQnKSBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9kaXNhYmxlZCA9IDxhbnk+dmFsdWUgPT09ICcnID8gdHJ1ZSA6IGNvbnZlcnRUb0Jvb2xlYW4odmFsdWUpO1xuICB9XG4gIGdldCBkaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fZGlzYWJsZWQ7XG4gIH1cblxuICAvKiogQcOnw6NvIHF1ZSBzZXLDoSBleGVjdXRhZGEgcXVhbmRvIG8gdXN1w6FyaW8gY2xpY2FyIHNvYnJlIG8gYHRoZi1idXR0b25gLiAqL1xuICBAT3V0cHV0KCd0LWNsaWNrJykgY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPG51bGw+KCk7XG5cbn1cbiJdfQ==