/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
import { callFunction, isExternalLink, openExternalLink } from '../../../../utils/util';
var ThfNavbarActionComponent = /** @class */ (function () {
    function ThfNavbarActionComponent(viewContainerRef, router) {
        this.router = router;
        this.parentRef = viewContainerRef['_view']['component'];
    }
    /**
     * @return {?}
     */
    ThfNavbarActionComponent.prototype.onActionClick = /**
     * @return {?}
     */
    function () {
        if (this.action) {
            return callFunction(this.action, this.parentRef, this.param || this);
        }
        if (this.link) {
            return this.openUrl(this.link);
        }
    };
    /**
     * @private
     * @param {?} url
     * @return {?}
     */
    ThfNavbarActionComponent.prototype.openUrl = /**
     * @private
     * @param {?} url
     * @return {?}
     */
    function (url) {
        if (isExternalLink(url)) {
            return openExternalLink(url);
        }
        if (url) {
            return this.router.navigate([url]);
        }
    };
    ThfNavbarActionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-navbar-action',
                    template: "<div tabindex=\"0\"\n  class=\"thf-navbar-action-content thf-clickable\"\n  (click)=\"onActionClick()\">\n\n  <span\n  class=\"thf-icon {{ icon }}\"\n  [t-tooltip]=\"tooltip\">\n  </span>\n\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    ThfNavbarActionComponent.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: Router }
    ]; };
    ThfNavbarActionComponent.propDecorators = {
        action: [{ type: Input, args: ['t-action',] }],
        icon: [{ type: Input, args: ['t-icon',] }],
        label: [{ type: Input, args: ['t-label',] }],
        link: [{ type: Input, args: ['t-link',] }],
        tooltip: [{ type: Input, args: ['t-tooltip-text',] }]
    };
    return ThfNavbarActionComponent;
}());
export { ThfNavbarActionComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfNavbarActionComponent.prototype.param;
    /**
     * @type {?}
     * @private
     */
    ThfNavbarActionComponent.prototype.parentRef;
    /** @type {?} */
    ThfNavbarActionComponent.prototype.action;
    /** @type {?} */
    ThfNavbarActionComponent.prototype.icon;
    /** @type {?} */
    ThfNavbarActionComponent.prototype.label;
    /** @type {?} */
    ThfNavbarActionComponent.prototype.link;
    /** @type {?} */
    ThfNavbarActionComponent.prototype.tooltip;
    /**
     * @type {?}
     * @private
     */
    ThfNavbarActionComponent.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW5hdmJhci1hY3Rpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1uYXZiYXIvdGhmLW5hdmJhci1hY3Rpb25zL3RoZi1uYXZiYXItYWN0aW9uL3RoZi1uYXZiYXItYWN0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRXpDLE9BQU8sRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFeEY7SUFtQkUsa0NBQVksZ0JBQWtDLEVBQVUsTUFBYztRQUFkLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDcEUsSUFBSSxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMxRCxDQUFDOzs7O0lBRUQsZ0RBQWE7OztJQUFiO1FBQ0UsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUM7U0FDdEU7UUFFRCxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDYixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2hDO0lBQ0gsQ0FBQzs7Ozs7O0lBRU8sMENBQU87Ozs7O0lBQWYsVUFBZ0IsR0FBVztRQUN6QixJQUFJLGNBQWMsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUN2QixPQUFPLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQzlCO1FBRUQsSUFBSSxHQUFHLEVBQUU7WUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNwQztJQUNILENBQUM7O2dCQXpDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsbU5BQWlEO2lCQUNsRDs7OztnQkFSMEIsZ0JBQWdCO2dCQUNsQyxNQUFNOzs7eUJBYVosS0FBSyxTQUFDLFVBQVU7dUJBRWhCLEtBQUssU0FBQyxRQUFRO3dCQUVkLEtBQUssU0FBQyxTQUFTO3VCQUVmLEtBQUssU0FBQyxRQUFROzBCQUVkLEtBQUssU0FBQyxnQkFBZ0I7O0lBMEJ6QiwrQkFBQztDQUFBLEFBM0NELElBMkNDO1NBdkNZLHdCQUF3Qjs7Ozs7O0lBRW5DLHlDQUFjOzs7OztJQUNkLDZDQUFrQjs7SUFFbEIsMENBQXFDOztJQUVyQyx3Q0FBOEI7O0lBRTlCLHlDQUFnQzs7SUFFaEMsd0NBQStCOztJQUUvQiwyQ0FBMEM7Ozs7O0lBRU0sMENBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuaW1wb3J0IHsgY2FsbEZ1bmN0aW9uLCBpc0V4dGVybmFsTGluaywgb3BlbkV4dGVybmFsTGluayB9IGZyb20gJy4uLy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtbmF2YmFyLWFjdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtbmF2YmFyLWFjdGlvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmTmF2YmFyQWN0aW9uQ29tcG9uZW50IHtcblxuICBwcml2YXRlIHBhcmFtO1xuICBwcml2YXRlIHBhcmVudFJlZjtcblxuICBASW5wdXQoJ3QtYWN0aW9uJykgYWN0aW9uPzogRnVuY3Rpb247XG5cbiAgQElucHV0KCd0LWljb24nKSBpY29uOiBzdHJpbmc7XG5cbiAgQElucHV0KCd0LWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICBASW5wdXQoJ3QtbGluaycpIGxpbms/OiBzdHJpbmc7XG5cbiAgQElucHV0KCd0LXRvb2x0aXAtdGV4dCcpIHRvb2x0aXA/OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3Iodmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZiwgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcikge1xuICAgIHRoaXMucGFyZW50UmVmID0gdmlld0NvbnRhaW5lclJlZlsnX3ZpZXcnXVsnY29tcG9uZW50J107XG4gIH1cblxuICBvbkFjdGlvbkNsaWNrKCkge1xuICAgIGlmICh0aGlzLmFjdGlvbikge1xuICAgICAgcmV0dXJuIGNhbGxGdW5jdGlvbih0aGlzLmFjdGlvbiwgdGhpcy5wYXJlbnRSZWYsIHRoaXMucGFyYW0gfHwgdGhpcyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMubGluaykge1xuICAgICAgcmV0dXJuIHRoaXMub3BlblVybCh0aGlzLmxpbmspO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgb3BlblVybCh1cmw6IHN0cmluZykge1xuICAgIGlmIChpc0V4dGVybmFsTGluayh1cmwpKSB7XG4gICAgICByZXR1cm4gb3BlbkV4dGVybmFsTGluayh1cmwpO1xuICAgIH1cblxuICAgIGlmICh1cmwpIHtcbiAgICAgIHJldHVybiB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbdXJsXSk7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==