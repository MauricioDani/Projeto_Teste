/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Input, Output } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
/** @type {?} */
var THF_DISCLAIMER_TYPES = ['default', 'danger'];
/** @type {?} */
var THF_DISCLAIMER_DEFAULT_TYPE = 'default';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * O componente thf-disclaimer é responsável por representar tags.
 * Seu uso é recomendado em buscas e em campos onde é necessário representar objetos selecionados,
 * como por exemplo, no thf-multi-select.
 *
 */
var ThfDisclaimerBaseComponent = /** @class */ (function () {
    function ThfDisclaimerBaseComponent() {
        this._type = 'default';
        this._hideClose = false;
        this.showDisclaimer = true;
        /**
         * Evento disparado ao fechar o disclaimer.
         * Para este evento será passado como parâmetro um objeto com value, label e property.
         */
        this.closeAction = new EventEmitter();
    }
    Object.defineProperty(ThfDisclaimerBaseComponent.prototype, "hideClose", {
        get: /**
         * @return {?}
         */
        function () {
            return this._hideClose;
        },
        /**
         * @description
         *
         * Esta propriedade esconde o botão para fechamento do thf-disclaimer, ao utilizar esta propriedade
         * sem passar valor a mesma é setada como false, onde o botão de fechamento está visível.
         *
         * @default false
         */
        set: /**
         * \@description
         *
         * Esta propriedade esconde o botão para fechamento do thf-disclaimer, ao utilizar esta propriedade
         * sem passar valor a mesma é setada como false, onde o botão de fechamento está visível.
         *
         * \@default false
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._hideClose = (/** @type {?} */ (value)) === '' ? true : convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfDisclaimerBaseComponent.prototype, "type", {
        get: /**
         * @return {?}
         */
        function () {
            return this._type;
        },
        /**
         * @description
         *
         * Tipo do thf-disclaimer. Pode ser 'default' ou 'danger'.
         *
         * @default default
         * @optional
         */
        set: /**
         * \@description
         *
         * Tipo do thf-disclaimer. Pode ser 'default' ou 'danger'.
         *
         * \@default default
         * \@optional
         * @param {?} type
         * @return {?}
         */
        function (type) {
            this._type = THF_DISCLAIMER_TYPES.includes(type) ? type : THF_DISCLAIMER_DEFAULT_TYPE;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ThfDisclaimerBaseComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.showDisclaimer = false;
        this.closeAction.emit({ value: this.value, label: this.label, property: this.property });
    };
    /**
     * @return {?}
     */
    ThfDisclaimerBaseComponent.prototype.getLabel = /**
     * @return {?}
     */
    function () {
        return this.label ? this.label : this.value;
    };
    ThfDisclaimerBaseComponent.propDecorators = {
        label: [{ type: Input, args: ['t-label',] }],
        value: [{ type: Input, args: ['t-value',] }],
        property: [{ type: Input, args: ['t-property',] }],
        hideClose: [{ type: Input, args: ['t-hide-close',] }],
        closeAction: [{ type: Output, args: ['t-close-action',] }],
        type: [{ type: Input, args: ['t-type',] }]
    };
    return ThfDisclaimerBaseComponent;
}());
export { ThfDisclaimerBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfDisclaimerBaseComponent.prototype._type;
    /**
     * @type {?}
     * @private
     */
    ThfDisclaimerBaseComponent.prototype._hideClose;
    /** @type {?} */
    ThfDisclaimerBaseComponent.prototype.showDisclaimer;
    /**
     * Label que aparecerá dentro do thf-disclaimer.
     * Quando não for definido um label será apresentada a propriedade t-value.
     * @type {?}
     */
    ThfDisclaimerBaseComponent.prototype.label;
    /**
     * Valor do thf-disclaimer.
     * @type {?}
     */
    ThfDisclaimerBaseComponent.prototype.value;
    /**
     * Nome da propriedade vinculada à este thf-disclaimer.
     * @type {?}
     */
    ThfDisclaimerBaseComponent.prototype.property;
    /**
     * Evento disparado ao fechar o disclaimer.
     * Para este evento será passado como parâmetro um objeto com value, label e property.
     * @type {?}
     */
    ThfDisclaimerBaseComponent.prototype.closeAction;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWRpc2NsYWltZXItYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWRpc2NsYWltZXIvdGhmLWRpc2NsYWltZXItYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU1RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7SUFFOUMsb0JBQW9CLEdBQUcsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDOztJQUM1QywyQkFBMkIsR0FBRyxTQUFTOzs7Ozs7Ozs7OztBQVk3QztJQUFBO1FBQ1UsVUFBSyxHQUFXLFNBQVMsQ0FBQztRQUMxQixlQUFVLEdBQWEsS0FBSyxDQUFDO1FBRXJDLG1CQUFjLEdBQUcsSUFBSSxDQUFDOzs7OztRQWtDSSxnQkFBVyxHQUF1QixJQUFJLFlBQVksRUFBTyxDQUFDO0lBMEJ0RixDQUFDO0lBdENDLHNCQUEyQixpREFBUzs7OztRQUlwQztZQUNFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUN6QixDQUFDO1FBZEQ7Ozs7Ozs7V0FPRzs7Ozs7Ozs7Ozs7UUFDSCxVQUFxQyxLQUFjO1lBQ2pELElBQUksQ0FBQyxVQUFVLEdBQUcsbUJBQUssS0FBSyxFQUFBLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZFLENBQUM7OztPQUFBO0lBb0JELHNCQUFxQiw0Q0FBSTs7OztRQUl6QjtZQUNFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNwQixDQUFDO1FBZEQ7Ozs7Ozs7V0FPRzs7Ozs7Ozs7Ozs7UUFDSCxVQUEwQixJQUFZO1lBQ3BDLElBQUksQ0FBQyxLQUFLLEdBQUcsb0JBQW9CLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLDJCQUEyQixDQUFDO1FBQ3hGLENBQUM7OztPQUFBOzs7O0lBTUQsMENBQUs7OztJQUFMO1FBQ0UsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7UUFDNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUM7SUFDekYsQ0FBQzs7OztJQUVELDZDQUFROzs7SUFBUjtRQUNFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUM5QyxDQUFDOzt3QkFyREEsS0FBSyxTQUFDLFNBQVM7d0JBR2YsS0FBSyxTQUFDLFNBQVM7MkJBR2YsS0FBSyxTQUFDLFlBQVk7NEJBVWxCLEtBQUssU0FBQyxjQUFjOzhCQVlwQixNQUFNLFNBQUMsZ0JBQWdCO3VCQVV2QixLQUFLLFNBQUMsUUFBUTs7SUFnQmpCLGlDQUFDO0NBQUEsQUFoRUQsSUFnRUM7U0FoRVksMEJBQTBCOzs7Ozs7SUFDckMsMkNBQWtDOzs7OztJQUNsQyxnREFBcUM7O0lBRXJDLG9EQUFzQjs7Ozs7O0lBTXRCLDJDQUFpQzs7Ozs7SUFHakMsMkNBQWdDOzs7OztJQUdoQyw4Q0FBdUM7Ozs7OztJQXNCdkMsaURBQW9GIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGNvbnZlcnRUb0Jvb2xlYW4gfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcblxuY29uc3QgVEhGX0RJU0NMQUlNRVJfVFlQRVMgPSBbJ2RlZmF1bHQnLCAnZGFuZ2VyJ107XG5jb25zdCBUSEZfRElTQ0xBSU1FUl9ERUZBVUxUX1RZUEUgPSAnZGVmYXVsdCc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIHRoZi1kaXNjbGFpbWVyIMOpIHJlc3BvbnPDoXZlbCBwb3IgcmVwcmVzZW50YXIgdGFncy5cbiAqIFNldSB1c28gw6kgcmVjb21lbmRhZG8gZW0gYnVzY2FzIGUgZW0gY2FtcG9zIG9uZGUgw6kgbmVjZXNzw6FyaW8gcmVwcmVzZW50YXIgb2JqZXRvcyBzZWxlY2lvbmFkb3MsXG4gKiBjb21vIHBvciBleGVtcGxvLCBubyB0aGYtbXVsdGktc2VsZWN0LlxuICpcbiAqL1xuZXhwb3J0IGNsYXNzIFRoZkRpc2NsYWltZXJCYXNlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfdHlwZTogc3RyaW5nID0gJ2RlZmF1bHQnO1xuICBwcml2YXRlIF9oaWRlQ2xvc2U/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgc2hvd0Rpc2NsYWltZXIgPSB0cnVlO1xuXG4gIC8qKlxuICAgKiBMYWJlbCBxdWUgYXBhcmVjZXLDoSBkZW50cm8gZG8gdGhmLWRpc2NsYWltZXIuXG4gICAqIFF1YW5kbyBuw6NvIGZvciBkZWZpbmlkbyB1bSBsYWJlbCBzZXLDoSBhcHJlc2VudGFkYSBhIHByb3ByaWVkYWRlIHQtdmFsdWUuXG4gICAqL1xuICBASW5wdXQoJ3QtbGFiZWwnKSBsYWJlbD86IHN0cmluZztcblxuICAvKiogVmFsb3IgZG8gdGhmLWRpc2NsYWltZXIuICovXG4gIEBJbnB1dCgndC12YWx1ZScpIHZhbHVlOiBzdHJpbmc7XG5cbiAgLyoqIE5vbWUgZGEgcHJvcHJpZWRhZGUgdmluY3VsYWRhIMOgIGVzdGUgdGhmLWRpc2NsYWltZXIuICovXG4gIEBJbnB1dCgndC1wcm9wZXJ0eScpIHByb3BlcnR5Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRXN0YSBwcm9wcmllZGFkZSBlc2NvbmRlIG8gYm90w6NvIHBhcmEgZmVjaGFtZW50byBkbyB0aGYtZGlzY2xhaW1lciwgYW8gdXRpbGl6YXIgZXN0YSBwcm9wcmllZGFkZVxuICAgKiBzZW0gcGFzc2FyIHZhbG9yIGEgbWVzbWEgw6kgc2V0YWRhIGNvbW8gZmFsc2UsIG9uZGUgbyBib3TDo28gZGUgZmVjaGFtZW50byBlc3TDoSB2aXPDrXZlbC5cbiAgICpcbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIEBJbnB1dCgndC1oaWRlLWNsb3NlJykgc2V0IGhpZGVDbG9zZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2hpZGVDbG9zZSA9IDxhbnk+dmFsdWUgPT09ICcnID8gdHJ1ZSA6IGNvbnZlcnRUb0Jvb2xlYW4odmFsdWUpO1xuICB9XG5cbiAgZ2V0IGhpZGVDbG9zZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5faGlkZUNsb3NlO1xuICB9XG5cbiAgLyoqXG4gICAqIEV2ZW50byBkaXNwYXJhZG8gYW8gZmVjaGFyIG8gZGlzY2xhaW1lci5cbiAgICogUGFyYSBlc3RlIGV2ZW50byBzZXLDoSBwYXNzYWRvIGNvbW8gcGFyw6JtZXRybyB1bSBvYmpldG8gY29tIHZhbHVlLCBsYWJlbCBlIHByb3BlcnR5LlxuICAgKi9cbiAgQE91dHB1dCgndC1jbG9zZS1hY3Rpb24nKSBjbG9zZUFjdGlvbj86IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBUaXBvIGRvIHRoZi1kaXNjbGFpbWVyLiBQb2RlIHNlciAnZGVmYXVsdCcgb3UgJ2RhbmdlcicuXG4gICAqXG4gICAqIEBkZWZhdWx0IGRlZmF1bHRcbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICBASW5wdXQoJ3QtdHlwZScpIHNldCB0eXBlKHR5cGU6IHN0cmluZykge1xuICAgIHRoaXMuX3R5cGUgPSBUSEZfRElTQ0xBSU1FUl9UWVBFUy5pbmNsdWRlcyh0eXBlKSA/IHR5cGUgOiBUSEZfRElTQ0xBSU1FUl9ERUZBVUxUX1RZUEU7XG4gIH1cblxuICBnZXQgdHlwZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl90eXBlO1xuICB9XG5cbiAgY2xvc2UoKTogdm9pZCB7XG4gICAgdGhpcy5zaG93RGlzY2xhaW1lciA9IGZhbHNlO1xuICAgIHRoaXMuY2xvc2VBY3Rpb24uZW1pdCh7dmFsdWU6IHRoaXMudmFsdWUsIGxhYmVsOiB0aGlzLmxhYmVsLCBwcm9wZXJ0eTogdGhpcy5wcm9wZXJ0eX0pO1xuICB9XG5cbiAgZ2V0TGFiZWwoKSB7XG4gICAgcmV0dXJuIHRoaXMubGFiZWwgPyB0aGlzLmxhYmVsIDogdGhpcy52YWx1ZTtcbiAgfVxufVxuIl19