/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild } from '@angular/core';
import { v4 as uuid } from 'uuid';
import { ThfModalBaseComponent } from './thf-modal-base.component';
import { ThfModalService } from './thf-modal-service';
/**
 * \@docsExtends ThfModalBaseComponent
 *
 * \@example
 *
 * <example name="thf-modal-basic" title="Totvs Modal Basic">
 *  <file name="sample-thf-modal-basic/sample-thf-modal-basic.component.html"> </file>
 *  <file name="sample-thf-modal-basic/sample-thf-modal-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-modal-labs" title="Totvs Modal Labs">
 *  <file name="sample-thf-modal-labs/sample-thf-modal-labs.component.html"> </file>
 *  <file name="sample-thf-modal-labs/sample-thf-modal-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-modal-fruits-salad" title="Totvs Modal - Fruits Salad">
 *  <file name="sample-thf-modal-fruits-salad/sample-thf-modal-fruits-salad.component.html"> </file>
 *  <file name="sample-thf-modal-fruits-salad/sample-thf-modal-fruits-salad.component.ts"> </file>
 * </example>
 */
var ThfModalComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfModalComponent, _super);
    function ThfModalComponent(thfModalService, renderer, changeDetector) {
        var _this = _super.call(this) || this;
        _this.thfModalService = thfModalService;
        _this.renderer = renderer;
        _this.changeDetector = changeDetector;
        _this.focusableElements = 'input, select, textarea, button:not([disabled]), a';
        _this.id = uuid();
        return _this;
    }
    /**
     * @param {?=} xClosed
     * @return {?}
     */
    ThfModalComponent.prototype.close = /**
     * @param {?=} xClosed
     * @return {?}
     */
    function (xClosed) {
        if (xClosed === void 0) { xClosed = false; }
        this.thfModalService.modalActive = undefined;
        _super.prototype.close.call(this, xClosed);
        this.removeEventListeners();
        if (this.sourceElement) {
            this.sourceElement.focus();
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ThfModalComponent.prototype.closeModalOnEscapeKey = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this.hideClose) {
            event.preventDefault();
            event.stopPropagation();
            this.close();
        }
    };
    /**
     * @return {?}
     */
    ThfModalComponent.prototype.getPrimaryActionButtonType = /**
     * @return {?}
     */
    function () {
        return this.primaryAction.danger ? 'danger' : 'primary';
    };
    /**
     * @return {?}
     */
    ThfModalComponent.prototype.getSecondaryActionButtonType = /**
     * @return {?}
     */
    function () {
        return this.secondaryAction && this.secondaryAction.danger && !this.primaryAction.danger ? 'danger' : 'default';
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ThfModalComponent.prototype.onClickOut = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.clickOut && !this.modalContent.nativeElement.contains(event.target)) {
            this.close();
        }
    };
    /**
     * @return {?}
     */
    ThfModalComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        this.sourceElement = document.activeElement;
        _super.prototype.open.call(this);
        this.handleFocus();
    };
    /**
     * @private
     * @return {?}
     */
    ThfModalComponent.prototype.handleFocus = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.thfModalService.modalActive = this.id;
        setTimeout((/**
         * @return {?}
         */
        function () {
            if (_this.modalContent) {
                _this.initFocus();
                document.addEventListener('focus', _this.focusFunction, true);
            }
        }));
    };
    /**
     * @private
     * @return {?}
     */
    ThfModalComponent.prototype.initFocus = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.focusFunction = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            _this.thfModalService.modalActive = _this.thfModalService.modalActive || _this.id;
            /** @type {?} */
            var modalElement = _this.modalContent.nativeElement;
            if (!modalElement.contains(event.target) && _this.thfModalService.modalActive === _this.id) {
                event.stopPropagation();
                _this.firstElement.focus();
            }
        });
        this.setFirstElement();
        if (this.hideClose) {
            this.firstElement.focus();
        }
        else {
            /** @type {?} */
            var firstFieldElement = this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1] ||
                this.modalContent.nativeElement;
            firstFieldElement.focus();
        }
    };
    /**
     * @private
     * @return {?}
     */
    ThfModalComponent.prototype.removeEventListeners = /**
     * @private
     * @return {?}
     */
    function () {
        document.removeEventListener('focus', this.focusFunction, true);
    };
    /**
     * @private
     * @return {?}
     */
    ThfModalComponent.prototype.setFirstElement = /**
     * @private
     * @return {?}
     */
    function () {
        this.firstElement = this.modalContent.nativeElement.querySelector(this.focusableElements) || this.modalContent.nativeElement;
    };
    ThfModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-modal',
                    template: "<div *ngIf=\"!isHidden\"\n  class=\"thf-modal\"\n  tabindex=\"0\"\n  (keydown.esc)=\"closeModalOnEscapeKey($event)\">\n\n  <div class=\"thf-modal-overlay\">\n    <div class=\"thf-modal-container thf-pb-2 thf-pt-2\" (click)=\"onClickOut($event)\">\n\n      <div class=\"thf-modal-vertical-align\">\n        <div #modalContent\n          class=\"thf-modal-content thf-modal-{{ size }}\"\n          tabindex=\"-1\">\n\n          <div class=\"thf-modal-header\">\n            <div class=\"thf-modal-title thf-text-ellipsis\">\n              {{ title }}\n            </div>\n\n            <a *ngIf=\"!hideClose\"\n              class=\"thf-modal-header-close-button\"\n              tabindex=\"0\"\n              (click)=\"close(true)\">\n              <span class=\"thf-icon thf-icon-close\"></span>\n            </a>\n          </div>\n\n          <div class=\"thf-modal-body\">\n            <ng-content></ng-content>\n          </div>\n\n          <div class=\"thf-modal-footer\">\n            <thf-button *ngIf=\"secondaryAction\"\n              [t-disabled]=\"secondaryAction.disabled\"\n              [t-label]=\"secondaryAction.label\"\n              [t-loading]=\"secondaryAction.loading\"\n              [t-type]=\"getSecondaryActionButtonType()\"\n              (t-click)=\"secondaryAction.action()\">\n            </thf-button>\n\n            <thf-button\n              class=\"thf-button-modal-first-action\"\n              [t-disabled]=\"primaryAction.disabled\"\n              [t-label]=\"primaryAction.label\"\n              [t-loading]=\"primaryAction.loading\"\n              [t-type]=\"getPrimaryActionButtonType()\"\n              (t-click)=\"primaryAction.action()\">\n            </thf-button>\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n"
                }] }
    ];
    /** @nocollapse */
    ThfModalComponent.ctorParameters = function () { return [
        { type: ThfModalService },
        { type: Renderer2 },
        { type: ChangeDetectorRef }
    ]; };
    ThfModalComponent.propDecorators = {
        modalContent: [{ type: ViewChild, args: ['modalContent', { read: ElementRef, static: false },] }]
    };
    return ThfModalComponent;
}(ThfModalBaseComponent));
export { ThfModalComponent };
if (false) {
    /** @type {?} */
    ThfModalComponent.prototype.modalContent;
    /**
     * @type {?}
     * @private
     */
    ThfModalComponent.prototype.firstElement;
    /**
     * @type {?}
     * @private
     */
    ThfModalComponent.prototype.focusFunction;
    /**
     * @type {?}
     * @private
     */
    ThfModalComponent.prototype.focusableElements;
    /**
     * @type {?}
     * @private
     */
    ThfModalComponent.prototype.id;
    /**
     * @type {?}
     * @private
     */
    ThfModalComponent.prototype.sourceElement;
    /** @type {?} */
    ThfModalComponent.prototype.onResizeListener;
    /**
     * @type {?}
     * @private
     */
    ThfModalComponent.prototype.thfModalService;
    /**
     * @type {?}
     * @private
     */
    ThfModalComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    ThfModalComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,