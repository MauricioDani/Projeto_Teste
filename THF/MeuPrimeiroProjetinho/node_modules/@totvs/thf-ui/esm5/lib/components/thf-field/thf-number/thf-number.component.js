/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';
import { minFailed, maxFailed } from '../validators';
import { ThfNumberBaseComponent } from './thf-number-base.component';
/**
 * \@docsExtends ThfInputBaseComponent
 *
 * \@description
 *
 * thf-number é um input específico para receber apenas números.
 * É possível configurar um valor mínimo, máximo e um step com t-min, t-max e t-step,
 * respectivamente.
 *
 * \@example
 *
 * <example name="thf-number-basic" title="Totvs Number Basic">
 *  <file name="sample-thf-number-basic/sample-thf-number-basic.component.html"> </file>
 *  <file name="sample-thf-number-basic/sample-thf-number-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-number-labs" title="Totvs Number Labs">
 *  <file name="sample-thf-number-labs/sample-thf-number-labs.component.html"> </file>
 *  <file name="sample-thf-number-labs/sample-thf-number-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-number-calculate" title="Totvs Number - Calculate">
 *  <file name="sample-thf-number-calculate/sample-thf-number-calculate.component.html"> </file>
 *  <file name="sample-thf-number-calculate/sample-thf-number-calculate.component.ts"> </file>
 * </example>
 */
var ThfNumberComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfNumberComponent, _super);
    function ThfNumberComponent(el) {
        var _this = _super.call(this, el) || this;
        /**
         * \@optional
         *
         * \@description
         *
         * Intervalo.
         *
         * \@default 1
         */
        _this.step = '1';
        return _this;
    }
    Object.defineProperty(ThfNumberComponent.prototype, "setMin", {
        set: /**
         * @param {?} min
         * @return {?}
         */
        function (min) {
            /** @type {?} */
            var parsedInt = parseInt(min, 10);
            this.min = !isNaN(parsedInt) ? parsedInt : undefined;
            this.validateModel();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfNumberComponent.prototype, "setMax", {
        set: /**
         * @param {?} max
         * @return {?}
         */
        function (max) {
            /** @type {?} */
            var parsedInt = parseInt(max, 10);
            this.max = !isNaN(parsedInt) ? parsedInt : undefined;
            this.validateModel();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} abstractControl
     * @return {?}
     */
    ThfNumberComponent.prototype.extraValidation = /**
     * @param {?} abstractControl
     * @return {?}
     */
    function (abstractControl) {
        if (minFailed(this.min, abstractControl.value)) {
            return { min: {
                    valid: false,
                } };
        }
        if (maxFailed(this.max, abstractControl.value)) {
            return { max: {
                    valid: false,
                } };
        }
        return null;
    };
    ThfNumberComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-number',
                    template: "<thf-field-container\n  [t-help]=\"help\"\n  [t-label]=\"label\"\n  [t-optional]=\"!required && optional\">\n\n  <div class=\"thf-field-container-content\">\n    <input #inp\n      class=\"thf-input\"\n      type=\"number\"\n      [attr.max]=\"max\"\n      [attr.min]=\"min\"\n      [attr.name]=\"name\"\n      [attr.step]=\"step\"\n      [class.thf-input-icon-right]=\"clean\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [tabindex]=\"disabled ? -1 : 0\"\n      (blur)=\"eventOnBlur($event)\"\n      (focus)=\"eventOnFocus($event)\"\n      (input)=\"eventOnInput($event)\">\n\n    <div class=\"thf-field-icon-container-right\">\n      <thf-clean [t-default-value]=\"null\"\n        [t-element-ref]=\"inputEl\"\n        (t-change-event)=\"clear($event)\">\n      </thf-clean>\n    </div>\n  </div>\n\n  <thf-field-container-bottom\n    [t-error-pattern]=\"getErrorPattern()\">\n  </thf-field-container-bottom>\n\n</thf-field-container>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfNumberComponent; })),
                            multi: true,
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfNumberComponent; })),
                            multi: true,
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    ThfNumberComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ThfNumberComponent.propDecorators = {
        setMin: [{ type: Input, args: ['t-min',] }],
        setMax: [{ type: Input, args: ['t-max',] }],
        step: [{ type: Input, args: ['t-step',] }]
    };
    return ThfNumberComponent;
}(ThfNumberBaseComponent));
export { ThfNumberComponent };
if (false) {
    /**
     * Valor mínimo.
     * @type {?}
     */
    ThfNumberComponent.prototype.min;
    /**
     * Valor máximo.
     * @type {?}
     */
    ThfNumberComponent.prototype.max;
    /**
     * \@optional
     *
     * \@description
     *
     * Intervalo.
     *
     * \@default 1
     * @type {?}
     */
    ThfNumberComponent.prototype.step;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW51bWJlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWZpZWxkL3RoZi1udW1iZXIvdGhmLW51bWJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pFLE9BQU8sRUFBbUIsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkYsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTRCckU7SUFld0MsOENBQXNCO0lBNkI1RCw0QkFBWSxFQUFjO1FBQTFCLFlBQ0Usa0JBQU0sRUFBRSxDQUFDLFNBQ1Y7Ozs7Ozs7Ozs7UUFKZ0IsVUFBSSxHQUFZLEdBQUcsQ0FBQzs7SUFJckMsQ0FBQztJQTNCRCxzQkFBb0Isc0NBQU07Ozs7O1FBQTFCLFVBQTJCLEdBQVc7O2dCQUM5QixTQUFTLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUM7WUFDbkMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7WUFDckQsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7OztPQUFBO0lBSUQsc0JBQW9CLHNDQUFNOzs7OztRQUExQixVQUEyQixHQUFXOztnQkFDOUIsU0FBUyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO1lBQ25DLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1lBQ3JELElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN2QixDQUFDOzs7T0FBQTs7Ozs7SUFpQkQsNENBQWU7Ozs7SUFBZixVQUFnQixlQUFnQztRQUU5QyxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLGVBQWUsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUM5QyxPQUFPLEVBQUUsR0FBRyxFQUFFO29CQUNaLEtBQUssRUFBRSxLQUFLO2lCQUNiLEVBQUMsQ0FBQztTQUNKO1FBRUQsSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDOUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtvQkFDWixLQUFLLEVBQUUsS0FBSztpQkFDYixFQUFDLENBQUM7U0FDSjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7Z0JBL0RGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsWUFBWTtvQkFDdEIsaWhDQUEwQztvQkFDMUMsU0FBUyxFQUFFO3dCQUNYOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLGtCQUFrQixFQUFsQixDQUFrQixFQUFDOzRCQUNqRCxLQUFLLEVBQUUsSUFBSTt5QkFDWjt3QkFDRDs0QkFDRSxPQUFPLEVBQUUsYUFBYTs0QkFDdEIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsa0JBQWtCLEVBQWxCLENBQWtCLEVBQUM7NEJBQ2pELEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUFDO2lCQUNIOzs7O2dCQTlDbUIsVUFBVTs7O3lCQW1EM0IsS0FBSyxTQUFDLE9BQU87eUJBUWIsS0FBSyxTQUFDLE9BQU87dUJBZWIsS0FBSyxTQUFDLFFBQVE7O0lBdUJqQix5QkFBQztDQUFBLEFBakVELENBZXdDLHNCQUFzQixHQWtEN0Q7U0FsRFksa0JBQWtCOzs7Ozs7SUFHN0IsaUNBQWE7Ozs7O0lBUWIsaUNBQWE7Ozs7Ozs7Ozs7O0lBZ0JiLGtDQUFxQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgZm9yd2FyZFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFic3RyYWN0Q29udHJvbCwgTkdfVkFMVUVfQUNDRVNTT1IsIE5HX1ZBTElEQVRPUlMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IG1pbkZhaWxlZCwgbWF4RmFpbGVkIH0gZnJvbSAnLi4vdmFsaWRhdG9ycyc7XG5pbXBvcnQgeyBUaGZOdW1iZXJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtbnVtYmVyLWJhc2UuY29tcG9uZW50JztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgVGhmSW5wdXRCYXNlQ29tcG9uZW50XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogdGhmLW51bWJlciDDqSB1bSBpbnB1dCBlc3BlY8OtZmljbyBwYXJhIHJlY2ViZXIgYXBlbmFzIG7Dum1lcm9zLlxuICogw4kgcG9zc8OtdmVsIGNvbmZpZ3VyYXIgdW0gdmFsb3IgbcOtbmltbywgbcOheGltbyBlIHVtIHN0ZXAgY29tIHQtbWluLCB0LW1heCBlIHQtc3RlcCxcbiAqIHJlc3BlY3RpdmFtZW50ZS5cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtbnVtYmVyLWJhc2ljXCIgdGl0bGU9XCJUb3R2cyBOdW1iZXIgQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1udW1iZXItYmFzaWMvc2FtcGxlLXRoZi1udW1iZXItYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLW51bWJlci1iYXNpYy9zYW1wbGUtdGhmLW51bWJlci1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtbnVtYmVyLWxhYnNcIiB0aXRsZT1cIlRvdHZzIE51bWJlciBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbnVtYmVyLWxhYnMvc2FtcGxlLXRoZi1udW1iZXItbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbnVtYmVyLWxhYnMvc2FtcGxlLXRoZi1udW1iZXItbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtbnVtYmVyLWNhbGN1bGF0ZVwiIHRpdGxlPVwiVG90dnMgTnVtYmVyIC0gQ2FsY3VsYXRlXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbnVtYmVyLWNhbGN1bGF0ZS9zYW1wbGUtdGhmLW51bWJlci1jYWxjdWxhdGUuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLW51bWJlci1jYWxjdWxhdGUvc2FtcGxlLXRoZi1udW1iZXItY2FsY3VsYXRlLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1udW1iZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLW51bWJlci5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW1xuICB7XG4gICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGhmTnVtYmVyQ29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZSxcbiAgfSxcbiAge1xuICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGhmTnVtYmVyQ29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZSxcbiAgfV1cbn0pXG5leHBvcnQgY2xhc3MgVGhmTnVtYmVyQ29tcG9uZW50IGV4dGVuZHMgVGhmTnVtYmVyQmFzZUNvbXBvbmVudCB7XG5cbiAgLyoqIFZhbG9yIG3DrW5pbW8uICovXG4gIG1pbj86IG51bWJlcjtcbiAgQElucHV0KCd0LW1pbicpIHNldCBzZXRNaW4obWluOiBzdHJpbmcpIHtcbiAgICBjb25zdCBwYXJzZWRJbnQgPSBwYXJzZUludChtaW4sIDEwKTtcbiAgICB0aGlzLm1pbiA9ICFpc05hTihwYXJzZWRJbnQpID8gcGFyc2VkSW50IDogdW5kZWZpbmVkO1xuICAgIHRoaXMudmFsaWRhdGVNb2RlbCgpO1xuICB9XG5cbiAgLyoqIFZhbG9yIG3DoXhpbW8uICovXG4gIG1heD86IG51bWJlcjtcbiAgQElucHV0KCd0LW1heCcpIHNldCBzZXRNYXgobWF4OiBzdHJpbmcpIHtcbiAgICBjb25zdCBwYXJzZWRJbnQgPSBwYXJzZUludChtYXgsIDEwKTtcbiAgICB0aGlzLm1heCA9ICFpc05hTihwYXJzZWRJbnQpID8gcGFyc2VkSW50IDogdW5kZWZpbmVkO1xuICAgIHRoaXMudmFsaWRhdGVNb2RlbCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogSW50ZXJ2YWxvLlxuICAgKlxuICAgKiBAZGVmYXVsdCAxXG4gICAqL1xuICBASW5wdXQoJ3Qtc3RlcCcpIHN0ZXA/OiBzdHJpbmcgPSAnMSc7XG5cbiAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpIHtcbiAgICBzdXBlcihlbCk7XG4gIH1cblxuICBleHRyYVZhbGlkYXRpb24oYWJzdHJhY3RDb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiB7IFtrZXk6IHN0cmluZ106IGFueTsgfSB7XG5cbiAgICBpZiAobWluRmFpbGVkKHRoaXMubWluLCBhYnN0cmFjdENvbnRyb2wudmFsdWUpKSB7XG4gICAgICByZXR1cm4geyBtaW46IHtcbiAgICAgICAgdmFsaWQ6IGZhbHNlLFxuICAgICAgfX07XG4gICAgfVxuXG4gICAgaWYgKG1heEZhaWxlZCh0aGlzLm1heCwgYWJzdHJhY3RDb250cm9sLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIHsgbWF4OiB7XG4gICAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgIH19O1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbn1cbiJdfQ==