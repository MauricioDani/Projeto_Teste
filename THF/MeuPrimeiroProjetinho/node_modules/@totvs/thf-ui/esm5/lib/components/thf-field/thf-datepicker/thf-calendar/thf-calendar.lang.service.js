/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
var ThfCalendarLangService = /** @class */ (function () {
    function ThfCalendarLangService() {
        this.months = [
            {
                pt: 'Janeiro',
                en: 'January',
                es: 'Enero'
            },
            {
                pt: 'Fevereiro',
                en: 'February',
                es: 'Febrero'
            },
            {
                pt: 'Março',
                en: 'March',
                es: 'Marzo'
            },
            {
                pt: 'Abril',
                en: 'April',
                es: 'Abril'
            },
            {
                pt: 'Maio',
                en: 'May',
                es: 'Mayo'
            },
            {
                pt: 'Junho',
                en: 'June',
                es: 'Junio'
            },
            {
                pt: 'Julho',
                en: 'July',
                es: 'Julio'
            },
            {
                pt: 'Agosto',
                en: 'August',
                es: 'Agosto'
            },
            {
                pt: 'Setembro',
                en: 'September',
                es: 'Setiembre'
            },
            {
                pt: 'Outubro',
                en: 'October',
                es: 'Octubre'
            },
            {
                pt: 'Novembro',
                en: 'November',
                es: 'Noviembre'
            },
            {
                pt: 'Dezembro',
                en: 'December',
                es: 'Diciembre'
            }
        ];
        this.shortWeekDays = [
            {
                pt: 'Dom',
                en: 'Sun',
                es: 'Dom'
            },
            {
                pt: 'Seg',
                en: 'Mon',
                es: 'Lun'
            },
            {
                pt: 'Ter',
                en: 'Tue',
                es: 'Mar'
            },
            {
                pt: 'Qua',
                en: 'Wed',
                es: 'Mié'
            },
            {
                pt: 'Qui',
                en: 'Thu',
                es: 'Jue'
            },
            {
                pt: 'Sex',
                en: 'Fri',
                es: 'Vie'
            },
            {
                pt: 'Sáb',
                en: 'Sat',
                es: 'Sáb'
            }
        ];
        this.wordMonth = {
            pt: 'Mês',
            en: 'Month',
            es: 'Mes'
        };
        this.wordYear = {
            pt: 'Ano',
            en: 'Year',
            es: 'Año'
        };
        this.lang = 'pt';
    }
    /**
     * @param {?} lang
     * @return {?}
     */
    ThfCalendarLangService.prototype.setLanguage = /**
     * @param {?} lang
     * @return {?}
     */
    function (lang) {
        if (lang && lang.length >= 2) {
            lang = lang.toLowerCase().slice(0, 2);
            this.lang = (lang === 'pt' || lang === 'en' || lang === 'es') ? lang : 'pt';
        }
    };
    /**
     * @return {?}
     */
    ThfCalendarLangService.prototype.getWordMonth = /**
     * @return {?}
     */
    function () {
        return this.wordMonth[this.lang];
    };
    /**
     * @return {?}
     */
    ThfCalendarLangService.prototype.getWordYear = /**
     * @return {?}
     */
    function () {
        return this.wordYear[this.lang];
    };
    /**
     * @param {?} month
     * @return {?}
     */
    ThfCalendarLangService.prototype.getMonth = /**
     * @param {?} month
     * @return {?}
     */
    function (month) {
        return this.months[month][this.lang];
    };
    /**
     * @return {?}
     */
    ThfCalendarLangService.prototype.getArrayMonths = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var arrMonths = Array();
        for (var i = 0; i < this.months.length; i++) {
            arrMonths.push(this.months[i][this.lang]);
        }
        return arrMonths;
    };
    /**
     * @param {?} day
     * @return {?}
     */
    ThfCalendarLangService.prototype.getWeedDays = /**
     * @param {?} day
     * @return {?}
     */
    function (day) {
        return this.shortWeekDays[day][this.lang];
    };
    /**
     * @return {?}
     */
    ThfCalendarLangService.prototype.getArrayWeekDays = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var arrWeekDays = Array();
        for (var i = 0; i < this.shortWeekDays.length; i++) {
            arrWeekDays.push(this.shortWeekDays[i][this.lang]);
        }
        return arrWeekDays;
    };
    ThfCalendarLangService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ThfCalendarLangService.ctorParameters = function () { return []; };
    return ThfCalendarLangService;
}());
export { ThfCalendarLangService };
if (false) {
    /** @type {?} */
    ThfCalendarLangService.prototype.months;
    /** @type {?} */
    ThfCalendarLangService.prototype.shortWeekDays;
    /** @type {?} */
    ThfCalendarLangService.prototype.wordMonth;
    /** @type {?} */
    ThfCalendarLangService.prototype.wordYear;
    /** @type {?} */
    ThfCalendarLangService.prototype.lang;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWNhbGVuZGFyLmxhbmcuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZmllbGQvdGhmLWRhdGVwaWNrZXIvdGhmLWNhbGVuZGFyL3RoZi1jYWxlbmRhci5sYW5nLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0M7SUFzSEU7UUFuSEEsV0FBTSxHQUFHO1lBQ1A7Z0JBQ0UsRUFBRSxFQUFFLFNBQVM7Z0JBQ2IsRUFBRSxFQUFFLFNBQVM7Z0JBQ2IsRUFBRSxFQUFFLE9BQU87YUFDWjtZQUNEO2dCQUNFLEVBQUUsRUFBRSxXQUFXO2dCQUNmLEVBQUUsRUFBRSxVQUFVO2dCQUNkLEVBQUUsRUFBRSxTQUFTO2FBQ2Q7WUFDRDtnQkFDRSxFQUFFLEVBQUUsT0FBTztnQkFDWCxFQUFFLEVBQUUsT0FBTztnQkFDWCxFQUFFLEVBQUUsT0FBTzthQUNaO1lBQ0Q7Z0JBQ0UsRUFBRSxFQUFFLE9BQU87Z0JBQ1gsRUFBRSxFQUFFLE9BQU87Z0JBQ1gsRUFBRSxFQUFFLE9BQU87YUFDWjtZQUNEO2dCQUNFLEVBQUUsRUFBRSxNQUFNO2dCQUNWLEVBQUUsRUFBRSxLQUFLO2dCQUNULEVBQUUsRUFBRSxNQUFNO2FBQ1g7WUFDRDtnQkFDRSxFQUFFLEVBQUUsT0FBTztnQkFDWCxFQUFFLEVBQUUsTUFBTTtnQkFDVixFQUFFLEVBQUUsT0FBTzthQUNaO1lBQ0Q7Z0JBQ0UsRUFBRSxFQUFFLE9BQU87Z0JBQ1gsRUFBRSxFQUFFLE1BQU07Z0JBQ1YsRUFBRSxFQUFFLE9BQU87YUFDWjtZQUNEO2dCQUNFLEVBQUUsRUFBRSxRQUFRO2dCQUNaLEVBQUUsRUFBRSxRQUFRO2dCQUNaLEVBQUUsRUFBRSxRQUFRO2FBQ2I7WUFDRDtnQkFDRSxFQUFFLEVBQUUsVUFBVTtnQkFDZCxFQUFFLEVBQUUsV0FBVztnQkFDZixFQUFFLEVBQUUsV0FBVzthQUNoQjtZQUNEO2dCQUNFLEVBQUUsRUFBRSxTQUFTO2dCQUNiLEVBQUUsRUFBRSxTQUFTO2dCQUNiLEVBQUUsRUFBRSxTQUFTO2FBQ2Q7WUFDRDtnQkFDRSxFQUFFLEVBQUUsVUFBVTtnQkFDZCxFQUFFLEVBQUUsVUFBVTtnQkFDZCxFQUFFLEVBQUUsV0FBVzthQUNoQjtZQUNEO2dCQUNFLEVBQUUsRUFBRSxVQUFVO2dCQUNkLEVBQUUsRUFBRSxVQUFVO2dCQUNkLEVBQUUsRUFBRSxXQUFXO2FBQ2hCO1NBQ0YsQ0FBQztRQUVGLGtCQUFhLEdBQUc7WUFDZDtnQkFDRSxFQUFFLEVBQUUsS0FBSztnQkFDVCxFQUFFLEVBQUUsS0FBSztnQkFDVCxFQUFFLEVBQUUsS0FBSzthQUNWO1lBQ0Q7Z0JBQ0UsRUFBRSxFQUFFLEtBQUs7Z0JBQ1QsRUFBRSxFQUFFLEtBQUs7Z0JBQ1QsRUFBRSxFQUFFLEtBQUs7YUFDVjtZQUNEO2dCQUNFLEVBQUUsRUFBRSxLQUFLO2dCQUNULEVBQUUsRUFBRSxLQUFLO2dCQUNULEVBQUUsRUFBRSxLQUFLO2FBQ1Y7WUFDRDtnQkFDRSxFQUFFLEVBQUUsS0FBSztnQkFDVCxFQUFFLEVBQUUsS0FBSztnQkFDVCxFQUFFLEVBQUUsS0FBSzthQUNWO1lBQ0Q7Z0JBQ0UsRUFBRSxFQUFFLEtBQUs7Z0JBQ1QsRUFBRSxFQUFFLEtBQUs7Z0JBQ1QsRUFBRSxFQUFFLEtBQUs7YUFDVjtZQUNEO2dCQUNFLEVBQUUsRUFBRSxLQUFLO2dCQUNULEVBQUUsRUFBRSxLQUFLO2dCQUNULEVBQUUsRUFBRSxLQUFLO2FBQ1Y7WUFDRDtnQkFDRSxFQUFFLEVBQUUsS0FBSztnQkFDVCxFQUFFLEVBQUUsS0FBSztnQkFDVCxFQUFFLEVBQUUsS0FBSzthQUNWO1NBQ0YsQ0FBQztRQUVGLGNBQVMsR0FBRztZQUNWLEVBQUUsRUFBRSxLQUFLO1lBQ1QsRUFBRSxFQUFFLE9BQU87WUFDWCxFQUFFLEVBQUUsS0FBSztTQUNWLENBQUM7UUFFRixhQUFRLEdBQUc7WUFDVCxFQUFFLEVBQUUsS0FBSztZQUNULEVBQUUsRUFBRSxNQUFNO1lBQ1YsRUFBRSxFQUFFLEtBQUs7U0FDVixDQUFDO1FBRUYsU0FBSSxHQUFHLElBQUksQ0FBQztJQUVJLENBQUM7Ozs7O0lBRWpCLDRDQUFXOzs7O0lBQVgsVUFBWSxJQUFZO1FBQ3RCLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO1lBQzVCLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7U0FDN0U7SUFDSCxDQUFDOzs7O0lBRUQsNkNBQVk7OztJQUFaO1FBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDOzs7O0lBRUQsNENBQVc7OztJQUFYO1FBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7OztJQUVELHlDQUFROzs7O0lBQVIsVUFBUyxLQUFhO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7OztJQUVELCtDQUFjOzs7SUFBZDs7WUFDUSxTQUFTLEdBQUcsS0FBSyxFQUFFO1FBQ3pCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMzQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDM0M7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDOzs7OztJQUVELDRDQUFXOzs7O0lBQVgsVUFBWSxHQUFXO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUMsQ0FBQzs7OztJQUVELGlEQUFnQjs7O0lBQWhCOztZQUNRLFdBQVcsR0FBRyxLQUFLLEVBQUU7UUFDM0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2xELFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztTQUNwRDtRQUNELE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7O2dCQTdKRixVQUFVOzs7O0lBOEpYLDZCQUFDO0NBQUEsQUE5SkQsSUE4SkM7U0E3Slksc0JBQXNCOzs7SUFFakMsd0NBNkRFOztJQUVGLCtDQW9DRTs7SUFFRiwyQ0FJRTs7SUFFRiwwQ0FJRTs7SUFFRixzQ0FBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRoZkNhbGVuZGFyTGFuZ1NlcnZpY2Uge1xuXG4gIG1vbnRocyA9IFtcbiAgICB7XG4gICAgICBwdDogJ0phbmVpcm8nLFxuICAgICAgZW46ICdKYW51YXJ5JyxcbiAgICAgIGVzOiAnRW5lcm8nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ0ZldmVyZWlybycsXG4gICAgICBlbjogJ0ZlYnJ1YXJ5JyxcbiAgICAgIGVzOiAnRmVicmVybydcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnTWFyw6dvJyxcbiAgICAgIGVuOiAnTWFyY2gnLFxuICAgICAgZXM6ICdNYXJ6bydcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnQWJyaWwnLFxuICAgICAgZW46ICdBcHJpbCcsXG4gICAgICBlczogJ0FicmlsJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdNYWlvJyxcbiAgICAgIGVuOiAnTWF5JyxcbiAgICAgIGVzOiAnTWF5bydcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnSnVuaG8nLFxuICAgICAgZW46ICdKdW5lJyxcbiAgICAgIGVzOiAnSnVuaW8nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ0p1bGhvJyxcbiAgICAgIGVuOiAnSnVseScsXG4gICAgICBlczogJ0p1bGlvJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdBZ29zdG8nLFxuICAgICAgZW46ICdBdWd1c3QnLFxuICAgICAgZXM6ICdBZ29zdG8nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ1NldGVtYnJvJyxcbiAgICAgIGVuOiAnU2VwdGVtYmVyJyxcbiAgICAgIGVzOiAnU2V0aWVtYnJlJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdPdXR1YnJvJyxcbiAgICAgIGVuOiAnT2N0b2JlcicsXG4gICAgICBlczogJ09jdHVicmUnXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ05vdmVtYnJvJyxcbiAgICAgIGVuOiAnTm92ZW1iZXInLFxuICAgICAgZXM6ICdOb3ZpZW1icmUnXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ0RlemVtYnJvJyxcbiAgICAgIGVuOiAnRGVjZW1iZXInLFxuICAgICAgZXM6ICdEaWNpZW1icmUnXG4gICAgfVxuICBdO1xuXG4gIHNob3J0V2Vla0RheXMgPSBbXG4gICAge1xuICAgICAgcHQ6ICdEb20nLFxuICAgICAgZW46ICdTdW4nLFxuICAgICAgZXM6ICdEb20nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ1NlZycsXG4gICAgICBlbjogJ01vbicsXG4gICAgICBlczogJ0x1bidcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnVGVyJyxcbiAgICAgIGVuOiAnVHVlJyxcbiAgICAgIGVzOiAnTWFyJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdRdWEnLFxuICAgICAgZW46ICdXZWQnLFxuICAgICAgZXM6ICdNacOpJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdRdWknLFxuICAgICAgZW46ICdUaHUnLFxuICAgICAgZXM6ICdKdWUnXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ1NleCcsXG4gICAgICBlbjogJ0ZyaScsXG4gICAgICBlczogJ1ZpZSdcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnU8OhYicsXG4gICAgICBlbjogJ1NhdCcsXG4gICAgICBlczogJ1PDoWInXG4gICAgfVxuICBdO1xuXG4gIHdvcmRNb250aCA9IHtcbiAgICBwdDogJ03DqnMnLFxuICAgIGVuOiAnTW9udGgnLFxuICAgIGVzOiAnTWVzJ1xuICB9O1xuXG4gIHdvcmRZZWFyID0ge1xuICAgIHB0OiAnQW5vJyxcbiAgICBlbjogJ1llYXInLFxuICAgIGVzOiAnQcOxbydcbiAgfTtcblxuICBsYW5nID0gJ3B0JztcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIHNldExhbmd1YWdlKGxhbmc6IHN0cmluZykge1xuICAgIGlmIChsYW5nICYmIGxhbmcubGVuZ3RoID49IDIpIHtcbiAgICAgIGxhbmcgPSBsYW5nLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCwgMik7XG4gICAgICB0aGlzLmxhbmcgPSAobGFuZyA9PT0gJ3B0JyB8fCBsYW5nID09PSAnZW4nIHx8IGxhbmcgPT09ICdlcycpID8gbGFuZyA6ICdwdCc7XG4gICAgfVxuICB9XG5cbiAgZ2V0V29yZE1vbnRoKCkge1xuICAgIHJldHVybiB0aGlzLndvcmRNb250aFt0aGlzLmxhbmddO1xuICB9XG5cbiAgZ2V0V29yZFllYXIoKSB7XG4gICAgcmV0dXJuIHRoaXMud29yZFllYXJbdGhpcy5sYW5nXTtcbiAgfVxuXG4gIGdldE1vbnRoKG1vbnRoOiBudW1iZXIpIHtcbiAgICByZXR1cm4gdGhpcy5tb250aHNbbW9udGhdW3RoaXMubGFuZ107XG4gIH1cblxuICBnZXRBcnJheU1vbnRocygpIHtcbiAgICBjb25zdCBhcnJNb250aHMgPSBBcnJheSgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5tb250aHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyck1vbnRocy5wdXNoKHRoaXMubW9udGhzW2ldW3RoaXMubGFuZ10pO1xuICAgIH1cbiAgICByZXR1cm4gYXJyTW9udGhzO1xuICB9XG5cbiAgZ2V0V2VlZERheXMoZGF5OiBudW1iZXIpIHtcbiAgICByZXR1cm4gdGhpcy5zaG9ydFdlZWtEYXlzW2RheV1bdGhpcy5sYW5nXTtcbiAgfVxuXG4gIGdldEFycmF5V2Vla0RheXMoKSB7XG4gICAgY29uc3QgYXJyV2Vla0RheXMgPSBBcnJheSgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zaG9ydFdlZWtEYXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcnJXZWVrRGF5cy5wdXNoKHRoaXMuc2hvcnRXZWVrRGF5c1tpXVt0aGlzLmxhbmddKTtcbiAgICB9XG4gICAgcmV0dXJuIGFycldlZWtEYXlzO1xuICB9XG59XG4iXX0=