/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ElementRef, forwardRef, Renderer2, ViewChild } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { isMobile } from './../../../utils/util';
import { ThfControlPositionService } from './../../../services/thf-control-position/thf-control-position.service';
import { ThfKeyCodeEnum } from './../../../enums/thf-key-code.enum';
import { ThfMultiselectBaseComponent } from './thf-multiselect-base.component';
/** @type {?} */
var thfMultiselectContainerOffset = 8;
/** @type {?} */
var thfMultiselectContainerPositionDefault = 'bottom';
/**
 * \@docsExtends ThfMultiselectBaseComponent
 *
 * \@example
 *
 * <example name="thf-multiselect-basic" title="Totvs Multiselect Basic">
 *   <file name="sample-thf-multiselect-basic/sample-thf-multiselect-basic.component.html"> </file>
 *   <file name="sample-thf-multiselect-basic/sample-thf-multiselect-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-multiselect-labs" title="Totvs Multiselect Labs">
 *   <file name="sample-thf-multiselect-labs/sample-thf-multiselect-labs.component.html"> </file>
 *   <file name="sample-thf-multiselect-labs/sample-thf-multiselect-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-multiselect-vacation" title="Totvs Multiselect - Vacation">
 *   <file name="sample-thf-multiselect-vacation/sample-thf-multiselect-vacation.component.html"> </file>
 *   <file name="sample-thf-multiselect-vacation/sample-thf-multiselect-vacation.component.ts"> </file>
 * </example>
 *
 * <example name="thf-multiselect-vacation-reactive-form" title="Totvs Multiselect - Vacation Reactive Form">
 *   <file name="sample-thf-multiselect-vacation-reactive-form/sample-thf-multiselect-vacation-reactive-form.component.html"> </file>
 *   <file name="sample-thf-multiselect-vacation-reactive-form/sample-thf-multiselect-vacation-reactive-form.component.ts"> </file>
 * </example>
 */
var ThfMultiselectComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfMultiselectComponent, _super);
    function ThfMultiselectComponent(renderer, changeDetector, controlPosition, el) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.changeDetector = changeDetector;
        _this.controlPosition = controlPosition;
        _this.el = el;
        _this.disclaimerOffset = 0;
        _this.dropdownIcon = 'thf-icon-arrow-down';
        _this.dropdownOpen = false;
        _this.initialized = false;
        _this.visibleElement = false;
        _this.isCalculateVisibleItems = true;
        _this.onScroll = (/**
         * @return {?}
         */
        function () {
            _this.adjustContainerPosition();
        });
        return _this;
    }
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this.focus) {
            this.inputElement.nativeElement.focus();
        }
        this.initialized = true;
    };
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.ngDoCheck = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var inputWidth = this.inputElement.nativeElement.offsetWidth;
        // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visÃ­vel,
        // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.
        if ((inputWidth && !this.visibleElement && this.initialized) || (inputWidth && this.isCalculateVisibleItems)) {
            this.debounceResize();
            this.visibleElement = true;
            return;
        }
    };
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.removeListeners();
    };
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.getInputWidth = /**
     * @return {?}
     */
    function () {
        return this.el.nativeElement.querySelector('.thf-input').offsetWidth - 40;
    };
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.getDisclaimersWidth = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var disclaimers = this.el.nativeElement.querySelectorAll('thf-disclaimer');
        return Array.from(disclaimers).map((/**
         * @param {?} disclaimer
         * @return {?}
         */
        function (disclaimer) { return disclaimer['offsetWidth']; }));
    };
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.calculateVisibleItems = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var disclaimersWidth = this.getDisclaimersWidth();
        /** @type {?} */
        var inputWidth = this.getInputWidth();
        /** @type {?} */
        var extraDisclaimerSize = 38;
        /** @type {?} */
        var disclaimersVisible = disclaimersWidth[0];
        this.visibleDisclaimers = [];
        if (inputWidth > 0) {
            /** @type {?} */
            var sum = 0;
            /** @type {?} */
            var i = 0;
            for (i = 0; i < this.selectedOptions.length; i++) {
                sum += disclaimersWidth[i];
                this.visibleDisclaimers.push(this.selectedOptions[i]);
                if (sum > inputWidth) {
                    sum -= disclaimersWidth[i];
                    this.isCalculateVisibleItems = false;
                    break;
                }
            }
            if (disclaimersVisible || !this.selectedOptions.length) {
                if (i === this.selectedOptions.length) {
                    this.isCalculateVisibleItems = false;
                    return;
                }
                if (sum + extraDisclaimerSize > inputWidth) {
                    this.visibleDisclaimers.splice(-2, 2);
                    /** @type {?} */
                    var label = '+' + (this.selectedOptions.length + 1 - i).toString();
                    this.visibleDisclaimers.push({ value: '', label: label });
                }
                else {
                    this.visibleDisclaimers.splice(-1, 1);
                    /** @type {?} */
                    var label = '+' + (this.selectedOptions.length - i).toString();
                    this.visibleDisclaimers.push({ value: '', label: label });
                }
            }
        }
    };
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.updateVisibleItems = /**
     * @return {?}
     */
    function () {
        this.visibleDisclaimers = [].concat(this.selectedOptions);
        this.debounceResize();
        // quando estiver dentro de modal
        if (!this.inputElement.nativeElement.offsetWidth) {
            this.isCalculateVisibleItems = true;
        }
    };
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.debounceResize = /**
     * @return {?}
     */
    function () {
        var _this = this;
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout((/**
         * @return {?}
         */
        function () {
            _this.calculateVisibleItems();
        }), 200);
    };
    /**
     * @param {?=} event
     * @return {?}
     */
    ThfMultiselectComponent.prototype.onKeyDown = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        if (event.keyCode === ThfKeyCodeEnum.arrowUp || event.keyCode === ThfKeyCodeEnum.arrowDown) {
            event.preventDefault();
            this.controlDropdownVisibility(true);
            return;
        }
        if (event.keyCode === ThfKeyCodeEnum.tab) {
            this.controlDropdownVisibility(false);
            return;
        }
    };
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.toggleDropdownVisibility = /**
     * @return {?}
     */
    function () {
        if (this.disabled) {
            return;
        }
        this.controlDropdownVisibility(!this.dropdownOpen);
    };
    /**
     * @param {?} toOpen
     * @return {?}
     */
    ThfMultiselectComponent.prototype.openDropdown = /**
     * @param {?} toOpen
     * @return {?}
     */
    function (toOpen) {
        if (toOpen && !this.disabled) {
            this.controlDropdownVisibility(true);
        }
    };
    /**
     * @param {?} toOpen
     * @return {?}
     */
    ThfMultiselectComponent.prototype.controlDropdownVisibility = /**
     * @param {?} toOpen
     * @return {?}
     */
    function (toOpen) {
        toOpen ? this.open() : this.close();
    };
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.scrollToSelectedOptions = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.selectedOptions && this.selectedOptions.length) {
            /** @type {?} */
            var index = this.options.findIndex((/**
             * @param {?} option
             * @return {?}
             */
            function (option) { return option.value === _this.selectedOptions[0].value; }));
            this.dropdown.scrollTo(index);
        }
    };
    /**
     * @param {?} options
     * @return {?}
     */
    ThfMultiselectComponent.prototype.setVisibleOptionsDropdown = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        this.visibleOptionsDropdown = options;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ThfMultiselectComponent.prototype.changeSearch = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        (event && event.value) ? this.searchByLabel(event.value, this.options, this.filterMode) : this.setVisibleOptionsDropdown(this.options);
        // timeout necessÃ¡rio para reposicionar corretamente quando dropdown estiver pra cima do input e realizar busca no input
        setTimeout((/**
         * @return {?}
         */
        function () { return _this.adjustContainerPosition(); }));
    };
    /**
     * @return {?}
     */
    ThfMultiselectComponent.prototype.getPlaceholder = /**
     * @return {?}
     */
    function () {
        return (this.placeholder && !this.visibleDisclaimers.length) ? this.placeholder : '';
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ThfMultiselectComponent.prototype.closeDisclaimer = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        /** @type {?} */
        var index = this.selectedOptions.findIndex((/**
         * @param {?} option
         * @return {?}
         */
        function (option) { return option.value === value; }));
        this.selectedOptions.splice(index, 1);
        this.updateVisibleItems();
        this.callOnChange(this.selectedOptions);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ThfMultiselectComponent.prototype.wasClickedOnToggle = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this.inputElement.nativeElement.contains(event.target) &&
            !this.iconElement.nativeElement.contains(event.target) &&
            !this.dropdownElement.nativeElement.contains(event.target) &&
            !this.disclaimerContainerElement.nativeElement.contains(event.target) &&
            this.dropdownOpen) {
            this.controlDropdownVisibility(false);
        }
    };
    /**
     * @private
     * @return {?}
     */
    ThfMultiselectComponent.prototype.adjustContainerPosition = /**
     * @private
     * @return {?}
     */
    function () {
        this.controlPosition.adjustPosition(thfMultiselectContainerPositionDefault);
    };
    /**
     * @private
     * @return {?}
     */
    ThfMultiselectComponent.prototype.close = /**
     * @private
     * @return {?}
     */
    function () {
        this.dropdownIcon = 'thf-icon-arrow-down';
        this.dropdownOpen = false;
        this.dropdown.controlVisibility(false);
        this.setVisibleOptionsDropdown(this.options);
        this.removeListeners();
    };
    /**
     * @private
     * @return {?}
     */
    ThfMultiselectComponent.prototype.initializeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.clickOutListener = this.renderer.listen('document', 'click', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            _this.wasClickedOnToggle(event);
        }));
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @return {?}
         */
        function () {
            _this.updateVisibleItems();
            isMobile() ? _this.adjustContainerPosition() : _this.close();
        }));
        window.addEventListener('scroll', this.onScroll, true);
    };
    /**
     * @private
     * @return {?}
     */
    ThfMultiselectComponent.prototype.open = /**
     * @private
     * @return {?}
     */
    function () {
        this.dropdownIcon = 'thf-icon-arrow-up';
        this.dropdownOpen = true;
        this.dropdown.controlVisibility(true);
        this.setVisibleOptionsDropdown(this.options);
        this.initializeListeners();
        this.scrollToSelectedOptions();
        this.changeDetector.detectChanges();
        this.setPositionDropdown();
    };
    /**
     * @private
     * @return {?}
     */
    ThfMultiselectComponent.prototype.removeListeners = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.clickOutListener) {
            this.clickOutListener();
        }
        if (this.resizeListener) {
            this.resizeListener();
        }
        window.removeEventListener('scroll', this.onScroll, true);
    };
    /**
     * @private
     * @return {?}
     */
    ThfMultiselectComponent.prototype.setPositionDropdown = /**
     * @private
     * @return {?}
     */
    function () {
        this.controlPosition.setElements(this.dropdown.container.nativeElement, thfMultiselectContainerOffset, this.inputElement, ['top', 'bottom'], true);
        this.adjustContainerPosition();
    };
    ThfMultiselectComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-multiselect',
                    template: "<thf-field-container\n  [t-label]=\"label\"\n  [t-help]=\"help\"\n  [t-optional]=\"!required && optional\">\n\n  <div class=\"thf-field-container-content\"\n    [class.thf-multiselect-show]=\"dropdownOpen\">\n\n    <input #inputElement\n      class=\"thf-input thf-input-icon-right thf-clickable\"\n      readonly\n      type=\"text\"\n      [value]=\"getPlaceholder()\"\n      [disabled]=\"disabled\"\n      (keydown)=\"onKeyDown($event)\"\n      (click)=\"toggleDropdownVisibility()\">\n\n    <div class=\"thf-field-icon-container-right\">\n      <span #iconElement\n        class=\"thf-icon thf-field-icon {{ dropdownIcon }}\"\n        [ngClass]=\"disabled ? 'thf-field-icon-disabled' : ''\"\n        (click)=\"toggleDropdownVisibility()\">\n      </span>\n    </div>\n\n    <div #disclaimerContainer\n      class=\"thf-multiselect-field\"\n      [class.thf-multiselect-field-disabled]=\"disabled\">\n\n      <thf-disclaimer *ngFor=\"let disclaimer of visibleDisclaimers\"\n        [t-label]=\"disclaimer.label\"\n        [t-value]=\"disclaimer.value\"\n        [t-hide-close]=\"disclaimer.value === '' || disabled\"\n        [class.thf-clickable]=\"disclaimer.value === '' && !disabled\"\n        (click)=\"openDropdown(disclaimer.value === '')\"\n        (t-close-action)=\"closeDisclaimer(disclaimer.value)\">\n      </thf-disclaimer>\n    </div>\n  </div>\n\n  <thf-multiselect-dropdown #dropdownElement\n    [t-hide-search]=\"hideSearch\"\n    [t-literals]=\"literals\"\n    [t-options]=\"visibleOptionsDropdown\"\n    [t-selected-values]=\"getValuesFromOptions(selectedOptions)\"\n    [t-placeholder-search]=\"placeholderSearch\"\n    (t-change)=\"changeItems($event)\"\n    (t-change-search)=\"changeSearch($event)\"\n    (t-close-dropdown)=\"controlDropdownVisibility(false)\">\n  </thf-multiselect-dropdown>\n\n  <thf-field-container-bottom></thf-field-container-bottom>\n\n</thf-field-container>\n",
                    providers: [
                        ThfControlPositionService,
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfMultiselectComponent; })),
                            multi: true,
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfMultiselectComponent; })),
                            multi: true,
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    ThfMultiselectComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ChangeDetectorRef },
        { type: ThfControlPositionService },
        { type: ElementRef }
    ]; };
    ThfMultiselectComponent.propDecorators = {
        dropdownElement: [{ type: ViewChild, args: ['dropdownElement', { read: ElementRef, static: true },] }],
        dropdown: [{ type: ViewChild, args: ['dropdownElement', { static: true },] }],
        disclaimerContainerElement: [{ type: ViewChild, args: ['disclaimerContainer', { read: ElementRef, static: true },] }],
        iconElement: [{ type: ViewChild, args: ['iconElement', { read: ElementRef, static: true },] }],
        inputElement: [{ type: ViewChild, args: ['inputElement', { read: ElementRef, static: true },] }]
    };
    return ThfMultiselectComponent;
}(ThfMultiselectBaseComponent));
export { ThfMultiselectComponent };
if (false) {
    /** @type {?} */
    ThfMultiselectComponent.prototype.dropdownElement;
    /** @type {?} */
    ThfMultiselectComponent.prototype.dropdown;
    /** @type {?} */
    ThfMultiselectComponent.prototype.disclaimerContainerElement;
    /** @type {?} */
    ThfMultiselectComponent.prototype.iconElement;
    /** @type {?} */
    ThfMultiselectComponent.prototype.inputElement;
    /** @type {?} */
    ThfMultiselectComponent.prototype.disclaimerOffset;
    /** @type {?} */
    ThfMultiselectComponent.prototype.dropdownIcon;
    /** @type {?} */
    ThfMultiselectComponent.prototype.dropdownOpen;
    /** @type {?} */
    ThfMultiselectComponent.prototype.initialized;
    /** @type {?} */
    ThfMultiselectComponent.prototype.positionDisclaimerExtra;
    /** @type {?} */
    ThfMultiselectComponent.prototype.timeoutResize;
    /** @type {?} */
    ThfMultiselectComponent.prototype.visibleElement;
    /**
     * @type {?}
     * @private
     */
    ThfMultiselectComponent.prototype.isCalculateVisibleItems;
    /**
     * @type {?}
     * @private
     */
    ThfMultiselectComponent.prototype.onScroll;
    /** @type {?} */
    ThfMultiselectComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    ThfMultiselectComponent.prototype.changeDetector;
    /**
     * @type {?}
     * @private
     */
    ThfMultiselectComponent.prototype.controlPosition;
    /**
     * @type {?}
     * @private
     */
    ThfMultiselectComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW11bHRpc2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZmllbGQvdGhmLW11bHRpc2VsZWN0L3RoZi1tdWx0aXNlbGVjdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQ1UsaUJBQWlCLEVBQUUsU0FBUyxFQUFXLFVBQVUsRUFBRSxVQUFVLEVBQWEsU0FBUyxFQUFFLFNBQVMsRUFDOUcsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGFBQWEsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRWxFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx1RUFBdUUsQ0FBQztBQUNsSCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFFcEUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7O0lBRXpFLDZCQUE2QixHQUFHLENBQUM7O0lBQ2pDLHNDQUFzQyxHQUFHLFFBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJ2RDtJQWlCNkMsbURBQTJCO0lBa0J0RSxpQ0FDUyxRQUFtQixFQUNsQixjQUFpQyxFQUNqQyxlQUEwQyxFQUMxQyxFQUFjO1FBSnhCLFlBS0UsaUJBQU8sU0FDUjtRQUxRLGNBQVEsR0FBUixRQUFRLENBQVc7UUFDbEIsb0JBQWMsR0FBZCxjQUFjLENBQW1CO1FBQ2pDLHFCQUFlLEdBQWYsZUFBZSxDQUEyQjtRQUMxQyxRQUFFLEdBQUYsRUFBRSxDQUFZO1FBZHhCLHNCQUFnQixHQUFHLENBQUMsQ0FBQztRQUNyQixrQkFBWSxHQUFXLHFCQUFxQixDQUFDO1FBQzdDLGtCQUFZLEdBQVksS0FBSyxDQUFDO1FBQzlCLGlCQUFXLEdBQUcs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Qix5QkFBeUI7Z0JBTHNCLFVBQVU7OztrQ0F5RC9ELFNBQVMsU0FBQyxpQkFBaUIsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTsyQkFDL0QsU0FBUyxTQUFDLGlCQUFpQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs2Q0FDN0MsU0FBUyxTQUFDLHFCQUFxQixFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOzhCQUNuRSxTQUFTLFNBQUMsYUFBYSxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOytCQUMzRCxTQUFTLFNBQUMsY0FBYyxFQUFFLEVBQUMsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOztJQStQOUQsOEJBQUM7Q0FBQSxBQXRSRCxDQWlCNkMsMkJBQTJCLEdBcVF2RTtTQXJRWSx1QkFBdUI7OztJQUVsQyxrREFBOEY7O0lBQzlGLDJDQUF5RDs7SUFDekQsNkRBQTZHOztJQUM3Ryw4Q0FBc0Y7O0lBQ3RGLCtDQUF1Rjs7SUFFdkYsbURBQXFCOztJQUNyQiwrQ0FBNkM7O0lBQzdDLCtDQUE4Qjs7SUFDOUIsOENBQW9COztJQUNwQiwwREFBd0I7O0lBQ3hCLGdEQUFjOztJQUNkLGlEQUF1Qjs7Ozs7SUFFdkIsMERBQWdEOzs7OztJQTRNaEQsMkNBRUM7O0lBM01DLDJDQUEwQjs7Ozs7SUFDMUIsaURBQXlDOzs7OztJQUN6QyxrREFBa0Q7Ozs7O0lBQ2xELHFDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIERvQ2hlY2ssIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIE9uRGVzdHJveSwgUmVuZGVyZXIyLCBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOR19WQUxJREFUT1JTLCBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgaXNNb2JpbGUgfSBmcm9tICcuLy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuaW1wb3J0IHsgVGhmQ29udHJvbFBvc2l0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvdGhmLWNvbnRyb2wtcG9zaXRpb24vdGhmLWNvbnRyb2wtcG9zaXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBUaGZLZXlDb2RlRW51bSB9IGZyb20gJy4vLi4vLi4vLi4vZW51bXMvdGhmLWtleS1jb2RlLmVudW0nO1xuXG5pbXBvcnQgeyBUaGZNdWx0aXNlbGVjdEJhc2VDb21wb25lbnQgfSBmcm9tICcuL3RoZi1tdWx0aXNlbGVjdC1iYXNlLmNvbXBvbmVudCc7XG5cbmNvbnN0IHRoZk11bHRpc2VsZWN0Q29udGFpbmVyT2Zmc2V0ID0gODtcbmNvbnN0IHRoZk11bHRpc2VsZWN0Q29udGFpbmVyUG9zaXRpb25EZWZhdWx0ID0gJ2JvdHRvbSc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFRoZk11bHRpc2VsZWN0QmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1tdWx0aXNlbGVjdC1iYXNpY1wiIHRpdGxlPVwiVG90dnMgTXVsdGlzZWxlY3QgQmFzaWNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbXVsdGlzZWxlY3QtYmFzaWMvc2FtcGxlLXRoZi1tdWx0aXNlbGVjdC1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLW11bHRpc2VsZWN0LWJhc2ljL3NhbXBsZS10aGYtbXVsdGlzZWxlY3QtYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLW11bHRpc2VsZWN0LWxhYnNcIiB0aXRsZT1cIlRvdHZzIE11bHRpc2VsZWN0IExhYnNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbXVsdGlzZWxlY3QtbGFicy9zYW1wbGUtdGhmLW11bHRpc2VsZWN0LWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1tdWx0aXNlbGVjdC1sYWJzL3NhbXBsZS10aGYtbXVsdGlzZWxlY3QtbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtbXVsdGlzZWxlY3QtdmFjYXRpb25cIiB0aXRsZT1cIlRvdHZzIE11bHRpc2VsZWN0IC0gVmFjYXRpb25cIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbXVsdGlzZWxlY3QtdmFjYXRpb24vc2FtcGxlLXRoZi1tdWx0aXNlbGVjdC12YWNhdGlvbi5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLW11bHRpc2VsZWN0LXZhY2F0aW9uL3NhbXBsZS10aGYtbXVsdGlzZWxlY3QtdmFjYXRpb24uY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLW11bHRpc2VsZWN0LXZhY2F0aW9uLXJlYWN0aXZlLWZvcm1cIiB0aXRsZT1cIlRvdHZzIE11bHRpc2VsZWN0IC0gVmFjYXRpb24gUmVhY3RpdmUgRm9ybVwiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1tdWx0aXNlbGVjdC12YWNhdGlvbi1yZWFjdGl2ZS1mb3JtL3NhbXBsZS10aGYtbXVsdGlzZWxlY3QtdmFjYXRpb24tcmVhY3RpdmUtZm9ybS5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLW11bHRpc2VsZWN0LXZhY2F0aW9uLXJlYWN0aXZlLWZvcm0vc2FtcGxlLXRoZi1tdWx0aXNlbGVjdC12YWNhdGlvbi1yZWFjdGl2ZS1mb3JtLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1tdWx0aXNlbGVjdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtbXVsdGlzZWxlY3QuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtcbiAgICBUaGZDb250cm9sUG9zaXRpb25TZXJ2aWNlLFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGhmTXVsdGlzZWxlY3RDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGhmTXVsdGlzZWxlY3RDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFRoZk11bHRpc2VsZWN0Q29tcG9uZW50IGV4dGVuZHMgVGhmTXVsdGlzZWxlY3RCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgRG9DaGVjaywgT25EZXN0cm95IHtcblxuICBAVmlld0NoaWxkKCdkcm9wZG93bkVsZW1lbnQnLCB7IHJlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogdHJ1ZSB9KSBkcm9wZG93bkVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ2Ryb3Bkb3duRWxlbWVudCcsIHsgc3RhdGljOiB0cnVlIH0pIGRyb3Bkb3duO1xuICBAVmlld0NoaWxkKCdkaXNjbGFpbWVyQ29udGFpbmVyJywgeyByZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgZGlzY2xhaW1lckNvbnRhaW5lckVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ2ljb25FbGVtZW50JywgeyByZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgaWNvbkVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ2lucHV0RWxlbWVudCcsIHtyZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgaW5wdXRFbGVtZW50OiBFbGVtZW50UmVmO1xuXG4gIGRpc2NsYWltZXJPZmZzZXQgPSAwO1xuICBkcm9wZG93bkljb246IHN0cmluZyA9ICd0aGYtaWNvbi1hcnJvdy1kb3duJztcbiAgZHJvcGRvd25PcGVuOiBib29sZWFuID0gZmFsc2U7XG4gIGluaXRpYWxpemVkID0gZmFsc2U7XG4gIHBvc2l0aW9uRGlzY2xhaW1lckV4dHJhO1xuICB0aW1lb3V0UmVzaXplO1xuICB2aXNpYmxlRWxlbWVudCA9IGZhbHNlO1xuXG4gIHByaXZhdGUgaXNDYWxjdWxhdGVWaXNpYmxlSXRlbXM6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyByZW5kZXJlcjogUmVuZGVyZXIyLFxuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmLFxuICAgIHByaXZhdGUgY29udHJvbFBvc2l0aW9uOiBUaGZDb250cm9sUG9zaXRpb25TZXJ2aWNlLFxuICAgIHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIGlmICh0aGlzLmZvY3VzKSB7XG4gICAgICB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgfVxuICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICB9XG5cbiAgbmdEb0NoZWNrKCkge1xuICAgIGNvbnN0IGlucHV0V2lkdGggPSB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50Lm9mZnNldFdpZHRoO1xuICAgIC8vIFBlcm1pdGUgcXVlIG9zIGRpc2NsYWltZXJzIHNlamFtIGNhbGN1bGFkb3MgbmEgcHJpbWVpcmEgdmV6IHF1ZSBvIGNvbXBvbmVudGUgdG9ybmEtc2Ugdmlzw612ZWwsXG4gICAgLy8gZXZpdGFuZG8gY29tIGlzc28sIHByb2JsZW1hcyBjb20gVGFicyBvdSBEaXZzIHF1ZSBpbmljaWVtIGVzY29uZGlkYXMuXG4gICAgaWYgKChpbnB1dFdpZHRoICYmICF0aGlzLnZpc2libGVFbGVtZW50ICYmIHRoaXMuaW5pdGlhbGl6ZWQpIHx8IChpbnB1dFdpZHRoICYmIHRoaXMuaXNDYWxjdWxhdGVWaXNpYmxlSXRlbXMpKSB7XG4gICAgICB0aGlzLmRlYm91bmNlUmVzaXplKCk7XG4gICAgICB0aGlzLnZpc2libGVFbGVtZW50ID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnJlbW92ZUxpc3RlbmVycygpO1xuICB9XG5cbiAgZ2V0SW5wdXRXaWR0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbC5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aGYtaW5wdXQnKS5vZmZzZXRXaWR0aCAtIDQwO1xuICB9XG5cbiAgZ2V0RGlzY2xhaW1lcnNXaWR0aCgpIHtcbiAgICBjb25zdCBkaXNjbGFpbWVycyA9IHRoaXMuZWwubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCd0aGYtZGlzY2xhaW1lcicpO1xuICAgIHJldHVybiBBcnJheS5mcm9tKGRpc2NsYWltZXJzKS5tYXAoZGlzY2xhaW1lciA9PiBkaXNjbGFpbWVyWydvZmZzZXRXaWR0aCddKTtcbiAgfVxuXG4gIGNhbGN1bGF0ZVZpc2libGVJdGVtcygpIHtcbiAgICBjb25zdCBkaXNjbGFpbWVyc1dpZHRoID0gdGhpcy5nZXREaXNjbGFpbWVyc1dpZHRoKCk7XG4gICAgY29uc3QgaW5wdXRXaWR0aCA9IHRoaXMuZ2V0SW5wdXRXaWR0aCgpO1xuICAgIGNvbnN0IGV4dHJhRGlzY2xhaW1lclNpemUgPSAzODtcbiAgICBjb25zdCBkaXNjbGFpbWVyc1Zpc2libGUgPSBkaXNjbGFpbWVyc1dpZHRoWzBdO1xuXG4gICAgdGhpcy52aXNpYmxlRGlzY2xhaW1lcnMgPSBbXTtcblxuICAgIGlmIChpbnB1dFdpZHRoID4gMCkge1xuICAgICAgbGV0IHN1bSA9IDA7XG4gICAgICBsZXQgaSA9IDA7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5zZWxlY3RlZE9wdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgc3VtICs9IGRpc2NsYWltZXJzV2lkdGhbaV07XG4gICAgICAgIHRoaXMudmlzaWJsZURpc2NsYWltZXJzLnB1c2godGhpcy5zZWxlY3RlZE9wdGlvbnNbaV0pO1xuXG4gICAgICAgIGlmIChzdW0gPiBpbnB1dFdpZHRoKSB7XG4gICAgICAgICAgc3VtIC09IGRpc2NsYWltZXJzV2lkdGhbaV07XG4gICAgICAgICAgdGhpcy5pc0NhbGN1bGF0ZVZpc2libGVJdGVtcyA9IGZhbHNlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChkaXNjbGFpbWVyc1Zpc2libGUgfHwgIXRoaXMuc2VsZWN0ZWRPcHRpb25zLmxlbmd0aCkge1xuXG4gICAgICAgIGlmIChpID09PSB0aGlzLnNlbGVjdGVkT3B0aW9ucy5sZW5ndGgpIHtcbiAgICAgICAgICB0aGlzLmlzQ2FsY3VsYXRlVmlzaWJsZUl0ZW1zID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHN1bSArIGV4dHJhRGlzY2xhaW1lclNpemUgPiBpbnB1dFdpZHRoKSB7XG4gICAgICAgICAgdGhpcy52aXNpYmxlRGlzY2xhaW1lcnMuc3BsaWNlKC0yLCAyKTtcbiAgICAgICAgICBjb25zdCBsYWJlbCA9ICcrJyArICh0aGlzLnNlbGVjdGVkT3B0aW9ucy5sZW5ndGggKyAxIC0gaSkudG9TdHJpbmcoKTtcbiAgICAgICAgICB0aGlzLnZpc2libGVEaXNjbGFpbWVycy5wdXNoKHt2YWx1ZTogJycsIGxhYmVsOiBsYWJlbH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudmlzaWJsZURpc2NsYWltZXJzLnNwbGljZSgtMSwgMSk7XG4gICAgICAgICAgY29uc3QgbGFiZWwgPSAnKycgKyAodGhpcy5zZWxlY3RlZE9wdGlvbnMubGVuZ3RoIC0gaSkudG9TdHJpbmcoKTtcbiAgICAgICAgICB0aGlzLnZpc2libGVEaXNjbGFpbWVycy5wdXNoKHt2YWx1ZTogJycsIGxhYmVsOiBsYWJlbH0pO1xuICAgICAgICB9XG5cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB1cGRhdGVWaXNpYmxlSXRlbXMoKSB7XG4gICAgdGhpcy52aXNpYmxlRGlzY2xhaW1lcnMgPSBbXS5jb25jYXQodGhpcy5zZWxlY3RlZE9wdGlvbnMpO1xuXG4gICAgdGhpcy5kZWJvdW5jZVJlc2l6ZSgpO1xuXG4gICAgLy8gcXVhbmRvIGVzdGl2ZXIgZGVudHJvIGRlIG1vZGFsXG4gICAgaWYgKCF0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50Lm9mZnNldFdpZHRoKSB7XG4gICAgICB0aGlzLmlzQ2FsY3VsYXRlVmlzaWJsZUl0ZW1zID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBkZWJvdW5jZVJlc2l6ZSgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0UmVzaXplKTtcbiAgICB0aGlzLnRpbWVvdXRSZXNpemUgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuY2FsY3VsYXRlVmlzaWJsZUl0ZW1zKCk7XG4gICAgfSwgMjAwKTtcbiAgfVxuXG4gIG9uS2V5RG93bihldmVudD86IGFueSkge1xuICAgIGlmIChldmVudC5rZXlDb2RlID09PSBUaGZLZXlDb2RlRW51bS5hcnJvd1VwIHx8IGV2ZW50LmtleUNvZGUgPT09IFRoZktleUNvZGVFbnVtLmFycm93RG93bikge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuY29udHJvbERyb3Bkb3duVmlzaWJpbGl0eSh0cnVlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gVGhmS2V5Q29kZUVudW0udGFiKSB7XG4gICAgICB0aGlzLmNvbnRyb2xEcm9wZG93blZpc2liaWxpdHkoZmFsc2UpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG4gIHRvZ2dsZURyb3Bkb3duVmlzaWJpbGl0eSgpIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuY29udHJvbERyb3Bkb3duVmlzaWJpbGl0eSghdGhpcy5kcm9wZG93bk9wZW4pO1xuICB9XG5cbiAgb3BlbkRyb3Bkb3duKHRvT3Blbikge1xuXG4gICAgaWYgKHRvT3BlbiAmJiAhdGhpcy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5jb250cm9sRHJvcGRvd25WaXNpYmlsaXR5KHRydWUpO1xuICAgIH1cblxuICB9XG5cbiAgY29udHJvbERyb3Bkb3duVmlzaWJpbGl0eSh0b09wZW46IGJvb2xlYW4pIHtcbiAgICB0b09wZW4gPyB0aGlzLm9wZW4oKSA6IHRoaXMuY2xvc2UoKTtcbiAgfVxuXG4gIHNjcm9sbFRvU2VsZWN0ZWRPcHRpb25zKCkge1xuICBpZiAodGhpcy5zZWxlY3RlZE9wdGlvbnMgJiYgdGhpcy5zZWxlY3RlZE9wdGlvbnMubGVuZ3RoKSB7XG4gICAgICBjb25zdCBpbmRleCA9IHRoaXMub3B0aW9ucy5maW5kSW5kZXgob3B0aW9uID0+IG9wdGlvbi52YWx1ZSA9PT0gdGhpcy5zZWxlY3RlZE9wdGlvbnNbMF0udmFsdWUpO1xuICAgICAgdGhpcy5kcm9wZG93bi5zY3JvbGxUbyhpbmRleCk7XG4gICAgfVxuICB9XG5cbiAgc2V0VmlzaWJsZU9wdGlvbnNEcm9wZG93bihvcHRpb25zKSB7XG4gICAgdGhpcy52aXNpYmxlT3B0aW9uc0Ryb3Bkb3duID0gb3B0aW9ucztcbiAgfVxuXG4gIGNoYW5nZVNlYXJjaChldmVudCkge1xuICAgIChldmVudCAmJiBldmVudC52YWx1ZSkgPyB0aGlzLnNlYXJjaEJ5TGFiZWwoZXZlbnQudmFsdWUsIHRoaXMub3B0aW9ucywgdGhpcy5maWx0ZXJNb2RlKSA6IHRoaXMuc2V0VmlzaWJsZU9wdGlvbnNEcm9wZG93bih0aGlzLm9wdGlvbnMpO1xuXG4gICAgLy8gdGltZW91dCBuZWNlc3PDoXJpbyBwYXJhIHJlcG9zaWNpb25hciBjb3JyZXRhbWVudGUgcXVhbmRvIGRyb3Bkb3duIGVzdGl2ZXIgcHJhIGNpbWEgZG8gaW5wdXQgZSByZWFsaXphciBidXNjYSBubyBpbnB1dFxuICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5hZGp1c3RDb250YWluZXJQb3NpdGlvbigpKTtcbiAgfVxuXG4gIGdldFBsYWNlaG9sZGVyKCkge1xuICAgIHJldHVybiAodGhpcy5wbGFjZWhvbGRlciAmJiAhdGhpcy52aXNpYmxlRGlzY2xhaW1lcnMubGVuZ3RoKSA/IHRoaXMucGxhY2Vob2xkZXIgOiAnJztcbiAgfVxuXG4gIGNsb3NlRGlzY2xhaW1lcih2YWx1ZSkge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5zZWxlY3RlZE9wdGlvbnMuZmluZEluZGV4KG9wdGlvbiA9PiBvcHRpb24udmFsdWUgPT09IHZhbHVlKTtcbiAgICB0aGlzLnNlbGVjdGVkT3B0aW9ucy5zcGxpY2UoaW5kZXgsIDEpO1xuXG4gICAgdGhpcy51cGRhdGVWaXNpYmxlSXRlbXMoKTtcbiAgICB0aGlzLmNhbGxPbkNoYW5nZSh0aGlzLnNlbGVjdGVkT3B0aW9ucyk7XG4gIH1cblxuICB3YXNDbGlja2VkT25Ub2dnbGUoZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMuaW5wdXRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQuY29udGFpbnMoZXZlbnQudGFyZ2V0KSAmJlxuICAgICAgIXRoaXMuaWNvbkVsZW1lbnQubmF0aXZlRWxlbWVudC5jb250YWlucyhldmVudC50YXJnZXQpICYmXG4gICAgICAhdGhpcy5kcm9wZG93bkVsZW1lbnQubmF0aXZlRWxlbWVudC5jb250YWlucyhldmVudC50YXJnZXQpICYmXG4gICAgICAhdGhpcy5kaXNjbGFpbWVyQ29udGFpbmVyRWxlbWVudC5uYXRpdmVFbGVtZW50LmNvbnRhaW5zKGV2ZW50LnRhcmdldCkgJiZcbiAgICAgIHRoaXMuZHJvcGRvd25PcGVuKSB7XG5cbiAgICAgIHRoaXMuY29udHJvbERyb3Bkb3duVmlzaWJpbGl0eShmYWxzZSk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBhZGp1c3RDb250YWluZXJQb3NpdGlvbigpOiB2b2lkIHtcbiAgICB0aGlzLmNvbnRyb2xQb3NpdGlvbi5hZGp1c3RQb3NpdGlvbih0aGZNdWx0aXNlbGVjdENvbnRhaW5lclBvc2l0aW9uRGVmYXVsdCk7XG4gIH1cblxuICBwcml2YXRlIGNsb3NlKCk6IHZvaWQge1xuICAgIHRoaXMuZHJvcGRvd25JY29uID0gJ3RoZi1pY29uLWFycm93LWRvd24nO1xuICAgIHRoaXMuZHJvcGRvd25PcGVuID0gZmFsc2U7XG5cbiAgICB0aGlzLmRyb3Bkb3duLmNvbnRyb2xWaXNpYmlsaXR5KGZhbHNlKTtcbiAgICB0aGlzLnNldFZpc2libGVPcHRpb25zRHJvcGRvd24odGhpcy5vcHRpb25zKTtcblxuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXJzKCk7XG4gIH1cblxuICBwcml2YXRlIGluaXRpYWxpemVMaXN0ZW5lcnMoKTogdm9pZCB7XG4gICAgdGhpcy5jbGlja091dExpc3RlbmVyID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ2RvY3VtZW50JywgJ2NsaWNrJywgKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XG4gICAgICB0aGlzLndhc0NsaWNrZWRPblRvZ2dsZShldmVudCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLnJlc2l6ZUxpc3RlbmVyID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ3dpbmRvdycsICdyZXNpemUnLCAoKSA9PiB7XG4gICAgICB0aGlzLnVwZGF0ZVZpc2libGVJdGVtcygpO1xuXG4gICAgICBpc01vYmlsZSgpID8gdGhpcy5hZGp1c3RDb250YWluZXJQb3NpdGlvbigpIDogdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMub25TY3JvbGwsIHRydWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBvblNjcm9sbCA9ICgpOiB2b2lkID0+IHtcbiAgICB0aGlzLmFkanVzdENvbnRhaW5lclBvc2l0aW9uKCk7XG4gIH1cblxuICBwcml2YXRlIG9wZW4oKTogdm9pZCB7XG4gICAgdGhpcy5kcm9wZG93bkljb24gPSAndGhmLWljb24tYXJyb3ctdXAnO1xuICAgIHRoaXMuZHJvcGRvd25PcGVuID0gdHJ1ZTtcblxuICAgIHRoaXMuZHJvcGRvd24uY29udHJvbFZpc2liaWxpdHkodHJ1ZSk7XG4gICAgdGhpcy5zZXRWaXNpYmxlT3B0aW9uc0Ryb3Bkb3duKHRoaXMub3B0aW9ucyk7XG4gICAgdGhpcy5pbml0aWFsaXplTGlzdGVuZXJzKCk7XG4gICAgdGhpcy5zY3JvbGxUb1NlbGVjdGVkT3B0aW9ucygpO1xuXG4gICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgdGhpcy5zZXRQb3NpdGlvbkRyb3Bkb3duKCk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZUxpc3RlbmVycygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5jbGlja091dExpc3RlbmVyKSB7XG4gICAgICB0aGlzLmNsaWNrT3V0TGlzdGVuZXIoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5yZXNpemVMaXN0ZW5lcikge1xuICAgICAgdGhpcy5yZXNpemVMaXN0ZW5lcigpO1xuICAgIH1cblxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLm9uU2Nyb2xsLCB0cnVlKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0UG9zaXRpb25Ecm9wZG93bigpOiB2b2lkIHtcbiAgICB0aGlzLmNvbnRyb2xQb3NpdGlvbi5zZXRFbGVtZW50cyhcbiAgICAgIHRoaXMuZHJvcGRvd24uY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQsXG4gICAgICB0aGZNdWx0aXNlbGVjdENvbnRhaW5lck9mZnNldCxcbiAgICAgIHRoaXMuaW5wdXRFbGVtZW50LFxuICAgICAgWyd0b3AnLCAnYm90dG9tJ10sXG4gICAgICB0cnVlXG4gICAgKTtcblxuICAgIHRoaXMuYWRqdXN0Q29udGFpbmVyUG9zaXRpb24oKTtcbiAgfVxuXG59XG4iXX0=