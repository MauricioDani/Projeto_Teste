/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ThfStepperStatus } from '../enums/thf-stepper-status.enum';
/** @type {?} */
var thfMediumStepSize = 32;
/** @type {?} */
var thfLargeStepSize = 48;
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente responsável por exibir os círculos dos *steps*.
 */
var ThfStepperCircleComponent = /** @class */ (function () {
    function ThfStepperCircleComponent() {
    }
    Object.defineProperty(ThfStepperCircleComponent.prototype, "isActive", {
        get: /**
         * @return {?}
         */
        function () {
            return this.status === ThfStepperStatus.Active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfStepperCircleComponent.prototype, "isDefault", {
        get: /**
         * @return {?}
         */
        function () {
            return this.status === ThfStepperStatus.Default;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfStepperCircleComponent.prototype, "isDisabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this.status === ThfStepperStatus.Disabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfStepperCircleComponent.prototype, "isDone", {
        get: /**
         * @return {?}
         */
        function () {
            return this.status === ThfStepperStatus.Done;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfStepperCircleComponent.prototype, "isError", {
        get: /**
         * @return {?}
         */
        function () {
            return this.status === ThfStepperStatus.Error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfStepperCircleComponent.prototype, "isLargeStep", {
        get: /**
         * @return {?}
         */
        function () {
            return this.size >= thfLargeStepSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfStepperCircleComponent.prototype, "isMediumStep", {
        get: /**
         * @return {?}
         */
        function () {
            return this.size >= thfMediumStepSize && !this.isLargeStep;
        },
        enumerable: true,
        configurable: true
    });
    ThfStepperCircleComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-stepper-circle',
                    template: "<div class=\"thf-stepper-circle\"\n  [class.thf-stepper-circle-with-icon]=\"icons\"\n  [style.height.px]=\"size\"\n  [style.width.px]=\"size\"\n  [tabindex]=\"isDisabled ? -1 : 0\">\n\n  <span class=\"thf-stepper-circle-content\"\n    [class.thf-icon]=\"icons\"\n    [class.thf-icon-exclamation]=\"icons && isError\"\n    [class.thf-icon-info]=\"icons && (isActive || isDefault || isDisabled)\"\n    [class.thf-icon-ok]=\"icons && isDone\"\n    [class.thf-stepper-circle-content-lg]=\"isLargeStep\"\n    [class.thf-stepper-circle-content-md]=\"isMediumStep\">\n\n    {{ !icons ? content: '' }}\n  </span>\n</div>\n"
                }] }
    ];
    ThfStepperCircleComponent.propDecorators = {
        content: [{ type: Input, args: ['t-content',] }],
        icons: [{ type: Input, args: ['t-icons',] }],
        size: [{ type: Input, args: ['t-size',] }],
        status: [{ type: Input, args: ['t-status',] }]
    };
    return ThfStepperCircleComponent;
}());
export { ThfStepperCircleComponent };
if (false) {
    /** @type {?} */
    ThfStepperCircleComponent.prototype.content;
    /** @type {?} */
    ThfStepperCircleComponent.prototype.icons;
    /** @type {?} */
    ThfStepperCircleComponent.prototype.size;
    /** @type {?} */
    ThfStepperCircleComponent.prototype.status;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXN0ZXBwZXItY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtc3RlcHBlci90aGYtc3RlcHBlci1jaXJjbGUvdGhmLXN0ZXBwZXItY2lyY2xlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7O0lBRTlELGlCQUFpQixHQUFHLEVBQUU7O0lBQ3RCLGdCQUFnQixHQUFHLEVBQUU7Ozs7Ozs7O0FBUzNCO0lBQUE7SUE4Q0EsQ0FBQztJQTVCQyxzQkFBSSwrQ0FBUTs7OztRQUFaO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLGdCQUFnQixDQUFDLE1BQU0sQ0FBQztRQUNqRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGdEQUFTOzs7O1FBQWI7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLEtBQUssZ0JBQWdCLENBQUMsT0FBTyxDQUFDO1FBQ2xELENBQUM7OztPQUFBO0lBRUQsc0JBQUksaURBQVU7Ozs7UUFBZDtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sS0FBSyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUM7UUFDbkQsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSw2Q0FBTTs7OztRQUFWO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLGdCQUFnQixDQUFDLElBQUksQ0FBQztRQUMvQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLDhDQUFPOzs7O1FBQVg7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLEtBQUssZ0JBQWdCLENBQUMsS0FBSyxDQUFDO1FBQ2hELENBQUM7OztPQUFBO0lBRUQsc0JBQUksa0RBQVc7Ozs7UUFBZjtZQUNFLE9BQU8sSUFBSSxDQUFDLElBQUksSUFBSSxnQkFBZ0IsQ0FBQztRQUN2QyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLG1EQUFZOzs7O1FBQWhCO1lBQ0UsT0FBTyxJQUFJLENBQUMsSUFBSSxJQUFJLGlCQUFpQixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUM3RCxDQUFDOzs7T0FBQTs7Z0JBNUNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixrbkJBQWtEO2lCQUNuRDs7OzBCQUlFLEtBQUssU0FBQyxXQUFXO3dCQUdqQixLQUFLLFNBQUMsU0FBUzt1QkFHZixLQUFLLFNBQUMsUUFBUTt5QkFHZCxLQUFLLFNBQUMsVUFBVTs7SUE4Qm5CLGdDQUFDO0NBQUEsQUE5Q0QsSUE4Q0M7U0ExQ1kseUJBQXlCOzs7SUFHcEMsNENBQWlDOztJQUdqQywwQ0FBaUM7O0lBR2pDLHlDQUE4Qjs7SUFHOUIsMkNBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaGZTdGVwcGVyU3RhdHVzIH0gZnJvbSAnLi4vZW51bXMvdGhmLXN0ZXBwZXItc3RhdHVzLmVudW0nO1xuXG5jb25zdCB0aGZNZWRpdW1TdGVwU2l6ZSA9IDMyO1xuY29uc3QgdGhmTGFyZ2VTdGVwU2l6ZSA9IDQ4O1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcmVzcG9uc8OhdmVsIHBvciBleGliaXIgb3MgY8OtcmN1bG9zIGRvcyAqc3RlcHMqLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtc3RlcHBlci1jaXJjbGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXN0ZXBwZXItY2lyY2xlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZTdGVwcGVyQ2lyY2xlQ29tcG9uZW50IHtcblxuICAvLyBDb250ZcO6ZG8gcXVlIGlyw6EgYXBhcmVjZXIgbm8gY8OtcmN1bG8gZG8gKnN0ZXAqLlxuICBASW5wdXQoJ3QtY29udGVudCcpIGNvbnRlbnQ6IGFueTtcblxuICAvLyBEZWZpbmUgc2Ugc2Vyw6NvIGV4aWJpZG9zIMOtY29uZXMgbm8gbHVnYXIgZGUgbsO6bWVyb3Mgbm9zIHN0ZXBzLlxuICBASW5wdXQoJ3QtaWNvbnMnKSBpY29uczogYm9vbGVhbjtcblxuICAvLyBUYW1hbmhvIGRvICpzdGVwLWNpcmNsZSouXG4gIEBJbnB1dCgndC1zaXplJykgc2l6ZTogbnVtYmVyO1xuXG4gIC8vIFN0YXR1cyBkbyAqc3RlcCouXG4gIEBJbnB1dCgndC1zdGF0dXMnKSBzdGF0dXM6IHN0cmluZztcblxuICBnZXQgaXNBY3RpdmUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdHVzID09PSBUaGZTdGVwcGVyU3RhdHVzLkFjdGl2ZTtcbiAgfVxuXG4gIGdldCBpc0RlZmF1bHQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdHVzID09PSBUaGZTdGVwcGVyU3RhdHVzLkRlZmF1bHQ7XG4gIH1cblxuICBnZXQgaXNEaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0dXMgPT09IFRoZlN0ZXBwZXJTdGF0dXMuRGlzYWJsZWQ7XG4gIH1cblxuICBnZXQgaXNEb25lKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnN0YXR1cyA9PT0gVGhmU3RlcHBlclN0YXR1cy5Eb25lO1xuICB9XG5cbiAgZ2V0IGlzRXJyb3IoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdHVzID09PSBUaGZTdGVwcGVyU3RhdHVzLkVycm9yO1xuICB9XG5cbiAgZ2V0IGlzTGFyZ2VTdGVwKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnNpemUgPj0gdGhmTGFyZ2VTdGVwU2l6ZTtcbiAgfVxuXG4gIGdldCBpc01lZGl1bVN0ZXAoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc2l6ZSA+PSB0aGZNZWRpdW1TdGVwU2l6ZSAmJiAhdGhpcy5pc0xhcmdlU3RlcDtcbiAgfVxuXG59XG4iXX0=