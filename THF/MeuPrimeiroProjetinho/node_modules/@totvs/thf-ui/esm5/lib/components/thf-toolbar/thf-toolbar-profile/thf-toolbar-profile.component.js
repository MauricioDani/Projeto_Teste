/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ThfControlPositionService } from '../../../services/thf-control-position/thf-control-position.service';
/** @type {?} */
var thfToolbarProfileDefaultAvatar = './assets/images/totvs-logo-user.svg';
/**
 * \@docsPrivate
 *
 * \@docsExtends ThfToolbarProfileComponent
 *
 * \@description
 *
 * Componente `thf-toolbar-profile`.
 */
var ThfToolbarProfileComponent = /** @class */ (function () {
    function ThfToolbarProfileComponent() {
        this.defaultAvatar = thfToolbarProfileDefaultAvatar;
    }
    ThfToolbarProfileComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-toolbar-profile',
                    template: "<div #profileElement class=\"thf-toolbar-profile thf-clickable\" (click)=\"popup.toggle()\">\n  <ng-container *ngIf=\"profile.avatar; then avatar; else userIcon\"></ng-container>\n</div>\n\n<thf-popup #popup\n  [t-actions]=\"profileActions\"\n  [t-target]=\"profileElement\">\n\n  <div t-popup-header-template\n    *ngIf=\"profile?.title\"\n    class=\"thf-toolbar-profile-item-header\">\n\n    <thf-avatar\n      class=\"thf-toolbar-profile-item-avatar\"\n      t-size=\"sm\"\n      [t-src]=\"profile.avatar || defaultAvatar\">\n    </thf-avatar>\n\n    <div>\n      <div class=\"thf-toolbar-profile-item-header-title\">\n        {{ profile.title }}\n      </div>\n\n      <div *ngIf=\"profile.subtitle\" class=\"thf-toolbar-profile-item-header-subtitle\">\n        {{ profile.subtitle }}\n      </div>\n    </div>\n  </div>\n\n</thf-popup>\n\n<ng-template #avatar>\n  <thf-avatar t-size=\"xs\" [t-src]=\"profile.avatar\"></thf-avatar>\n</ng-template>\n\n<ng-template #userIcon>\n  <span class=\"thf-icon thf-icon-user thf-toolbar-icon\"></span>\n</ng-template>\n",
                    providers: [ThfControlPositionService]
                }] }
    ];
    ThfToolbarProfileComponent.propDecorators = {
        profile: [{ type: Input, args: ['t-profile',] }],
        profileActions: [{ type: Input, args: ['t-profile-actions',] }]
    };
    return ThfToolbarProfileComponent;
}());
export { ThfToolbarProfileComponent };
if (false) {
    /**
     * Objeto que implementa a interface `ThfToolbarProfile`.
     * @type {?}
     */
    ThfToolbarProfileComponent.prototype.profile;
    /**
     * Define uma lista de ações.
     * @type {?}
     */
    ThfToolbarProfileComponent.prototype.profileActions;
    /** @type {?} */
    ThfToolbarProfileComponent.prototype.defaultAvatar;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRvb2xiYXItcHJvZmlsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXRvb2xiYXIvdGhmLXRvb2xiYXItcHJvZmlsZS90aGYtdG9vbGJhci1wcm9maWxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0scUVBQXFFLENBQUM7O0lBSzFHLDhCQUE4QixHQUFHLHFDQUFxQzs7Ozs7Ozs7OztBQVc1RTtJQUFBO1FBYVcsa0JBQWEsR0FBRyw4QkFBOEIsQ0FBQztJQUUxRCxDQUFDOztnQkFmQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0Isb2pDQUFtRDtvQkFDbkQsU0FBUyxFQUFFLENBQUUseUJBQXlCLENBQUU7aUJBQ3pDOzs7MEJBSUUsS0FBSyxTQUFDLFdBQVc7aUNBR2pCLEtBQUssU0FBQyxtQkFBbUI7O0lBSTVCLGlDQUFDO0NBQUEsQUFmRCxJQWVDO1NBVlksMEJBQTBCOzs7Ozs7SUFHckMsNkNBQStDOzs7OztJQUcvQyxvREFBcUU7O0lBRXJFLG1EQUF3RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVGhmQ29udHJvbFBvc2l0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL3RoZi1jb250cm9sLXBvc2l0aW9uL3RoZi1jb250cm9sLXBvc2l0aW9uLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBUaGZUb29sYmFyUHJvZmlsZSB9IGZyb20gJy4vdGhmLXRvb2xiYXItcHJvZmlsZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgVGhmVG9vbGJhckFjdGlvbiB9IGZyb20gJy4uL3RoZi10b29sYmFyLWFjdGlvbi5pbnRlcmZhY2UnO1xuXG5jb25zdCB0aGZUb29sYmFyUHJvZmlsZURlZmF1bHRBdmF0YXIgPSAnLi9hc3NldHMvaW1hZ2VzL3RvdHZzLWxvZ28tdXNlci5zdmcnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkb2NzRXh0ZW5kcyBUaGZUb29sYmFyUHJvZmlsZUNvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgYHRoZi10b29sYmFyLXByb2ZpbGVgLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtdG9vbGJhci1wcm9maWxlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi10b29sYmFyLXByb2ZpbGUuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFsgVGhmQ29udHJvbFBvc2l0aW9uU2VydmljZSBdXG59KVxuZXhwb3J0IGNsYXNzIFRoZlRvb2xiYXJQcm9maWxlQ29tcG9uZW50IHtcblxuICAvKiogT2JqZXRvIHF1ZSBpbXBsZW1lbnRhIGEgaW50ZXJmYWNlIGBUaGZUb29sYmFyUHJvZmlsZWAuICovXG4gIEBJbnB1dCgndC1wcm9maWxlJykgcHJvZmlsZTogVGhmVG9vbGJhclByb2ZpbGU7XG5cbiAgLyoqIERlZmluZSB1bWEgbGlzdGEgZGUgYcOnw7Vlcy4gKi9cbiAgQElucHV0KCd0LXByb2ZpbGUtYWN0aW9ucycpIHByb2ZpbGVBY3Rpb25zPzogQXJyYXk8VGhmVG9vbGJhckFjdGlvbj47XG5cbiAgcmVhZG9ubHkgZGVmYXVsdEF2YXRhciA9IHRoZlRvb2xiYXJQcm9maWxlRGVmYXVsdEF2YXRhcjtcblxufVxuIl19