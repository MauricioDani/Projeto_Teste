/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ThfBreadcrumbFavoriteService } from './thf-breadcrumb-favorite.service';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que renderiza o servi√ßo de favoritar do thf-breadcrumb.
 */
var ThfBreadcrumbFavoriteComponent = /** @class */ (function () {
    function ThfBreadcrumbFavoriteComponent(service) {
        this.service = service;
        this.favorite = false;
    }
    /**
     * @return {?}
     */
    ThfBreadcrumbFavoriteComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.service.configService(this.favoriteService, this.paramsService, this.itemActive);
        this.getStatusFavorite();
    };
    /**
     * @return {?}
     */
    ThfBreadcrumbFavoriteComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.getSubscription) {
            this.getSubscription.unsubscribe();
        }
        if (this.setSubscription) {
            this.setSubscription.unsubscribe();
        }
    };
    /**
     * @return {?}
     */
    ThfBreadcrumbFavoriteComponent.prototype.toggleFavoriteAction = /**
     * @return {?}
     */
    function () {
        this.favorite ? this.setStatusFavorite(false) : this.setStatusFavorite(true);
    };
    /**
     * @private
     * @return {?}
     */
    ThfBreadcrumbFavoriteComponent.prototype.getStatusFavorite = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.getSubscription = this.service.getFavorite().subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) { return _this.favorite = result.isFavorite; }));
    };
    /**
     * @private
     * @param {?} status
     * @return {?}
     */
    ThfBreadcrumbFavoriteComponent.prototype.setStatusFavorite = /**
     * @private
     * @param {?} status
     * @return {?}
     */
    function (status) {
        var _this = this;
        this.setSubscription = this.service.sendStatusFavorite(status).subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) { return _this.favorite = result.isFavorite; }));
    };
    ThfBreadcrumbFavoriteComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-breadcrumb-favorite',
                    template: "<div class=\"thf-breadcrumb-favorite thf-clickable\" (click)=\"toggleFavoriteAction()\">\n\n  <span\n    class=\"thf-icon thf-icon-star thf-breadcrumb-favorite-star thf-clickable\"\n    [class.thf-breadcrumb-favorite-star-active]=\"favorite\">\n  </span>\n\n  <span class=\"thf-hidden-sm thf-breadcrumb-favorite-label\" *ngIf=\"favorite\">Desfavoritar</span>\n  <span class=\"thf-hidden-sm thf-breadcrumb-favorite-label\" *ngIf=\"!favorite\">Favoritar</span>\n</div>\n",
                    providers: [ThfBreadcrumbFavoriteService]
                }] }
    ];
    /** @nocollapse */
    ThfBreadcrumbFavoriteComponent.ctorParameters = function () { return [
        { type: ThfBreadcrumbFavoriteService }
    ]; };
    ThfBreadcrumbFavoriteComponent.propDecorators = {
        favoriteService: [{ type: Input, args: ['t-favorite-service',] }],
        itemActive: [{ type: Input, args: ['t-item-active',] }],
        paramsService: [{ type: Input, args: ['t-params-service',] }]
    };
    return ThfBreadcrumbFavoriteComponent;
}());
export { ThfBreadcrumbFavoriteComponent };
if (false) {
    /** @type {?} */
    ThfBreadcrumbFavoriteComponent.prototype.favorite;
    /**
     * @type {?}
     * @private
     */
    ThfBreadcrumbFavoriteComponent.prototype.getSubscription;
    /**
     * @type {?}
     * @private
     */
    ThfBreadcrumbFavoriteComponent.prototype.setSubscription;
    /** @type {?} */
    ThfBreadcrumbFavoriteComponent.prototype.favoriteService;
    /** @type {?} */
    ThfBreadcrumbFavoriteComponent.prototype.itemActive;
    /** @type {?} */
    ThfBreadcrumbFavoriteComponent.prototype.paramsService;
    /**
     * @type {?}
     * @private
     */
    ThfBreadcrumbFavoriteComponent.prototype.service;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWJyZWFkY3J1bWItZmF2b3JpdGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1icmVhZGNydW1iL3RoZi1icmVhZGNydW1iLWZhdm9yaXRlL3RoZi1icmVhZGNydW1iLWZhdm9yaXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBS3BFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDOzs7Ozs7OztBQVNqRjtJQW9CRSx3Q0FBb0IsT0FBcUM7UUFBckMsWUFBTyxHQUFQLE9BQU8sQ0FBOEI7UUFiekQsYUFBUSxHQUFZLEtBQUssQ0FBQztJQWFtQyxDQUFDOzs7O0lBRTlELGlEQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdEYsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDM0IsQ0FBQzs7OztJQUVELG9EQUFXOzs7SUFBWDtRQUVFLElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN4QixJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ3BDO1FBRUQsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxlQUFlLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDcEM7SUFDSCxDQUFDOzs7O0lBRUQsNkRBQW9COzs7SUFBcEI7UUFDRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvRSxDQUFDOzs7OztJQUVPLDBEQUFpQjs7OztJQUF6QjtRQUFBLGlCQUVDO1FBREMsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVM7Ozs7UUFBQyxVQUFBLE1BQU0sSUFBSSxPQUFBLEtBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFVBQVUsRUFBakMsQ0FBaUMsRUFBQyxDQUFDO0lBQzNHLENBQUM7Ozs7OztJQUVPLDBEQUFpQjs7Ozs7SUFBekIsVUFBMEIsTUFBTTtRQUFoQyxpQkFFQztRQURDLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQSxNQUFNLElBQUksT0FBQSxLQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxVQUFVLEVBQWpDLENBQWlDLEVBQUMsQ0FBQztJQUN4SCxDQUFDOztnQkFoREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLGdlQUF1RDtvQkFDdkQsU0FBUyxFQUFFLENBQUMsNEJBQTRCLENBQUM7aUJBQzFDOzs7O2dCQWJRLDRCQUE0Qjs7O2tDQXFCbEMsS0FBSyxTQUFDLG9CQUFvQjs2QkFHMUIsS0FBSyxTQUFDLGVBQWU7Z0NBR3JCLEtBQUssU0FBQyxrQkFBa0I7O0lBZ0MzQixxQ0FBQztDQUFBLEFBbERELElBa0RDO1NBN0NZLDhCQUE4Qjs7O0lBRXpDLGtEQUEwQjs7Ozs7SUFDMUIseURBQXNDOzs7OztJQUN0Qyx5REFBc0M7O0lBR3RDLHlEQUFxRDs7SUFHckQsb0RBQXNEOztJQUd0RCx1REFBaUQ7Ozs7O0lBRXJDLGlEQUE2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBUaGZCcmVhZGNydW1iSXRlbSB9IGZyb20gJy4vLi4vdGhmLWJyZWFkY3J1bWItaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgVGhmQnJlYWRjcnVtYkZhdm9yaXRlU2VydmljZSB9IGZyb20gJy4vdGhmLWJyZWFkY3J1bWItZmF2b3JpdGUuc2VydmljZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBxdWUgcmVuZGVyaXphIG8gc2VydmnDp28gZGUgZmF2b3JpdGFyIGRvIHRoZi1icmVhZGNydW1iLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtYnJlYWRjcnVtYi1mYXZvcml0ZScsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtYnJlYWRjcnVtYi1mYXZvcml0ZS5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW1RoZkJyZWFkY3J1bWJGYXZvcml0ZVNlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIFRoZkJyZWFkY3J1bWJGYXZvcml0ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICBmYXZvcml0ZTogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIGdldFN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICBwcml2YXRlIHNldFN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIC8vIFVSTCBkbyBzZXJ2acOnby5cbiAgQElucHV0KCd0LWZhdm9yaXRlLXNlcnZpY2UnKSBmYXZvcml0ZVNlcnZpY2U6IHN0cmluZztcblxuICAvLyBJdGVtIGRvIGJyZWFkY3J1bWIgYXRpdm8uXG4gIEBJbnB1dCgndC1pdGVtLWFjdGl2ZScpIGl0ZW1BY3RpdmU6IFRoZkJyZWFkY3J1bWJJdGVtO1xuXG4gIC8vIFBhcsOibWV0cm8gcXVlIHNlcsOhIGVudmlhZG8ganVudG8gY29tIG8gc2VydmnDp28gZGUgZmF2b3JpdGFyLlxuICBASW5wdXQoJ3QtcGFyYW1zLXNlcnZpY2UnKSBwYXJhbXNTZXJ2aWNlOiBvYmplY3Q7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzZXJ2aWNlOiBUaGZCcmVhZGNydW1iRmF2b3JpdGVTZXJ2aWNlKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnNlcnZpY2UuY29uZmlnU2VydmljZSh0aGlzLmZhdm9yaXRlU2VydmljZSwgdGhpcy5wYXJhbXNTZXJ2aWNlLCB0aGlzLml0ZW1BY3RpdmUpO1xuICAgIHRoaXMuZ2V0U3RhdHVzRmF2b3JpdGUoKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuXG4gICAgaWYgKHRoaXMuZ2V0U3Vic2NyaXB0aW9uKSB7XG4gICAgICB0aGlzLmdldFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnNldFN1YnNjcmlwdGlvbikge1xuICAgICAgdGhpcy5zZXRTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cblxuICB0b2dnbGVGYXZvcml0ZUFjdGlvbigpIHtcbiAgICB0aGlzLmZhdm9yaXRlID8gdGhpcy5zZXRTdGF0dXNGYXZvcml0ZShmYWxzZSkgOiB0aGlzLnNldFN0YXR1c0Zhdm9yaXRlKHRydWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRTdGF0dXNGYXZvcml0ZSgpIHtcbiAgICB0aGlzLmdldFN1YnNjcmlwdGlvbiA9IHRoaXMuc2VydmljZS5nZXRGYXZvcml0ZSgpLnN1YnNjcmliZShyZXN1bHQgPT4gdGhpcy5mYXZvcml0ZSA9IHJlc3VsdC5pc0Zhdm9yaXRlKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0U3RhdHVzRmF2b3JpdGUoc3RhdHVzKSB7XG4gICAgdGhpcy5zZXRTdWJzY3JpcHRpb24gPSB0aGlzLnNlcnZpY2Uuc2VuZFN0YXR1c0Zhdm9yaXRlKHN0YXR1cykuc3Vic2NyaWJlKHJlc3VsdCA9PiB0aGlzLmZhdm9yaXRlID0gcmVzdWx0LmlzRmF2b3JpdGUpO1xuICB9XG5cbn1cbiJdfQ==