/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ContentChildren, QueryList, ViewChild } from '@angular/core';
import { ThfTabComponent } from './thf-tab/thf-tab.component';
import { ThfTabDropdownComponent } from './thf-tab-dropdown/thf-tab-dropdown.component';
import { ThfTabsBaseComponent } from './thf-tabs-base.component';
/** @type {?} */
var thfTabsMaxNumberOfTabs = 5;
/**
 * \@docsExtends ThfTabsBaseComponent
 *
 * \@example
 *
 * <example name="thf-tabs-basic" title="Totvs Tabs Basic">
 *  <file name="sample-thf-tabs-basic/sample-thf-tabs-basic.component.html"> </file>
 *  <file name="sample-thf-tabs-basic/sample-thf-tabs-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-tabs-labs" title="Totvs Tabs Labs">
 *  <file name="sample-thf-tabs-labs/sample-thf-tabs-labs.component.html"> </file>
 *  <file name="sample-thf-tabs-labs/sample-thf-tabs-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-tabs-travel" title="Totvs Tabs - Travel">
 *  <file name="sample-thf-tabs-travel/sample-thf-tabs-travel.component.html"> </file>
 *  <file name="sample-thf-tabs-travel/sample-thf-tabs-travel.component.ts"> </file>
 * </example>
 *
 * <example name="thf-tabs-business-conf" title="Totvs Tabs - Business Conference">
 *  <file name="sample-thf-tabs-business-conf/sample-thf-tabs-business-conf.component.html"> </file>
 *  <file name="sample-thf-tabs-business-conf/sample-thf-tabs-business-conf.component.ts"> </file>
 * </example>
 */
var ThfTabsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfTabsComponent, _super);
    function ThfTabsComponent(changeDetector) {
        var _this = _super.call(this) || this;
        _this.changeDetector = changeDetector;
        _this.maxNumberOfTabs = thfTabsMaxNumberOfTabs;
        return _this;
    }
    Object.defineProperty(ThfTabsComponent.prototype, "isShowTabDropdown", {
        get: /**
         * @return {?}
         */
        function () {
            return this.visibleTabs.length > this.maxNumberOfTabs;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfTabsComponent.prototype, "overflowedTabs", {
        // tabs que serão apresentadas na aba "Mais"
        get: 
        // tabs que serão apresentadas na aba "Mais"
        /**
         * @return {?}
         */
        function () {
            var _this = this;
            return this.visibleTabs.filter((/**
             * @param {?} _tab
             * @param {?} index
             * @return {?}
             */
            function (_tab, index) { return index > (_this.maxNumberOfTabs - 2); }));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfTabsComponent.prototype, "visibleTabs", {
        get: /**
         * @return {?}
         */
        function () {
            return this.tabs.filter((/**
             * @param {?} tab
             * @return {?}
             */
            function (tab) { return !tab.hide; }));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ThfTabsComponent.prototype.closePopover = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var containsPopoverVisible = this.tabDropdown && this.tabDropdown.popover && !this.tabDropdown.popover.isHidden;
        if (containsPopoverVisible) {
            this.tabDropdown.popover.close();
        }
    };
    /**
     * @param {?} tab
     * @return {?}
     */
    ThfTabsComponent.prototype.isVisibleTab = /**
     * @param {?} tab
     * @return {?}
     */
    function (tab) {
        /** @type {?} */
        var visibleTabIndex = this.visibleTabs.findIndex((/**
         * @param {?} visibleTab
         * @return {?}
         */
        function (visibleTab) { return visibleTab.id === tab.id; }));
        return (this.visibleTabs.length <= this.maxNumberOfTabs) || (visibleTabIndex < (this.maxNumberOfTabs - 1));
    };
    // Função disparada quando alguma tab ficar ativa
    // Função disparada quando alguma tab ficar ativa
    /**
     * @param {?} tab
     * @return {?}
     */
    ThfTabsComponent.prototype.onTabActive = 
    // Função disparada quando alguma tab ficar ativa
    /**
     * @param {?} tab
     * @return {?}
     */
    function (tab) {
        this.previousActiveTab = this.tabs.find((/**
         * @param {?} tabChild
         * @return {?}
         */
        function (tabChild) { return tabChild.active && tabChild.id !== tab.id; }));
        this.deactivateTab();
    };
    // funcao será disparada quando mudar o estado do thfTab para desabilitado ou escondido.
    // funcao será disparada quando mudar o estado do thfTab para desabilitado ou escondido.
    /**
     * @param {?} tab
     * @return {?}
     */
    ThfTabsComponent.prototype.onTabChangeState = 
    // funcao será disparada quando mudar o estado do thfTab para desabilitado ou escondido.
    /**
     * @param {?} tab
     * @return {?}
     */
    function (tab) {
        if (tab.active) {
            tab.active = false;
            this.activeDistinctTab();
            this.changeDetector.detectChanges();
        }
    };
    // selectiona a aba informada por parametro, caso houver click faz a emição do evento.
    // selectiona a aba informada por parametro, caso houver click faz a emição do evento.
    /**
     * @param {?} tab
     * @return {?}
     */
    ThfTabsComponent.prototype.selectedTab = 
    // selectiona a aba informada por parametro, caso houver click faz a emição do evento.
    /**
     * @param {?} tab
     * @return {?}
     */
    function (tab) {
        tab.active = true;
        if (tab.click) {
            tab.click.emit(tab);
        }
        this.changeDetector.detectChanges();
    };
    /**
     * @param {?} _i
     * @param {?} tab
     * @return {?}
     */
    ThfTabsComponent.prototype.trackByFn = /**
     * @param {?} _i
     * @param {?} tab
     * @return {?}
     */
    function (_i, tab) {
        return tab.id;
    };
    // ativa a previousActiveTab ou primeira tab encontrada.
    // ativa a previousActiveTab ou primeira tab encontrada.
    /**
     * @private
     * @return {?}
     */
    ThfTabsComponent.prototype.activeDistinctTab = 
    // ativa a previousActiveTab ou primeira tab encontrada.
    /**
     * @private
     * @return {?}
     */
    function () {
        if (this.previousActiveTab) {
            this.previousActiveTab.active = true;
        }
        else {
            this.activeFirstTab();
        }
    };
    // Ativa a primeira Tab que não estiver desabilitada ou escondida.
    // Ativa a primeira Tab que não estiver desabilitada ou escondida.
    /**
     * @private
     * @return {?}
     */
    ThfTabsComponent.prototype.activeFirstTab = 
    // Ativa a primeira Tab que não estiver desabilitada ou escondida.
    /**
     * @private
     * @return {?}
     */
    function () {
        this.tabs.some((/**
         * @param {?} tabChild
         * @return {?}
         */
        function (tabChild) {
            if (!tabChild.disabled && !tabChild.hide) {
                tabChild.active = true;
                return true;
            }
        }));
    };
    // desativa previousActiveTab e dispara a detecção de mudança.
    // desativa previousActiveTab e dispara a detecção de mudança.
    /**
     * @private
     * @return {?}
     */
    ThfTabsComponent.prototype.deactivateTab = 
    // desativa previousActiveTab e dispara a detecção de mudança.
    /**
     * @private
     * @return {?}
     */
    function () {
        if (this.previousActiveTab) {
            this.previousActiveTab.active = false;
            this.changeDetector.detectChanges();
        }
    };
    ThfTabsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-tabs',
                    template: "<div class=\"thf-tabs-header\">\n\n  <ng-container *ngFor=\"let tab of tabs; trackBy: trackByFn\">\n    <thf-tab-button *ngIf=\"isVisibleTab(tab)\"\n      class=\"thf-tab-button\"\n      [t-active]=\"tab.active\"\n      [t-disabled]=\"tab.disabled\"\n      [t-id]=\"tab.id\"\n      [t-hide]=\"tab.hide\"\n      [t-label]=\"tab.label\"\n      [t-small]=\"small\"\n      (keyup.enter)=\"closePopover()\"\n      (t-activated)=\"onTabActive(tab)\"\n      (t-change-state)=\"onTabChangeState(tab)\"\n      (t-click)=\"selectedTab(tab)\">\n    </thf-tab-button>\n  </ng-container>\n\n  <thf-tab-dropdown #tabDropdown\n    *ngIf=\"isShowTabDropdown\"\n    class=\"thf-tab-button thf-tab-dropdown\"\n    t-label=\"Mais\"\n    [t-small]=\"small\"\n    [t-tabs]=\"overflowedTabs\"\n    (t-activated)=\"onTabActive($event)\"\n    (t-change-state)=\"onTabChangeState($event)\"\n    (t-click)=\"selectedTab($event)\">\n  </thf-tab-dropdown>\n</div>\n\n<div class=\"thf-tabs-container\">\n  <ng-content></ng-content>\n</div>\n\n"
                }] }
    ];
    /** @nocollapse */
    ThfTabsComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    ThfTabsComponent.propDecorators = {
        tabs: [{ type: ContentChildren, args: [ThfTabComponent,] }],
        tabDropdown: [{ type: ViewChild, args: ['tabDropdown', { static: true },] }]
    };
    return ThfTabsComponent;
}(ThfTabsBaseComponent));
export { ThfTabsComponent };
if (false) {
    /** @type {?} */
    ThfTabsComponent.prototype.maxNumberOfTabs;
    /**
     * @type {?}
     * @private
     */
    ThfTabsComponent.prototype.previousActiveTab;
    /** @type {?} */
    ThfTabsComponent.prototype.tabs;
    /** @type {?} */
    ThfTabsComponent.prototype.tabDropdown;
    /**
     * @type {?}
     * @private
     */
    ThfTabsComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,