/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';
import { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';
/**
 * \@docsExtends ThfInputBaseComponent
 *
 * \@example
 *
 * <example name="thf-input-basic" title="Totvs Input Basic">
 *  <file name="sample-thf-input-basic/sample-thf-input-basic.component.html"> </file>
 *  <file name="sample-thf-input-basic/sample-thf-input-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-input-labs" title="Totvs Input Labs">
 *  <file name="sample-thf-input-labs/sample-thf-input-labs.component.html"> </file>
 *  <file name="sample-thf-input-labs/sample-thf-input-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-input-reactive-form" title="Totvs Input - Reactive Form">
 *  <file name="sample-thf-input-reactive-form/sample-thf-input-reactive-form.component.html"> </file>
 *  <file name="sample-thf-input-reactive-form/sample-thf-input-reactive-form.component.ts"> </file>
 * </example>
 */
var ThfInputComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfInputComponent, _super);
    function ThfInputComponent(el) {
        return _super.call(this, el) || this;
    }
    /**
     * @param {?} c
     * @return {?}
     */
    ThfInputComponent.prototype.extraValidation = /**
     * @param {?} c
     * @return {?}
     */
    function (c) {
        return null;
    };
    ThfInputComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-input',
                    template: "<thf-field-container\n  [t-help]=\"help\"\n  [t-label]=\"label\"\n  [t-optional]=\"!required && optional\">\n\n  <div class=\"thf-field-container-content\">\n    <div *ngIf=\"icon\" class=\"thf-field-icon-container-left\">\n      <span class=\"thf-icon thf-field-icon {{ icon }}\" [class.thf-field-icon-disabled]=\"disabled\"></span>\n    </div>\n\n    <input #inp\n      class=\"thf-input\"\n      [attr.name]=\"name\"\n      [class.thf-input-icon-left]=\"icon\"\n      [class.thf-input-icon-right]=\"clean\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [type]=\"type\"\n      (blur)=\"eventOnBlur($event)\"\n      (click)=\"eventOnClick($event)\"\n      (focus)=\"eventOnFocus($event)\"\n      (input)=\"eventOnInput($event)\">\n\n    <div class=\"thf-field-icon-container-right\">\n      <thf-clean [t-element-ref]=\"inputEl\" (t-change-event)=\"clear($event)\"></thf-clean>\n    </div>\n  </div>\n\n  <thf-field-container-bottom\n    [t-error-pattern]=\"getErrorPattern()\">\n  </thf-field-container-bottom>\n\n</thf-field-container>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfInputComponent; })),
                            multi: true,
                        },
                        {
                            provide: NG_VALIDATORS,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ThfInputComponent; })),
                            multi: true,
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    ThfInputComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ThfInputComponent;
}(ThfInputGeneric));
export { ThfInputComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZmllbGQvdGhmLWlucHV0L3RoZi1pbnB1dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEUsT0FBTyxFQUFtQixpQkFBaUIsRUFBRSxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVuRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNCekU7SUFldUMsNkNBQWU7SUFFcEQsMkJBQVksRUFBYztlQUN4QixrQkFBTSxFQUFFLENBQUM7SUFDWCxDQUFDOzs7OztJQUVELDJDQUFlOzs7O0lBQWYsVUFBZ0IsQ0FBa0I7UUFDaEMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOztnQkF2QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQix1bkNBQXlDO29CQUN6QyxTQUFTLEVBQUU7d0JBQ1g7NEJBQ0UsT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsaUJBQWlCLEVBQWpCLENBQWlCLEVBQUM7NEJBQ2hELEtBQUssRUFBRSxJQUFJO3lCQUNaO3dCQUNEOzRCQUNFLE9BQU8sRUFBRSxhQUFhOzRCQUN0QixXQUFXLEVBQUUsVUFBVTs7OzRCQUFDLGNBQU0sT0FBQSxpQkFBaUIsRUFBakIsQ0FBaUIsRUFBQzs0QkFDaEQsS0FBSyxFQUFFLElBQUk7eUJBQ1o7cUJBQUM7aUJBQ0g7Ozs7Z0JBdkNtQixVQUFVOztJQWtEOUIsd0JBQUM7Q0FBQSxBQXpCRCxDQWV1QyxlQUFlLEdBVXJEO1NBVlksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIE5HX1ZBTFVFX0FDQ0VTU09SLCBOR19WQUxJREFUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBUaGZJbnB1dEdlbmVyaWMgfSBmcm9tICcuLi90aGYtaW5wdXQtZ2VuZXJpYy90aGYtaW5wdXQtZ2VuZXJpYyc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFRoZklucHV0QmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1pbnB1dC1iYXNpY1wiIHRpdGxlPVwiVG90dnMgSW5wdXQgQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1pbnB1dC1iYXNpYy9zYW1wbGUtdGhmLWlucHV0LWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1pbnB1dC1iYXNpYy9zYW1wbGUtdGhmLWlucHV0LWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1pbnB1dC1sYWJzXCIgdGl0bGU9XCJUb3R2cyBJbnB1dCBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtaW5wdXQtbGFicy9zYW1wbGUtdGhmLWlucHV0LWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWlucHV0LWxhYnMvc2FtcGxlLXRoZi1pbnB1dC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1pbnB1dC1yZWFjdGl2ZS1mb3JtXCIgdGl0bGU9XCJUb3R2cyBJbnB1dCAtIFJlYWN0aXZlIEZvcm1cIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1pbnB1dC1yZWFjdGl2ZS1mb3JtL3NhbXBsZS10aGYtaW5wdXQtcmVhY3RpdmUtZm9ybS5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtaW5wdXQtcmVhY3RpdmUtZm9ybS9zYW1wbGUtdGhmLWlucHV0LXJlYWN0aXZlLWZvcm0uY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLWlucHV0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1pbnB1dC5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW1xuICB7XG4gICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGhmSW5wdXRDb21wb25lbnQpLFxuICAgIG11bHRpOiB0cnVlLFxuICB9LFxuICB7XG4gICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcbiAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUaGZJbnB1dENvbXBvbmVudCksXG4gICAgbXVsdGk6IHRydWUsXG4gIH1dXG59KVxuZXhwb3J0IGNsYXNzIFRoZklucHV0Q29tcG9uZW50IGV4dGVuZHMgVGhmSW5wdXRHZW5lcmljIHtcblxuICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZikge1xuICAgIHN1cGVyKGVsKTtcbiAgfVxuXG4gIGV4dHJhVmFsaWRhdGlvbihjOiBBYnN0cmFjdENvbnRyb2wpOiB7IFtrZXk6IHN0cmluZ106IGFueTsgfSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxufVxuIl19