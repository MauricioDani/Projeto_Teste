/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { ThfButtonModule } from '../thf-button/thf-button.module';
import { ThfPopupModule } from '../thf-popup/thf-popup.module';
import { ThfListViewComponent } from './thf-list-view.component';
import { ThfListViewContentTemplateDirective } from './thf-list-view-content-template/thf-list-view-content-template.directive';
import { ThfListViewDetailTemplateDirective } from './thf-list-view-detail-template/thf-list-view-detail-template.directive';
/**
 * \@description
 *
 * Módulo do componente `thf-list-view`.
 *
 * > Para o correto funcionamento do componente `thf-list-view`, deve ser importado o módulo `BrowserAnimationsModule` no
 * > módulo principal da sua aplicação.
 *
 * Módulo da aplicação:
 * ```
 * import { BrowserAnimationsModule } from '\@angular/platform-browser/animations';
 * import { ThfModule } from '\@totvs/thf-ui';
 * ...
 *
 * \@NgModule({
 *   imports: [
 *     BrowserModule,
 *     BrowserAnimationsModule,
 *     ...
 *     ThfModule
 *   ],
 *   declarations: [
 *     AppComponent,
 *     ...
 *   ],
 *   providers: [],
 *   bootstrap: [AppComponent]
 * })
 * export class AppModule { }
 * ```
 */
var ThfListViewModule = /** @class */ (function () {
    function ThfListViewModule() {
    }
    ThfListViewModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        RouterModule,
                        ThfButtonModule,
                        ThfPopupModule
                    ],
                    declarations: [
                        ThfListViewComponent,
                        ThfListViewContentTemplateDirective,
                        ThfListViewDetailTemplateDirective
                    ],
                    exports: [
                        ThfListViewComponent,
                        ThfListViewContentTemplateDirective,
                        ThfListViewDetailTemplateDirective
                    ],
                    providers: [],
                    schemas: []
                },] }
    ];
    return ThfListViewModule;
}());
export { ThfListViewModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWxpc3Qtdmlldy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWxpc3Qtdmlldy90aGYtbGlzdC12aWV3Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFL0QsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDakUsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sMkVBQTJFLENBQUM7QUFDaEksT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0seUVBQXlFLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUM3SDtJQUFBO0lBb0JpQyxDQUFDOztnQkFwQmpDLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixZQUFZO3dCQUNaLGVBQWU7d0JBQ2YsY0FBYztxQkFDZjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1osb0JBQW9CO3dCQUNwQixtQ0FBbUM7d0JBQ25DLGtDQUFrQztxQkFDbkM7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLG9CQUFvQjt3QkFDcEIsbUNBQW1DO3dCQUNuQyxrQ0FBa0M7cUJBQ25DO29CQUNELFNBQVMsRUFBRSxFQUFFO29CQUNiLE9BQU8sRUFBRSxFQUFFO2lCQUNaOztJQUNnQyx3QkFBQztDQUFBLEFBcEJsQyxJQW9Ca0M7U0FBckIsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBUaGZCdXR0b25Nb2R1bGUgfSBmcm9tICcuLi90aGYtYnV0dG9uL3RoZi1idXR0b24ubW9kdWxlJztcbmltcG9ydCB7IFRoZlBvcHVwTW9kdWxlIH0gZnJvbSAnLi4vdGhmLXBvcHVwL3RoZi1wb3B1cC5tb2R1bGUnO1xuXG5pbXBvcnQgeyBUaGZMaXN0Vmlld0NvbXBvbmVudCB9IGZyb20gJy4vdGhmLWxpc3Qtdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGhmTGlzdFZpZXdDb250ZW50VGVtcGxhdGVEaXJlY3RpdmUgfSBmcm9tICcuL3RoZi1saXN0LXZpZXctY29udGVudC10ZW1wbGF0ZS90aGYtbGlzdC12aWV3LWNvbnRlbnQtdGVtcGxhdGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRoZkxpc3RWaWV3RGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUgfSBmcm9tICcuL3RoZi1saXN0LXZpZXctZGV0YWlsLXRlbXBsYXRlL3RoZi1saXN0LXZpZXctZGV0YWlsLXRlbXBsYXRlLmRpcmVjdGl2ZSc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTcOzZHVsbyBkbyBjb21wb25lbnRlIGB0aGYtbGlzdC12aWV3YC5cbiAqXG4gKiA+IFBhcmEgbyBjb3JyZXRvIGZ1bmNpb25hbWVudG8gZG8gY29tcG9uZW50ZSBgdGhmLWxpc3Qtdmlld2AsIGRldmUgc2VyIGltcG9ydGFkbyBvIG3Ds2R1bG8gYEJyb3dzZXJBbmltYXRpb25zTW9kdWxlYCBub1xuICogPiBtw7NkdWxvIHByaW5jaXBhbCBkYSBzdWEgYXBsaWNhw6fDo28uXG4gKlxuICogTcOzZHVsbyBkYSBhcGxpY2HDp8OjbzpcbiAqIGBgYFxuICogaW1wb3J0IHsgQnJvd3NlckFuaW1hdGlvbnNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyL2FuaW1hdGlvbnMnO1xuICogaW1wb3J0IHsgVGhmTW9kdWxlIH0gZnJvbSAnQHRvdHZzL3RoZi11aSc7XG4gKiAuLi5cbiAqXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbXG4gKiAgICAgQnJvd3Nlck1vZHVsZSxcbiAqICAgICBCcm93c2VyQW5pbWF0aW9uc01vZHVsZSxcbiAqICAgICAuLi5cbiAqICAgICBUaGZNb2R1bGVcbiAqICAgXSxcbiAqICAgZGVjbGFyYXRpb25zOiBbXG4gKiAgICAgQXBwQ29tcG9uZW50LFxuICogICAgIC4uLlxuICogICBdLFxuICogICBwcm92aWRlcnM6IFtdLFxuICogICBib290c3RyYXA6IFtBcHBDb21wb25lbnRdXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIEFwcE1vZHVsZSB7IH1cbiAqIGBgYFxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFJvdXRlck1vZHVsZSxcbiAgICBUaGZCdXR0b25Nb2R1bGUsXG4gICAgVGhmUG9wdXBNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgVGhmTGlzdFZpZXdDb21wb25lbnQsXG4gICAgVGhmTGlzdFZpZXdDb250ZW50VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgVGhmTGlzdFZpZXdEZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgVGhmTGlzdFZpZXdDb21wb25lbnQsXG4gICAgVGhmTGlzdFZpZXdDb250ZW50VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgVGhmTGlzdFZpZXdEZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZVxuICBdLFxuICBwcm92aWRlcnM6IFtdLFxuICBzY2hlbWFzOiBbXVxufSlcbmV4cG9ydCBjbGFzcyBUaGZMaXN0Vmlld01vZHVsZSB7IH1cbiJdfQ==