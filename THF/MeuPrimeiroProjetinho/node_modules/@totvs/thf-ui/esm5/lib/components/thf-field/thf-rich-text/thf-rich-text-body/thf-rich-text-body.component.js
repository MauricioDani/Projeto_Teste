/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
/** @type {?} */
var thfRichTextBodyCommands = [
    'bold', 'italic', 'underline', 'justifyleft', 'justifycenter', 'justifyright', 'justifyfull', 'insertUnorderedList'
];
var ThfRichTextBodyComponent = /** @class */ (function () {
    function ThfRichTextBodyComponent() {
        this.commands = new EventEmitter();
        this.value = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ThfRichTextBodyComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.bodyElement.nativeElement.designMode = 'on';
        // timeout necessário para setar o valor vindo do writeValue do componente principal.
        setTimeout((/**
         * @return {?}
         */
        function () { _this.updateValueWithModelValue(); }));
    };
    /**
     * @param {?} command
     * @return {?}
     */
    ThfRichTextBodyComponent.prototype.executeCommand = /**
     * @param {?} command
     * @return {?}
     */
    function (command) {
        this.bodyElement.nativeElement.focus();
        document.execCommand(command, false, null);
        this.updateModel();
        this.value.emit(this.modelValue);
    };
    /**
     * @return {?}
     */
    ThfRichTextBodyComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        this.emitSelectionCommands();
    };
    /**
     * @return {?}
     */
    ThfRichTextBodyComponent.prototype.onKeyUp = /**
     * @return {?}
     */
    function () {
        // Tratamento necessário para eliminar a tag <br> criada no firefox quando o body for limpo.
        if (!this.bodyElement.nativeElement.innerText.trim() && this.bodyElement.nativeElement.firstChild) {
            this.bodyElement.nativeElement.firstChild.remove();
        }
        this.updateModel();
        this.emitSelectionCommands();
    };
    /**
     * @return {?}
     */
    ThfRichTextBodyComponent.prototype.update = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () { _this.updateModel(); }));
        setTimeout((/**
         * @return {?}
         */
        function () { _this.onKeyUp(); }));
    };
    /**
     * @private
     * @return {?}
     */
    ThfRichTextBodyComponent.prototype.emitSelectionCommands = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var commands = thfRichTextBodyCommands.filter((/**
         * @param {?} command
         * @return {?}
         */
        function (command) {
            return document.queryCommandState(command);
        }));
        this.commands.emit(commands);
    };
    /**
     * @private
     * @return {?}
     */
    ThfRichTextBodyComponent.prototype.updateModel = /**
     * @private
     * @return {?}
     */
    function () {
        this.modelValue = this.bodyElement.nativeElement.innerHTML;
        this.value.emit(this.modelValue);
    };
    /**
     * @private
     * @return {?}
     */
    ThfRichTextBodyComponent.prototype.updateValueWithModelValue = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.modelValue) {
            this.bodyElement.nativeElement.insertAdjacentHTML('afterbegin', this.modelValue);
        }
    };
    ThfRichTextBodyComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-rich-text-body',
                    template: "<div #bodyElement\n  class=\"thf-rich-text-body\"\n  [attr.contenteditable]=\"!readonly\"\n  [attr.data-placeholder]=\"placeholder\"\n  [style.height.px]=\"height\"\n  (click)=\"onClick()\"\n  (cut)=\"update()\"\n  (keyup)=\"onKeyUp()\"\n  (paste)=\"update()\">\n</div>\n"
                }] }
    ];
    ThfRichTextBodyComponent.propDecorators = {
        bodyElement: [{ type: ViewChild, args: ['bodyElement', { static: true },] }],
        height: [{ type: Input, args: ['t-height',] }],
        modelValue: [{ type: Input, args: ['t-model-value',] }],
        placeholder: [{ type: Input, args: ['t-placeholder',] }],
        readonly: [{ type: Input, args: ['t-readonly',] }],
        commands: [{ type: Output, args: ['t-commands',] }],
        value: [{ type: Output, args: ['t-value',] }]
    };
    return ThfRichTextBodyComponent;
}());
export { ThfRichTextBodyComponent };
if (false) {
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.bodyElement;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.height;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.modelValue;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.placeholder;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.readonly;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.commands;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXJpY2gtdGV4dC1ib2R5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZmllbGQvdGhmLXJpY2gtdGV4dC90aGYtcmljaC10ZXh0LWJvZHkvdGhmLXJpY2gtdGV4dC1ib2R5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOztJQUVoRyx1QkFBdUIsR0FBRztJQUM5QixNQUFNLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUscUJBQXFCO0NBQ3BIO0FBRUQ7SUFBQTtRQWdCd0IsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFFdEMsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFxRHJELENBQUM7Ozs7SUFuREMsMkNBQVE7OztJQUFSO1FBQUEsaUJBS0M7UUFKQyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBRWpELHFGQUFxRjtRQUNyRixVQUFVOzs7UUFBQyxjQUFRLEtBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUM7SUFDMUQsQ0FBQzs7Ozs7SUFFRCxpREFBYzs7OztJQUFkLFVBQWUsT0FBZTtRQUM1QixJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN2QyxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25CLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNuQyxDQUFDOzs7O0lBRUQsMENBQU87OztJQUFQO1FBQ0UsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELDBDQUFPOzs7SUFBUDtRQUNFLDRGQUE0RjtRQUM1RixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRTtZQUNqRyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUM7U0FDcEQ7UUFDRCxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELHlDQUFNOzs7SUFBTjtRQUFBLGlCQUdDO1FBRkMsVUFBVTs7O1FBQUMsY0FBUSxLQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQztRQUMxQyxVQUFVOzs7UUFBQyxjQUFRLEtBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDO0lBQ3hDLENBQUM7Ozs7O0lBRU8sd0RBQXFCOzs7O0lBQTdCOztZQUNRLFFBQVEsR0FBa0IsdUJBQXVCLENBQUMsTUFBTTs7OztRQUFDLFVBQUEsT0FBTztZQUNwRSxPQUFPLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3QyxDQUFDLEVBQUM7UUFFRixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7OztJQUVPLDhDQUFXOzs7O0lBQW5CO1FBQ0UsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUM7UUFDM0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ25DLENBQUM7Ozs7O0lBRU8sNERBQXlCOzs7O0lBQWpDO1FBQ0UsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ25CLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDbEY7SUFDSCxDQUFDOztnQkFyRUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLDJSQUFrRDtpQkFDbkQ7Ozs4QkFHRSxTQUFTLFNBQUMsYUFBYSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTt5QkFFekMsS0FBSyxTQUFDLFVBQVU7NkJBRWhCLEtBQUssU0FBQyxlQUFlOzhCQUVyQixLQUFLLFNBQUMsZUFBZTsyQkFFckIsS0FBSyxTQUFDLFlBQVk7MkJBRWxCLE1BQU0sU0FBQyxZQUFZO3dCQUVuQixNQUFNLFNBQUMsU0FBUzs7SUFxRG5CLCtCQUFDO0NBQUEsQUF2RUQsSUF1RUM7U0FuRVksd0JBQXdCOzs7SUFFbkMsK0NBQW9FOztJQUVwRSwwQ0FBbUM7O0lBRW5DLDhDQUE0Qzs7SUFFNUMsK0NBQTZDOztJQUU3Qyw0Q0FBdUM7O0lBRXZDLDRDQUF5RDs7SUFFekQseUNBQW1EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmNvbnN0IHRoZlJpY2hUZXh0Qm9keUNvbW1hbmRzID0gW1xuICAnYm9sZCcsICdpdGFsaWMnLCAndW5kZXJsaW5lJywgJ2p1c3RpZnlsZWZ0JywgJ2p1c3RpZnljZW50ZXInLCAnanVzdGlmeXJpZ2h0JywgJ2p1c3RpZnlmdWxsJywgJ2luc2VydFVub3JkZXJlZExpc3QnXG5dO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtcmljaC10ZXh0LWJvZHknLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXJpY2gtdGV4dC1ib2R5LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZSaWNoVGV4dEJvZHlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBWaWV3Q2hpbGQoJ2JvZHlFbGVtZW50JywgeyBzdGF0aWM6IHRydWUgfSkgYm9keUVsZW1lbnQ6IEVsZW1lbnRSZWY7XG5cbiAgQElucHV0KCd0LWhlaWdodCcpIGhlaWdodD86IHN0cmluZztcblxuICBASW5wdXQoJ3QtbW9kZWwtdmFsdWUnKSBtb2RlbFZhbHVlPzogc3RyaW5nO1xuXG4gIEBJbnB1dCgndC1wbGFjZWhvbGRlcicpIHBsYWNlaG9sZGVyPzogc3RyaW5nO1xuXG4gIEBJbnB1dCgndC1yZWFkb25seScpIHJlYWRvbmx5Pzogc3RyaW5nO1xuXG4gIEBPdXRwdXQoJ3QtY29tbWFuZHMnKSBjb21tYW5kcyA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIEBPdXRwdXQoJ3QtdmFsdWUnKSB2YWx1ZSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuYm9keUVsZW1lbnQubmF0aXZlRWxlbWVudC5kZXNpZ25Nb2RlID0gJ29uJztcblxuICAgIC8vIHRpbWVvdXQgbmVjZXNzw6FyaW8gcGFyYSBzZXRhciBvIHZhbG9yIHZpbmRvIGRvIHdyaXRlVmFsdWUgZG8gY29tcG9uZW50ZSBwcmluY2lwYWwuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7IHRoaXMudXBkYXRlVmFsdWVXaXRoTW9kZWxWYWx1ZSgpOyB9KTtcbiAgfVxuXG4gIGV4ZWN1dGVDb21tYW5kKGNvbW1hbmQ6IHN0cmluZykge1xuICAgIHRoaXMuYm9keUVsZW1lbnQubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKGNvbW1hbmQsIGZhbHNlLCBudWxsKTtcbiAgICB0aGlzLnVwZGF0ZU1vZGVsKCk7XG4gICAgdGhpcy52YWx1ZS5lbWl0KHRoaXMubW9kZWxWYWx1ZSk7XG4gIH1cblxuICBvbkNsaWNrKCkge1xuICAgIHRoaXMuZW1pdFNlbGVjdGlvbkNvbW1hbmRzKCk7XG4gIH1cblxuICBvbktleVVwKCkge1xuICAgIC8vIFRyYXRhbWVudG8gbmVjZXNzw6FyaW8gcGFyYSBlbGltaW5hciBhIHRhZyA8YnI+IGNyaWFkYSBubyBmaXJlZm94IHF1YW5kbyBvIGJvZHkgZm9yIGxpbXBvLlxuICAgIGlmICghdGhpcy5ib2R5RWxlbWVudC5uYXRpdmVFbGVtZW50LmlubmVyVGV4dC50cmltKCkgJiYgdGhpcy5ib2R5RWxlbWVudC5uYXRpdmVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHRoaXMuYm9keUVsZW1lbnQubmF0aXZlRWxlbWVudC5maXJzdENoaWxkLnJlbW92ZSgpO1xuICAgIH1cbiAgICB0aGlzLnVwZGF0ZU1vZGVsKCk7XG4gICAgdGhpcy5lbWl0U2VsZWN0aW9uQ29tbWFuZHMoKTtcbiAgfVxuXG4gIHVwZGF0ZSgpIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHsgdGhpcy51cGRhdGVNb2RlbCgpOyB9KTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHsgdGhpcy5vbktleVVwKCk7IH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBlbWl0U2VsZWN0aW9uQ29tbWFuZHMoKSB7XG4gICAgY29uc3QgY29tbWFuZHM6IEFycmF5PHN0cmluZz4gPSB0aGZSaWNoVGV4dEJvZHlDb21tYW5kcy5maWx0ZXIoY29tbWFuZCA9PiB7XG4gICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlDb21tYW5kU3RhdGUoY29tbWFuZCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmNvbW1hbmRzLmVtaXQoY29tbWFuZHMpO1xuICB9XG5cbiAgcHJpdmF0ZSB1cGRhdGVNb2RlbCgpIHtcbiAgICB0aGlzLm1vZGVsVmFsdWUgPSB0aGlzLmJvZHlFbGVtZW50Lm5hdGl2ZUVsZW1lbnQuaW5uZXJIVE1MO1xuICAgIHRoaXMudmFsdWUuZW1pdCh0aGlzLm1vZGVsVmFsdWUpO1xuICB9XG5cbiAgcHJpdmF0ZSB1cGRhdGVWYWx1ZVdpdGhNb2RlbFZhbHVlKCkge1xuICAgIGlmICh0aGlzLm1vZGVsVmFsdWUpIHtcbiAgICAgIHRoaXMuYm9keUVsZW1lbnQubmF0aXZlRWxlbWVudC5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCB0aGlzLm1vZGVsVmFsdWUpO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=