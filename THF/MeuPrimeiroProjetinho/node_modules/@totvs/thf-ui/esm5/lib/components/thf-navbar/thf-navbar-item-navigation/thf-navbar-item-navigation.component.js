/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
var ThfNavbarItemNavigationComponent = /** @class */ (function () {
    function ThfNavbarItemNavigationComponent() {
        this.click = new EventEmitter();
    }
    ThfNavbarItemNavigationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-navbar-item-navigation',
                    template: "<div class=\"thf-navbar-item-navigation-icon\"\n  [ngClass]=\"{'thf-navbar-item-navigation-icon-disabled': disableLeft , 'thf-clickable': !disableLeft }\"\n  tabindex=\"0\"\n  (click)=\"disableLeft ? undefined : click.emit('left')\" >\n  <span class=\"thf-icon thf-icon-arrow-left\"></span>\n</div>\n<div class=\"thf-navbar-item-navigation-icon\"\n  [ngClass]=\"{'thf-navbar-item-navigation-icon-disabled': disableRight , 'thf-clickable': !disableRight }\"  \n  tabindex=\"0\"\n  (click)=\"disableRight ? undefined : click.emit('right')\">\n  <span class=\"thf-icon thf-icon-arrow-right\"></span>\n</div>\n"
                }] }
    ];
    ThfNavbarItemNavigationComponent.propDecorators = {
        disableLeft: [{ type: Input, args: ['t-disable-left',] }],
        disableRight: [{ type: Input, args: ['t-disable-right',] }],
        click: [{ type: Output, args: ['t-click',] }]
    };
    return ThfNavbarItemNavigationComponent;
}());
export { ThfNavbarItemNavigationComponent };
if (false) {
    /** @type {?} */
    ThfNavbarItemNavigationComponent.prototype.disableLeft;
    /** @type {?} */
    ThfNavbarItemNavigationComponent.prototype.disableRight;
    /** @type {?} */
    ThfNavbarItemNavigationComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW5hdmJhci1pdGVtLW5hdmlnYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1uYXZiYXIvdGhmLW5hdmJhci1pdGVtLW5hdmlnYXRpb24vdGhmLW5hdmJhci1pdGVtLW5hdmlnYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZFO0lBQUE7UUFVcUIsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBRXhFLENBQUM7O2dCQVpBLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNEJBQTRCO29CQUN0QywwbUJBQTBEO2lCQUMzRDs7OzhCQUdFLEtBQUssU0FBQyxnQkFBZ0I7K0JBRXRCLEtBQUssU0FBQyxpQkFBaUI7d0JBRXZCLE1BQU0sU0FBQyxTQUFTOztJQUVuQix1Q0FBQztDQUFBLEFBWkQsSUFZQztTQVJZLGdDQUFnQzs7O0lBRTNDLHVEQUE4Qzs7SUFFOUMsd0RBQWdEOztJQUVoRCxpREFBc0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtbmF2YmFyLWl0ZW0tbmF2aWdhdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtbmF2YmFyLWl0ZW0tbmF2aWdhdGlvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmTmF2YmFySXRlbU5hdmlnYXRpb25Db21wb25lbnQge1xuXG4gIEBJbnB1dCgndC1kaXNhYmxlLWxlZnQnKSBkaXNhYmxlTGVmdDogYm9vbGVhbjtcblxuICBASW5wdXQoJ3QtZGlzYWJsZS1yaWdodCcpIGRpc2FibGVSaWdodDogYm9vbGVhbjtcblxuICBAT3V0cHV0KCd0LWNsaWNrJykgY2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbn1cbiJdfQ==