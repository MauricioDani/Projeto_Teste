/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ThfColorPaletteEnum } from '../../enums/thf-color-palette.enum';
export class ThfColorPaletteService {
    /**
     * @param {?} value
     * @return {?}
     */
    getColor(value) {
        return ((/** @type {?} */ (Object))).values(ThfColorPaletteEnum).includes(value.color) ?
            value.color : this.getColorFromType(value.type || value.color);
    }
    /**
     * @private
     * @param {?} type
     * @return {?}
     */
    getColorFromType(type) {
        switch (type) {
            case 'danger':
                return ThfColorPaletteEnum.Color07;
            case 'success':
                return ThfColorPaletteEnum.Color11;
            case 'warning':
                return ThfColorPaletteEnum.Color08;
            default:
                return ThfColorPaletteEnum.Color01;
        }
    }
}
ThfColorPaletteService.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWNvbG9yLXBhbGV0dGUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvdGhmLWNvbG9yLXBhbGV0dGUvdGhmLWNvbG9yLXBhbGV0dGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUd6RSxNQUFNLE9BQU8sc0JBQXNCOzs7OztJQUVqQyxRQUFRLENBQUMsS0FBd0M7UUFDL0MsT0FBTyxDQUFDLG1CQUFLLE1BQU0sRUFBQSxDQUFDLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3RFLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRSxDQUFDOzs7Ozs7SUFFTyxnQkFBZ0IsQ0FBQyxJQUFZO1FBQ25DLFFBQVEsSUFBSSxFQUFFO1lBQ1osS0FBSyxRQUFRO2dCQUNYLE9BQU8sbUJBQW1CLENBQUMsT0FBTyxDQUFDO1lBQ3JDLEtBQUssU0FBUztnQkFDWixPQUFPLG1CQUFtQixDQUFDLE9BQU8sQ0FBQztZQUNyQyxLQUFLLFNBQVM7Z0JBQ1osT0FBTyxtQkFBbUIsQ0FBQyxPQUFPLENBQUM7WUFDckM7Z0JBQ0UsT0FBTyxtQkFBbUIsQ0FBQyxPQUFPLENBQUM7U0FDdEM7SUFDSCxDQUFDOzs7WUFuQkYsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVGhmQ29sb3JQYWxldHRlRW51bSB9IGZyb20gJy4uLy4uL2VudW1zL3RoZi1jb2xvci1wYWxldHRlLmVudW0nO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVGhmQ29sb3JQYWxldHRlU2VydmljZSB7XG5cbiAgZ2V0Q29sb3IodmFsdWU6IHsgY29sb3I/OiBzdHJpbmcsIHR5cGU/OiBzdHJpbmcgfSk6IHN0cmluZyB7XG4gICAgcmV0dXJuICg8YW55Pk9iamVjdCkudmFsdWVzKFRoZkNvbG9yUGFsZXR0ZUVudW0pLmluY2x1ZGVzKHZhbHVlLmNvbG9yKSA/XG4gICAgICB2YWx1ZS5jb2xvciA6IHRoaXMuZ2V0Q29sb3JGcm9tVHlwZSh2YWx1ZS50eXBlIHx8IHZhbHVlLmNvbG9yKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0Q29sb3JGcm9tVHlwZSh0eXBlOiBzdHJpbmcpOiBUaGZDb2xvclBhbGV0dGVFbnVtIHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ2Rhbmdlcic6XG4gICAgICAgIHJldHVybiBUaGZDb2xvclBhbGV0dGVFbnVtLkNvbG9yMDc7XG4gICAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgICAgcmV0dXJuIFRoZkNvbG9yUGFsZXR0ZUVudW0uQ29sb3IxMTtcbiAgICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgICByZXR1cm4gVGhmQ29sb3JQYWxldHRlRW51bS5Db2xvcjA4O1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIFRoZkNvbG9yUGFsZXR0ZUVudW0uQ29sb3IwMTtcbiAgICB9XG4gIH1cblxufVxuIl19