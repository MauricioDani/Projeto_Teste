/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ThfComponentInjectorService } from './../thf-component-injector/thf-component-injector.service';
import { ThfDialogBaseService } from './thf-dialog-base.service';
import { ThfDialogComponent } from './thf-dialog.component';
/**
 * \@docsExtends ThfDialogBaseService
 *
 * \@example
 *
 * <example name="thf-dialog-basic" title="Totvs Dialog Basic">
 *  <file name="sample-thf-dialog-basic/sample-thf-dialog-basic.component.html"> </file>
 *  <file name="sample-thf-dialog-basic/sample-thf-dialog-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-dialog-labs" title="Totvs Dialog Labs">
 *  <file name="sample-thf-dialog-labs/sample-thf-dialog-labs.component.html"> </file>
 *  <file name="sample-thf-dialog-labs/sample-thf-dialog-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-dialog-cancel-credit-card" title="Totvs Dialog - Cancel Credit Card">
 *  <file name="sample-thf-dialog-cancel-credit-card/sample-thf-dialog-cancel-credit-card.component.html"> </file>
 *  <file name="sample-thf-dialog-cancel-credit-card/sample-thf-dialog-cancel-credit-card.component.ts"> </file>
 * </example>
 */
export class ThfDialogService extends ThfDialogBaseService {
    /**
     * @param {?} thfComponentInjector
     */
    constructor(thfComponentInjector) {
        super();
        this.thfComponentInjector = thfComponentInjector;
    }
    /**
     * @param {?} dialogType
     * @param {?} dialogOptions
     * @return {?}
     */
    openDialog(dialogType, dialogOptions) {
        /** @type {?} */
        const componentRef = this.thfComponentInjector.createComponentInApplication(ThfDialogComponent);
        componentRef.changeDetectorRef.detectChanges();
        componentRef.instance.open(dialogOptions, dialogType, componentRef);
    }
}
ThfDialogService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ThfDialogService.ctorParameters = () => [
    { type: ThfComponentInjectorService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfDialogService.prototype.thfComponentInjector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWRpYWxvZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy90aGYtZGlhbG9nL3RoZi1kaWFsb2cuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBZ0IsTUFBTSxlQUFlLENBQUM7QUFFekQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFFekcsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDakUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdCNUQsTUFBTSxPQUFPLGdCQUFpQixTQUFRLG9CQUFvQjs7OztJQUV4RCxZQUFvQixvQkFBaUQ7UUFDbkUsS0FBSyxFQUFFLENBQUM7UUFEVSx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQTZCO0lBRXJFLENBQUM7Ozs7OztJQUVELFVBQVUsQ0FBQyxVQUF5QixFQUFFLGFBQThEOztjQUM1RixZQUFZLEdBQXNCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyw0QkFBNEIsQ0FBQyxrQkFBa0IsQ0FBQztRQUNsSCxZQUFZLENBQUMsaUJBQWlCLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDL0MsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLFVBQVUsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUN0RSxDQUFDOzs7WUFYRixVQUFVOzs7O1lBMUJGLDJCQUEyQjs7Ozs7OztJQTZCdEIsZ0RBQXlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgQ29tcG9uZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZkNvbXBvbmVudEluamVjdG9yU2VydmljZSB9IGZyb20gJy4vLi4vdGhmLWNvbXBvbmVudC1pbmplY3Rvci90aGYtY29tcG9uZW50LWluamVjdG9yLnNlcnZpY2UnO1xuaW1wb3J0IHsgVGhmRGlhbG9nQWxlcnRPcHRpb25zLCBUaGZEaWFsb2dDb25maXJtT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcy90aGYtZGlhbG9nLmludGVyZmFjZSc7XG5pbXBvcnQgeyBUaGZEaWFsb2dCYXNlU2VydmljZSB9IGZyb20gJy4vdGhmLWRpYWxvZy1iYXNlLnNlcnZpY2UnO1xuaW1wb3J0IHsgVGhmRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtZGlhbG9nLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaGZEaWFsb2dUeXBlIH0gZnJvbSAnLi90aGYtZGlhbG9nLmVudW0nO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBUaGZEaWFsb2dCYXNlU2VydmljZVxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1kaWFsb2ctYmFzaWNcIiB0aXRsZT1cIlRvdHZzIERpYWxvZyBCYXNpY1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWRpYWxvZy1iYXNpYy9zYW1wbGUtdGhmLWRpYWxvZy1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtZGlhbG9nLWJhc2ljL3NhbXBsZS10aGYtZGlhbG9nLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1kaWFsb2ctbGFic1wiIHRpdGxlPVwiVG90dnMgRGlhbG9nIExhYnNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1kaWFsb2ctbGFicy9zYW1wbGUtdGhmLWRpYWxvZy1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1kaWFsb2ctbGFicy9zYW1wbGUtdGhmLWRpYWxvZy1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1kaWFsb2ctY2FuY2VsLWNyZWRpdC1jYXJkXCIgdGl0bGU9XCJUb3R2cyBEaWFsb2cgLSBDYW5jZWwgQ3JlZGl0IENhcmRcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1kaWFsb2ctY2FuY2VsLWNyZWRpdC1jYXJkL3NhbXBsZS10aGYtZGlhbG9nLWNhbmNlbC1jcmVkaXQtY2FyZC5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtZGlhbG9nLWNhbmNlbC1jcmVkaXQtY2FyZC9zYW1wbGUtdGhmLWRpYWxvZy1jYW5jZWwtY3JlZGl0LWNhcmQuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRoZkRpYWxvZ1NlcnZpY2UgZXh0ZW5kcyBUaGZEaWFsb2dCYXNlU2VydmljZSB7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSB0aGZDb21wb25lbnRJbmplY3RvcjogVGhmQ29tcG9uZW50SW5qZWN0b3JTZXJ2aWNlKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIG9wZW5EaWFsb2coZGlhbG9nVHlwZTogVGhmRGlhbG9nVHlwZSwgZGlhbG9nT3B0aW9uczogVGhmRGlhbG9nQWxlcnRPcHRpb25zIHwgVGhmRGlhbG9nQ29uZmlybU9wdGlvbnMpOiB2b2lkIHtcbiAgICBjb25zdCBjb21wb25lbnRSZWY6IENvbXBvbmVudFJlZjxhbnk+ID0gdGhpcy50aGZDb21wb25lbnRJbmplY3Rvci5jcmVhdGVDb21wb25lbnRJbkFwcGxpY2F0aW9uKFRoZkRpYWxvZ0NvbXBvbmVudCk7XG4gICAgY29tcG9uZW50UmVmLmNoYW5nZURldGVjdG9yUmVmLmRldGVjdENoYW5nZXMoKTtcbiAgICBjb21wb25lbnRSZWYuaW5zdGFuY2Uub3BlbihkaWFsb2dPcHRpb25zLCBkaWFsb2dUeXBlLCBjb21wb25lbnRSZWYpO1xuICB9XG59XG4iXX0=