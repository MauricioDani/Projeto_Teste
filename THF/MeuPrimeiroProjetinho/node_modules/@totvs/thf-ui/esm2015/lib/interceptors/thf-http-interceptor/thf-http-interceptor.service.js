/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ThfHttpInterceptorBaseService } from './thf-http-interceptor-base.service';
import { ThfNotificationService } from './../../services/thf-notification/thf-notification.service';
import { ThfDialogService } from './../../services/thf-dialog/thf-dialog.service';
/**
 * \@docsExtends ThfHttpInterceptorBaseService
 *
 * \@example
 * <example name='thf-http-interceptor-labs' title='Totvs Http Interceptor Labs'>
 *  <file name='sample-thf-http-interceptor-labs.component.ts'> </file>
 *  <file name='sample-thf-http-interceptor-labs.component.html'> </file>
 * </example>
 */
export class ThfHttpInterceptorService extends ThfHttpInterceptorBaseService {
    /**
     * @param {?} notification
     * @param {?} dialog
     */
    constructor(notification, dialog) {
        super(notification, dialog);
    }
}
ThfHttpInterceptorService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ThfHttpInterceptorService.ctorParameters = () => [
    { type: ThfNotificationService },
    { type: ThfDialogService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWh0dHAtaW50ZXJjZXB0b3Iuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvaW50ZXJjZXB0b3JzL3RoZi1odHRwLWludGVyY2VwdG9yL3RoZi1odHRwLWludGVyY2VwdG9yLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDcEYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFDcEcsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0RBQWdELENBQUM7Ozs7Ozs7Ozs7QUFZbEYsTUFBTSxPQUFPLHlCQUEwQixTQUFRLDZCQUE2Qjs7Ozs7SUFDMUUsWUFBWSxZQUFvQyxFQUFFLE1BQXdCO1FBQ3hFLEtBQUssQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7O1lBSkYsVUFBVTs7OztZQVpGLHNCQUFzQjtZQUN0QixnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZkh0dHBJbnRlcmNlcHRvckJhc2VTZXJ2aWNlIH0gZnJvbSAnLi90aGYtaHR0cC1pbnRlcmNlcHRvci1iYXNlLnNlcnZpY2UnO1xuaW1wb3J0IHsgVGhmTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vLi4vc2VydmljZXMvdGhmLW5vdGlmaWNhdGlvbi90aGYtbm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgVGhmRGlhbG9nU2VydmljZSB9IGZyb20gJy4vLi4vLi4vc2VydmljZXMvdGhmLWRpYWxvZy90aGYtZGlhbG9nLnNlcnZpY2UnO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBUaGZIdHRwSW50ZXJjZXB0b3JCYXNlU2VydmljZVxuICpcbiAqIEBleGFtcGxlXG4gKiA8ZXhhbXBsZSBuYW1lPSd0aGYtaHR0cC1pbnRlcmNlcHRvci1sYWJzJyB0aXRsZT0nVG90dnMgSHR0cCBJbnRlcmNlcHRvciBMYWJzJz5cbiAqICA8ZmlsZSBuYW1lPSdzYW1wbGUtdGhmLWh0dHAtaW50ZXJjZXB0b3ItbGFicy5jb21wb25lbnQudHMnPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT0nc2FtcGxlLXRoZi1odHRwLWludGVyY2VwdG9yLWxhYnMuY29tcG9uZW50Lmh0bWwnPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUaGZIdHRwSW50ZXJjZXB0b3JTZXJ2aWNlIGV4dGVuZHMgVGhmSHR0cEludGVyY2VwdG9yQmFzZVNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihub3RpZmljYXRpb246IFRoZk5vdGlmaWNhdGlvblNlcnZpY2UsIGRpYWxvZzogVGhmRGlhbG9nU2VydmljZSkge1xuICAgIHN1cGVyKG5vdGlmaWNhdGlvbiwgZGlhbG9nKTtcbiAgfVxufVxuIl19