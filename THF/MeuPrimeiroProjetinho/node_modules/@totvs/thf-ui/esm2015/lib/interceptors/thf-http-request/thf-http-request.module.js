/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { NgModule } from '@angular/core';
import { ThfComponentInjectorService } from '../../services/thf-component-injector/thf-component-injector.service';
import { ThfHttpRequesControltService } from './thf-http-request-control-service';
import { ThfHttpRequestInterceptorService } from './thf-http-request-interceptor.service';
import { ThfLoadingComponent } from '../../components/thf-loading/thf-loading.component';
import { ThfLoadingOverlayComponent } from '../../components/thf-loading/thf-loading-overlay/thf-loading-overlay.component';
export class ThfHttpRequestModule {
}
ThfHttpRequestModule.decorators = [
    { type: NgModule, args: [{
                providers: [
                    ThfHttpRequesControltService,
                    ThfHttpRequestInterceptorService,
                    ThfComponentInjectorService,
                    {
                        provide: HTTP_INTERCEPTORS,
                        useClass: ThfHttpRequestInterceptorService,
                        multi: true
                    }
                ],
                entryComponents: [ThfLoadingOverlayComponent, ThfLoadingComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWh0dHAtcmVxdWVzdC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2ludGVyY2VwdG9ycy90aGYtaHR0cC1yZXF1ZXN0L3RoZi1odHRwLXJlcXVlc3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHNFQUFzRSxDQUFDO0FBQ25ILE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBRTFGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG9EQUFvRCxDQUFDO0FBQ3pGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGdGQUFnRixDQUFDO0FBZTVILE1BQU0sT0FBTyxvQkFBb0I7OztZQWJoQyxRQUFRLFNBQUM7Z0JBQ1IsU0FBUyxFQUFFO29CQUNULDRCQUE0QjtvQkFDNUIsZ0NBQWdDO29CQUNoQywyQkFBMkI7b0JBQzNCO3dCQUNFLE9BQU8sRUFBRSxpQkFBaUI7d0JBQzFCLFFBQVEsRUFBRSxnQ0FBZ0M7d0JBQzFDLEtBQUssRUFBRSxJQUFJO3FCQUNaO2lCQUNGO2dCQUNELGVBQWUsRUFBRSxDQUFDLDBCQUEwQixFQUFFLG1CQUFtQixDQUFDO2FBQ25FIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSFRUUF9JTlRFUkNFUFRPUlMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaGZDb21wb25lbnRJbmplY3RvclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy90aGYtY29tcG9uZW50LWluamVjdG9yL3RoZi1jb21wb25lbnQtaW5qZWN0b3Iuc2VydmljZSc7XG5pbXBvcnQgeyBUaGZIdHRwUmVxdWVzQ29udHJvbHRTZXJ2aWNlIH0gZnJvbSAnLi90aGYtaHR0cC1yZXF1ZXN0LWNvbnRyb2wtc2VydmljZSc7XG5pbXBvcnQgeyBUaGZIdHRwUmVxdWVzdEludGVyY2VwdG9yU2VydmljZSB9IGZyb20gJy4vdGhmLWh0dHAtcmVxdWVzdC1pbnRlcmNlcHRvci5zZXJ2aWNlJztcblxuaW1wb3J0IHsgVGhmTG9hZGluZ0NvbXBvbmVudCB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvdGhmLWxvYWRpbmcvdGhmLWxvYWRpbmcuY29tcG9uZW50JztcbmltcG9ydCB7IFRoZkxvYWRpbmdPdmVybGF5Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy90aGYtbG9hZGluZy90aGYtbG9hZGluZy1vdmVybGF5L3RoZi1sb2FkaW5nLW92ZXJsYXkuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbXG4gICAgVGhmSHR0cFJlcXVlc0NvbnRyb2x0U2VydmljZSxcbiAgICBUaGZIdHRwUmVxdWVzdEludGVyY2VwdG9yU2VydmljZSxcbiAgICBUaGZDb21wb25lbnRJbmplY3RvclNlcnZpY2UsXG4gICAge1xuICAgICAgcHJvdmlkZTogSFRUUF9JTlRFUkNFUFRPUlMsXG4gICAgICB1c2VDbGFzczogVGhmSHR0cFJlcXVlc3RJbnRlcmNlcHRvclNlcnZpY2UsXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbVGhmTG9hZGluZ092ZXJsYXlDb21wb25lbnQsIFRoZkxvYWRpbmdDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIFRoZkh0dHBSZXF1ZXN0TW9kdWxlIHsgfVxuIl19