/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { convertToBoolean, convertToInt } from '../../utils/util';
/**
 * \@description
 *
 * O `thf-container` é um componente que visa facilitar o agrupamento de conteúdos.
 * Por padrão o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaçamento em sua parte interna, os quais
 * podem ser desabilitados. Ao remover sua borda a sombra também será removida. Além disso, sua altura acompanha a
 * quantidade do conteúdo, porém pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),
 * assim possibilitando o tratamento para diferentes resoluções.
 */
export class ThfContainerBaseComponent {
    constructor() {
        this._noBorder = false;
        this._noPadding = false;
        this._noShadow = false;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Define a altura do `thf-container`.
     *
     * > Caso não seja definido um valor, a altura se ajustará de acordo com o conteúdo.
     * @param {?} value
     * @return {?}
     */
    set height(value) {
        this._height = convertToInt(value);
    }
    /**
     * @return {?}
     */
    get height() {
        return this._height;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Desabilita a borda e a sombra em torno do `thf-container`.
     *
     * \@default `false`
     * @param {?} value
     * @return {?}
     */
    set noBorder(value) {
        this._noBorder = convertToBoolean(value);
    }
    /**
     * @return {?}
     */
    get noBorder() {
        return this._noBorder;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Desabilita o espaçamento interno do `thf-container`.
     *
     * \@default `false`
     * @param {?} value
     * @return {?}
     */
    set noPadding(value) {
        this._noPadding = convertToBoolean(value);
    }
    /**
     * @return {?}
     */
    get noPadding() {
        return this._noPadding;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Desabilita o sombreamento em torno do `thf-container`.
     *
     * \@default `false`
     * @param {?} value
     * @return {?}
     */
    set noShadow(value) {
        this._noShadow = convertToBoolean(value);
    }
    /**
     * @return {?}
     */
    get noShadow() {
        return this._noShadow;
    }
}
ThfContainerBaseComponent.propDecorators = {
    height: [{ type: Input, args: ['t-height',] }],
    noBorder: [{ type: Input, args: ['t-no-border',] }],
    noPadding: [{ type: Input, args: ['t-no-padding',] }],
    noShadow: [{ type: Input, args: ['t-no-shadow',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfContainerBaseComponent.prototype._height;
    /**
     * @type {?}
     * @private
     */
    ThfContainerBaseComponent.prototype._noBorder;
    /**
     * @type {?}
     * @private
     */
    ThfContainerBaseComponent.prototype._noPadding;
    /**
     * @type {?}
     * @private
     */
    ThfContainerBaseComponent.prototype._noShadow;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWNvbnRhaW5lci1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtY29udGFpbmVyL3RoZi1jb250YWluZXItYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7Ozs7Ozs7O0FBV2xFLE1BQU0sT0FBTyx5QkFBeUI7SUFBdEM7UUFHVSxjQUFTLEdBQWEsS0FBSyxDQUFDO1FBQzVCLGVBQVUsR0FBYSxLQUFLLENBQUM7UUFDN0IsY0FBUyxHQUFhLEtBQUssQ0FBQztJQXNFdEMsQ0FBQzs7Ozs7Ozs7Ozs7O0lBM0RDLElBQXVCLE1BQU0sQ0FBQyxLQUFhO1FBQ3pDLElBQUksQ0FBQyxPQUFPLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7SUFFRCxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQzs7Ozs7Ozs7Ozs7O0lBV0QsSUFBMEIsUUFBUSxDQUFDLEtBQWM7UUFDL0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDOzs7O0lBRUQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7Ozs7Ozs7Ozs7OztJQVdELElBQTJCLFNBQVMsQ0FBQyxLQUFjO1FBQ2pELElBQUksQ0FBQyxVQUFVLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUMsQ0FBQzs7OztJQUVELElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDOzs7Ozs7Ozs7Ozs7SUFXRCxJQUEwQixRQUFRLENBQUMsS0FBYztRQUMvQyxJQUFJLENBQUMsU0FBUyxHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNDLENBQUM7Ozs7SUFFRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQzs7O3FCQXpEQSxLQUFLLFNBQUMsVUFBVTt1QkFpQmhCLEtBQUssU0FBQyxhQUFhO3dCQWlCbkIsS0FBSyxTQUFDLGNBQWM7dUJBaUJwQixLQUFLLFNBQUMsYUFBYTs7Ozs7OztJQWpFcEIsNENBQXlCOzs7OztJQUN6Qiw4Q0FBb0M7Ozs7O0lBQ3BDLCtDQUFxQzs7Ozs7SUFDckMsOENBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29udmVydFRvQm9vbGVhbiwgY29udmVydFRvSW50IH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBgdGhmLWNvbnRhaW5lcmAgw6kgdW0gY29tcG9uZW50ZSBxdWUgdmlzYSBmYWNpbGl0YXIgbyBhZ3J1cGFtZW50byBkZSBjb250ZcO6ZG9zLlxuICogUG9yIHBhZHLDo28gbyBtZXNtbyBleGliZSB1bWEgYm9yZGEsIHVtIGVmZWl0byBkZSBzb21icmEgYW8gc2V1IHJlZG9yIGUgdW0gZXNwYcOnYW1lbnRvIGVtIHN1YSBwYXJ0ZSBpbnRlcm5hLCBvcyBxdWFpc1xuICogcG9kZW0gc2VyIGRlc2FiaWxpdGFkb3MuIEFvIHJlbW92ZXIgc3VhIGJvcmRhIGEgc29tYnJhIHRhbWLDqW0gc2Vyw6EgcmVtb3ZpZGEuIEFsw6ltIGRpc3NvLCBzdWEgYWx0dXJhIGFjb21wYW5oYSBhXG4gKiBxdWFudGlkYWRlIGRvIGNvbnRlw7pkbywgcG9yw6ltIHBvZGUgc2VyIGZpeGFkYS4gUGFyYSBjb250cm9sYXIgc3VhIGxhcmd1cmEsIHV0aWxpemUgbyBbR3JpZCBTeXN0ZW1dKC9ndWlkZXMvZ3JpZC1zeXN0ZW0pLFxuICogYXNzaW0gcG9zc2liaWxpdGFuZG8gbyB0cmF0YW1lbnRvIHBhcmEgZGlmZXJlbnRlcyByZXNvbHXDp8O1ZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBUaGZDb250YWluZXJCYXNlQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9oZWlnaHQ/OiBudW1iZXI7XG4gIHByaXZhdGUgX25vQm9yZGVyPzogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9ub1BhZGRpbmc/OiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX25vU2hhZG93PzogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlZmluZSBhIGFsdHVyYSBkbyBgdGhmLWNvbnRhaW5lcmAuXG4gICAqXG4gICAqID4gQ2FzbyBuw6NvIHNlamEgZGVmaW5pZG8gdW0gdmFsb3IsIGEgYWx0dXJhIHNlIGFqdXN0YXLDoSBkZSBhY29yZG8gY29tIG8gY29udGXDumRvLlxuICAgKi9cbiAgQElucHV0KCd0LWhlaWdodCcpIHNldCBoZWlnaHQodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX2hlaWdodCA9IGNvbnZlcnRUb0ludCh2YWx1ZSk7XG4gIH1cblxuICBnZXQgaGVpZ2h0KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2hlaWdodDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlc2FiaWxpdGEgYSBib3JkYSBlIGEgc29tYnJhIGVtIHRvcm5vIGRvIGB0aGYtY29udGFpbmVyYC5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCd0LW5vLWJvcmRlcicpIHNldCBub0JvcmRlcih2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX25vQm9yZGVyID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgbm9Cb3JkZXIoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX25vQm9yZGVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVzYWJpbGl0YSBvIGVzcGHDp2FtZW50byBpbnRlcm5vIGRvIGB0aGYtY29udGFpbmVyYC5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCd0LW5vLXBhZGRpbmcnKSBzZXQgbm9QYWRkaW5nKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fbm9QYWRkaW5nID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgbm9QYWRkaW5nKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9ub1BhZGRpbmc7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZXNhYmlsaXRhIG8gc29tYnJlYW1lbnRvIGVtIHRvcm5vIGRvIGB0aGYtY29udGFpbmVyYC5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCd0LW5vLXNoYWRvdycpIHNldCBub1NoYWRvdyh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX25vU2hhZG93ID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgbm9TaGFkb3coKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX25vU2hhZG93O1xuICB9XG5cbn1cbiJdfQ==