/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { ThfInfoOrientation } from './thf-info-orietation.enum';
/** @type {?} */
const thfInfoOrientationDefault = ThfInfoOrientation.Vertical;
export class ThfInfoBaseComponent {
    constructor() {
        this._orientation = thfInfoOrientationDefault;
        this.thfInfoOrientation = ThfInfoOrientation;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Quantidade de [colunas](/guides/grid-system) usadas para a exibição da `t-label` quando o componente for
     * utilizado na orientação horizontal.
     *
     * Valores válidos:
     *  - `[1 .. 11]`
     *
     * > A propriedade `t-value` recebe o número de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.
     * @param {?} value
     * @return {?}
     */
    set labelSize(value) {
        if (isNaN(parseInt((/** @type {?} */ (value)), 10))) {
            this._labelSize = undefined;
        }
        else {
            value = parseInt((/** @type {?} */ (value)), 10);
            this._labelSize = (value < 1 || value > 11) ? undefined : value;
        }
    }
    /**
     * @return {?}
     */
    get labelSize() {
        return this._labelSize;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Define o layout de exibição.
     *
     * > Quando definido na horizontal, pode-se utilizar a propriedade `t-label-size` para um maior controle das informações exibidas.
     *
     * \@default `vertical`
     * @param {?} value
     * @return {?}
     */
    set orientation(value) {
        this._orientation = ((/** @type {?} */ (Object))).values(ThfInfoOrientation).includes(value) ? value : thfInfoOrientationDefault;
    }
    /**
     * @return {?}
     */
    get orientation() {
        return this._orientation;
    }
}
ThfInfoBaseComponent.propDecorators = {
    label: [{ type: Input, args: ['t-label',] }],
    labelSize: [{ type: Input, args: ['t-label-size',] }],
    orientation: [{ type: Input, args: ['t-orientation',] }],
    value: [{ type: Input, args: ['t-value',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfInfoBaseComponent.prototype._labelSize;
    /**
     * @type {?}
     * @private
     */
    ThfInfoBaseComponent.prototype._orientation;
    /** @type {?} */
    ThfInfoBaseComponent.prototype.thfInfoOrientation;
    /**
     * Valor do rótulo a ser exibido.
     * @type {?}
     */
    ThfInfoBaseComponent.prototype.label;
    /**
     * Valor do conteúdo a ser exibido.
     * @type {?}
     */
    ThfInfoBaseComponent.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWluZm8tYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWluZm8vdGhmLWluZm8tYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7O01BRTFELHlCQUF5QixHQUFHLGtCQUFrQixDQUFDLFFBQVE7QUFFN0QsTUFBTSxPQUFPLG9CQUFvQjtJQUFqQztRQUdVLGlCQUFZLEdBQXVCLHlCQUF5QixDQUFDO1FBRXJELHVCQUFrQixHQUFHLGtCQUFrQixDQUFDO0lBcUQxRCxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7O0lBbkNDLElBQTJCLFNBQVMsQ0FBQyxLQUFhO1FBQ2hELElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQyxtQkFBSyxLQUFLLEVBQUEsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFO1lBQ25DLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO1NBQzdCO2FBQU07WUFDTCxLQUFLLEdBQUcsUUFBUSxDQUFDLG1CQUFLLEtBQUssRUFBQSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBRWpDLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7U0FDakU7SUFDSCxDQUFDOzs7O0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7Ozs7Ozs7Ozs7Ozs7O0lBYUQsSUFBNEIsV0FBVyxDQUFDLEtBQXlCO1FBQy9ELElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxtQkFBSyxNQUFNLEVBQUEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyx5QkFBeUIsQ0FBQztJQUNuSCxDQUFDOzs7O0lBQ0QsSUFBSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzNCLENBQUM7OztvQkE3Q0EsS0FBSyxTQUFDLFNBQVM7d0JBZWYsS0FBSyxTQUFDLGNBQWM7MEJBeUJwQixLQUFLLFNBQUMsZUFBZTtvQkFRckIsS0FBSyxTQUFDLFNBQVM7Ozs7Ozs7SUF0RGhCLDBDQUEyQjs7Ozs7SUFDM0IsNENBQXFFOztJQUVyRSxrREFBd0Q7Ozs7O0lBR3hELHFDQUFnQzs7Ozs7SUFnRGhDLHFDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZkluZm9PcmllbnRhdGlvbiB9IGZyb20gJy4vdGhmLWluZm8tb3JpZXRhdGlvbi5lbnVtJztcblxuY29uc3QgdGhmSW5mb09yaWVudGF0aW9uRGVmYXVsdCA9IFRoZkluZm9PcmllbnRhdGlvbi5WZXJ0aWNhbDtcblxuZXhwb3J0IGNsYXNzIFRoZkluZm9CYXNlQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9sYWJlbFNpemU6IG51bWJlcjtcbiAgcHJpdmF0ZSBfb3JpZW50YXRpb246IFRoZkluZm9PcmllbnRhdGlvbiA9IHRoZkluZm9PcmllbnRhdGlvbkRlZmF1bHQ7XG5cbiAgcHVibGljIHJlYWRvbmx5IHRoZkluZm9PcmllbnRhdGlvbiA9IFRoZkluZm9PcmllbnRhdGlvbjtcblxuICAvKiogVmFsb3IgZG8gcsOzdHVsbyBhIHNlciBleGliaWRvLiAqL1xuICBASW5wdXQoJ3QtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFF1YW50aWRhZGUgZGUgW2NvbHVuYXNdKC9ndWlkZXMvZ3JpZC1zeXN0ZW0pIHVzYWRhcyBwYXJhIGEgZXhpYmnDp8OjbyBkYSBgdC1sYWJlbGAgcXVhbmRvIG8gY29tcG9uZW50ZSBmb3JcbiAgICogdXRpbGl6YWRvIG5hIG9yaWVudGHDp8OjbyBob3Jpem9udGFsLlxuICAgKlxuICAgKiBWYWxvcmVzIHbDoWxpZG9zOlxuICAgKiAgLSBgWzEgLi4gMTFdYFxuICAgKlxuICAgKiA+IEEgcHJvcHJpZWRhZGUgYHQtdmFsdWVgIHJlY2ViZSBvIG7Dum1lcm8gZGUgY29sdW5hcyByZXN0YW50ZXMsIHBvciBleGVtcGxvLCBzZSBkZWZpbmlkbyAzIGNvbHVuYXMgYSBtZXNtYSBhc3N1bWUgOSBjb2x1bmFzLlxuICAgKi9cbiAgQElucHV0KCd0LWxhYmVsLXNpemUnKSBzZXQgbGFiZWxTaXplKHZhbHVlOiBudW1iZXIpIHtcbiAgICBpZiAoaXNOYU4ocGFyc2VJbnQoPGFueT52YWx1ZSwgMTApKSkge1xuICAgICAgdGhpcy5fbGFiZWxTaXplID0gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSA9IHBhcnNlSW50KDxhbnk+dmFsdWUsIDEwKTtcblxuICAgICAgdGhpcy5fbGFiZWxTaXplID0gKHZhbHVlIDwgMSB8fCB2YWx1ZSA+IDExKSA/IHVuZGVmaW5lZCA6IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIGdldCBsYWJlbFNpemUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fbGFiZWxTaXplO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIG8gbGF5b3V0IGRlIGV4aWJpw6fDo28uXG4gICAqXG4gICAqID4gUXVhbmRvIGRlZmluaWRvIG5hIGhvcml6b250YWwsIHBvZGUtc2UgdXRpbGl6YXIgYSBwcm9wcmllZGFkZSBgdC1sYWJlbC1zaXplYCBwYXJhIHVtIG1haW9yIGNvbnRyb2xlIGRhcyBpbmZvcm1hw6fDtWVzIGV4aWJpZGFzLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgdmVydGljYWxgXG4gICAqL1xuICBASW5wdXQoJ3Qtb3JpZW50YXRpb24nKSBzZXQgb3JpZW50YXRpb24odmFsdWU6IFRoZkluZm9PcmllbnRhdGlvbikge1xuICAgIHRoaXMuX29yaWVudGF0aW9uID0gKDxhbnk+T2JqZWN0KS52YWx1ZXMoVGhmSW5mb09yaWVudGF0aW9uKS5pbmNsdWRlcyh2YWx1ZSkgPyB2YWx1ZSA6IHRoZkluZm9PcmllbnRhdGlvbkRlZmF1bHQ7XG4gIH1cbiAgZ2V0IG9yaWVudGF0aW9uKCk6IFRoZkluZm9PcmllbnRhdGlvbiB7XG4gICAgcmV0dXJuIHRoaXMuX29yaWVudGF0aW9uO1xuICB9XG5cbiAgLyoqIFZhbG9yIGRvIGNvbnRlw7pkbyBhIHNlciBleGliaWRvLiAqL1xuICBASW5wdXQoJ3QtdmFsdWUnKSB2YWx1ZT86IHN0cmluZztcblxufVxuIl19