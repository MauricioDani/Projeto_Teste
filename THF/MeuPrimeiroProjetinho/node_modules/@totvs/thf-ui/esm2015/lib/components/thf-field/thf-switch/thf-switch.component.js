/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ThfSwitchBaseComponent } from './thf-switch-base.component';
import { ThfSwitchLabelPosition } from './thf-switch-label-position.enum';
/**
 * \@docsExtends ThfSwitchBaseComponent
 *
 * \@example
 *
 * <example name="thf-switch-basic" title="Totvs Switch Basic">
 *   <file name="sample-thf-switch-basic/sample-thf-switch-basic.component.html"> </file>
 *   <file name="sample-thf-switch-basic/sample-thf-switch-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-switch-labs" title="Totvs Switch Labs">
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.html"> </file>
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.ts"> </file>
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.e2e-spec.ts"> </file>
 *   <file name="sample-thf-switch-labs/sample-thf-switch-labs.component.po.ts"> </file>
 * </example>
 *
 * <example name="thf-switch-order" title="Totvs Switch - Order Summary">
 *   <file name="sample-thf-switch-order/sample-thf-switch-order.component.html"> </file>
 *   <file name="sample-thf-switch-order/sample-thf-switch-order.component.ts"> </file>
 * </example>
 *
 * <example name="thf-switch-order-reactive-form" title="Totvs Switch - Order Summary Reactive Form">
 *   <file name="sample-thf-switch-order-reactive-form/sample-thf-switch-order-reactive-form.component.html"> </file>
 *   <file name="sample-thf-switch-order-reactive-form/sample-thf-switch-order-reactive-form.component.ts"> </file>
 * </example>
 */
export class ThfSwitchComponent extends ThfSwitchBaseComponent {
    /**
     * @param {?} changeDetector
     */
    constructor(changeDetector) {
        super();
        this.changeDetector = changeDetector;
    }
    /**
     * @return {?}
     */
    ngAfterViewChecked() {
        this.changeDetector.detectChanges();
    }
    /**
     * @return {?}
     */
    getLabelPosition() {
        switch (this.labelPosition) {
            case ThfSwitchLabelPosition.Left: return 'left';
            case ThfSwitchLabelPosition.Right: return 'right';
            default: return 'right';
        }
    }
    /**
     * @return {?}
     */
    getSwitchPosition() {
        switch (this.labelPosition) {
            case ThfSwitchLabelPosition.Left: return 'right';
            case ThfSwitchLabelPosition.Right: return 'left';
            default: return 'left';
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onKeyDown(event) {
        if (event.which === 32 || event.keyCode === 32) {
            event.preventDefault();
            this.eventClick();
        }
    }
}
ThfSwitchComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-switch',
                template: "<thf-field-container\n  [t-label]=\"label\"\n  [t-help]=\"help\">\n\n  <div class=\"thf-field-container-content thf-switch-content\" [attr.name]=\"name\">\n    <div class=\"thf-switch-container thf-clickable\"\n      [class.thf-switch-container-disabled]=\"disabled\"\n      [class.thf-switch-container-off]=\"switchValue === false && !disabled\"\n      [class.thf-switch-container-on]=\"switchValue === true && !disabled\"\n      [class.thf-switch-container-right]=\"getSwitchPosition() === 'right'\"\n      [tabindex]=\"disabled ? -1 : 0\"\n      (click)=\"eventClick()\"\n      (keydown)=\"onKeyDown($event)\">\n\n      <div class=\"thf-switch-button\"\n        [class.thf-switch-button-on]=\"switchValue === true\"\n        [class.thf-switch-button-off]=\"switchValue === false\"\n        [class.thf-switch-button-disabled]=\"disabled\">\n\n        <span class=\"thf-icon thf-icon-{{ switchValue === true ? 'ok' : 'close' }}\"></span>\n      </div>\n    </div>\n\n    <span class=\"thf-switch-label thf-clickable thf-switch-label-{{ getLabelPosition() }}\"\n      (click)=\"eventClick()\">\n        {{ switchValue === true ? labelOn : labelOff }}\n    </span>\n  </div>\n\n  <thf-field-container-bottom></thf-field-container-bottom>\n</thf-field-container>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => ThfSwitchComponent)),
                        multi: true,
                    }
                ]
            }] }
];
/** @nocollapse */
ThfSwitchComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfSwitchComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXN3aXRjaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWZpZWxkL3RoZi1zd2l0Y2gvdGhmLXN3aXRjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBb0IsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVuRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdDMUUsTUFBTSxPQUFPLGtCQUFtQixTQUFRLHNCQUFzQjs7OztJQUU1RCxZQUFvQixjQUFpQztRQUNuRCxLQUFLLEVBQUUsQ0FBQztRQURVLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtJQUVyRCxDQUFDOzs7O0lBRUQsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdEMsQ0FBQzs7OztJQUVELGdCQUFnQjtRQUNkLFFBQVEsSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUMxQixLQUFLLHNCQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sTUFBTSxDQUFDO1lBQ2hELEtBQUssc0JBQXNCLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxPQUFPLENBQUM7WUFDbEQsT0FBTyxDQUFDLENBQUMsT0FBTyxPQUFPLENBQUM7U0FDekI7SUFDSCxDQUFDOzs7O0lBRUQsaUJBQWlCO1FBQ2YsUUFBUSxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQzFCLEtBQUssc0JBQXNCLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxPQUFPLENBQUM7WUFDakQsS0FBSyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLE1BQU0sQ0FBQztZQUNqRCxPQUFPLENBQUMsQ0FBQyxPQUFPLE1BQU0sQ0FBQztTQUN4QjtJQUNILENBQUM7Ozs7O0lBRUQsU0FBUyxDQUFDLEtBQUs7UUFDYixJQUFJLEtBQUssQ0FBQyxLQUFLLEtBQUssRUFBRSxJQUFJLEtBQUssQ0FBQyxPQUFPLEtBQUssRUFBRSxFQUFHO1lBQy9DLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN2QixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7U0FDbkI7SUFDSCxDQUFDOzs7WUExQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxZQUFZO2dCQUN0QiwwdkNBQTBDO2dCQUMxQyxTQUFTLEVBQUU7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjt3QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozt3QkFBQyxHQUFHLEVBQUUsQ0FBQyxrQkFBa0IsRUFBQzt3QkFDakQsS0FBSyxFQUFFLElBQUk7cUJBQ1o7aUJBQ0Y7YUFDRjs7OztZQTNDMEIsaUJBQWlCOzs7Ozs7O0lBOEM5Qiw0Q0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdDaGVja2VkLCBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgVGhmU3dpdGNoQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vdGhmLXN3aXRjaC1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaGZTd2l0Y2hMYWJlbFBvc2l0aW9uIH0gZnJvbSAnLi90aGYtc3dpdGNoLWxhYmVsLXBvc2l0aW9uLmVudW0nO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBUaGZTd2l0Y2hCYXNlQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLXN3aXRjaC1iYXNpY1wiIHRpdGxlPVwiVG90dnMgU3dpdGNoIEJhc2ljXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXN3aXRjaC1iYXNpYy9zYW1wbGUtdGhmLXN3aXRjaC1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXN3aXRjaC1iYXNpYy9zYW1wbGUtdGhmLXN3aXRjaC1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtc3dpdGNoLWxhYnNcIiB0aXRsZT1cIlRvdHZzIFN3aXRjaCBMYWJzXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXN3aXRjaC1sYWJzL3NhbXBsZS10aGYtc3dpdGNoLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1zd2l0Y2gtbGFicy9zYW1wbGUtdGhmLXN3aXRjaC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXN3aXRjaC1sYWJzL3NhbXBsZS10aGYtc3dpdGNoLWxhYnMuY29tcG9uZW50LmUyZS1zcGVjLnRzXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtc3dpdGNoLWxhYnMvc2FtcGxlLXRoZi1zd2l0Y2gtbGFicy5jb21wb25lbnQucG8udHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtc3dpdGNoLW9yZGVyXCIgdGl0bGU9XCJUb3R2cyBTd2l0Y2ggLSBPcmRlciBTdW1tYXJ5XCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXN3aXRjaC1vcmRlci9zYW1wbGUtdGhmLXN3aXRjaC1vcmRlci5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXN3aXRjaC1vcmRlci9zYW1wbGUtdGhmLXN3aXRjaC1vcmRlci5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtc3dpdGNoLW9yZGVyLXJlYWN0aXZlLWZvcm1cIiB0aXRsZT1cIlRvdHZzIFN3aXRjaCAtIE9yZGVyIFN1bW1hcnkgUmVhY3RpdmUgRm9ybVwiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1zd2l0Y2gtb3JkZXItcmVhY3RpdmUtZm9ybS9zYW1wbGUtdGhmLXN3aXRjaC1vcmRlci1yZWFjdGl2ZS1mb3JtLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtc3dpdGNoLW9yZGVyLXJlYWN0aXZlLWZvcm0vc2FtcGxlLXRoZi1zd2l0Y2gtb3JkZXItcmVhY3RpdmUtZm9ybS5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtc3dpdGNoJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1zd2l0Y2guY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRoZlN3aXRjaENvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgVGhmU3dpdGNoQ29tcG9uZW50IGV4dGVuZHMgVGhmU3dpdGNoQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0NoZWNrZWQge1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpOiB2b2lkIHtcbiAgICB0aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG4gIGdldExhYmVsUG9zaXRpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLmxhYmVsUG9zaXRpb24pIHtcbiAgICAgIGNhc2UgVGhmU3dpdGNoTGFiZWxQb3NpdGlvbi5MZWZ0OiByZXR1cm4gJ2xlZnQnO1xuICAgICAgY2FzZSBUaGZTd2l0Y2hMYWJlbFBvc2l0aW9uLlJpZ2h0OiByZXR1cm4gJ3JpZ2h0JztcbiAgICAgIGRlZmF1bHQ6IHJldHVybiAncmlnaHQnO1xuICAgIH1cbiAgfVxuXG4gIGdldFN3aXRjaFBvc2l0aW9uKCkge1xuICAgIHN3aXRjaCAodGhpcy5sYWJlbFBvc2l0aW9uKSB7XG4gICAgICBjYXNlIFRoZlN3aXRjaExhYmVsUG9zaXRpb24uTGVmdDogcmV0dXJuICdyaWdodCc7XG4gICAgICBjYXNlIFRoZlN3aXRjaExhYmVsUG9zaXRpb24uUmlnaHQ6IHJldHVybiAnbGVmdCc7XG4gICAgICBkZWZhdWx0OiByZXR1cm4gJ2xlZnQnO1xuICAgIH1cbiAgfVxuXG4gIG9uS2V5RG93bihldmVudCkge1xuICAgIGlmIChldmVudC53aGljaCA9PT0gMzIgfHwgZXZlbnQua2V5Q29kZSA9PT0gMzIpICB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5ldmVudENsaWNrKCk7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==