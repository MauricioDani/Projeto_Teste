/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
/**
 * \@description
 *
 * O componente `thf-tabs` é responsável por agrupar [abas](/documentation/thf-tab) dispostas numa linha horizontal,
 * ideal para facilitar a organização de conteúdos.
 *
 * Até cinco abas o componente exibe todas normalmente. Contudo, a partir de seis abas, o componente torna visível
 * apenas as quatro primeiras, agrupando todas as demais na quinta aba rotulada de **Mais**.
 *
 * > As abas que estiverem agrupadas serão dispostas numa cascata suspensa que será exibida ao clicar no botão **Mais**.
 *
 * É possível realizar a navegação entre as abas através da tecla TAB do teclado.
 * Caso uma aba estiver desabilitada, não receberá foco de navegação.
 *
 * #### Boas práticas
 *
 * - Evite utilizar uma quantidade excessiva de abas, pois irá gerar um *scroll* muito longo no `dropdown`;
 * - Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos.
 */
export class ThfTabsBaseComponent {
    constructor() {
        this._small = false;
    }
    /**
     * \@optinal
     *
     * \@description
     *
     * Diminui o tamanho das abas.
     *
     * \@default `false`
     * @param {?} value
     * @return {?}
     */
    set small(value) {
        this._small = convertToBoolean(value);
    }
    /**
     * @return {?}
     */
    get small() {
        return this._small;
    }
}
ThfTabsBaseComponent.propDecorators = {
    small: [{ type: Input, args: ['t-small',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfTabsBaseComponent.prototype._small;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRhYnMtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXRhYnMvdGhmLXRhYnMtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJwRCxNQUFNLE9BQU8sb0JBQW9CO0lBQWpDO1FBRVUsV0FBTSxHQUFhLEtBQUssQ0FBQztJQW1CbkMsQ0FBQzs7Ozs7Ozs7Ozs7O0lBUkMsSUFBc0IsS0FBSyxDQUFDLEtBQWM7UUFDeEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDOzs7O0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7OztvQkFOQSxLQUFLLFNBQUMsU0FBUzs7Ozs7OztJQVhoQixzQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGB0aGYtdGFic2Agw6kgcmVzcG9uc8OhdmVsIHBvciBhZ3J1cGFyIFthYmFzXSgvZG9jdW1lbnRhdGlvbi90aGYtdGFiKSBkaXNwb3N0YXMgbnVtYSBsaW5oYSBob3Jpem9udGFsLFxuICogaWRlYWwgcGFyYSBmYWNpbGl0YXIgYSBvcmdhbml6YcOnw6NvIGRlIGNvbnRlw7pkb3MuXG4gKlxuICogQXTDqSBjaW5jbyBhYmFzIG8gY29tcG9uZW50ZSBleGliZSB0b2RhcyBub3JtYWxtZW50ZS4gQ29udHVkbywgYSBwYXJ0aXIgZGUgc2VpcyBhYmFzLCBvIGNvbXBvbmVudGUgdG9ybmEgdmlzw612ZWxcbiAqIGFwZW5hcyBhcyBxdWF0cm8gcHJpbWVpcmFzLCBhZ3J1cGFuZG8gdG9kYXMgYXMgZGVtYWlzIG5hIHF1aW50YSBhYmEgcm90dWxhZGEgZGUgKipNYWlzKiouXG4gKlxuICogPiBBcyBhYmFzIHF1ZSBlc3RpdmVyZW0gYWdydXBhZGFzIHNlcsOjbyBkaXNwb3N0YXMgbnVtYSBjYXNjYXRhIHN1c3BlbnNhIHF1ZSBzZXLDoSBleGliaWRhIGFvIGNsaWNhciBubyBib3TDo28gKipNYWlzKiouXG4gKlxuICogw4kgcG9zc8OtdmVsIHJlYWxpemFyIGEgbmF2ZWdhw6fDo28gZW50cmUgYXMgYWJhcyBhdHJhdsOpcyBkYSB0ZWNsYSBUQUIgZG8gdGVjbGFkby5cbiAqIENhc28gdW1hIGFiYSBlc3RpdmVyIGRlc2FiaWxpdGFkYSwgbsOjbyByZWNlYmVyw6EgZm9jbyBkZSBuYXZlZ2HDp8Ojby5cbiAqXG4gKiAjIyMjIEJvYXMgcHLDoXRpY2FzXG4gKlxuICogLSBFdml0ZSB1dGlsaXphciB1bWEgcXVhbnRpZGFkZSBleGNlc3NpdmEgZGUgYWJhcywgcG9pcyBpcsOhIGdlcmFyIHVtICpzY3JvbGwqIG11aXRvIGxvbmdvIG5vIGBkcm9wZG93bmA7XG4gKiAtIEV2aXRlIGBsYWJlbHNgIGV4dGVuc29zIHBhcmEgYXMgYHRhYnNgIHBvaXMgcG9kZW0gcXVlYnJhciBzZXUgKmxheW91dCosIHVzZSBgbGFiZWxzYCBkaXJldG9zLCBjdXJ0b3MgZSBpbnR1aXRpdm9zLlxuICovXG5leHBvcnQgY2xhc3MgVGhmVGFic0Jhc2VDb21wb25lbnQge1xuXG4gIHByaXZhdGUgX3NtYWxsPzogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBAb3B0aW5hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGltaW51aSBvIHRhbWFuaG8gZGFzIGFiYXMuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgndC1zbWFsbCcpIHNldCBzbWFsbCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX3NtYWxsID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgc21hbGwoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX3NtYWxsO1xuICB9XG5cbn1cbiJdfQ==