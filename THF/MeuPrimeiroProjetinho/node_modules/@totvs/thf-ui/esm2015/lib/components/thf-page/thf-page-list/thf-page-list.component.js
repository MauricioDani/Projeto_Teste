/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
import { browserLanguage, callFunction, isTypeof } from '../../../utils/util';
import { ThfPageContentComponent } from '../thf-page-content/thf-page-content.component';
import { ThfPageListBaseComponent } from './thf-page-list-base.component';
/**
 * \@docsExtends ThfPageListBaseComponent
 *
 * \@example
 *
 * <example name="thf-page-list-basic" title="Totvs Page List Basic">
 *  <file name="sample-thf-page-list-basic/sample-thf-page-list-basic.component.html"> </file>
 *  <file name="sample-thf-page-list-basic/sample-thf-page-list-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-list-labs" title="Totvs Page List Labs">
 *  <file name="sample-thf-page-list-labs/sample-thf-page-list-labs.component.html"> </file>
 *  <file name="sample-thf-page-list-labs/sample-thf-page-list-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-list-hiring-processes" title="Totvs Page List - Hiring Processes">
 *  <file name="sample-thf-page-list-hiring-processes/sample-thf-page-list-hiring-processes.component.html"> </file>
 *  <file name="sample-thf-page-list-hiring-processes/sample-thf-page-list-hiring-processes.component.ts"> </file>
 *  <file name="sample-thf-page-list-hiring-processes/sample-thf-page-list-hiring-processes.service.ts"> </file>
 * </example>
 */
export class ThfPageListComponent extends ThfPageListBaseComponent {
    /**
     * @param {?} viewRef
     * @param {?} renderer
     * @param {?} router
     */
    constructor(viewRef, renderer, router) {
        super();
        this.renderer = renderer;
        this.router = router;
        this.limitPrimaryActions = 3;
        this.isRecalculate = true;
        this.maxWidthMobile = 480;
        this.callFunction = callFunction;
        this.parentRef = viewRef['_view']['component'];
        this.initializeListeners();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.advancedSearch = this.initFixedLiterals();
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.setIsMobile();
        this.setDropdownActions();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.setDropdownActions();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.removeListeners();
    }
    /**
     * @param {?} action
     * @return {?}
     */
    actionIsDisabled(action) {
        return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    callAction(item) {
        if (item.url) {
            this.router.navigate([item.url]);
        }
        else if (item.action) {
            callFunction(item.action, this.parentRef);
        }
    }
    /**
     * @return {?}
     */
    hasPageHeader() {
        return !!(this.title || (this.actions && this.actions.length) || (this.breadcrumb && this.breadcrumb.items.length));
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    onResize(event) {
        /** @type {?} */
        const width = ((/** @type {?} */ (event.target))).innerWidth;
        if (width < this.maxWidthMobile) {
            this.isMobile = true;
            this.limitPrimaryActions = 2;
            this.setDropdownActions();
        }
        else {
            this.isMobile = false;
            this.limitPrimaryActions = 3;
            this.setDropdownActions();
        }
    }
    /**
     * @private
     * @return {?}
     */
    setIsMobile() {
        if (window.innerWidth < this.maxWidthMobile) {
            this.isMobile = true;
            this.limitPrimaryActions = 2;
        }
    }
    /**
     * @return {?}
     */
    setDropdownActions() {
        if (this.actions.length > this.limitPrimaryActions) {
            this.dropdownActions = this.actions.slice(this.limitPrimaryActions - 1);
        }
    }
    /**
     * @param {?} field
     * @return {?}
     */
    callActionFilter(field) {
        this.callFunction(this.filter[field], this.parentRef);
    }
    /**
     * @return {?}
     */
    initFixedLiterals() {
        /** @type {?} */
        const locale = browserLanguage();
        /** @type {?} */
        const literal = {
            pt: {
                advancedSearch: 'Busca avançada'
            },
            en: {
                advancedSearch: 'Advanced search'
            },
            es: {
                advancedSearch: 'Búsqueda avanzada'
            }
        };
        return literal[locale].advancedSearch;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    onkeypress(key) {
        if (key === 13) {
            this.callActionFilter('action');
        }
    }
    /**
     * @param {?} newModel
     * @return {?}
     */
    changeModel(newModel) {
        this.parentRef[this.filter.ngModel] = newModel;
    }
    // Recebe evento change do disclaimer e recalcula tela
    /**
     * @param {?} disclaimers
     * @return {?}
     */
    onChangeDisclaimerGroup(disclaimers) {
        if ((disclaimers && disclaimers.length && this.isRecalculate) || (disclaimers.length === 0 && !this.isRecalculate)) {
            this.thfPageContent.recalculateHeaderSize();
            this.isRecalculate = !this.isRecalculate;
        }
        if (this.disclaimerGroup && this.disclaimerGroup.change) {
            this.disclaimerGroup.change(disclaimers);
        }
    }
    /**
     * @private
     * @return {?}
     */
    initializeListeners() {
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @param {?} event
         * @return {?}
         */
        (event) => {
            this.onResize(event);
        }));
    }
    /**
     * @private
     * @return {?}
     */
    removeListeners() {
        this.resizeListener();
    }
}
ThfPageListComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-page-list',
                template: "<thf-page>\n\n  <!-- HEADER -->\n  <thf-page-header\n    *ngIf=\"hasPageHeader()\"\n    [class.thf-page-list-header-padding]=\"filter && !actions.length\"\n    [t-breadcrumb]=\"breadcrumb\"\n    [t-title]=\"title\">\n\n    <!-- OPERATIONS -->\n    <div class=\"thf-page-list-operations\">\n      <div class=\"thf-page-list-actions\"\n        [class.thf-page-list-actions-padding]=\"filter\">\n        <thf-button *ngIf=\"actions[0]\"\n          t-type=\"primary\"\n          [t-disabled]=\"actionIsDisabled(actions[0])\"\n          [t-icon]=\"actions[0].icon\"\n          [t-label]=\"actions[0].label\"\n          (t-click)=\"callAction(actions[0])\">\n        </thf-button>\n\n        <thf-button *ngIf=\"actions[1] && (actions.length === 2 || !isMobile)\"\n          [t-disabled]=\"actionIsDisabled(actions[1])\"\n          [t-label]=\"actions[1].label\"\n          (t-click)=\"callAction(actions[1])\">\n        </thf-button>\n\n        <thf-button *ngIf=\"actions.length == 3 && actions[2] && !isMobile\"\n          [t-disabled]=\"actionIsDisabled(actions[2])\"\n          [t-label]=\"actions[2].label\"\n          (t-click)=\"callAction(actions[2])\">\n        </thf-button>\n\n        <thf-dropdown *ngIf=\"actions.length > limitPrimaryActions\"\n          [t-actions]=\"dropdownActions\"\n          [t-label]=\"literals.otherActions\">\n        </thf-dropdown>\n      </div>\n\n      <!-- FILTER -->\n      <div class=\"thf-page-list-filter-wrapper\" *ngIf=\"filter\">\n\n        <div class=\"thf-field-container-content thf-page-filter-content\">\n          <div class=\"thf-field-icon-container-right\">\n            <span class=\"thf-icon thf-icon-search thf-field-icon\"\n              (click)=\"callActionFilter('action')\">\n            </span>\n          </div>\n\n          <input class=\"thf-input thf-input-icon-right\"\n            name=\"model\"\n            type=\"text\"\n            [ngModel]=\"parentRef[filter.ngModel]\"\n            [placeholder]=\"filter.placeholder || ''\"\n            (keypress)=\"onkeypress($event.keyCode)\"\n            (ngModelChange)=\"changeModel($event)\">\n        </div>\n\n        <div class=\"thf-page-list-filter-search\" *ngIf=\"filter.advancedAction\">\n          <span class=\"thf-page-list-filter-search-link\"\n            tabindex=\"0\"\n            (click)=\"callActionFilter('advancedAction')\"\n            (keydown.enter)=\"callActionFilter('advancedAction')\">\n              {{advancedSearch}}\n          </span>\n        </div>\n\n      </div>\n    </div>\n\n    <!-- DISCLAIMER -->\n    <thf-disclaimer-group *ngIf=\"!!disclaimerGroup\"\n      [class.thf-page-list-disclaimer-group]=\"!!disclaimerGroup?.disclaimers?.length\"\n      [t-disclaimers]=\"disclaimerGroup?.disclaimers\"\n      [t-hide-remove-all]=\"disclaimerGroup?.hideRemoveAll\"\n      [t-title]=\"disclaimerGroup?.title\"\n      (t-change)=\"onChangeDisclaimerGroup($event)\">\n    </thf-disclaimer-group>\n\n  </thf-page-header>\n\n  <!-- CONTENT -->\n  <thf-page-content>\n    <ng-content></ng-content>\n  </thf-page-content>\n\n</thf-page>\n"
            }] }
];
/** @nocollapse */
ThfPageListComponent.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: Renderer2 },
    { type: Router }
];
ThfPageListComponent.propDecorators = {
    thfPageContent: [{ type: ViewChild, args: [ThfPageContentComponent, { static: true },] }]
};
if (false) {
    /** @type {?} */
    ThfPageListComponent.prototype.advancedSearch;
    /** @type {?} */
    ThfPageListComponent.prototype.dropdownActions;
    /** @type {?} */
    ThfPageListComponent.prototype.isMobile;
    /** @type {?} */
    ThfPageListComponent.prototype.limitPrimaryActions;
    /**
     * @type {?}
     * @private
     */
    ThfPageListComponent.prototype.isRecalculate;
    /**
     * @type {?}
     * @private
     */
    ThfPageListComponent.prototype.maxWidthMobile;
    /**
     * @type {?}
     * @private
     */
    ThfPageListComponent.prototype.parentRef;
    /** @type {?} */
    ThfPageListComponent.prototype.callFunction;
    /** @type {?} */
    ThfPageListComponent.prototype.thfPageContent;
    /** @type {?} */
    ThfPageListComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    ThfPageListComponent.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2UtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXBhZ2UvdGhmLXBhZ2UtbGlzdC90aGYtcGFnZS1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNhLFNBQVMsRUFBZ0MsU0FBUyxFQUFnQixTQUFTLEVBQUUsZ0JBQWdCLEVBQ2hILE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV6QyxPQUFPLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUU5RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUV6RixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCMUUsTUFBTSxPQUFPLG9CQUFxQixTQUFRLHdCQUF3Qjs7Ozs7O0lBZWhFLFlBQ0UsT0FBeUIsRUFDbEIsUUFBbUIsRUFDbEIsTUFBYztRQUV0QixLQUFLLEVBQUUsQ0FBQztRQUhELGFBQVEsR0FBUixRQUFRLENBQVc7UUFDbEIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQWJ4Qix3QkFBbUIsR0FBVyxDQUFDLENBQUM7UUFFeEIsa0JBQWEsR0FBRyxJQUFJLENBQUM7UUFDckIsbUJBQWMsR0FBVyxHQUFHLENBQUM7UUFHckMsaUJBQVksR0FBRyxZQUFZLENBQUM7UUFVMUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7SUFDN0IsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FB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QUFDO1FBQ3ZCLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFTyxlQUFlO1FBQ3JCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN4QixDQUFDOzs7WUE3SUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxlQUFlO2dCQUN6QixzaEdBQTZDO2FBQzlDOzs7O1lBbENnRyxnQkFBZ0I7WUFBcEQsU0FBUztZQUU3RCxNQUFNOzs7NkJBOENaLFNBQVMsU0FBQyx1QkFBdUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Ozs7SUFYcEQsOENBQXVCOztJQUN2QiwrQ0FBc0M7O0lBQ3RDLHdDQUFrQjs7SUFDbEIsbURBQWdDOzs7OztJQUVoQyw2Q0FBNkI7Ozs7O0lBQzdCLDhDQUFxQzs7Ozs7SUFDckMseUNBQW9DOztJQUVwQyw0Q0FBNEI7O0lBRTVCLDhDQUE4Rjs7SUFJNUYsd0NBQTBCOzs7OztJQUMxQixzQ0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlckNvbnRlbnRJbml0LCBDb21wb25lbnQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlLCBWaWV3Q2hpbGQsIFZpZXdDb250YWluZXJSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBicm93c2VyTGFuZ3VhZ2UsIGNhbGxGdW5jdGlvbiwgaXNUeXBlb2YgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcbmltcG9ydCB7IFRoZlBhZ2VBY3Rpb24gfSBmcm9tICcuLi90aGYtcGFnZS1hY3Rpb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IFRoZlBhZ2VDb250ZW50Q29tcG9uZW50IH0gZnJvbSAnLi4vdGhmLXBhZ2UtY29udGVudC90aGYtcGFnZS1jb250ZW50LmNvbXBvbmVudCc7XG5cbmltcG9ydCB7IFRoZlBhZ2VMaXN0QmFzZUNvbXBvbmVudCB9IGZyb20gJy4vdGhmLXBhZ2UtbGlzdC1iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFRoZlBhZ2VMaXN0QmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1wYWdlLWxpc3QtYmFzaWNcIiB0aXRsZT1cIlRvdHZzIFBhZ2UgTGlzdCBCYXNpY1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXBhZ2UtbGlzdC1iYXNpYy9zYW1wbGUtdGhmLXBhZ2UtbGlzdC1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtcGFnZS1saXN0LWJhc2ljL3NhbXBsZS10aGYtcGFnZS1saXN0LWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1wYWdlLWxpc3QtbGFic1wiIHRpdGxlPVwiVG90dnMgUGFnZSBMaXN0IExhYnNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1wYWdlLWxpc3QtbGFicy9zYW1wbGUtdGhmLXBhZ2UtbGlzdC1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1wYWdlLWxpc3QtbGFicy9zYW1wbGUtdGhmLXBhZ2UtbGlzdC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1wYWdlLWxpc3QtaGlyaW5nLXByb2Nlc3Nlc1wiIHRpdGxlPVwiVG90dnMgUGFnZSBMaXN0IC0gSGlyaW5nIFByb2Nlc3Nlc1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXBhZ2UtbGlzdC1oaXJpbmctcHJvY2Vzc2VzL3NhbXBsZS10aGYtcGFnZS1saXN0LWhpcmluZy1wcm9jZXNzZXMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXBhZ2UtbGlzdC1oaXJpbmctcHJvY2Vzc2VzL3NhbXBsZS10aGYtcGFnZS1saXN0LWhpcmluZy1wcm9jZXNzZXMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1wYWdlLWxpc3QtaGlyaW5nLXByb2Nlc3Nlcy9zYW1wbGUtdGhmLXBhZ2UtbGlzdC1oaXJpbmctcHJvY2Vzc2VzLnNlcnZpY2UudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtcGFnZS1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1wYWdlLWxpc3QuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoZlBhZ2VMaXN0Q29tcG9uZW50IGV4dGVuZHMgVGhmUGFnZUxpc3RCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCB7XG5cbiAgYWR2YW5jZWRTZWFyY2g6IHN0cmluZztcbiAgZHJvcGRvd25BY3Rpb25zOiBBcnJheTxUaGZQYWdlQWN0aW9uPjtcbiAgaXNNb2JpbGU6IGJvb2xlYW47XG4gIGxpbWl0UHJpbWFyeUFjdGlvbnM6IG51bWJlciA9IDM7XG5cbiAgcHJpdmF0ZSBpc1JlY2FsY3VsYXRlID0gdHJ1ZTtcbiAgcHJpdmF0ZSBtYXhXaWR0aE1vYmlsZTogbnVtYmVyID0gNDgwO1xuICBwcml2YXRlIHBhcmVudFJlZjogVmlld0NvbnRhaW5lclJlZjtcblxuICBjYWxsRnVuY3Rpb24gPSBjYWxsRnVuY3Rpb247XG5cbiAgQFZpZXdDaGlsZChUaGZQYWdlQ29udGVudENvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgdGhmUGFnZUNvbnRlbnQ6IFRoZlBhZ2VDb250ZW50Q29tcG9uZW50O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHZpZXdSZWY6IFZpZXdDb250YWluZXJSZWYsXG4gICAgcHVibGljIHJlbmRlcmVyOiBSZW5kZXJlcjIsXG4gICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcikge1xuXG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnBhcmVudFJlZiA9IHZpZXdSZWZbJ192aWV3J11bJ2NvbXBvbmVudCddO1xuICAgIHRoaXMuaW5pdGlhbGl6ZUxpc3RlbmVycygpO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5hZHZhbmNlZFNlYXJjaCA9IHRoaXMuaW5pdEZpeGVkTGl0ZXJhbHMoKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnNldElzTW9iaWxlKCk7XG4gICAgdGhpcy5zZXREcm9wZG93bkFjdGlvbnMoKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IHtbcHJvcE5hbWU6IHN0cmluZ106IFNpbXBsZUNoYW5nZX0pIHtcbiAgICB0aGlzLnNldERyb3Bkb3duQWN0aW9ucygpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIGFjdGlvbklzRGlzYWJsZWQoYWN0aW9uOiBhbnkpIHtcbiAgICByZXR1cm4gaXNUeXBlb2YoYWN0aW9uLmRpc2FibGVkLCAnZnVuY3Rpb24nKSA/IGFjdGlvbi5kaXNhYmxlZChhY3Rpb24pIDogYWN0aW9uLmRpc2FibGVkO1xuICB9XG5cbiAgY2FsbEFjdGlvbihpdGVtOiBUaGZQYWdlQWN0aW9uKTogdm9pZCB7XG4gICAgaWYgKGl0ZW0udXJsKSB7XG4gICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbaXRlbS51cmxdKTtcbiAgICB9IGVsc2UgaWYgKGl0ZW0uYWN0aW9uKSB7XG4gICAgICBjYWxsRnVuY3Rpb24oaXRlbS5hY3Rpb24sIHRoaXMucGFyZW50UmVmKTtcbiAgICB9XG4gIH1cblxuICBoYXNQYWdlSGVhZGVyKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAgISEodGhpcy50aXRsZSB8fCAodGhpcy5hY3Rpb25zICYmIHRoaXMuYWN0aW9ucy5sZW5ndGgpIHx8ICh0aGlzLmJyZWFkY3J1bWIgJiYgdGhpcy5icmVhZGNydW1iLml0ZW1zLmxlbmd0aCkpO1xuICB9XG5cbiAgcHJpdmF0ZSBvblJlc2l6ZShldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICBjb25zdCB3aWR0aCA9IChldmVudC50YXJnZXQgYXMgV2luZG93KS5pbm5lcldpZHRoO1xuXG4gICAgaWYgKHdpZHRoIDwgdGhpcy5tYXhXaWR0aE1vYmlsZSkge1xuICAgICAgdGhpcy5pc01vYmlsZSA9IHRydWU7XG4gICAgICB0aGlzLmxpbWl0UHJpbWFyeUFjdGlvbnMgPSAyO1xuICAgICAgdGhpcy5zZXREcm9wZG93bkFjdGlvbnMoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pc01vYmlsZSA9IGZhbHNlO1xuICAgICAgdGhpcy5saW1pdFByaW1hcnlBY3Rpb25zID0gMztcbiAgICAgIHRoaXMuc2V0RHJvcGRvd25BY3Rpb25zKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzZXRJc01vYmlsZSgpOiB2b2lkIHtcbiAgICBpZiAod2luZG93LmlubmVyV2lkdGggPCB0aGlzLm1heFdpZHRoTW9iaWxlKSB7XG4gICAgICB0aGlzLmlzTW9iaWxlID0gdHJ1ZTtcbiAgICAgIHRoaXMubGltaXRQcmltYXJ5QWN0aW9ucyA9IDI7XG4gICAgfVxuICB9XG5cbiAgc2V0RHJvcGRvd25BY3Rpb25zKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmFjdGlvbnMubGVuZ3RoID4gdGhpcy5saW1pdFByaW1hcnlBY3Rpb25zKSB7XG4gICAgICB0aGlzLmRyb3Bkb3duQWN0aW9ucyA9IHRoaXMuYWN0aW9ucy5zbGljZSh0aGlzLmxpbWl0UHJpbWFyeUFjdGlvbnMgLSAxKTtcbiAgICB9XG4gIH1cblxuICBjYWxsQWN0aW9uRmlsdGVyKGZpZWxkOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLmNhbGxGdW5jdGlvbih0aGlzLmZpbHRlcltmaWVsZF0sIHRoaXMucGFyZW50UmVmKTtcbiAgfVxuXG4gIGluaXRGaXhlZExpdGVyYWxzKCkge1xuICAgIGNvbnN0IGxvY2FsZSA9IGJyb3dzZXJMYW5ndWFnZSgpO1xuXG4gICAgY29uc3QgbGl0ZXJhbCA9IHtcbiAgICAgIHB0OiB7XG4gICAgICAgIGFkdmFuY2VkU2VhcmNoOiAnQnVzY2EgYXZhbsOnYWRhJ1xuICAgICAgfSxcbiAgICAgIGVuOiB7XG4gICAgICAgIGFkdmFuY2VkU2VhcmNoOiAnQWR2YW5jZWQgc2VhcmNoJ1xuICAgICAgfSxcbiAgICAgIGVzOiB7XG4gICAgICAgIGFkdmFuY2VkU2VhcmNoOiAnQsO6c3F1ZWRhIGF2YW56YWRhJ1xuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gbGl0ZXJhbFtsb2NhbGVdLmFkdmFuY2VkU2VhcmNoO1xuICB9XG5cbiAgb25rZXlwcmVzcyhrZXkpIHtcbiAgICBpZiAoa2V5ID09PSAxMykge1xuICAgICAgdGhpcy5jYWxsQWN0aW9uRmlsdGVyKCdhY3Rpb24nKTtcbiAgICB9XG4gIH1cblxuICBjaGFuZ2VNb2RlbChuZXdNb2RlbCk6IHZvaWQge1xuICAgIHRoaXMucGFyZW50UmVmW3RoaXMuZmlsdGVyLm5nTW9kZWxdID0gbmV3TW9kZWw7XG4gIH1cblxuICAvLyBSZWNlYmUgZXZlbnRvIGNoYW5nZSBkbyBkaXNjbGFpbWVyIGUgcmVjYWxjdWxhIHRlbGFcbiAgb25DaGFuZ2VEaXNjbGFpbWVyR3JvdXAoZGlzY2xhaW1lcnMpIHtcbiAgICBpZiAoKGRpc2NsYWltZXJzICYmIGRpc2NsYWltZXJzLmxlbmd0aCAmJiB0aGlzLmlzUmVjYWxjdWxhdGUpIHx8IChkaXNjbGFpbWVycy5sZW5ndGggPT09IDAgJiYgIXRoaXMuaXNSZWNhbGN1bGF0ZSkpIHtcbiAgICAgIHRoaXMudGhmUGFnZUNvbnRlbnQucmVjYWxjdWxhdGVIZWFkZXJTaXplKCk7XG4gICAgICB0aGlzLmlzUmVjYWxjdWxhdGUgPSAhdGhpcy5pc1JlY2FsY3VsYXRlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmRpc2NsYWltZXJHcm91cCAmJiB0aGlzLmRpc2NsYWltZXJHcm91cC5jaGFuZ2UpIHtcbiAgICAgIHRoaXMuZGlzY2xhaW1lckdyb3VwLmNoYW5nZShkaXNjbGFpbWVycyk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBpbml0aWFsaXplTGlzdGVuZXJzKCkge1xuICAgIHRoaXMucmVzaXplTGlzdGVuZXIgPSB0aGlzLnJlbmRlcmVyLmxpc3Rlbignd2luZG93JywgJ3Jlc2l6ZScsIChldmVudDogTW91c2VFdmVudCkgPT4ge1xuICAgICAgdGhpcy5vblJlc2l6ZShldmVudCk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZUxpc3RlbmVycygpIHtcbiAgICB0aGlzLnJlc2l6ZUxpc3RlbmVyKCk7XG4gIH1cblxufVxuIl19