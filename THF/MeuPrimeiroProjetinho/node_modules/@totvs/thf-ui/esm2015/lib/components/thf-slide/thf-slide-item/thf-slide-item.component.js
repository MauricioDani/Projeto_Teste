/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, ViewChild } from '@angular/core';
import { isIEOrEdge } from '../../../utils/util';
import { ThfSlideContentTemplateDirective } from '../directives/thf-slide-content-template.directive';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para cada item do thf-slide.
 */
export class ThfSlideItemComponent {
    constructor() {
        this.isIEOrEdge = isIEOrEdge();
    }
    /**
     * @return {?}
     */
    setLinkType() {
        if (!this.template && this.link) {
            return this.link.startsWith('http') ? 'externalLink' : 'internalLink';
        }
        return 'noLink';
    }
}
ThfSlideItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-slide-item',
                template: "<div #slideItem\n  class=\"thf-slide-item\"\n  [class.thf-slide-item-background-image]=\"!template && isIEOrEdge\"\n  [style.background-image]=\"!template && isIEOrEdge ? 'url(' + image + ')' : ''\"\n  [ngSwitch]=\"setLinkType()\">\n\n  <!-- slide com link interno -->\n  <a\n    *ngSwitchCase=\"'internalLink'\" \n    class=\"thf-slide-item-link\" \n    [routerLink]=\"link\">\n    <ng-container \n      [ngTemplateOutlet]=\"slideItemImage\" \n      [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image }}\">\n    </ng-container>\n  </a>\n  <!-- slide com link externo -->\n  <a \n    *ngSwitchCase=\"'externalLink'\"\n    class=\"thf-slide-item-link\" \n    [href]=\"link\">\n    <ng-container \n      [ngTemplateOutlet]=\"slideItemImage\" \n      [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image }}\">\n    </ng-container>\n  </a>\n  <!-- slide sem link -->\n  <a \n    *ngSwitchCase=\"'noLink'\"\n    [ngClass]=\"action ? 'thf-slide-item-link' : 'thf-slide-item-no-link'\"\n    (click)=\"action ? action(data) : undefined\">\n    <ng-container \n      [ngTemplateOutlet]=\"template ? slideItemTemplate : slideItemImage\"\n      [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image, data: data }}\">\n    </ng-container>\n  </a>\n\n</div>\n\n<ng-template #slideItemTemplate let-item='item'>\n  <div\n    *ngIf=\"template\"\n    class=\"thf-slide-item-content\">\n    <ng-template\n      [ngTemplateOutlet]=\"template.templateRef\"\n      [ngTemplateOutletContext]=\"{ $implicit: item.data, index: index }\">\n    </ng-template>\n  </div>\n</ng-template>\n\n<ng-template #slideItemImage let-item='item'>\n  <img\n    *ngIf=\"item.image && !isIEOrEdge\"\n    class=\"thf-slide-image\"\n    [alt]=\"item.alt\"\n    [src]=\"item.image\"\n    [style.height.px]=\"imageHeight\">\n</ng-template>\n"
            }] }
];
ThfSlideItemComponent.propDecorators = {
    itemElement: [{ type: ViewChild, args: ['slideItem', { static: true },] }],
    action: [{ type: Input, args: ['t-action',] }],
    alt: [{ type: Input, args: ['t-alt',] }],
    data: [{ type: Input, args: ['t-data',] }],
    image: [{ type: Input, args: ['t-image',] }],
    imageHeight: [{ type: Input, args: ['t-image-height',] }],
    template: [{ type: Input, args: ['t-template',] }],
    link: [{ type: Input, args: ['t-link',] }]
};
if (false) {
    /** @type {?} */
    ThfSlideItemComponent.prototype.itemElement;
    /** @type {?} */
    ThfSlideItemComponent.prototype.isIEOrEdge;
    /**
     * Ação executada ao clicar em uma imagem
     * @type {?}
     */
    ThfSlideItemComponent.prototype.action;
    /**
     * Texto alternativo quando a imagem não é encontrada
     * @type {?}
     */
    ThfSlideItemComponent.prototype.alt;
    /**
     * Dados para o template customizado
     * @type {?}
     */
    ThfSlideItemComponent.prototype.data;
    /**
     * Caminho da imagem
     * @type {?}
     */
    ThfSlideItemComponent.prototype.image;
    /**
     * Altura da imagem
     * @type {?}
     */
    ThfSlideItemComponent.prototype.imageHeight;
    /**
     * Template customizado
     * @type {?}
     */
    ThfSlideItemComponent.prototype.template;
    /**
     * Link executado ao clicar em uma imagem
     * @type {?}
     */
    ThfSlideItemComponent.prototype.link;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXNsaWRlLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1zbGlkZS90aGYtc2xpZGUtaXRlbS90aGYtc2xpZGUtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWpELE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLG9EQUFvRCxDQUFDOzs7Ozs7OztBQWF0RyxNQUFNLE9BQU8scUJBQXFCO0lBSmxDO1FBUUUsZUFBVSxHQUFRLFVBQVUsRUFBRSxDQUFDO0lBK0JqQyxDQUFDOzs7O0lBUkMsV0FBVztRQUNULElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDL0IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUM7U0FDdkU7UUFFRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDOzs7WUFyQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLHl5REFBOEM7YUFDL0M7OzswQkFHRSxTQUFTLFNBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtxQkFLdkMsS0FBSyxTQUFDLFVBQVU7a0JBR2hCLEtBQUssU0FBQyxPQUFPO21CQUdiLEtBQUssU0FBQyxRQUFRO29CQUdkLEtBQUssU0FBQyxTQUFTOzBCQUdmLEtBQUssU0FBQyxnQkFBZ0I7dUJBR3RCLEtBQUssU0FBQyxZQUFZO21CQUdsQixLQUFLLFNBQUMsUUFBUTs7OztJQXZCZiw0Q0FBa0U7O0lBRWxFLDJDQUErQjs7Ozs7SUFHL0IsdUNBQW9DOzs7OztJQUdwQyxvQ0FBNEI7Ozs7O0lBRzVCLHFDQUFrQzs7Ozs7SUFHbEMsc0NBQWdDOzs7OztJQUdoQyw0Q0FBNkM7Ozs7O0lBRzdDLHlDQUFnRTs7Ozs7SUFHaEUscUNBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGlzSUVPckVkZ2UgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgVGhmU2xpZGVDb250ZW50VGVtcGxhdGVEaXJlY3RpdmUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL3RoZi1zbGlkZS1jb250ZW50LXRlbXBsYXRlLmRpcmVjdGl2ZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBwYXJhIGNhZGEgaXRlbSBkbyB0aGYtc2xpZGUuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1zbGlkZS1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1zbGlkZS1pdGVtLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZTbGlkZUl0ZW1Db21wb25lbnQge1xuXG4gIEBWaWV3Q2hpbGQoJ3NsaWRlSXRlbScsIHsgc3RhdGljOiB0cnVlIH0pIGl0ZW1FbGVtZW50OiBFbGVtZW50UmVmO1xuXG4gIGlzSUVPckVkZ2U6IGFueSA9IGlzSUVPckVkZ2UoKTtcblxuICAvKiogQcOnw6NvIGV4ZWN1dGFkYSBhbyBjbGljYXIgZW0gdW1hIGltYWdlbSAqL1xuICBASW5wdXQoJ3QtYWN0aW9uJykgYWN0aW9uOiBGdW5jdGlvbjtcblxuICAvKiogVGV4dG8gYWx0ZXJuYXRpdm8gcXVhbmRvIGEgaW1hZ2VtIG7Do28gw6kgZW5jb250cmFkYSAqL1xuICBASW5wdXQoJ3QtYWx0JykgYWx0OiBzdHJpbmc7XG5cbiAgLyoqIERhZG9zIHBhcmEgbyB0ZW1wbGF0ZSBjdXN0b21pemFkbyAqL1xuICBASW5wdXQoJ3QtZGF0YScpIGRhdGE6IEFycmF5PGFueT47XG5cbiAgLyoqIENhbWluaG8gZGEgaW1hZ2VtICovXG4gIEBJbnB1dCgndC1pbWFnZScpIGltYWdlOiBzdHJpbmc7XG5cbiAgLyoqIEFsdHVyYSBkYSBpbWFnZW0gKi9cbiAgQElucHV0KCd0LWltYWdlLWhlaWdodCcpIGltYWdlSGVpZ2h0OiBudW1iZXI7XG5cbiAgLyoqIFRlbXBsYXRlIGN1c3RvbWl6YWRvICovXG4gIEBJbnB1dCgndC10ZW1wbGF0ZScpIHRlbXBsYXRlOiBUaGZTbGlkZUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZTtcblxuICAvKiogTGluayBleGVjdXRhZG8gYW8gY2xpY2FyIGVtIHVtYSBpbWFnZW0gKi9cbiAgQElucHV0KCd0LWxpbmsnKSBsaW5rOiBzdHJpbmc7XG5cbiAgc2V0TGlua1R5cGUoKSB7XG4gICAgaWYgKCF0aGlzLnRlbXBsYXRlICYmIHRoaXMubGluaykge1xuICAgICAgcmV0dXJuIHRoaXMubGluay5zdGFydHNXaXRoKCdodHRwJykgPyAnZXh0ZXJuYWxMaW5rJyA6ICdpbnRlcm5hbExpbmsnO1xuICAgIH1cblxuICAgIHJldHVybiAnbm9MaW5rJztcbiAgfVxuXG59XG4iXX0=