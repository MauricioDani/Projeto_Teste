/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { ThfButtonModule } from '../thf-button/thf-button.module';
import { ThfPopupModule } from '../thf-popup/thf-popup.module';
import { ThfListViewComponent } from './thf-list-view.component';
import { ThfListViewContentTemplateDirective } from './thf-list-view-content-template/thf-list-view-content-template.directive';
import { ThfListViewDetailTemplateDirective } from './thf-list-view-detail-template/thf-list-view-detail-template.directive';
/**
 * \@description
 *
 * Módulo do componente `thf-list-view`.
 *
 * > Para o correto funcionamento do componente `thf-list-view`, deve ser importado o módulo `BrowserAnimationsModule` no
 * > módulo principal da sua aplicação.
 *
 * Módulo da aplicação:
 * ```
 * import { BrowserAnimationsModule } from '\@angular/platform-browser/animations';
 * import { ThfModule } from '\@totvs/thf-ui';
 * ...
 *
 * \@NgModule({
 *   imports: [
 *     BrowserModule,
 *     BrowserAnimationsModule,
 *     ...
 *     ThfModule
 *   ],
 *   declarations: [
 *     AppComponent,
 *     ...
 *   ],
 *   providers: [],
 *   bootstrap: [AppComponent]
 * })
 * export class AppModule { }
 * ```
 */
export class ThfListViewModule {
}
ThfListViewModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    RouterModule,
                    ThfButtonModule,
                    ThfPopupModule
                ],
                declarations: [
                    ThfListViewComponent,
                    ThfListViewContentTemplateDirective,
                    ThfListViewDetailTemplateDirective
                ],
                exports: [
                    ThfListViewComponent,
                    ThfListViewContentTemplateDirective,
                    ThfListViewDetailTemplateDirective
                ],
                providers: [],
                schemas: []
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWxpc3Qtdmlldy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWxpc3Qtdmlldy90aGYtbGlzdC12aWV3Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFL0QsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDakUsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sMkVBQTJFLENBQUM7QUFDaEksT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0seUVBQXlFLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUQ3SCxNQUFNLE9BQU8saUJBQWlCOzs7WUFwQjdCLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUU7b0JBQ1AsWUFBWTtvQkFDWixZQUFZO29CQUNaLGVBQWU7b0JBQ2YsY0FBYztpQkFDZjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1osb0JBQW9CO29CQUNwQixtQ0FBbUM7b0JBQ25DLGtDQUFrQztpQkFDbkM7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLG9CQUFvQjtvQkFDcEIsbUNBQW1DO29CQUNuQyxrQ0FBa0M7aUJBQ25DO2dCQUNELFNBQVMsRUFBRSxFQUFFO2dCQUNiLE9BQU8sRUFBRSxFQUFFO2FBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmltcG9ydCB7IFRoZkJ1dHRvbk1vZHVsZSB9IGZyb20gJy4uL3RoZi1idXR0b24vdGhmLWJ1dHRvbi5tb2R1bGUnO1xuaW1wb3J0IHsgVGhmUG9wdXBNb2R1bGUgfSBmcm9tICcuLi90aGYtcG9wdXAvdGhmLXBvcHVwLm1vZHVsZSc7XG5cbmltcG9ydCB7IFRoZkxpc3RWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi90aGYtbGlzdC12aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaGZMaXN0Vmlld0NvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vdGhmLWxpc3Qtdmlldy1jb250ZW50LXRlbXBsYXRlL3RoZi1saXN0LXZpZXctY29udGVudC10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGhmTGlzdFZpZXdEZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vdGhmLWxpc3Qtdmlldy1kZXRhaWwtdGVtcGxhdGUvdGhmLWxpc3Qtdmlldy1kZXRhaWwtdGVtcGxhdGUuZGlyZWN0aXZlJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBNw7NkdWxvIGRvIGNvbXBvbmVudGUgYHRoZi1saXN0LXZpZXdgLlxuICpcbiAqID4gUGFyYSBvIGNvcnJldG8gZnVuY2lvbmFtZW50byBkbyBjb21wb25lbnRlIGB0aGYtbGlzdC12aWV3YCwgZGV2ZSBzZXIgaW1wb3J0YWRvIG8gbcOzZHVsbyBgQnJvd3NlckFuaW1hdGlvbnNNb2R1bGVgIG5vXG4gKiA+IG3Ds2R1bG8gcHJpbmNpcGFsIGRhIHN1YSBhcGxpY2HDp8Ojby5cbiAqXG4gKiBNw7NkdWxvIGRhIGFwbGljYcOnw6NvOlxuICogYGBgXG4gKiBpbXBvcnQgeyBCcm93c2VyQW5pbWF0aW9uc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYW5pbWF0aW9ucyc7XG4gKiBpbXBvcnQgeyBUaGZNb2R1bGUgfSBmcm9tICdAdG90dnMvdGhmLXVpJztcbiAqIC4uLlxuICpcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICBCcm93c2VyTW9kdWxlLFxuICogICAgIEJyb3dzZXJBbmltYXRpb25zTW9kdWxlLFxuICogICAgIC4uLlxuICogICAgIFRoZk1vZHVsZVxuICogICBdLFxuICogICBkZWNsYXJhdGlvbnM6IFtcbiAqICAgICBBcHBDb21wb25lbnQsXG4gKiAgICAgLi4uXG4gKiAgIF0sXG4gKiAgIHByb3ZpZGVyczogW10sXG4gKiAgIGJvb3RzdHJhcDogW0FwcENvbXBvbmVudF1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHsgfVxuICogYGBgXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgUm91dGVyTW9kdWxlLFxuICAgIFRoZkJ1dHRvbk1vZHVsZSxcbiAgICBUaGZQb3B1cE1vZHVsZVxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBUaGZMaXN0Vmlld0NvbXBvbmVudCxcbiAgICBUaGZMaXN0Vmlld0NvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBUaGZMaXN0Vmlld0RldGFpbFRlbXBsYXRlRGlyZWN0aXZlXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBUaGZMaXN0Vmlld0NvbXBvbmVudCxcbiAgICBUaGZMaXN0Vmlld0NvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBUaGZMaXN0Vmlld0RldGFpbFRlbXBsYXRlRGlyZWN0aXZlXG4gIF0sXG4gIHByb3ZpZGVyczogW10sXG4gIHNjaGVtYXM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIFRoZkxpc3RWaWV3TW9kdWxlIHsgfVxuIl19