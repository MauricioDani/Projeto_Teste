/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, Renderer2 } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a criação de um conjunto de legendas.
 */
export class ThfTableSubtitleFooterComponent {
    /**
     * @param {?} element
     * @param {?} renderer
     */
    constructor(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.initializeResizeListener();
        this.debounceResize();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.removeResizeListener();
    }
    /**
     * @private
     * @return {?}
     */
    debounceResize() {
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout((/**
         * @return {?}
         */
        () => {
            this.toggleShowCompleteSubtitle();
        }));
    }
    /**
     * @private
     * @return {?}
     */
    getContainerSize() {
        return this.element.nativeElement.querySelector('.thf-table-subtitle-footer-container').offsetWidth;
    }
    /**
     * @private
     * @return {?}
     */
    getItemsSize() {
        /** @type {?} */
        const items = this.element.nativeElement.querySelectorAll('.thf-table-subtitle-footer');
        return Array.from(items).map((/**
         * @param {?} item
         * @return {?}
         */
        item => item['offsetWidth'])).reduce((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        (a, b) => a + b), 16);
    }
    /**
     * @private
     * @return {?}
     */
    initializeResizeListener() {
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @param {?} event
         * @return {?}
         */
        (event) => {
            this.debounceResize();
        }));
    }
    /**
     * @private
     * @return {?}
     */
    removeResizeListener() {
        this.resizeListener();
    }
    /**
     * @private
     * @return {?}
     */
    toggleShowCompleteSubtitle() {
        /** @type {?} */
        const containerSize = this.getContainerSize();
        /** @type {?} */
        const itemsSize = this.getItemsSize();
        this.showSubtitle = itemsSize > containerSize;
    }
}
ThfTableSubtitleFooterComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-table-subtitle-footer',
                template: "<div class=\"thf-table-subtitle-footer-container\">\n  <div *ngFor=\"let subtitle of subtitles\" class=\"thf-table-subtitle-footer\">\n    <thf-table-subtitle-circle\n      t-hide-title=\"true\"\n      [t-subtitle]=\"subtitle\">\n    </thf-table-subtitle-circle>\n    <span class=\"thf-table-subtitle-text\">{{ subtitle.label }}</span>\n  </div>\n  <thf-table-show-subtitle *ngIf=\"showSubtitle\"\n    [t-literals]=\"literals\"\n    [t-subtitles]=\"subtitles\">\n  </thf-table-show-subtitle>\n</div>\n"
            }] }
];
/** @nocollapse */
ThfTableSubtitleFooterComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
ThfTableSubtitleFooterComponent.propDecorators = {
    literals: [{ type: Input, args: ['t-literals',] }],
    subtitles: [{ type: Input, args: ['t-subtitles',] }]
};
if (false) {
    /** @type {?} */
    ThfTableSubtitleFooterComponent.prototype.showSubtitle;
    /**
     * @type {?}
     * @private
     */
    ThfTableSubtitleFooterComponent.prototype.timeoutResize;
    /**
     * @type {?}
     * @protected
     */
    ThfTableSubtitleFooterComponent.prototype.resizeListener;
    /**
     * Propriedade que recebe as literais definidas no `thf-table`.
     * @type {?}
     */
    ThfTableSubtitleFooterComponent.prototype.literals;
    /**
     * Propriedade que recebe as legendas definidas no `ThfTableSubtitleCircleComponent`.
     * @type {?}
     */
    ThfTableSubtitleFooterComponent.prototype.subtitles;
    /**
     * @type {?}
     * @private
     */
    ThfTableSubtitleFooterComponent.prototype.element;
    /** @type {?} */
    ThfTableSubtitleFooterComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRhYmxlLXN1YnRpdGxlLWZvb3Rlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXRhYmxlL3RoZi10YWJsZS1zdWJ0aXRsZS1mb290ZXIvdGhmLXRhYmxlLXN1YnRpdGxlLWZvb3Rlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQWEsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQWVsRyxNQUFNLE9BQU8sK0JBQStCOzs7OztJQWExQyxZQUFvQixPQUFtQixFQUFTLFFBQW1CO1FBQS9DLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFBUyxhQUFRLEdBQVIsUUFBUSxDQUFXO0lBQUksQ0FBQzs7OztJQUV4RSxlQUFlO1FBQ2IsSUFBSSxDQUFDLHdCQUF3QixFQUFFLENBQUM7UUFDaEMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7SUFDOUIsQ0FBQzs7Ozs7SUFFTyxjQUFjO1FBQ3BCLFlBQVksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLGFBQWEsR0FBRyxVQUFVOzs7UUFBQyxHQUFHLEVBQUU7WUFDbkMsSUFBSSxDQUFDLDBCQUEwQixFQUFFLENBQUM7UUFDcEMsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7OztJQUVPLGdCQUFnQjtRQUN0QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDLFdBQVcsQ0FBQztJQUN0RyxDQUFDOzs7OztJQUVPLFlBQVk7O2NBQ1osS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLDRCQUE0QixDQUFDO1FBRXZGLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHOzs7O1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUMsQ0FBQyxNQUFNOzs7OztRQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRSxFQUFFLENBQUMsQ0FBQztJQUN4RixDQUFDOzs7OztJQUVPLHdCQUF3QjtRQUM5QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxRQUFROzs7O1FBQUUsQ0FBQyxLQUFpQixFQUFFLEVBQUU7WUFDbkYsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3hCLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFTyxvQkFBb0I7UUFDMUIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7Ozs7O0lBRU8sMEJBQTBCOztjQUMxQixhQUFhLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixFQUFFOztjQUN2QyxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRTtRQUVyQyxJQUFJLENBQUMsWUFBWSxHQUFHLFNBQVMsR0FBRyxhQUFhLENBQUM7SUFDaEQsQ0FBQzs7O1lBNURGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMkJBQTJCO2dCQUNyQyxpZ0JBQXlEO2FBQzFEOzs7O1lBZGtDLFVBQVU7WUFBb0IsU0FBUzs7O3VCQXVCdkUsS0FBSyxTQUFDLFlBQVk7d0JBR2xCLEtBQUssU0FBQyxhQUFhOzs7O0lBVHBCLHVEQUFzQjs7Ozs7SUFFdEIsd0RBQXNCOzs7OztJQUN0Qix5REFBcUM7Ozs7O0lBR3JDLG1EQUE4Qjs7Ozs7SUFHOUIsb0RBQStEOzs7OztJQUVuRCxrREFBMkI7O0lBQUUsbURBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgT25EZXN0cm95LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVGhmVGFibGVTdWJ0aXRsZUNvbHVtbiB9IGZyb20gJy4vdGhmLXRhYmxlLXN1YnRpdGxlLWNvbHVtbi5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcGFyYSBhIGNyaWHDp8OjbyBkZSB1bSBjb25qdW50byBkZSBsZWdlbmRhcy5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLXRhYmxlLXN1YnRpdGxlLWZvb3RlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtdGFibGUtc3VidGl0bGUtZm9vdGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZUYWJsZVN1YnRpdGxlRm9vdGVyQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcblxuICBzaG93U3VidGl0bGU6IGJvb2xlYW47XG5cbiAgcHJpdmF0ZSB0aW1lb3V0UmVzaXplO1xuICBwcm90ZWN0ZWQgcmVzaXplTGlzdGVuZXI6ICgpID0+IHZvaWQ7XG5cbiAgLyoqIFByb3ByaWVkYWRlIHF1ZSByZWNlYmUgYXMgbGl0ZXJhaXMgZGVmaW5pZGFzIG5vIGB0aGYtdGFibGVgLiAqL1xuICBASW5wdXQoJ3QtbGl0ZXJhbHMnKSBsaXRlcmFscztcblxuICAvKiogUHJvcHJpZWRhZGUgcXVlIHJlY2ViZSBhcyBsZWdlbmRhcyBkZWZpbmlkYXMgbm8gYFRoZlRhYmxlU3VidGl0bGVDaXJjbGVDb21wb25lbnRgLiAqL1xuICBASW5wdXQoJ3Qtc3VidGl0bGVzJykgc3VidGl0bGVzOiBBcnJheTxUaGZUYWJsZVN1YnRpdGxlQ29sdW1uPjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHB1YmxpYyByZW5kZXJlcjogUmVuZGVyZXIyKSB7IH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdGhpcy5pbml0aWFsaXplUmVzaXplTGlzdGVuZXIoKTtcbiAgICB0aGlzLmRlYm91bmNlUmVzaXplKCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnJlbW92ZVJlc2l6ZUxpc3RlbmVyKCk7XG4gIH1cblxuICBwcml2YXRlIGRlYm91bmNlUmVzaXplKCkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRSZXNpemUpO1xuICAgIHRoaXMudGltZW91dFJlc2l6ZSA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy50b2dnbGVTaG93Q29tcGxldGVTdWJ0aXRsZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRDb250YWluZXJTaXplKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcudGhmLXRhYmxlLXN1YnRpdGxlLWZvb3Rlci1jb250YWluZXInKS5vZmZzZXRXaWR0aDtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0SXRlbXNTaXplKCkge1xuICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRoZi10YWJsZS1zdWJ0aXRsZS1mb290ZXInKTtcblxuICAgIHJldHVybiBBcnJheS5mcm9tKGl0ZW1zKS5tYXAoaXRlbSA9PiBpdGVtWydvZmZzZXRXaWR0aCddKS5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAxNik7XG4gIH1cblxuICBwcml2YXRlIGluaXRpYWxpemVSZXNpemVMaXN0ZW5lcigpIHtcbiAgICB0aGlzLnJlc2l6ZUxpc3RlbmVyID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ3dpbmRvdycsICdyZXNpemUnLCAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcbiAgICAgIHRoaXMuZGVib3VuY2VSZXNpemUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgcmVtb3ZlUmVzaXplTGlzdGVuZXIoKSB7XG4gICAgdGhpcy5yZXNpemVMaXN0ZW5lcigpO1xuICB9XG5cbiAgcHJpdmF0ZSB0b2dnbGVTaG93Q29tcGxldGVTdWJ0aXRsZSgpIHtcbiAgICBjb25zdCBjb250YWluZXJTaXplID0gdGhpcy5nZXRDb250YWluZXJTaXplKCk7XG4gICAgY29uc3QgaXRlbXNTaXplID0gdGhpcy5nZXRJdGVtc1NpemUoKTtcblxuICAgIHRoaXMuc2hvd1N1YnRpdGxlID0gaXRlbXNTaXplID4gY29udGFpbmVyU2l6ZTtcbiAgfVxuXG59XG4iXX0=