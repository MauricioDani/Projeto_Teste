/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que constrói cada item no dropdown, contendo o checkbox e o label.
 */
export class ThfMultiselectItemComponent {
    constructor() {
        /**
         * Opção que irá gerar o item, implementando a interface ThfMultiselectOption.
         */
        this.option = null;
        /**
         * Esta propriedade indica se o campo está selecionado ou não.
         */
        this.selected = false;
        /**
         * Evento que será disparado toda vez que o usuário marcar ou desmarcar um item.
         */
        this.change = new EventEmitter();
    }
    /**
     * @return {?}
     */
    itemClicked() {
        this.selected = !this.selected;
        this.change.emit(this.selected);
    }
}
ThfMultiselectItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-multiselect-item',
                template: "<li [value]=\"option?.value\"\n  (click)=\"itemClicked()\"\n  [class.thf-multiselect-item-selected]=\"selected\">\n\n  <a class=\"thf-multiselect-item\">\n    <input\n      [checked]=\"selected\"\n      class=\"thf-multiselect-checkbox-input\"\n      [class.thf-multiselect-checkbox-input-checked]=\"selected\"\n      type=\"checkbox\">\n\n    <label class=\"thf-multiselect-checkbox-label thf-clickable\">\n      {{ option?.label }}\n    </label>\n  </a>\n</li>\n"
            }] }
];
ThfMultiselectItemComponent.propDecorators = {
    option: [{ type: Input, args: ['t-option',] }],
    selected: [{ type: Input, args: ['t-selected',] }],
    change: [{ type: Output, args: ['t-change',] }]
};
if (false) {
    /**
     * Opção que irá gerar o item, implementando a interface ThfMultiselectOption.
     * @type {?}
     */
    ThfMultiselectItemComponent.prototype.option;
    /**
     * Esta propriedade indica se o campo está selecionado ou não.
     * @type {?}
     */
    ThfMultiselectItemComponent.prototype.selected;
    /**
     * Evento que será disparado toda vez que o usuário marcar ou desmarcar um item.
     * @type {?}
     */
    ThfMultiselectItemComponent.prototype.change;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW11bHRpc2VsZWN0LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1maWVsZC90aGYtbXVsdGlzZWxlY3QvdGhmLW11bHRpc2VsZWN0LWl0ZW0vdGhmLW11bHRpc2VsZWN0LWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQWV2RSxNQUFNLE9BQU8sMkJBQTJCO0lBSnhDOzs7O1FBT3FCLFdBQU0sR0FBeUIsSUFBSSxDQUFDOzs7O1FBR2xDLGFBQVEsR0FBYSxLQUFLLENBQUM7Ozs7UUFHNUIsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFNbEQsQ0FBQzs7OztJQUpDLFdBQVc7UUFDVCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7O1lBbEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyw0ZEFBb0Q7YUFDckQ7OztxQkFJRSxLQUFLLFNBQUMsVUFBVTt1QkFHaEIsS0FBSyxTQUFDLFlBQVk7cUJBR2xCLE1BQU0sU0FBQyxVQUFVOzs7Ozs7O0lBTmxCLDZDQUF1RDs7Ozs7SUFHdkQsK0NBQWdEOzs7OztJQUdoRCw2Q0FBZ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaGZNdWx0aXNlbGVjdE9wdGlvbiB9IGZyb20gJy4vLi4vdGhmLW11bHRpc2VsZWN0LW9wdGlvbi5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcXVlIGNvbnN0csOzaSBjYWRhIGl0ZW0gbm8gZHJvcGRvd24sIGNvbnRlbmRvIG8gY2hlY2tib3ggZSBvIGxhYmVsLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtbXVsdGlzZWxlY3QtaXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtbXVsdGlzZWxlY3QtaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmTXVsdGlzZWxlY3RJdGVtQ29tcG9uZW50IHtcblxuICAvKiogT3DDp8OjbyBxdWUgaXLDoSBnZXJhciBvIGl0ZW0sIGltcGxlbWVudGFuZG8gYSBpbnRlcmZhY2UgVGhmTXVsdGlzZWxlY3RPcHRpb24uICovXG4gIEBJbnB1dCgndC1vcHRpb24nKSBvcHRpb246IFRoZk11bHRpc2VsZWN0T3B0aW9uID0gbnVsbDtcblxuICAvKiogRXN0YSBwcm9wcmllZGFkZSBpbmRpY2Egc2UgbyBjYW1wbyBlc3TDoSBzZWxlY2lvbmFkbyBvdSBuw6NvLiAqL1xuICBASW5wdXQoJ3Qtc2VsZWN0ZWQnKSBzZWxlY3RlZD86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKiogRXZlbnRvIHF1ZSBzZXLDoSBkaXNwYXJhZG8gdG9kYSB2ZXogcXVlIG8gdXN1w6FyaW8gbWFyY2FyIG91IGRlc21hcmNhciB1bSBpdGVtLiAqL1xuICBAT3V0cHV0KCd0LWNoYW5nZScpIGNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBpdGVtQ2xpY2tlZCgpIHtcbiAgICB0aGlzLnNlbGVjdGVkID0gIXRoaXMuc2VsZWN0ZWQ7XG4gICAgdGhpcy5jaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkKTtcbiAgfVxufVxuIl19