/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
/** @type {?} */
const thfRichTextBodyCommands = [
    'bold', 'italic', 'underline', 'justifyleft', 'justifycenter', 'justifyright', 'justifyfull', 'insertUnorderedList'
];
export class ThfRichTextBodyComponent {
    constructor() {
        this.commands = new EventEmitter();
        this.value = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.bodyElement.nativeElement.designMode = 'on';
        // timeout necessário para setar o valor vindo do writeValue do componente principal.
        setTimeout((/**
         * @return {?}
         */
        () => { this.updateValueWithModelValue(); }));
    }
    /**
     * @param {?} command
     * @return {?}
     */
    executeCommand(command) {
        this.bodyElement.nativeElement.focus();
        document.execCommand(command, false, null);
        this.updateModel();
        this.value.emit(this.modelValue);
    }
    /**
     * @return {?}
     */
    onClick() {
        this.emitSelectionCommands();
    }
    /**
     * @return {?}
     */
    onKeyUp() {
        // Tratamento necessário para eliminar a tag <br> criada no firefox quando o body for limpo.
        if (!this.bodyElement.nativeElement.innerText.trim() && this.bodyElement.nativeElement.firstChild) {
            this.bodyElement.nativeElement.firstChild.remove();
        }
        this.updateModel();
        this.emitSelectionCommands();
    }
    /**
     * @return {?}
     */
    update() {
        setTimeout((/**
         * @return {?}
         */
        () => { this.updateModel(); }));
        setTimeout((/**
         * @return {?}
         */
        () => { this.onKeyUp(); }));
    }
    /**
     * @private
     * @return {?}
     */
    emitSelectionCommands() {
        /** @type {?} */
        const commands = thfRichTextBodyCommands.filter((/**
         * @param {?} command
         * @return {?}
         */
        command => {
            return document.queryCommandState(command);
        }));
        this.commands.emit(commands);
    }
    /**
     * @private
     * @return {?}
     */
    updateModel() {
        this.modelValue = this.bodyElement.nativeElement.innerHTML;
        this.value.emit(this.modelValue);
    }
    /**
     * @private
     * @return {?}
     */
    updateValueWithModelValue() {
        if (this.modelValue) {
            this.bodyElement.nativeElement.insertAdjacentHTML('afterbegin', this.modelValue);
        }
    }
}
ThfRichTextBodyComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-rich-text-body',
                template: "<div #bodyElement\n  class=\"thf-rich-text-body\"\n  [attr.contenteditable]=\"!readonly\"\n  [attr.data-placeholder]=\"placeholder\"\n  [style.height.px]=\"height\"\n  (click)=\"onClick()\"\n  (cut)=\"update()\"\n  (keyup)=\"onKeyUp()\"\n  (paste)=\"update()\">\n</div>\n"
            }] }
];
ThfRichTextBodyComponent.propDecorators = {
    bodyElement: [{ type: ViewChild, args: ['bodyElement', { static: true },] }],
    height: [{ type: Input, args: ['t-height',] }],
    modelValue: [{ type: Input, args: ['t-model-value',] }],
    placeholder: [{ type: Input, args: ['t-placeholder',] }],
    readonly: [{ type: Input, args: ['t-readonly',] }],
    commands: [{ type: Output, args: ['t-commands',] }],
    value: [{ type: Output, args: ['t-value',] }]
};
if (false) {
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.bodyElement;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.height;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.modelValue;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.placeholder;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.readonly;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.commands;
    /** @type {?} */
    ThfRichTextBodyComponent.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXJpY2gtdGV4dC1ib2R5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZmllbGQvdGhmLXJpY2gtdGV4dC90aGYtcmljaC10ZXh0LWJvZHkvdGhmLXJpY2gtdGV4dC1ib2R5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOztNQUVoRyx1QkFBdUIsR0FBRztJQUM5QixNQUFNLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUscUJBQXFCO0NBQ3BIO0FBTUQsTUFBTSxPQUFPLHdCQUF3QjtJQUpyQztRQWdCd0IsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFFdEMsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFxRHJELENBQUM7Ozs7SUFuREMsUUFBUTtRQUNOLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFFakQscUZBQXFGO1FBQ3JGLFVBQVU7OztRQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUM7SUFDMUQsQ0FBQzs7Ozs7SUFFRCxjQUFjLENBQUMsT0FBZTtRQUM1QixJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN2QyxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25CLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNuQyxDQUFDOzs7O0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO0lBQy9CLENBQUM7Ozs7SUFFRCxPQUFPO1FBQ0wsNEZBQTRGO1FBQzVGLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFO1lBQ2pHLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUNwRDtRQUNELElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUMvQixDQUFDOzs7O0lBRUQsTUFBTTtRQUNKLFVBQVU7OztRQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDO1FBQzFDLFVBQVU7OztRQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDO0lBQ3hDLENBQUM7Ozs7O0lBRU8scUJBQXFCOztjQUNyQixRQUFRLEdBQWtCLHVCQUF1QixDQUFDLE1BQU07Ozs7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUN2RSxPQUFPLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3QyxDQUFDLEVBQUM7UUFFRixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7OztJQUVPLFdBQVc7UUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUM7UUFDM0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ25DLENBQUM7Ozs7O0lBRU8seUJBQXlCO1FBQy9CLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ2xGO0lBQ0gsQ0FBQzs7O1lBckVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QiwyUkFBa0Q7YUFDbkQ7OzswQkFHRSxTQUFTLFNBQUMsYUFBYSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtxQkFFekMsS0FBSyxTQUFDLFVBQVU7eUJBRWhCLEtBQUssU0FBQyxlQUFlOzBCQUVyQixLQUFLLFNBQUMsZUFBZTt1QkFFckIsS0FBSyxTQUFDLFlBQVk7dUJBRWxCLE1BQU0sU0FBQyxZQUFZO29CQUVuQixNQUFNLFNBQUMsU0FBUzs7OztJQVpqQiwrQ0FBb0U7O0lBRXBFLDBDQUFtQzs7SUFFbkMsOENBQTRDOztJQUU1QywrQ0FBNkM7O0lBRTdDLDRDQUF1Qzs7SUFFdkMsNENBQXlEOztJQUV6RCx5Q0FBbUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuY29uc3QgdGhmUmljaFRleHRCb2R5Q29tbWFuZHMgPSBbXG4gICdib2xkJywgJ2l0YWxpYycsICd1bmRlcmxpbmUnLCAnanVzdGlmeWxlZnQnLCAnanVzdGlmeWNlbnRlcicsICdqdXN0aWZ5cmlnaHQnLCAnanVzdGlmeWZ1bGwnLCAnaW5zZXJ0VW5vcmRlcmVkTGlzdCdcbl07XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1yaWNoLXRleHQtYm9keScsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtcmljaC10ZXh0LWJvZHkuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoZlJpY2hUZXh0Qm9keUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQFZpZXdDaGlsZCgnYm9keUVsZW1lbnQnLCB7IHN0YXRpYzogdHJ1ZSB9KSBib2R5RWxlbWVudDogRWxlbWVudFJlZjtcblxuICBASW5wdXQoJ3QtaGVpZ2h0JykgaGVpZ2h0Pzogc3RyaW5nO1xuXG4gIEBJbnB1dCgndC1tb2RlbC12YWx1ZScpIG1vZGVsVmFsdWU/OiBzdHJpbmc7XG5cbiAgQElucHV0KCd0LXBsYWNlaG9sZGVyJykgcGxhY2Vob2xkZXI/OiBzdHJpbmc7XG5cbiAgQElucHV0KCd0LXJlYWRvbmx5JykgcmVhZG9ubHk/OiBzdHJpbmc7XG5cbiAgQE91dHB1dCgndC1jb21tYW5kcycpIGNvbW1hbmRzID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgQE91dHB1dCgndC12YWx1ZScpIHZhbHVlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5ib2R5RWxlbWVudC5uYXRpdmVFbGVtZW50LmRlc2lnbk1vZGUgPSAnb24nO1xuXG4gICAgLy8gdGltZW91dCBuZWNlc3PDoXJpbyBwYXJhIHNldGFyIG8gdmFsb3IgdmluZG8gZG8gd3JpdGVWYWx1ZSBkbyBjb21wb25lbnRlIHByaW5jaXBhbC5cbiAgICBzZXRUaW1lb3V0KCgpID0+IHsgdGhpcy51cGRhdGVWYWx1ZVdpdGhNb2RlbFZhbHVlKCk7IH0pO1xuICB9XG5cbiAgZXhlY3V0ZUNvbW1hbmQoY29tbWFuZDogc3RyaW5nKSB7XG4gICAgdGhpcy5ib2R5RWxlbWVudC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoY29tbWFuZCwgZmFsc2UsIG51bGwpO1xuICAgIHRoaXMudXBkYXRlTW9kZWwoKTtcbiAgICB0aGlzLnZhbHVlLmVtaXQodGhpcy5tb2RlbFZhbHVlKTtcbiAgfVxuXG4gIG9uQ2xpY2soKSB7XG4gICAgdGhpcy5lbWl0U2VsZWN0aW9uQ29tbWFuZHMoKTtcbiAgfVxuXG4gIG9uS2V5VXAoKSB7XG4gICAgLy8gVHJhdGFtZW50byBuZWNlc3PDoXJpbyBwYXJhIGVsaW1pbmFyIGEgdGFnIDxicj4gY3JpYWRhIG5vIGZpcmVmb3ggcXVhbmRvIG8gYm9keSBmb3IgbGltcG8uXG4gICAgaWYgKCF0aGlzLmJvZHlFbGVtZW50Lm5hdGl2ZUVsZW1lbnQuaW5uZXJUZXh0LnRyaW0oKSAmJiB0aGlzLmJvZHlFbGVtZW50Lm5hdGl2ZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgdGhpcy5ib2R5RWxlbWVudC5uYXRpdmVFbGVtZW50LmZpcnN0Q2hpbGQucmVtb3ZlKCk7XG4gICAgfVxuICAgIHRoaXMudXBkYXRlTW9kZWwoKTtcbiAgICB0aGlzLmVtaXRTZWxlY3Rpb25Db21tYW5kcygpO1xuICB9XG5cbiAgdXBkYXRlKCkge1xuICAgIHNldFRpbWVvdXQoKCkgPT4geyB0aGlzLnVwZGF0ZU1vZGVsKCk7IH0pO1xuICAgIHNldFRpbWVvdXQoKCkgPT4geyB0aGlzLm9uS2V5VXAoKTsgfSk7XG4gIH1cblxuICBwcml2YXRlIGVtaXRTZWxlY3Rpb25Db21tYW5kcygpIHtcbiAgICBjb25zdCBjb21tYW5kczogQXJyYXk8c3RyaW5nPiA9IHRoZlJpY2hUZXh0Qm9keUNvbW1hbmRzLmZpbHRlcihjb21tYW5kID0+IHtcbiAgICAgIHJldHVybiBkb2N1bWVudC5xdWVyeUNvbW1hbmRTdGF0ZShjb21tYW5kKTtcbiAgICB9KTtcblxuICAgIHRoaXMuY29tbWFuZHMuZW1pdChjb21tYW5kcyk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZU1vZGVsKCkge1xuICAgIHRoaXMubW9kZWxWYWx1ZSA9IHRoaXMuYm9keUVsZW1lbnQubmF0aXZlRWxlbWVudC5pbm5lckhUTUw7XG4gICAgdGhpcy52YWx1ZS5lbWl0KHRoaXMubW9kZWxWYWx1ZSk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZVZhbHVlV2l0aE1vZGVsVmFsdWUoKSB7XG4gICAgaWYgKHRoaXMubW9kZWxWYWx1ZSkge1xuICAgICAgdGhpcy5ib2R5RWxlbWVudC5uYXRpdmVFbGVtZW50Lmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJiZWdpbicsIHRoaXMubW9kZWxWYWx1ZSk7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==