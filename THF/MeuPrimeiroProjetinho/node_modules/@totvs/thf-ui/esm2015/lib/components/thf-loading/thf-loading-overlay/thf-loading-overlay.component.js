/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectorRef } from '@angular/core';
import { ThfLanguageService } from './../../../services/thf-language/thf-language.service';
import { ThfLoadingOverlayBaseComponent } from './thf-loading-overlay-base.component';
/**
 *
 * \@docsExtends ThfLoadingOverlayBaseComponent
 *
 * \@example
 *
 * <example name="thf-loading-overlay-basic" title="Totvs Loading Overlay Basic">
 *  <file name="sample-thf-loading-overlay-basic/sample-thf-loading-overlay-basic.component.html"> </file>
 *  <file name="sample-thf-loading-overlay-basic/sample-thf-loading-overlay-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-loading-overlay-labs" title="Totvs Loading Overlay Labs">
 *  <file name="sample-thf-loading-overlay-labs/sample-thf-loading-overlay-labs.component.html"> </file>
 *  <file name="sample-thf-loading-overlay-labs/sample-thf-loading-overlay-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-loading-overlay-connection-test" title="Totvs Loading Overlay - Connection Test">
 *  <file name="sample-thf-loading-overlay-connection-test/sample-thf-loading-overlay-connection-test.component.html"> </file>
 *  <file name="sample-thf-loading-overlay-connection-test/sample-thf-loading-overlay-connection-test.component.ts"> </file>
 * </example>
 */
export class ThfLoadingOverlayComponent extends ThfLoadingOverlayBaseComponent {
    /**
     * @param {?} changeDetector
     * @param {?} languageService
     */
    constructor(changeDetector, languageService) {
        super(languageService);
        this.changeDetector = changeDetector;
    }
}
ThfLoadingOverlayComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-loading-overlay',
                template: "<div\n  [class.thf-overlay-absolute]=\"!screenLock\"\n  [class.thf-overlay-fixed]=\"screenLock\">\n  <thf-loading class=\"thf-loading-overlay-content\" [t-text]=\"text\"></thf-loading>\n</div>\n"
            }] }
];
/** @nocollapse */
ThfLoadingOverlayComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ThfLanguageService }
];
if (false) {
    /** @type {?} */
    ThfLoadingOverlayComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWxvYWRpbmctb3ZlcmxheS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWxvYWRpbmcvdGhmLWxvYWRpbmctb3ZlcmxheS90aGYtbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU3RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUUzRixPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCdEYsTUFBTSxPQUFPLDBCQUEyQixTQUFRLDhCQUE4Qjs7Ozs7SUFFNUUsWUFBbUIsY0FBaUMsRUFBRSxlQUFtQztRQUN2RixLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7UUFETixtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7SUFFcEQsQ0FBQzs7O1lBUkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLDhNQUFpRDthQUNsRDs7OztZQTlCbUIsaUJBQWlCO1lBRTVCLGtCQUFrQjs7OztJQStCYixvREFBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZkxhbmd1YWdlU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvdGhmLWxhbmd1YWdlL3RoZi1sYW5ndWFnZS5zZXJ2aWNlJztcblxuaW1wb3J0IHsgVGhmTG9hZGluZ092ZXJsYXlCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtbG9hZGluZy1vdmVybGF5LWJhc2UuY29tcG9uZW50JztcblxuLyoqXG4gKlxuICogQGRvY3NFeHRlbmRzIFRoZkxvYWRpbmdPdmVybGF5QmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1sb2FkaW5nLW92ZXJsYXktYmFzaWNcIiB0aXRsZT1cIlRvdHZzIExvYWRpbmcgT3ZlcmxheSBCYXNpY1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWxvYWRpbmctb3ZlcmxheS1iYXNpYy9zYW1wbGUtdGhmLWxvYWRpbmctb3ZlcmxheS1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbG9hZGluZy1vdmVybGF5LWJhc2ljL3NhbXBsZS10aGYtbG9hZGluZy1vdmVybGF5LWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1sb2FkaW5nLW92ZXJsYXktbGFic1wiIHRpdGxlPVwiVG90dnMgTG9hZGluZyBPdmVybGF5IExhYnNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1sb2FkaW5nLW92ZXJsYXktbGFicy9zYW1wbGUtdGhmLWxvYWRpbmctb3ZlcmxheS1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1sb2FkaW5nLW92ZXJsYXktbGFicy9zYW1wbGUtdGhmLWxvYWRpbmctb3ZlcmxheS1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0XCIgdGl0bGU9XCJUb3R2cyBMb2FkaW5nIE92ZXJsYXkgLSBDb25uZWN0aW9uIFRlc3RcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0L3NhbXBsZS10aGYtbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdC5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdC9zYW1wbGUtdGhmLWxvYWRpbmctb3ZlcmxheS1jb25uZWN0aW9uLXRlc3QuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLWxvYWRpbmctb3ZlcmxheScsXG4gIHRlbXBsYXRlVXJsOiAndGhmLWxvYWRpbmctb3ZlcmxheS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmTG9hZGluZ092ZXJsYXlDb21wb25lbnQgZXh0ZW5kcyBUaGZMb2FkaW5nT3ZlcmxheUJhc2VDb21wb25lbnQge1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGxhbmd1YWdlU2VydmljZTogVGhmTGFuZ3VhZ2VTZXJ2aWNlKSB7XG4gICAgc3VwZXIobGFuZ3VhZ2VTZXJ2aWNlKTtcbiAgfVxuXG59XG4iXX0=