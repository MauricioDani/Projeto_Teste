/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { isTypeof } from '../../../utils/util';
import { ThfControlPositionService } from '../../../services/thf-control-position/thf-control-position.service';
/** @type {?} */
const thfToolbarActionsIconDefault = 'thf-icon-more';
/**
 * \@docsPrivate
 *
 * \@usedBy ThfToolbarComponent
 *
 * \@description
 *
 * O componente `thf-toolbar-actions` tem como objetivo receber uma lista de ações e um ícone que podem ser personalizados.
 */
export class ThfToolbarActionsComponent {
    constructor() {
        this._actionsIcon = thfToolbarActionsIconDefault;
    }
    /**
     * Define o ícone das ações.
     * @param {?} icon
     * @return {?}
     */
    set actionsIcon(icon) {
        this._actionsIcon = isTypeof(icon, 'string') ? icon : thfToolbarActionsIconDefault;
    }
    /**
     * @return {?}
     */
    get actionsIcon() {
        return this._actionsIcon;
    }
}
ThfToolbarActionsComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-toolbar-actions',
                template: "<div class=\"thf-toolbar-actions thf-clickable\" (click)=\"popup.toggle()\">\n  <span #toolbarActions class=\"thf-icon {{ actionsIcon }} thf-toolbar-icon\"></span>\n</div>\n\n<thf-popup #popup\n  [t-actions]=\"actions\"\n  [t-target]=\"toolbarActions\">\n</thf-popup>\n",
                providers: [ThfControlPositionService]
            }] }
];
ThfToolbarActionsComponent.propDecorators = {
    actions: [{ type: Input, args: ['t-actions',] }],
    actionsIcon: [{ type: Input, args: ['t-actions-icon',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfToolbarActionsComponent.prototype._actionsIcon;
    /**
     * Define uma lista de ações.
     * @type {?}
     */
    ThfToolbarActionsComponent.prototype.actions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRvb2xiYXItYWN0aW9ucy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXRvb2xiYXIvdGhmLXRvb2xiYXItYWN0aW9ucy90aGYtdG9vbGJhci1hY3Rpb25zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHFFQUFxRSxDQUFDOztNQUkxRyw0QkFBNEIsR0FBRyxlQUFlOzs7Ozs7Ozs7O0FBZ0JwRCxNQUFNLE9BQU8sMEJBQTBCO0lBTHZDO1FBT1UsaUJBQVksR0FBWSw0QkFBNEIsQ0FBQztJQWMvRCxDQUFDOzs7Ozs7SUFSQyxJQUE2QixXQUFXLENBQUMsSUFBWTtRQUNuRCxJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsNEJBQTRCLENBQUM7SUFDckYsQ0FBQzs7OztJQUVELElBQUksV0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztJQUMzQixDQUFDOzs7WUFuQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLHlSQUFtRDtnQkFDbkQsU0FBUyxFQUFFLENBQUUseUJBQXlCLENBQUU7YUFDekM7OztzQkFNRSxLQUFLLFNBQUMsV0FBVzswQkFHakIsS0FBSyxTQUFDLGdCQUFnQjs7Ozs7OztJQU52QixrREFBNkQ7Ozs7O0lBRzdELDZDQUFzRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgaXNUeXBlb2YgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcbmltcG9ydCB7IFRoZkNvbnRyb2xQb3NpdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy90aGYtY29udHJvbC1wb3NpdGlvbi90aGYtY29udHJvbC1wb3NpdGlvbi5zZXJ2aWNlJztcblxuaW1wb3J0IHsgVGhmVG9vbGJhckFjdGlvbiB9IGZyb20gJy4uL3RoZi10b29sYmFyLWFjdGlvbi5pbnRlcmZhY2UnO1xuXG5jb25zdCB0aGZUb29sYmFyQWN0aW9uc0ljb25EZWZhdWx0ID0gJ3RoZi1pY29uLW1vcmUnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEB1c2VkQnkgVGhmVG9vbGJhckNvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE8gY29tcG9uZW50ZSBgdGhmLXRvb2xiYXItYWN0aW9uc2AgdGVtIGNvbW8gb2JqZXRpdm8gcmVjZWJlciB1bWEgbGlzdGEgZGUgYcOnw7VlcyBlIHVtIMOtY29uZSBxdWUgcG9kZW0gc2VyIHBlcnNvbmFsaXphZG9zLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtdG9vbGJhci1hY3Rpb25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi10b29sYmFyLWFjdGlvbnMuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFsgVGhmQ29udHJvbFBvc2l0aW9uU2VydmljZSBdXG59KVxuZXhwb3J0IGNsYXNzIFRoZlRvb2xiYXJBY3Rpb25zQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9hY3Rpb25zSWNvbj86IHN0cmluZyA9IHRoZlRvb2xiYXJBY3Rpb25zSWNvbkRlZmF1bHQ7XG5cbiAgLyoqIERlZmluZSB1bWEgbGlzdGEgZGUgYcOnw7Vlcy4gKi9cbiAgQElucHV0KCd0LWFjdGlvbnMnKSBhY3Rpb25zPzogQXJyYXk8VGhmVG9vbGJhckFjdGlvbj47XG5cbiAgLyoqIERlZmluZSBvIMOtY29uZSBkYXMgYcOnw7Vlcy4gKi9cbiAgQElucHV0KCd0LWFjdGlvbnMtaWNvbicpIHNldCBhY3Rpb25zSWNvbihpY29uOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9hY3Rpb25zSWNvbiA9IGlzVHlwZW9mKGljb24sICdzdHJpbmcnKSA/IGljb24gOiB0aGZUb29sYmFyQWN0aW9uc0ljb25EZWZhdWx0O1xuICB9XG5cbiAgZ2V0IGFjdGlvbnNJY29uKCkge1xuICAgIHJldHVybiB0aGlzLl9hY3Rpb25zSWNvbjtcbiAgfVxuXG59XG4iXX0=