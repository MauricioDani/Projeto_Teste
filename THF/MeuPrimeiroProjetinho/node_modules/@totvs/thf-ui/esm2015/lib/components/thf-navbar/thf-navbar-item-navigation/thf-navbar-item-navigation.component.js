/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
export class ThfNavbarItemNavigationComponent {
    constructor() {
        this.click = new EventEmitter();
    }
}
ThfNavbarItemNavigationComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-navbar-item-navigation',
                template: "<div class=\"thf-navbar-item-navigation-icon\"\n  [ngClass]=\"{'thf-navbar-item-navigation-icon-disabled': disableLeft , 'thf-clickable': !disableLeft }\"\n  tabindex=\"0\"\n  (click)=\"disableLeft ? undefined : click.emit('left')\" >\n  <span class=\"thf-icon thf-icon-arrow-left\"></span>\n</div>\n<div class=\"thf-navbar-item-navigation-icon\"\n  [ngClass]=\"{'thf-navbar-item-navigation-icon-disabled': disableRight , 'thf-clickable': !disableRight }\"  \n  tabindex=\"0\"\n  (click)=\"disableRight ? undefined : click.emit('right')\">\n  <span class=\"thf-icon thf-icon-arrow-right\"></span>\n</div>\n"
            }] }
];
ThfNavbarItemNavigationComponent.propDecorators = {
    disableLeft: [{ type: Input, args: ['t-disable-left',] }],
    disableRight: [{ type: Input, args: ['t-disable-right',] }],
    click: [{ type: Output, args: ['t-click',] }]
};
if (false) {
    /** @type {?} */
    ThfNavbarItemNavigationComponent.prototype.disableLeft;
    /** @type {?} */
    ThfNavbarItemNavigationComponent.prototype.disableRight;
    /** @type {?} */
    ThfNavbarItemNavigationComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW5hdmJhci1pdGVtLW5hdmlnYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1uYXZiYXIvdGhmLW5hdmJhci1pdGVtLW5hdmlnYXRpb24vdGhmLW5hdmJhci1pdGVtLW5hdmlnYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTXZFLE1BQU0sT0FBTyxnQ0FBZ0M7SUFKN0M7UUFVcUIsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBRXhFLENBQUM7OztZQVpBLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNEJBQTRCO2dCQUN0QywwbUJBQTBEO2FBQzNEOzs7MEJBR0UsS0FBSyxTQUFDLGdCQUFnQjsyQkFFdEIsS0FBSyxTQUFDLGlCQUFpQjtvQkFFdkIsTUFBTSxTQUFDLFNBQVM7Ozs7SUFKakIsdURBQThDOztJQUU5Qyx3REFBZ0Q7O0lBRWhELGlEQUFzRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1uYXZiYXItaXRlbS1uYXZpZ2F0aW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1uYXZiYXItaXRlbS1uYXZpZ2F0aW9uLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZOYXZiYXJJdGVtTmF2aWdhdGlvbkNvbXBvbmVudCB7XG5cbiAgQElucHV0KCd0LWRpc2FibGUtbGVmdCcpIGRpc2FibGVMZWZ0OiBib29sZWFuO1xuXG4gIEBJbnB1dCgndC1kaXNhYmxlLXJpZ2h0JykgZGlzYWJsZVJpZ2h0OiBib29sZWFuO1xuXG4gIEBPdXRwdXQoJ3QtY2xpY2snKSBjbGljazogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxufVxuIl19