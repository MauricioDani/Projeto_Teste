/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { ThfPopoverComponent } from '../../thf-popover/thf-popover.component';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para agrupamento de componentes `thf-tab-button` que os rendereiza em uma um caixa de diálogo
 * no formato de lista.
 */
export class ThfTabDropdownComponent {
    constructor() {
        // Lista de abas
        this.tabs = [];
        // Evento que será emitido ao ativar uma aba
        this.activated = new EventEmitter();
        // Evento que será emitido a aba for desabilitada ou ocultada
        this.changeState = new EventEmitter();
        // Evento de click
        this.click = new EventEmitter();
    }
    /**
     * @return {?}
     */
    getContainerClass() {
        return this.small ? 'thf-tab-dropdown-container-sm' : 'thf-tab-dropdown-container';
    }
    /**
     * @return {?}
     */
    togglePopover() {
        this.popover.isHidden ? this.popover.open() : this.popover.close();
    }
}
ThfTabDropdownComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-tab-dropdown',
                template: "<div #tabDrop\n  class=\"thf-tab-dropdown-content thf-tab-button-md\"\n  [attr.tabindex]=\"0\"\n  [class.thf-tab-button-sm]=\"small\"\n  (keyup.enter)=\"togglePopover()\">\n  <div class=\"thf-tab-button-label\">\n    {{ label }}\n    <span class=\"thf-icon\" [ngClass]=\"(popover.isHidden ? 'thf-icon-arrow-down' : 'thf-icon-arrow-up')\">\n    </span>\n  </div>\n</div>\n\n<thf-popover #popover\n  t-hide-arrow\n  t-position=\"bottom\"\n  [t-target]=\"tabDropdown\">\n\n  <div [ngClass]=\"getContainerClass()\">\n    <thf-tab-button *ngFor=\"let tab of tabs\"\n      class=\"thf-tab-dropdown-button\"\n      [class.thf-tab-dropdown-button-active]=\"tab.active\"\n      [t-active]=\"tab.active\"\n      [t-disabled]=\"tab.disabled\"\n      [t-hide]=\"tab.hide\"\n      [t-id]=\"tab.id\"\n      [t-label]=\"tab.label\"\n      [t-small]=\"small\"\n      (t-activated)=\"activated.emit(tab)\"\n      (t-change-state)=\"changeState.emit(tab)\"\n      (t-click)=\"popover.close();click.emit(tab);\">\n    </thf-tab-button>\n  </div>\n\n</thf-popover>\n"
            }] }
];
ThfTabDropdownComponent.propDecorators = {
    popover: [{ type: ViewChild, args: ['popover', { static: true },] }],
    tabDropdown: [{ type: ViewChild, args: ['tabDrop', { read: ElementRef, static: true },] }],
    label: [{ type: Input, args: ['t-label',] }],
    small: [{ type: Input, args: ['t-small',] }],
    tabs: [{ type: Input, args: ['t-tabs',] }],
    activated: [{ type: Output, args: ['t-activated',] }],
    changeState: [{ type: Output, args: ['t-change-state',] }],
    click: [{ type: Output, args: ['t-click',] }]
};
if (false) {
    /** @type {?} */
    ThfTabDropdownComponent.prototype.popover;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.tabDropdown;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.label;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.small;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.tabs;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.activated;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.changeState;
    /** @type {?} */
    ThfTabDropdownComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRhYi1kcm9wZG93bi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXRhYnMvdGhmLXRhYi1kcm9wZG93bi90aGYtdGFiLWRyb3Bkb3duLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOzs7Ozs7Ozs7QUFlOUUsTUFBTSxPQUFPLHVCQUF1QjtJQUpwQzs7UUFnQm1CLFNBQUksR0FBMkIsRUFBRSxDQUFDOztRQUc1QixjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQzs7UUFHakMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDOztRQUc3QyxVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQVVyRCxDQUFDOzs7O0lBUkMsaUJBQWlCO1FBQ2YsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDLENBQUMsNEJBQTRCLENBQUM7SUFDckYsQ0FBQzs7OztJQUVELGFBQWE7UUFDWCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNyRSxDQUFDOzs7WUFqQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLGtpQ0FBZ0Q7YUFDakQ7OztzQkFHRSxTQUFTLFNBQUMsU0FBUyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTswQkFDckMsU0FBUyxTQUFDLFNBQVMsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtvQkFHdkQsS0FBSyxTQUFDLFNBQVM7b0JBR2YsS0FBSyxTQUFDLFNBQVM7bUJBR2YsS0FBSyxTQUFDLFFBQVE7d0JBR2QsTUFBTSxTQUFDLGFBQWE7MEJBR3BCLE1BQU0sU0FBQyxnQkFBZ0I7b0JBR3ZCLE1BQU0sU0FBQyxTQUFTOzs7O0lBbkJqQiwwQ0FBcUU7O0lBQ3JFLDhDQUFrRjs7SUFHbEYsd0NBQWdDOztJQUdoQyx3Q0FBaUM7O0lBR2pDLHVDQUFtRDs7SUFHbkQsNENBQTJEOztJQUczRCw4Q0FBZ0U7O0lBR2hFLHdDQUFtRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVGhmUG9wb3ZlckNvbXBvbmVudCB9IGZyb20gJy4uLy4uL3RoZi1wb3BvdmVyL3RoZi1wb3BvdmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaGZUYWJDb21wb25lbnQgfSBmcm9tICcuLi90aGYtdGFiL3RoZi10YWIuY29tcG9uZW50JztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHBhcmEgYWdydXBhbWVudG8gZGUgY29tcG9uZW50ZXMgYHRoZi10YWItYnV0dG9uYCBxdWUgb3MgcmVuZGVyZWl6YSBlbSB1bWEgdW0gY2FpeGEgZGUgZGnDoWxvZ29cbiAqIG5vIGZvcm1hdG8gZGUgbGlzdGEuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi10YWItZHJvcGRvd24nLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXRhYi1kcm9wZG93bi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmVGFiRHJvcGRvd25Db21wb25lbnQge1xuXG4gIEBWaWV3Q2hpbGQoJ3BvcG92ZXInLCB7IHN0YXRpYzogdHJ1ZSB9KSBwb3BvdmVyOiBUaGZQb3BvdmVyQ29tcG9uZW50O1xuICBAVmlld0NoaWxkKCd0YWJEcm9wJywgeyByZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgdGFiRHJvcGRvd246IEVsZW1lbnRSZWY7XG5cbiAgLy8gUsOzdHVsbyBkbyBgdGhmLXRhYi1idXR0b25gXG4gIEBJbnB1dCgndC1sYWJlbCcpIGxhYmVsOiBzdHJpbmc7XG5cbiAgLy8gRGltaW51aSBvIHRhbWFuaG8gZG8gYm90w6NvXG4gIEBJbnB1dCgndC1zbWFsbCcpIHNtYWxsOiBib29sZWFuO1xuXG4gIC8vIExpc3RhIGRlIGFiYXNcbiAgQElucHV0KCd0LXRhYnMnKSB0YWJzOiBBcnJheTxUaGZUYWJDb21wb25lbnQ+ID0gW107XG5cbiAgLy8gRXZlbnRvIHF1ZSBzZXLDoSBlbWl0aWRvIGFvIGF0aXZhciB1bWEgYWJhXG4gIEBPdXRwdXQoJ3QtYWN0aXZhdGVkJykgYWN0aXZhdGVkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgLy8gRXZlbnRvIHF1ZSBzZXLDoSBlbWl0aWRvIGEgYWJhIGZvciBkZXNhYmlsaXRhZGEgb3Ugb2N1bHRhZGFcbiAgQE91dHB1dCgndC1jaGFuZ2Utc3RhdGUnKSBjaGFuZ2VTdGF0ZSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIC8vIEV2ZW50byBkZSBjbGlja1xuICBAT3V0cHV0KCd0LWNsaWNrJykgY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBnZXRDb250YWluZXJDbGFzcygpIHtcbiAgICByZXR1cm4gdGhpcy5zbWFsbCA/ICd0aGYtdGFiLWRyb3Bkb3duLWNvbnRhaW5lci1zbScgOiAndGhmLXRhYi1kcm9wZG93bi1jb250YWluZXInO1xuICB9XG5cbiAgdG9nZ2xlUG9wb3ZlcigpOiB2b2lkIHtcbiAgICB0aGlzLnBvcG92ZXIuaXNIaWRkZW4gPyB0aGlzLnBvcG92ZXIub3BlbigpIDogdGhpcy5wb3BvdmVyLmNsb3NlKCk7XG4gIH1cblxufVxuIl19