/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';
import { ThfMultiselectSearchComponent } from './../thf-multiselect-search/thf-multiselect-search.component';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que construíra o dropdown, contendo o campo de pesquisa e os itens para seleção.
 */
export class ThfMultiselectDropdownComponent {
    constructor() {
        this.scrollTop = 0;
        this.show = false;
        this.haveOptions = false;
        /**
         * Propriedade que indica se o campo de pesquisa deverá ser escondido.
         */
        this.hideSearch = false;
        /**
         * Propriedade que recebe a lista de opções selecionadas.
         */
        this.selectedValues = [];
        /**
         * Propriedade que recebe a lista de opções que deverão ser criadas no dropdown.
         */
        this.options = [];
        /**
         * Evento disparado a cada tecla digitada na pesquisa.
         */
        this.changeSearch = new EventEmitter();
        /**
         * Evento disparado a cada alteração na lista das opções selecionadas.
         */
        this.change = new EventEmitter();
        /**
         * Evento disparado quando for detectada uma ação que necessite fechar o dropdown.
         * Por exemplo, no caso de ser teclado TAB dentro do dropdown, então é disparado este evento
         * para notificar o componente principal que deve fechar o dropdown.
         */
        this.closeDropdown = new EventEmitter();
    }
    /**
     * @param {?} index
     * @return {?}
     */
    scrollTo(index) {
        this.scrollTop = (index <= 2) ? 0 : (index * 44) - 88;
    }
    /**
     * @param {?} option
     * @return {?}
     */
    isSelectedItem(option) {
        return this.selectedValues.some((/**
         * @param {?} selectedItem
         * @return {?}
         */
        selectedItem => selectedItem === option.value));
    }
    /**
     * @param {?} check
     * @param {?} option
     * @return {?}
     */
    clickItem(check, option) {
        this.updateSelectedValues(check, option);
        if (!this.hideSearch) {
            this.searchElement.setFocus();
        }
    }
    /**
     * @param {?} checked
     * @param {?} option
     * @return {?}
     */
    updateSelectedValues(checked, option) {
        if (checked) {
            this.selectedValues.push(option.value);
        }
        else {
            /** @type {?} */
            const indexSelectedValues = this.selectedValues.indexOf(option.value);
            this.selectedValues.splice(indexSelectedValues, 1);
        }
        this.change.emit(this.selectedValues);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    callChangeSearch(event) {
        this.changeSearch.emit(event);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onKeydown(event) {
        if (event.keyCode === 9) {
            this.closeDropdown.emit();
        }
    }
    /**
     * @param {?} toOpen
     * @return {?}
     */
    controlVisibility(toOpen) {
        this.show = toOpen;
        this.checkInitialOptions();
        setTimeout((/**
         * @return {?}
         */
        () => {
            if (toOpen && this.searchElement && !this.hideSearch) {
                this.searchElement.setFocus();
                this.searchElement.clean();
            }
        }));
    }
    /**
     * @private
     * @return {?}
     */
    checkInitialOptions() {
        if (this.options.length) {
            this.haveOptions = true;
        }
    }
}
ThfMultiselectDropdownComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-multiselect-dropdown',
                template: "<div #container class=\"thf-multiselect-container\" [hidden]=\"!show\">\n\n  <thf-multiselect-search #searchElement\n    *ngIf=\"!hideSearch && haveOptions\"\n    [t-literals]=\"literals\"\n    [t-placeholder]=\"placeholderSearch\"\n    (t-change)=\"callChangeSearch($event)\">\n  </thf-multiselect-search>\n\n  <ul class=\"thf-multiselect-items-container\" [scrollTop]=\"scrollTop\" #ulElement>\n    <div *ngIf=\"!options.length\" class=\"thf-multiselect-container-no-data thf-text-center\">\n      <span> {{ literals.noData }}</span>\n    </div>\n\n    <thf-multiselect-item *ngFor=\"let option of options\"\n      [t-option]=\"option\"\n      [t-selected]=\"isSelectedItem(option)\"\n      (t-change)=\"clickItem($event, option)\">\n    </thf-multiselect-item>\n  </ul>\n</div>\n"
            }] }
];
ThfMultiselectDropdownComponent.propDecorators = {
    hideSearch: [{ type: Input, args: ['t-hide-search',] }],
    literals: [{ type: Input, args: ['t-literals',] }],
    placeholderSearch: [{ type: Input, args: ['t-placeholder-search',] }],
    selectedValues: [{ type: Input, args: ['t-selected-values',] }],
    options: [{ type: Input, args: ['t-options',] }],
    changeSearch: [{ type: Output, args: ['t-change-search',] }],
    change: [{ type: Output, args: ['t-change',] }],
    closeDropdown: [{ type: Output, args: ['t-close-dropdown',] }],
    container: [{ type: ViewChild, args: ['container', { read: ElementRef, static: true },] }],
    ulElement: [{ type: ViewChild, args: ['ulElement', { read: ElementRef, static: true },] }],
    searchElement: [{ type: ViewChild, args: ['searchElement', { static: false },] }],
    onKeydown: [{ type: HostListener, args: ['keydown', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    ThfMultiselectDropdownComponent.prototype.scrollTop;
    /** @type {?} */
    ThfMultiselectDropdownComponent.prototype.show;
    /** @type {?} */
    ThfMultiselectDropdownComponent.prototype.haveOptions;
    /**
     * Propriedade que indica se o campo de pesquisa deverá ser escondido.
     * @type {?}
     */
    ThfMultiselectDropdownComponent.prototype.hideSearch;
    /**
     * Propriedade que que recebe as literais definidas no componente `thf-multiselect`.
     * @type {?}
     */
    ThfMultiselectDropdownComponent.prototype.literals;
    /**
     * Placeholder do campo de pesquisa.
     * @type {?}
     */
    ThfMultiselectDropdownComponent.prototype.placeholderSearch;
    /**
     * Propriedade que recebe a lista de opções selecionadas.
     * @type {?}
     */
    ThfMultiselectDropdownComponent.prototype.selectedValues;
    /**
     * Propriedade que recebe a lista de opções que deverão ser criadas no dropdown.
     * @type {?}
     */
    ThfMultiselectDropdownComponent.prototype.options;
    /**
     * Evento disparado a cada tecla digitada na pesquisa.
     * @type {?}
     */
    ThfMultiselectDropdownComponent.prototype.changeSearch;
    /**
     * Evento disparado a cada alteração na lista das opções selecionadas.
     * @type {?}
     */
    ThfMultiselectDropdownComponent.prototype.change;
    /**
     * Evento disparado quando for detectada uma ação que necessite fechar o dropdown.
     * Por exemplo, no caso de ser teclado TAB dentro do dropdown, então é disparado este evento
     * para notificar o componente principal que deve fechar o dropdown.
     * @type {?}
     */
    ThfMultiselectDropdownComponent.prototype.closeDropdown;
    /** @type {?} */
    ThfMultiselectDropdownComponent.prototype.container;
    /** @type {?} */
    ThfMultiselectDropdownComponent.prototype.ulElement;
    /** @type {?} */
    ThfMultiselectDropdownComponent.prototype.searchElement;
}
//# sourceMappingURL=data:application/json;base64,