/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ThfMenuPanelItemsService } from '../services/thf-menu-panel-items.service';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente que implementa cada item do thf-menu-panel.
 */
export class ThfMenuPanelItemComponent {
    /**
     * @param {?} menuItemsService
     */
    constructor(menuItemsService) {
        this.menuItemsService = menuItemsService;
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.itemsSubscription.unsubscribe();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // subscribe to menu component messages
        this.subscribeMenuClickedFromParent();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    clickMenuItem(event) {
        if (!(event.ctrlKey || event.metaKey)) {
            event.preventDefault();
            // Emmit to parent
            this.menuItemsService.sendToParentMenuClicked(this.menuItemInternal);
        }
    }
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    activateMenu(menu) {
        this.menuItemInternal.isSelected = this.menuItemInternal.id === menu.id;
    }
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    processMenuItem(menu) {
        if (this.menuItemInternal.type === 'internalLink') {
            this.activateMenu(menu.active);
        }
    }
    /**
     * @private
     * @return {?}
     */
    subscribeMenuClickedFromParent() {
        this.itemsSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe((/**
         * @param {?} menu
         * @return {?}
         */
        menu => {
            this.processMenuItem(menu);
        }));
    }
}
ThfMenuPanelItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-menu-panel-item',
                template: "<!-- menu com link interno -->\n<a *ngIf=\"menuItemInternal.type === 'internalLink'\" [routerLink]=\"menuItemInternal.link\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n\n<!-- menu com link externo -->\n<a *ngIf=\"menuItemInternal.type === 'externalLink'\" [href]=\"menuItemInternal.link\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n\n<!-- menu sem link -->\n<a *ngIf=\"menuItemInternal.type === 'noLink'\" href=\"javascript:;\">\n  <ng-container *ngTemplateOutlet=\"menuItemTemplate\"></ng-container>\n</a>\n\n<ng-template #menuItemTemplate>\n  <div class=\"thf-menu-panel-item\"\n    t-tooltip-position=\"right\"\n    [class.thf-menu-panel-item-selected]=\"menuItemInternal.isSelected\"\n    [t-tooltip]=\"menuItemInternal.label\"\n    (click)=\"clickMenuItem($event);\">\n    <span class=\"thf-icon {{menuItemInternal.icon}}\"></span>\n  </div>\n</ng-template>\n"
            }] }
];
/** @nocollapse */
ThfMenuPanelItemComponent.ctorParameters = () => [
    { type: ThfMenuPanelItemsService }
];
ThfMenuPanelItemComponent.propDecorators = {
    menuItemInternal: [{ type: Input, args: ['t-menu-item-internal',] }]
};
if (false) {
    /** @type {?} */
    ThfMenuPanelItemComponent.prototype.itemsSubscription;
    /** @type {?} */
    ThfMenuPanelItemComponent.prototype.menuItemInternal;
    /**
     * @type {?}
     * @private
     */
    ThfMenuPanelItemComponent.prototype.menuItemsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW1lbnUtcGFuZWwtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLW1lbnUtcGFuZWwvdGhmLW1lbnUtcGFuZWwtaXRlbS90aGYtbWVudS1wYW5lbC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBS3BFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDOzs7Ozs7OztBQWFwRixNQUFNLE9BQU8seUJBQXlCOzs7O0lBTXBDLFlBQW9CLGdCQUEwQztRQUExQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQTBCO0lBQUksQ0FBQzs7OztJQUVuRSxXQUFXO1FBQ1QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sdUNBQXVDO1FBQ3ZDLElBQUksQ0FBQyw4QkFBOEIsRUFBRSxDQUFDO0lBQ3hDLENBQUM7Ozs7O0lBRUQsYUFBYSxDQUFDLEtBQUs7UUFDakIsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDckMsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBRXZCLGtCQUFrQjtZQUNsQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7U0FDdEU7SUFDSCxDQUFDOzs7Ozs7SUFFTyxZQUFZLENBQUMsSUFBOEI7UUFDakQsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxLQUFLLElBQUksQ0FBQyxFQUFFLENBQUM7SUFDMUUsQ0FBQzs7Ozs7O0lBRU8sZUFBZSxDQUFDLElBQUk7UUFDMUIsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxLQUFLLGNBQWMsRUFBRTtZQUNqRCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNoQztJQUNILENBQUM7Ozs7O0lBRU8sOEJBQThCO1FBQ3JDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsNEJBQTRCLEVBQUUsQ0FBQyxTQUFTOzs7O1FBQUMsSUFBSSxDQUFDLEVBQUU7WUFDNUYsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QixDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7OztZQTVDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsczdCQUFtRDthQUNwRDs7OztZQVpRLHdCQUF3Qjs7OytCQWlCOUIsS0FBSyxTQUFDLHNCQUFzQjs7OztJQUY3QixzREFBZ0M7O0lBRWhDLHFEQUEwRTs7Ozs7SUFFOUQscURBQWtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFRoZk1lbnVQYW5lbEl0ZW1JbnRlcm5hbCB9IGZyb20gJy4vdGhmLW1lbnUtcGFuZWwtaXRlbS1pbnRlcm5hbC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgVGhmTWVudVBhbmVsSXRlbXNTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvdGhmLW1lbnUtcGFuZWwtaXRlbXMuc2VydmljZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBxdWUgaW1wbGVtZW50YSBjYWRhIGl0ZW0gZG8gdGhmLW1lbnUtcGFuZWwuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1tZW51LXBhbmVsLWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLW1lbnUtcGFuZWwtaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmTWVudVBhbmVsSXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0IHtcblxuICBpdGVtc1N1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIEBJbnB1dCgndC1tZW51LWl0ZW0taW50ZXJuYWwnKSBtZW51SXRlbUludGVybmFsOiBUaGZNZW51UGFuZWxJdGVtSW50ZXJuYWw7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtZW51SXRlbXNTZXJ2aWNlOiBUaGZNZW51UGFuZWxJdGVtc1NlcnZpY2UpIHsgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuaXRlbXNTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIHN1YnNjcmliZSB0byBtZW51IGNvbXBvbmVudCBtZXNzYWdlc1xuICAgIHRoaXMuc3Vic2NyaWJlTWVudUNsaWNrZWRGcm9tUGFyZW50KCk7XG4gIH1cblxuICBjbGlja01lbnVJdGVtKGV2ZW50KSB7XG4gICAgaWYgKCEoZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5KSkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgLy8gRW1taXQgdG8gcGFyZW50XG4gICAgICB0aGlzLm1lbnVJdGVtc1NlcnZpY2Uuc2VuZFRvUGFyZW50TWVudUNsaWNrZWQodGhpcy5tZW51SXRlbUludGVybmFsKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFjdGl2YXRlTWVudShtZW51OiBUaGZNZW51UGFuZWxJdGVtSW50ZXJuYWwpIHtcbiAgICB0aGlzLm1lbnVJdGVtSW50ZXJuYWwuaXNTZWxlY3RlZCA9IHRoaXMubWVudUl0ZW1JbnRlcm5hbC5pZCA9PT0gbWVudS5pZDtcbiAgfVxuXG4gIHByaXZhdGUgcHJvY2Vzc01lbnVJdGVtKG1lbnUpIHtcbiAgICBpZiAodGhpcy5tZW51SXRlbUludGVybmFsLnR5cGUgPT09ICdpbnRlcm5hbExpbmsnKSB7XG4gICAgICB0aGlzLmFjdGl2YXRlTWVudShtZW51LmFjdGl2ZSk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzdWJzY3JpYmVNZW51Q2xpY2tlZEZyb21QYXJlbnQoKSB7XG4gICB0aGlzLml0ZW1zU3Vic2NyaXB0aW9uID0gdGhpcy5tZW51SXRlbXNTZXJ2aWNlLnJlY2VpdmVGcm9tUGFyZW50TWVudUNsaWNrZWQoKS5zdWJzY3JpYmUobWVudSA9PiB7XG4gICAgICB0aGlzLnByb2Nlc3NNZW51SXRlbShtZW51KTtcbiAgICB9KTtcbiAgfVxuXG59XG4iXX0=