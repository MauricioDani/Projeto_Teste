/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { ThfTextareaBaseComponent } from './thf-textarea-base.component';
/**
 * \@docsExtends ThfTextareaBaseComponent
 *
 * \@example
 *
 * <example name="thf-textarea-basic" title="Totvs Textarea Basic" >
 *  <file name="sample-thf-textarea-basic/sample-thf-textarea-basic.component.html"> </file>
 *  <file name="sample-thf-textarea-basic/sample-thf-textarea-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-textarea-labs" title="Totvs Textarea Labs" >
 *  <file name="sample-thf-textarea-labs/sample-thf-textarea-labs.component.html"> </file>
 *  <file name="sample-thf-textarea-labs/sample-thf-textarea-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-textarea-email" title="Totvs Textarea - Email" >
 *  <file name="sample-thf-textarea-email/sample-thf-textarea-email.component.html"> </file>
 *  <file name="sample-thf-textarea-email/sample-thf-textarea-email.component.ts"> </file>
 * </example>
 *
 * <example name="thf-textarea-email-reactive-form" title="Totvs Textarea - Email Reactive Form" >
 *  <file name="sample-thf-textarea-email-reactive-form/sample-thf-textarea-email-reactive-form.component.html"> </file>
 *  <file name="sample-thf-textarea-email-reactive-form/sample-thf-textarea-email-reactive-form.component.ts"> </file>
 * </example>
 *
 */
export class ThfTextareaComponent extends ThfTextareaBaseComponent {
    constructor() {
        super();
        this.fireChange = false;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValueModel(value) {
        if (this.inputEl) {
            if (!value) {
                // Se for o valor for undefined, deve limpar o campo
                this.inputEl.nativeElement.value = '';
            }
            else {
                this.inputEl.nativeElement.value = value;
            }
        }
        // Emite evento quando o model é atualizado, inclusive a primeira vez
        if (value) {
            this.change.emit(value);
        }
    }
    /**
     * @param {?} maxlength
     * @param {?} value
     * @return {?}
     */
    validMaxLength(maxlength, value) {
        return (maxlength && value.length > maxlength) ? value.toString().substring(0, maxlength) : value;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    eventOnInput(event) {
        /** @type {?} */
        const value = this.validMaxLength(this.maxlength, event.target.value);
        this.callOnChange(value);
        this.inputEl.nativeElement.value = value;
    }
    /**
     * @return {?}
     */
    eventOnFocus() {
        // Atualiza valor da variável que será usada para verificar se o campo teve alteração
        this.valueBeforeChange = this.inputEl.nativeElement.value;
        // Dispara evento quando o usuário entrar no campo
        // Este evento também é disparado quando o campo inicia com foco.
        this.enter.emit();
    }
    /**
     * @return {?}
     */
    eventOnBlur() {
        this.blur.emit();
        this.controlChangeEmitter();
    }
    /**
     * @return {?}
     */
    controlChangeEmitter() {
        /** @type {?} */
        const elementValue = this.inputEl.nativeElement.value;
        if (elementValue !== this.valueBeforeChange) {
            this.change.emit(elementValue);
        }
    }
}
ThfTextareaComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-textarea',
                template: "<thf-field-container\n  [t-help]=\"help\"\n  [t-label]=\"label\"\n  [t-optional]=\"!required && optional\">\n\n  <div class=\"thf-field-container-content\">\n    <textarea #inp\n      class=\"thf-textarea\"\n      (blur)=\"eventOnBlur()\"\n      (focus)=\"eventOnFocus()\"\n      (input)=\"eventOnInput($event)\"\n      [attr.name]=\"name\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [rows]=\"rows\">\n    </textarea>\n  </div>\n\n  <thf-field-container-bottom></thf-field-container-bottom>\n</thf-field-container>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => ThfTextareaComponent)),
                        multi: true,
                    },
                    {
                        provide: NG_VALIDATORS,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => ThfTextareaComponent)),
                        multi: true,
                    }
                ]
            }] }
];
/** @nocollapse */
ThfTextareaComponent.ctorParameters = () => [];
ThfTextareaComponent.propDecorators = {
    inputEl: [{ type: ViewChild, args: ['inp', { read: ElementRef, static: true },] }]
};
if (false) {
    /** @type {?} */
    ThfTextareaComponent.prototype.inputEl;
    /** @type {?} */
    ThfTextareaComponent.prototype.valueBeforeChange;
    /** @type {?} */
    ThfTextareaComponent.prototype.fireChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRleHRhcmVhLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZmllbGQvdGhmLXRleHRhcmVhL3RoZi10ZXh0YXJlYS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRWxFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtCQUErQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0Q3pFLE1BQU0sT0FBTyxvQkFBcUIsU0FBUSx3QkFBd0I7SUFPaEU7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUhWLGVBQVUsR0FBWSxLQUFLLENBQUM7SUFJNUIsQ0FBQzs7Ozs7SUFFRCxlQUFlLENBQUMsS0FBVTtRQUN4QixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDVixvREFBb0Q7Z0JBQ3BELElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7YUFDdkM7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQzthQUMxQztTQUNGO1FBRUQscUVBQXFFO1FBQ3JFLElBQUksS0FBSyxFQUFFO1lBQ1QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDekI7SUFDSCxDQUFDOzs7Ozs7SUFFRCxjQUFjLENBQUMsU0FBaUIsRUFBRSxLQUFhO1FBQzdDLE9BQU8sQ0FBQyxTQUFTLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUNwRyxDQUFDOzs7OztJQUVELFlBQVksQ0FBQyxLQUFVOztjQUNmLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDckUsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQzNDLENBQUM7Ozs7SUFFRCxZQUFZO1FBQ1YscUZBQXFGO1FBQ3JGLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUM7UUFFMUQsa0RBQWtEO1FBQ2xELGlFQUFpRTtRQUNqRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztJQUM5QixDQUFDOzs7O0lBRUQsb0JBQW9COztjQUNaLFlBQVksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLO1FBRXJELElBQUksWUFBWSxLQUFLLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMzQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNoQztJQUNILENBQUM7OztZQXpFRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLDhtQkFBNEM7Z0JBQzVDLFNBQVMsRUFBRTtvQkFDVDt3QkFDRSxPQUFPLEVBQUUsaUJBQWlCO3dCQUMxQixXQUFXLEVBQUUsVUFBVTs7O3dCQUFDLEdBQUcsRUFBRSxDQUFDLG9CQUFvQixFQUFDO3dCQUNuRCxLQUFLLEVBQUUsSUFBSTtxQkFDWjtvQkFDRDt3QkFDRSxPQUFPLEVBQUUsYUFBYTt3QkFDdEIsV0FBVyxFQUFFLFVBQVU7Ozt3QkFBQyxHQUFHLEVBQUUsQ0FBQyxvQkFBb0IsRUFBQzt3QkFDbkQsS0FBSyxFQUFFLElBQUk7cUJBQ1o7aUJBQ0Y7YUFDRjs7Ozs7c0JBR0UsU0FBUyxTQUFDLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7OztJQUFuRCx1Q0FBeUU7O0lBRXpFLGlEQUF1Qjs7SUFDdkIsMENBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBmb3J3YXJkUmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTElEQVRPUlMsIE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBUaGZUZXh0YXJlYUJhc2VDb21wb25lbnQgfSBmcm9tICcuL3RoZi10ZXh0YXJlYS1iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFRoZlRleHRhcmVhQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi10ZXh0YXJlYS1iYXNpY1wiIHRpdGxlPVwiVG90dnMgVGV4dGFyZWEgQmFzaWNcIiA+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtdGV4dGFyZWEtYmFzaWMvc2FtcGxlLXRoZi10ZXh0YXJlYS1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtdGV4dGFyZWEtYmFzaWMvc2FtcGxlLXRoZi10ZXh0YXJlYS1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtdGV4dGFyZWEtbGFic1wiIHRpdGxlPVwiVG90dnMgVGV4dGFyZWEgTGFic1wiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi10ZXh0YXJlYS1sYWJzL3NhbXBsZS10aGYtdGV4dGFyZWEtbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtdGV4dGFyZWEtbGFicy9zYW1wbGUtdGhmLXRleHRhcmVhLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLXRleHRhcmVhLWVtYWlsXCIgdGl0bGU9XCJUb3R2cyBUZXh0YXJlYSAtIEVtYWlsXCIgPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXRleHRhcmVhLWVtYWlsL3NhbXBsZS10aGYtdGV4dGFyZWEtZW1haWwuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXRleHRhcmVhLWVtYWlsL3NhbXBsZS10aGYtdGV4dGFyZWEtZW1haWwuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLXRleHRhcmVhLWVtYWlsLXJlYWN0aXZlLWZvcm1cIiB0aXRsZT1cIlRvdHZzIFRleHRhcmVhIC0gRW1haWwgUmVhY3RpdmUgRm9ybVwiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi10ZXh0YXJlYS1lbWFpbC1yZWFjdGl2ZS1mb3JtL3NhbXBsZS10aGYtdGV4dGFyZWEtZW1haWwtcmVhY3RpdmUtZm9ybS5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtdGV4dGFyZWEtZW1haWwtcmVhY3RpdmUtZm9ybS9zYW1wbGUtdGhmLXRleHRhcmVhLWVtYWlsLXJlYWN0aXZlLWZvcm0uY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi10ZXh0YXJlYScsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtdGV4dGFyZWEuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRoZlRleHRhcmVhQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRoZlRleHRhcmVhQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBUaGZUZXh0YXJlYUNvbXBvbmVudCBleHRlbmRzIFRoZlRleHRhcmVhQmFzZUNvbXBvbmVudCB7XG5cbiAgQFZpZXdDaGlsZCgnaW5wJywge3JlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogdHJ1ZSB9KSBpbnB1dEVsOiBFbGVtZW50UmVmO1xuXG4gIHZhbHVlQmVmb3JlQ2hhbmdlOiBhbnk7XG4gIGZpcmVDaGFuZ2U6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgd3JpdGVWYWx1ZU1vZGVsKHZhbHVlOiBhbnkpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5pbnB1dEVsKSB7XG4gICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgIC8vIFNlIGZvciBvIHZhbG9yIGZvciB1bmRlZmluZWQsIGRldmUgbGltcGFyIG8gY2FtcG9cbiAgICAgICAgdGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQudmFsdWUgPSAnJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlID0gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRW1pdGUgZXZlbnRvIHF1YW5kbyBvIG1vZGVsIMOpIGF0dWFsaXphZG8sIGluY2x1c2l2ZSBhIHByaW1laXJhIHZlelxuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5jaGFuZ2UuZW1pdCh2YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFsaWRNYXhMZW5ndGgobWF4bGVuZ3RoOiBudW1iZXIsIHZhbHVlOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gKG1heGxlbmd0aCAmJiB2YWx1ZS5sZW5ndGggPiBtYXhsZW5ndGgpID8gdmFsdWUudG9TdHJpbmcoKS5zdWJzdHJpbmcoMCwgbWF4bGVuZ3RoKSA6IHZhbHVlO1xuICB9XG5cbiAgZXZlbnRPbklucHV0KGV2ZW50OiBhbnkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMudmFsaWRNYXhMZW5ndGgodGhpcy5tYXhsZW5ndGgsIGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gICAgdGhpcy5jYWxsT25DaGFuZ2UodmFsdWUpO1xuICAgIHRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlID0gdmFsdWU7XG4gIH1cblxuICBldmVudE9uRm9jdXMoKSB7XG4gICAgLy8gQXR1YWxpemEgdmFsb3IgZGEgdmFyacOhdmVsIHF1ZSBzZXLDoSB1c2FkYSBwYXJhIHZlcmlmaWNhciBzZSBvIGNhbXBvIHRldmUgYWx0ZXJhw6fDo29cbiAgICB0aGlzLnZhbHVlQmVmb3JlQ2hhbmdlID0gdGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQudmFsdWU7XG5cbiAgICAvLyBEaXNwYXJhIGV2ZW50byBxdWFuZG8gbyB1c3XDoXJpbyBlbnRyYXIgbm8gY2FtcG9cbiAgICAvLyBFc3RlIGV2ZW50byB0YW1iw6ltIMOpIGRpc3BhcmFkbyBxdWFuZG8gbyBjYW1wbyBpbmljaWEgY29tIGZvY28uXG4gICAgdGhpcy5lbnRlci5lbWl0KCk7XG4gIH1cblxuICBldmVudE9uQmx1cigpIHtcbiAgICB0aGlzLmJsdXIuZW1pdCgpO1xuICAgIHRoaXMuY29udHJvbENoYW5nZUVtaXR0ZXIoKTtcbiAgfVxuXG4gIGNvbnRyb2xDaGFuZ2VFbWl0dGVyKCkge1xuICAgIGNvbnN0IGVsZW1lbnRWYWx1ZSA9IHRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlO1xuXG4gICAgaWYgKGVsZW1lbnRWYWx1ZSAhPT0gdGhpcy52YWx1ZUJlZm9yZUNoYW5nZSkge1xuICAgICAgdGhpcy5jaGFuZ2UuZW1pdChlbGVtZW50VmFsdWUpO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=