/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ThfDynamicFormBaseComponent } from './thf-dynamic-form-base.component';
/**
 * \@docsExtends ThfDynamicFormBaseComponent
 *
 * \@example
 *
 * <example name="thf-dynamic-form-basic" title="Totvs Dynamic Form Basic">
 *  <file name="sample-thf-dynamic-form-basic/sample-thf-dynamic-form-basic.component.html"> </file>
 *  <file name="sample-thf-dynamic-form-basic/sample-thf-dynamic-form-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-dynamic-form-register" title="Totvs Dynamic Form - Register">
 *  <file name="sample-thf-dynamic-form-register/sample-thf-dynamic-form-register.component.html"> </file>
 *  <file name="sample-thf-dynamic-form-register/sample-thf-dynamic-form-register.component.ts"> </file>
 * </example>
 */
export class ThfDynamicFormComponent extends ThfDynamicFormBaseComponent {
    /**
     * @param {?} value
     * @return {?}
     */
    set form(value) {
        // necessario para nao ocorrer o ExpressionChangedAfterItHasBeenCheckedError
        setTimeout((/**
         * @return {?}
         */
        () => {
            this._form = value;
            this.emitForm();
        }));
    }
    /**
     * @return {?}
     */
    get form() {
        return this._form || (/** @type {?} */ ({}));
    }
    /**
     * @private
     * @return {?}
     */
    emitForm() {
        if (!this.groupForm && this.formOutput.observers.length) {
            this.formOutput.emit(this.form);
        }
    }
}
ThfDynamicFormComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-dynamic-form',
                template: "\n<ng-container *ngIf=\"groupForm; then reuseFormTemplate; else uniqueFormTemplate\"></ng-container>\n\n<ng-template #reuseFormTemplate>\n\n  <thf-dynamic-form-fields [t-fields]=\"fields\" [t-value]=\"value\"></thf-dynamic-form-fields>\n\n</ng-template>\n\n<ng-template #uniqueFormTemplate>\n\n  <form #dynamicForm=\"ngForm\">\n\n    <thf-dynamic-form-fields [t-fields]=\"fields\" [t-value]=\"value\"></thf-dynamic-form-fields>\n\n  </form>\n\n</ng-template>\n"
            }] }
];
ThfDynamicFormComponent.propDecorators = {
    form: [{ type: ViewChild, args: ['dynamicForm', { static: false },] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfDynamicFormComponent.prototype._form;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWR5bmFtaWMtZm9ybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWR5bmFtaWMvdGhmLWR5bmFtaWMtZm9ybS90aGYtZHluYW1pYy1mb3JtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXhDLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7O0FBc0JoRixNQUFNLE9BQU8sdUJBQXdCLFNBQVEsMkJBQTJCOzs7OztJQUl0RSxJQUFpRCxJQUFJLENBQUMsS0FBYTtRQUNqRSw0RUFBNEU7UUFDNUUsVUFBVTs7O1FBQUMsR0FBRyxFQUFFO1lBQ2QsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7WUFFbkIsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2xCLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7OztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssSUFBSSxtQkFBTSxFQUFFLEVBQUEsQ0FBQztJQUNoQyxDQUFDOzs7OztJQUVPLFFBQVE7UUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUU7WUFDdkQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQzs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1Qix3ZEFBZ0Q7YUFDakQ7OzttQkFLRSxTQUFTLFNBQUMsYUFBYSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTs7Ozs7OztJQUYzQyx3Q0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBUaGZEeW5hbWljRm9ybUJhc2VDb21wb25lbnQgfSBmcm9tICcuL3RoZi1keW5hbWljLWZvcm0tYmFzZS5jb21wb25lbnQnO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBUaGZEeW5hbWljRm9ybUJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtZHluYW1pYy1mb3JtLWJhc2ljXCIgdGl0bGU9XCJUb3R2cyBEeW5hbWljIEZvcm0gQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1keW5hbWljLWZvcm0tYmFzaWMvc2FtcGxlLXRoZi1keW5hbWljLWZvcm0tYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWR5bmFtaWMtZm9ybS1iYXNpYy9zYW1wbGUtdGhmLWR5bmFtaWMtZm9ybS1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtZHluYW1pYy1mb3JtLXJlZ2lzdGVyXCIgdGl0bGU9XCJUb3R2cyBEeW5hbWljIEZvcm0gLSBSZWdpc3RlclwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWR5bmFtaWMtZm9ybS1yZWdpc3Rlci9zYW1wbGUtdGhmLWR5bmFtaWMtZm9ybS1yZWdpc3Rlci5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtZHluYW1pYy1mb3JtLXJlZ2lzdGVyL3NhbXBsZS10aGYtZHluYW1pYy1mb3JtLXJlZ2lzdGVyLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLWR5bmFtaWMtZm9ybScsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtZHluYW1pYy1mb3JtLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZEeW5hbWljRm9ybUNvbXBvbmVudCBleHRlbmRzIFRoZkR5bmFtaWNGb3JtQmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfZm9ybTogTmdGb3JtO1xuXG4gIEBWaWV3Q2hpbGQoJ2R5bmFtaWNGb3JtJywgeyBzdGF0aWM6IGZhbHNlIH0pIHNldCBmb3JtKHZhbHVlOiBOZ0Zvcm0pIHtcbiAgICAvLyBuZWNlc3NhcmlvIHBhcmEgbmFvIG9jb3JyZXIgbyBFeHByZXNzaW9uQ2hhbmdlZEFmdGVySXRIYXNCZWVuQ2hlY2tlZEVycm9yXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLl9mb3JtID0gdmFsdWU7XG5cbiAgICAgIHRoaXMuZW1pdEZvcm0oKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldCBmb3JtKCkge1xuICAgIHJldHVybiB0aGlzLl9mb3JtIHx8IDxhbnk+IHt9O1xuICB9XG5cbiAgcHJpdmF0ZSBlbWl0Rm9ybSgpIHtcbiAgICBpZiAoIXRoaXMuZ3JvdXBGb3JtICYmIHRoaXMuZm9ybU91dHB1dC5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmZvcm1PdXRwdXQuZW1pdCh0aGlzLmZvcm0pO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=