/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Serviço que implementa a comunicação entre os items do thf-menu.
 */
export class ThfMenuItemsService {
    constructor() {
        this.subjectParent = new Subject();
        this.subjectChild = new Subject();
    }
    // Envia informações do click do thf-menu-item para o thf-menu
    /**
     * @param {?} menu
     * @return {?}
     */
    sendToParentMenuClicked(menu) {
        this.subjectChild.next(menu);
    }
    // Recebe do thf-menu-item sua informação de click.
    /**
     * @return {?}
     */
    receiveFromChildMenuClicked() {
        return this.subjectChild.asObservable();
    }
    // Envia para os thf-menu-item a resposta do processamento de click de um thf-menu-item.
    /**
     * @param {?} menu
     * @return {?}
     */
    sendToChildMenuClicked(menu) {
        this.subjectParent.next(menu);
    }
    // Recebe do thf-menu as informações processadas do click de um thf-menu-item.
    /**
     * @return {?}
     */
    receiveFromParentMenuClicked() {
        return this.subjectParent.asObservable();
    }
}
ThfMenuItemsService.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfMenuItemsService.prototype.subjectParent;
    /**
     * @type {?}
     * @private
     */
    ThfMenuItemsService.prototype.subjectChild;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW1lbnUtaXRlbXMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtbWVudS9zZXJ2aWNlcy90aGYtbWVudS1pdGVtcy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBYyxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7Ozs7Ozs7O0FBVTNDLE1BQU0sT0FBTyxtQkFBbUI7SUFEaEM7UUFFVSxrQkFBYSxHQUFHLElBQUksT0FBTyxFQUFPLENBQUM7UUFDbkMsaUJBQVksR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDO0lBcUI1QyxDQUFDOzs7Ozs7SUFsQkMsdUJBQXVCLENBQUMsSUFBWTtRQUNsQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7OztJQUdELDJCQUEyQjtRQUN6QixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDMUMsQ0FBQzs7Ozs7O0lBR0Qsc0JBQXNCLENBQUMsSUFBWTtRQUNqQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7OztJQUdELDRCQUE0QjtRQUMxQixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDM0MsQ0FBQzs7O1lBdkJGLFVBQVU7Ozs7Ozs7SUFFVCw0Q0FBMkM7Ozs7O0lBQzNDLDJDQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIFNlcnZpw6dvIHF1ZSBpbXBsZW1lbnRhIGEgY29tdW5pY2HDp8OjbyBlbnRyZSBvcyBpdGVtcyBkbyB0aGYtbWVudS5cbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRoZk1lbnVJdGVtc1NlcnZpY2Uge1xuICBwcml2YXRlIHN1YmplY3RQYXJlbnQgPSBuZXcgU3ViamVjdDxhbnk+KCk7XG4gIHByaXZhdGUgc3ViamVjdENoaWxkID0gbmV3IFN1YmplY3Q8YW55PigpO1xuXG4gIC8vIEVudmlhIGluZm9ybWHDp8O1ZXMgZG8gY2xpY2sgZG8gdGhmLW1lbnUtaXRlbSBwYXJhIG8gdGhmLW1lbnVcbiAgc2VuZFRvUGFyZW50TWVudUNsaWNrZWQobWVudTogb2JqZWN0KSB7XG4gICAgdGhpcy5zdWJqZWN0Q2hpbGQubmV4dChtZW51KTtcbiAgfVxuXG4gIC8vIFJlY2ViZSBkbyB0aGYtbWVudS1pdGVtIHN1YSBpbmZvcm1hw6fDo28gZGUgY2xpY2suXG4gIHJlY2VpdmVGcm9tQ2hpbGRNZW51Q2xpY2tlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdWJqZWN0Q2hpbGQuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICAvLyBFbnZpYSBwYXJhIG9zIHRoZi1tZW51LWl0ZW0gYSByZXNwb3N0YSBkbyBwcm9jZXNzYW1lbnRvIGRlIGNsaWNrIGRlIHVtIHRoZi1tZW51LWl0ZW0uXG4gIHNlbmRUb0NoaWxkTWVudUNsaWNrZWQobWVudTogb2JqZWN0KSB7XG4gICAgdGhpcy5zdWJqZWN0UGFyZW50Lm5leHQobWVudSk7XG4gIH1cblxuICAvLyBSZWNlYmUgZG8gdGhmLW1lbnUgYXMgaW5mb3JtYcOnw7VlcyBwcm9jZXNzYWRhcyBkbyBjbGljayBkZSB1bSB0aGYtbWVudS1pdGVtLlxuICByZWNlaXZlRnJvbVBhcmVudE1lbnVDbGlja2VkKCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuc3ViamVjdFBhcmVudC5hc09ic2VydmFibGUoKTtcbiAgfVxufVxuIl19