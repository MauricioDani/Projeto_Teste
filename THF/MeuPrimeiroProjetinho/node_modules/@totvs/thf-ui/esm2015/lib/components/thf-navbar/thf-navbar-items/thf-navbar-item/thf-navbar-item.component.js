/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
import { isExternalLink } from '../../../../utils/util';
export class ThfNavbarItemComponent {
    constructor() {
        this.click = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get type() {
        if (isExternalLink(this.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    }
    /**
     * @return {?}
     */
    itemClick() {
        if (this.action) {
            this.action({ label: this.label, link: this.link });
        }
        this.click.emit();
    }
}
ThfNavbarItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-navbar-item',
                template: "<ng-container [ngSwitch]=\"type\">\n\n  <a *ngSwitchCase=\"'externalLink'\"\n    class=\"thf-navbar-item-link\"\n    [class.thf-clickable]=\"clickable\"\n    [href]=\"link\" \n    target=\"_blank\"\n    (click)=\"itemClick()\">{{ label }}</a>\n\n  <a *ngSwitchCase=\"'internalLink'\"\n    class=\"thf-navbar-item-link\"\n    [class.thf-clickable]=\"clickable\"\n    [routerLink]=\"link\"\n    (click)=\"itemClick()\">{{ label }}</a>\n\n</ng-container>\n"
            }] }
];
ThfNavbarItemComponent.propDecorators = {
    action: [{ type: Input, args: ['t-action',] }],
    clickable: [{ type: Input, args: ['t-clickable',] }],
    label: [{ type: Input, args: ['t-label',] }],
    link: [{ type: Input, args: ['t-link',] }],
    click: [{ type: Output, args: ['t-click',] }]
};
if (false) {
    /** @type {?} */
    ThfNavbarItemComponent.prototype.action;
    /** @type {?} */
    ThfNavbarItemComponent.prototype.clickable;
    /** @type {?} */
    ThfNavbarItemComponent.prototype.label;
    /** @type {?} */
    ThfNavbarItemComponent.prototype.link;
    /** @type {?} */
    ThfNavbarItemComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW5hdmJhci1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtbmF2YmFyL3RoZi1uYXZiYXItaXRlbXMvdGhmLW5hdmJhci1pdGVtL3RoZi1uYXZiYXItaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJdkUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBTXhELE1BQU0sT0FBTyxzQkFBc0I7SUFKbkM7UUFjcUIsVUFBSyxHQUFnQyxJQUFJLFlBQVksRUFBaUIsQ0FBQztJQWtCNUYsQ0FBQzs7OztJQWhCQyxJQUFJLElBQUk7UUFDTixJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDN0IsT0FBTyxjQUFjLENBQUM7U0FDdkI7UUFFRCxPQUFPLGNBQWMsQ0FBQztJQUN4QixDQUFDOzs7O0lBRUQsU0FBUztRQUVQLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7U0FDckQ7UUFFRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3BCLENBQUM7OztZQS9CRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsaWRBQStDO2FBQ2hEOzs7cUJBR0UsS0FBSyxTQUFDLFVBQVU7d0JBRWhCLEtBQUssU0FBQyxhQUFhO29CQUVuQixLQUFLLFNBQUMsU0FBUzttQkFFZixLQUFLLFNBQUMsUUFBUTtvQkFFZCxNQUFNLFNBQUMsU0FBUzs7OztJQVJqQix3Q0FBb0M7O0lBRXBDLDJDQUEwQzs7SUFFMUMsdUNBQWdDOztJQUVoQyxzQ0FBK0I7O0lBRS9CLHVDQUEwRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZk5hdmJhckl0ZW0gfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL3RoZi1uYXZiYXItaXRlbS5pbnRlcmZhY2UnO1xuXG5pbXBvcnQgeyBpc0V4dGVybmFsTGluayB9IGZyb20gJy4uLy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtbmF2YmFyLWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLW5hdmJhci1pdGVtLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZOYXZiYXJJdGVtQ29tcG9uZW50IHtcblxuICBASW5wdXQoJ3QtYWN0aW9uJykgYWN0aW9uOiBGdW5jdGlvbjtcblxuICBASW5wdXQoJ3QtY2xpY2thYmxlJykgY2xpY2thYmxlPzogYm9vbGVhbjtcblxuICBASW5wdXQoJ3QtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIEBJbnB1dCgndC1saW5rJykgbGluaz86IHN0cmluZztcblxuICBAT3V0cHV0KCd0LWNsaWNrJykgY2xpY2s6IEV2ZW50RW1pdHRlcjxUaGZOYXZiYXJJdGVtPiA9IG5ldyBFdmVudEVtaXR0ZXI8VGhmTmF2YmFySXRlbT4oKTtcblxuICBnZXQgdHlwZSgpIHtcbiAgICBpZiAoaXNFeHRlcm5hbExpbmsodGhpcy5saW5rKSkge1xuICAgICAgcmV0dXJuICdleHRlcm5hbExpbmsnO1xuICAgIH1cblxuICAgIHJldHVybiAnaW50ZXJuYWxMaW5rJztcbiAgfVxuXG4gIGl0ZW1DbGljaygpIHtcblxuICAgIGlmICh0aGlzLmFjdGlvbikge1xuICAgICAgdGhpcy5hY3Rpb24oeyBsYWJlbDogdGhpcy5sYWJlbCwgbGluazogdGhpcy5saW5rIH0pO1xuICAgIH1cblxuICAgIHRoaXMuY2xpY2suZW1pdCgpO1xuICB9XG59XG4iXX0=