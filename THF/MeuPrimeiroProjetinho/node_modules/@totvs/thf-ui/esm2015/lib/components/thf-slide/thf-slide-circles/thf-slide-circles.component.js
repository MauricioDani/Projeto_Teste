/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para o conjunto de c√≠rculos que faz a passagem de itens do `thf-slide`.
 */
export class ThfSlideCirclesComponent {
    constructor() {
        /**
         * Evento emitido ao clicar em um controle.
         */
        this.click = new EventEmitter();
    }
}
ThfSlideCirclesComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-slide-circles',
                template: "<div class=\"thf-slide-circles\">\n  <ng-container *ngFor=\"let item of items; let index = index;\">\n    <div\n      class=\"thf-slide-circle\"\n      [class.thf-slide-active-circle]=\"index === currentSlideIndex\"\n      (click)=\"click.emit(index)\">\n    </div>\n  </ng-container>\n</div>\n"
            }] }
];
ThfSlideCirclesComponent.propDecorators = {
    currentSlideIndex: [{ type: Input, args: ['t-current-slide-index',] }],
    items: [{ type: Input, args: ['t-items',] }],
    click: [{ type: Output, args: ['t-click',] }]
};
if (false) {
    /**
     * Index do slide atual.
     * @type {?}
     */
    ThfSlideCirclesComponent.prototype.currentSlideIndex;
    /**
     * Itens do slide.
     * @type {?}
     */
    ThfSlideCirclesComponent.prototype.items;
    /**
     * Evento emitido ao clicar em um controle.
     * @type {?}
     */
    ThfSlideCirclesComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXNsaWRlLWNpcmNsZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1zbGlkZS90aGYtc2xpZGUtY2lyY2xlcy90aGYtc2xpZGUtY2lyY2xlcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7O0FBYXZFLE1BQU0sT0FBTyx3QkFBd0I7SUFKckM7Ozs7UUFhcUIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFDckQsQ0FBQzs7O1lBZEEsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLGtUQUFpRDthQUNsRDs7O2dDQUlFLEtBQUssU0FBQyx1QkFBdUI7b0JBRzdCLEtBQUssU0FBQyxTQUFTO29CQUdmLE1BQU0sU0FBQyxTQUFTOzs7Ozs7O0lBTmpCLHFEQUEwRDs7Ozs7SUFHMUQseUNBQW9DOzs7OztJQUdwQyx5Q0FBbUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcGFyYSBvIGNvbmp1bnRvIGRlIGPDrXJjdWxvcyBxdWUgZmF6IGEgcGFzc2FnZW0gZGUgaXRlbnMgZG8gYHRoZi1zbGlkZWAuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1zbGlkZS1jaXJjbGVzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1zbGlkZS1jaXJjbGVzLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZTbGlkZUNpcmNsZXNDb21wb25lbnQge1xuXG4gIC8qKiBJbmRleCBkbyBzbGlkZSBhdHVhbC4gKi9cbiAgQElucHV0KCd0LWN1cnJlbnQtc2xpZGUtaW5kZXgnKSBjdXJyZW50U2xpZGVJbmRleDogbnVtYmVyO1xuXG4gIC8qKiBJdGVucyBkbyBzbGlkZS4gKi9cbiAgQElucHV0KCd0LWl0ZW1zJykgaXRlbXM6IEFycmF5PGFueT47XG5cbiAgLyoqIEV2ZW50byBlbWl0aWRvIGFvIGNsaWNhciBlbSB1bSBjb250cm9sZS4gKi9cbiAgQE91dHB1dCgndC1jbGljaycpIGNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG59XG4iXX0=