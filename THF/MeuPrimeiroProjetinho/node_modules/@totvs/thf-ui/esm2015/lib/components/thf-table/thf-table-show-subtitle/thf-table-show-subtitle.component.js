/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a criação de um botão e modal para visualização de todas as legendas.
 */
export class ThfTableShowSubtitleComponent {
}
ThfTableShowSubtitleComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-table-show-subtitle',
                template: "<div class=\"thf-table-footer-show-subtitle\" (click)=\"modal.open()\">\n  <div class=\"thf-table-footer-show-subtitle-container\">\n    <span class=\"thf-table-show-subtitle\">{{ literals.seeCompleteSubtitle }}</span>\n  </div>\n</div>\n\n<thf-modal #modal\n  t-size=\"sm\"\n  [t-title]=\"literals.completeSubtitle\">\n\n  <div *ngFor=\"let subtitle of subtitles\" class=\"thf-table-subtitle-footer-modal thf-row\">\n    <thf-table-subtitle-circle\n      t-hide-title=\"true\"\n      [t-subtitle]=\"subtitle\">\n    </thf-table-subtitle-circle>\n    <span class=\"thf-table-subtitle-text\">{{ subtitle.label }}</span>\n  </div>\n</thf-modal>\n"
            }] }
];
ThfTableShowSubtitleComponent.propDecorators = {
    subtitles: [{ type: Input, args: ['t-subtitles',] }],
    literals: [{ type: Input, args: ['t-literals',] }]
};
if (false) {
    /**
     * Objeto com os dados da legenda.
     * @type {?}
     */
    ThfTableShowSubtitleComponent.prototype.subtitles;
    /**
     * Propriedade que recebe as literais definidas no `thf-table`.
     * @type {?}
     */
    ThfTableShowSubtitleComponent.prototype.literals;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRhYmxlLXNob3ctc3VidGl0bGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi10YWJsZS90aGYtdGFibGUtc2hvdy1zdWJ0aXRsZS90aGYtdGFibGUtc2hvdy1zdWJ0aXRsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQWVqRCxNQUFNLE9BQU8sNkJBQTZCOzs7WUFKekMsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLGdwQkFBdUQ7YUFDeEQ7Ozt3QkFJRSxLQUFLLFNBQUMsYUFBYTt1QkFHbkIsS0FBSyxTQUFDLFlBQVk7Ozs7Ozs7SUFIbkIsa0RBQStEOzs7OztJQUcvRCxpREFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZlRhYmxlU3VidGl0bGVDb2x1bW4gfSBmcm9tICcuLi90aGYtdGFibGUtc3VidGl0bGUtZm9vdGVyL3RoZi10YWJsZS1zdWJ0aXRsZS1jb2x1bW4uaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHBhcmEgYSBjcmlhw6fDo28gZGUgdW0gYm90w6NvIGUgbW9kYWwgcGFyYSB2aXN1YWxpemHDp8OjbyBkZSB0b2RhcyBhcyBsZWdlbmRhcy5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLXRhYmxlLXNob3ctc3VidGl0bGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXRhYmxlLXNob3ctc3VidGl0bGUuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoZlRhYmxlU2hvd1N1YnRpdGxlQ29tcG9uZW50IHtcblxuICAvKiogT2JqZXRvIGNvbSBvcyBkYWRvcyBkYSBsZWdlbmRhLiAqL1xuICBASW5wdXQoJ3Qtc3VidGl0bGVzJykgc3VidGl0bGVzOiBBcnJheTxUaGZUYWJsZVN1YnRpdGxlQ29sdW1uPjtcblxuICAvKiogUHJvcHJpZWRhZGUgcXVlIHJlY2ViZSBhcyBsaXRlcmFpcyBkZWZpbmlkYXMgbm8gYHRoZi10YWJsZWAuICovXG4gIEBJbnB1dCgndC1saXRlcmFscycpIGxpdGVyYWxzO1xuXG59XG4iXX0=