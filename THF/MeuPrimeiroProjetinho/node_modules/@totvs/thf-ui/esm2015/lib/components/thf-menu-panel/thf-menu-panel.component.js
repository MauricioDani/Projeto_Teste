/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewContainerRef } from '@angular/core';
import { Location } from '@angular/common';
import { NavigationEnd, Router } from '@angular/router';
import { callFunction, getFormattedLink, openExternalLink } from '../../utils/util';
import { ThfMenuPanelBaseComponent } from './thf-menu-panel-base.component';
import { ThfMenuPanelItemsService } from './services/thf-menu-panel-items.service';
/**
 * \@docsExtends ThfMenuPanelBaseComponent
 *
 * \@description
 *
 * Para o menu funcionar corretamente é necessário importar o `RouterModule` e `Routes` do módulo principal de
 *  sua aplicação:
 *
 * ````
 * import { RouterModule, Routes } from '\@angular/router';
 *
 * ...
 *
 * \@NgModule({
 *   imports: [
 *     RouterModule,
 *     Routes,
 *     ...
 *     ThfModule,
 *     ...
 *   ],
 *   declarations: [
 *     AppComponent
 *   ],
 *   providers: [],
 *   bootstrap: [AppComponent]
 * })
 * export class AppModule { }
 * ```
 *
 * Além disso é necessário criar um módulo configurando as rotas da aplicação.
 *
 * ```
 * import { NgModule } from '\@angular/core';
 *
 * import { RouterModule, Routes } from '\@angular/router';
 *
 * import { HelloWorldComponent } from './hello-world/hello-world.component';
 *
 * const routes: Routes = [
 *   {path: 'hello-world', component: HelloWorldComponent}
 * ];
 *
 * \@NgModule({
 *   imports: [RouterModule.forRoot(routes, {useHash: true})],
 *   exports: [RouterModule]
 * })
 * export class AppRoutingModule {}
 * ```
 *
 * \@example
 *
 * <example name="thf-menu-panel-basic" title="Totvs Menu Panel Basic">
 *   <file name="sample-thf-menu-panel-basic/sample-thf-menu-panel-basic.component.html"> </file>
 *   <file name="sample-thf-menu-panel-basic/sample-thf-menu-panel-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-menu-panel-labs" title="Totvs Menu Panel Labs">
 *   <file name="sample-thf-menu-panel-labs/sample-thf-menu-panel-labs.component.html"> </file>
 *   <file name="sample-thf-menu-panel-labs/sample-thf-menu-panel-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-menu-panel-customer" title="Totvs Menu Panel - Customers">
 *   <file name="sample-thf-menu-panel-customer/sample-thf-menu-panel-customer.component.html"> </file>
 *   <file name="sample-thf-menu-panel-customer/sample-thf-menu-panel-customer.component.ts"> </file>
 * </example>
 */
export class ThfMenuPanelComponent extends ThfMenuPanelBaseComponent {
    /**
     * @param {?} viewRef
     * @param {?} location
     * @param {?} menuItemsService
     * @param {?} router
     */
    constructor(viewRef, location, menuItemsService, router) {
        super();
        this.location = location;
        this.menuItemsService = menuItemsService;
        this.router = router;
        this.parentRef = viewRef['_view']['component'];
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.itemSubscription.unsubscribe();
        this.routeSubscription.unsubscribe();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.subscribeToMenuItem();
        this.subscribeToRoute();
    }
    /**
     * @private
     * @param {?} urlPath
     * @param {?} menus
     * @return {?}
     */
    activateMenuByUrl(urlPath, menus) {
        if (menus) {
            return menus.some((/**
             * @param {?} menu
             * @return {?}
             */
            menu => {
                if (getFormattedLink(menu.link) === urlPath) {
                    this.activateMenuItem(menu);
                    return true;
                }
            }));
        }
    }
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    activateMenuItem(menu) {
        this.activeMenuItem = menu;
        this.linkActive = getFormattedLink(menu.link);
        this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, activatedByRoute: true });
    }
    /**
     * @private
     * @param {?} urlPath
     * @return {?}
     */
    checkActiveMenuByUrl(urlPath) {
        if (!this.linkActive || this.linkActive !== urlPath) {
            this.activateMenuByUrl(urlPath, this.menus);
        }
    }
    /**
     * @private
     * @param {?} menu
     * @return {?}
     */
    clickMenuItem(menu) {
        if (menu.action) {
            callFunction(menu.action, this.parentRef, menu);
        }
        if (menu.type === 'externalLink') {
            openExternalLink(menu.link);
        }
        else if (menu.type === 'internalLink') {
            this.activateMenuItem(menu);
        }
    }
    /**
     * @private
     * @return {?}
     */
    subscribeToRoute() {
        this.routeSubscription = this.router.events.subscribe((/**
         * @param {?} rounterEvent
         * @return {?}
         */
        rounterEvent => {
            if (rounterEvent instanceof NavigationEnd) {
                this.checkActiveMenuByUrl(this.location.path());
            }
        }));
    }
    /**
     * @private
     * @return {?}
     */
    subscribeToMenuItem() {
        this.itemSubscription =
            this.menuItemsService.receiveFromChildMenuClicked().subscribe((/**
             * @param {?} menu
             * @return {?}
             */
            (menu) => this.clickMenuItem(menu)));
    }
}
ThfMenuPanelComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-menu-panel',
                template: "<div class=\"thf-menu-panel\">\n  <div class=\"thf-menu-panel-logo-container\">\n    <a href=\"./\">\n      <div class=\"thf-menu-panel-logo\"></div>\n    </a>\n  </div>\n\n  <nav class=\"thf-menu-panel-container\">\n    <div class=\"thf-menu-panel-inner\">\n      <div *ngFor=\"let menu of menus, let menuIndex = index;\" class=\"thf-menu-panel-item-wrapper\">\n        <thf-menu-panel-item\n          [class.thf-menu-panel-item-first]=\"menuIndex === 0\"\n          [t-menu-item-internal]=\"menu\">\n        </thf-menu-panel-item>\n      </div>\n    </div>\n  </nav>\n</div>\n"
            }] }
];
/** @nocollapse */
ThfMenuPanelComponent.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: Location },
    { type: ThfMenuPanelItemsService },
    { type: Router }
];
if (false) {
    /** @type {?} */
    ThfMenuPanelComponent.prototype.activeMenuItem;
    /** @type {?} */
    ThfMenuPanelComponent.prototype.linkActive;
    /** @type {?} */
    ThfMenuPanelComponent.prototype.parentRef;
    /**
     * @type {?}
     * @private
     */
    ThfMenuPanelComponent.prototype.routeSubscription;
    /**
     * @type {?}
     * @private
     */
    ThfMenuPanelComponent.prototype.itemSubscription;
    /**
     * @type {?}
     * @private
     */
    ThfMenuPanelComponent.prototype.location;
    /**
     * @type {?}
     * @private
     */
    ThfMenuPanelComponent.prototype.menuItemsService;
    /**
     * @type {?}
     * @private
     */
    ThfMenuPanelComponent.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW1lbnUtcGFuZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1tZW51LXBhbmVsL3RoZi1tZW51LXBhbmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFJeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRXBGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRzVFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBFbkYsTUFBTSxPQUFPLHFCQUFzQixTQUFRLHlCQUF5Qjs7Ozs7OztJQVNsRSxZQUNFLE9BQXlCLEVBQ2pCLFFBQWtCLEVBQ2xCLGdCQUEwQyxFQUMxQyxNQUFjO1FBRXRCLEtBQUssRUFBRSxDQUFDO1FBSkEsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQTBCO1FBQzFDLFdBQU0sR0FBTixNQUFNLENBQVE7UUFHdEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDakQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDcEMsSUFBSSxD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cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTG9jYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkVuZCwgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IGNhbGxGdW5jdGlvbiwgZ2V0Rm9ybWF0dGVkTGluaywgb3BlbkV4dGVybmFsTGluayB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBUaGZNZW51UGFuZWxCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtbWVudS1wYW5lbC1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaGZNZW51UGFuZWxJdGVtIH0gZnJvbSAnLi90aGYtbWVudS1wYW5lbC1pdGVtL3RoZi1tZW51LXBhbmVsLWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IFRoZk1lbnVQYW5lbEl0ZW1JbnRlcm5hbCB9IGZyb20gJy4vdGhmLW1lbnUtcGFuZWwtaXRlbS90aGYtbWVudS1wYW5lbC1pdGVtLWludGVybmFsLmludGVyZmFjZSc7XG5pbXBvcnQgeyBUaGZNZW51UGFuZWxJdGVtc1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3RoZi1tZW51LXBhbmVsLWl0ZW1zLnNlcnZpY2UnO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBUaGZNZW51UGFuZWxCYXNlQ29tcG9uZW50XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogUGFyYSBvIG1lbnUgZnVuY2lvbmFyIGNvcnJldGFtZW50ZSDDqSBuZWNlc3PDoXJpbyBpbXBvcnRhciBvIGBSb3V0ZXJNb2R1bGVgIGUgYFJvdXRlc2AgZG8gbcOzZHVsbyBwcmluY2lwYWwgZGVcbiAqICBzdWEgYXBsaWNhw6fDo286XG4gKlxuICogYGBgYFxuICogaW1wb3J0IHsgUm91dGVyTW9kdWxlLCBSb3V0ZXMgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuICpcbiAqIC4uLlxuICpcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICBSb3V0ZXJNb2R1bGUsXG4gKiAgICAgUm91dGVzLFxuICogICAgIC4uLlxuICogICAgIFRoZk1vZHVsZSxcbiAqICAgICAuLi5cbiAqICAgXSxcbiAqICAgZGVjbGFyYXRpb25zOiBbXG4gKiAgICAgQXBwQ29tcG9uZW50XG4gKiAgIF0sXG4gKiAgIHByb3ZpZGVyczogW10sXG4gKiAgIGJvb3RzdHJhcDogW0FwcENvbXBvbmVudF1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHsgfVxuICogYGBgXG4gKlxuICogQWzDqW0gZGlzc28gw6kgbmVjZXNzw6FyaW8gY3JpYXIgdW0gbcOzZHVsbyBjb25maWd1cmFuZG8gYXMgcm90YXMgZGEgYXBsaWNhw6fDo28uXG4gKlxuICogYGBgXG4gKiBpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuICpcbiAqIGltcG9ydCB7IFJvdXRlck1vZHVsZSwgUm91dGVzIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbiAqXG4gKiBpbXBvcnQgeyBIZWxsb1dvcmxkQ29tcG9uZW50IH0gZnJvbSAnLi9oZWxsby13b3JsZC9oZWxsby13b3JsZC5jb21wb25lbnQnO1xuICpcbiAqIGNvbnN0IHJvdXRlczogUm91dGVzID0gW1xuICogICB7cGF0aDogJ2hlbGxvLXdvcmxkJywgY29tcG9uZW50OiBIZWxsb1dvcmxkQ29tcG9uZW50fVxuICogXTtcbiAqXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbUm91dGVyTW9kdWxlLmZvclJvb3Qocm91dGVzLCB7dXNlSGFzaDogdHJ1ZX0pXSxcbiAqICAgZXhwb3J0czogW1JvdXRlck1vZHVsZV1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwUm91dGluZ01vZHVsZSB7fVxuICogYGBgXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLW1lbnUtcGFuZWwtYmFzaWNcIiB0aXRsZT1cIlRvdHZzIE1lbnUgUGFuZWwgQmFzaWNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbWVudS1wYW5lbC1iYXNpYy9zYW1wbGUtdGhmLW1lbnUtcGFuZWwtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1tZW51LXBhbmVsLWJhc2ljL3NhbXBsZS10aGYtbWVudS1wYW5lbC1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtbWVudS1wYW5lbC1sYWJzXCIgdGl0bGU9XCJUb3R2cyBNZW51IFBhbmVsIExhYnNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbWVudS1wYW5lbC1sYWJzL3NhbXBsZS10aGYtbWVudS1wYW5lbC1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbWVudS1wYW5lbC1sYWJzL3NhbXBsZS10aGYtbWVudS1wYW5lbC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1tZW51LXBhbmVsLWN1c3RvbWVyXCIgdGl0bGU9XCJUb3R2cyBNZW51IFBhbmVsIC0gQ3VzdG9tZXJzXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLW1lbnUtcGFuZWwtY3VzdG9tZXIvc2FtcGxlLXRoZi1tZW51LXBhbmVsLWN1c3RvbWVyLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtbWVudS1wYW5lbC1jdXN0b21lci9zYW1wbGUtdGhmLW1lbnUtcGFuZWwtY3VzdG9tZXIuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtbWVudS1wYW5lbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtbWVudS1wYW5lbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmTWVudVBhbmVsQ29tcG9uZW50IGV4dGVuZHMgVGhmTWVudVBhbmVsQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0IHtcblxuICBhY3RpdmVNZW51SXRlbTogVGhmTWVudVBhbmVsSXRlbTtcbiAgbGlua0FjdGl2ZTogc3RyaW5nO1xuICBwYXJlbnRSZWY6IGFueTtcblxuICBwcml2YXRlIHJvdXRlU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gIHByaXZhdGUgaXRlbVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHZpZXdSZWY6IFZpZXdDb250YWluZXJSZWYsXG4gICAgcHJpdmF0ZSBsb2NhdGlvbjogTG9jYXRpb24sXG4gICAgcHJpdmF0ZSBtZW51SXRlbXNTZXJ2aWNlOiBUaGZNZW51UGFuZWxJdGVtc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcikge1xuXG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnBhcmVudFJlZiA9IHZpZXdSZWZbJ192aWV3J11bJ2NvbXBvbmVudCddO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5pdGVtU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgdGhpcy5yb3V0ZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICB0aGlzLnN1YnNjcmliZVRvTWVudUl0ZW0oKTtcbiAgIHRoaXMuc3Vic2NyaWJlVG9Sb3V0ZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhY3RpdmF0ZU1lbnVCeVVybCh1cmxQYXRoOiBzdHJpbmcsIG1lbnVzOiBBcnJheTxUaGZNZW51UGFuZWxJdGVtPikge1xuICAgIGlmIChtZW51cykge1xuICAgICAgcmV0dXJuIG1lbnVzLnNvbWUobWVudSA9PiB7XG4gICAgICAgIGlmIChnZXRGb3JtYXR0ZWRMaW5rKG1lbnUubGluaykgPT09IHVybFBhdGgpIHtcbiAgICAgICAgICB0aGlzLmFjdGl2YXRlTWVudUl0ZW0obWVudSk7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYWN0aXZhdGVNZW51SXRlbShtZW51OiBUaGZNZW51UGFuZWxJdGVtKTogdm9pZCB7XG4gICAgdGhpcy5hY3RpdmVNZW51SXRlbSA9IG1lbnU7XG4gICAgdGhpcy5saW5rQWN0aXZlID0gZ2V0Rm9ybWF0dGVkTGluayhtZW51LmxpbmspO1xuICAgIHRoaXMubWVudUl0ZW1zU2VydmljZS5zZW5kVG9DaGlsZE1lbnVDbGlja2VkKHsgYWN0aXZlOiB0aGlzLmFjdGl2ZU1lbnVJdGVtLCBhY3RpdmF0ZWRCeVJvdXRlOiB0cnVlIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBjaGVja0FjdGl2ZU1lbnVCeVVybCh1cmxQYXRoOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMubGlua0FjdGl2ZSB8fCB0aGlzLmxpbmtBY3RpdmUgIT09IHVybFBhdGgpIHtcbiAgICAgIHRoaXMuYWN0aXZhdGVNZW51QnlVcmwodXJsUGF0aCwgdGhpcy5tZW51cyk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBjbGlja01lbnVJdGVtKG1lbnU6IFRoZk1lbnVQYW5lbEl0ZW1JbnRlcm5hbCkge1xuICAgIGlmIChtZW51LmFjdGlvbikge1xuICAgICAgY2FsbEZ1bmN0aW9uKG1lbnUuYWN0aW9uLCB0aGlzLnBhcmVudFJlZiwgbWVudSk7XG4gICAgfVxuXG4gICAgaWYgKG1lbnUudHlwZSA9PT0gJ2V4dGVybmFsTGluaycpIHtcblxuICAgICAgb3BlbkV4dGVybmFsTGluayhtZW51LmxpbmspO1xuXG4gICAgfSBlbHNlIGlmIChtZW51LnR5cGUgPT09ICdpbnRlcm5hbExpbmsnKSB7XG5cbiAgICAgIHRoaXMuYWN0aXZhdGVNZW51SXRlbShtZW51KTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHN1YnNjcmliZVRvUm91dGUoKSB7XG4gICAgIHRoaXMucm91dGVTdWJzY3JpcHRpb24gPSB0aGlzLnJvdXRlci5ldmVudHMuc3Vic2NyaWJlKHJvdW50ZXJFdmVudCA9PiB7XG4gICAgICBpZiAocm91bnRlckV2ZW50IGluc3RhbmNlb2YgTmF2aWdhdGlvbkVuZCkge1xuICAgICAgICB0aGlzLmNoZWNrQWN0aXZlTWVudUJ5VXJsKHRoaXMubG9jYXRpb24ucGF0aCgpKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgc3Vic2NyaWJlVG9NZW51SXRlbSgpIHtcbiAgICB0aGlzLml0ZW1TdWJzY3JpcHRpb24gPVxuICAgICAgdGhpcy5tZW51SXRlbXNTZXJ2aWNlLnJlY2VpdmVGcm9tQ2hpbGRNZW51Q2xpY2tlZCgpLnN1YnNjcmliZSgobWVudTogVGhmTWVudVBhbmVsSXRlbUludGVybmFsKSA9PiB0aGlzLmNsaWNrTWVudUl0ZW0obWVudSkpO1xuICB9XG5cbn1cbiJdfQ==