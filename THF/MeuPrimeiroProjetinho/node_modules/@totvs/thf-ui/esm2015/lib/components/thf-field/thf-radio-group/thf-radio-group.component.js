/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef, Input, IterableDiffers, ViewChild } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { removeDuplicatedOptions } from '../../../utils/util';
import { ThfRadioGroupBaseComponent } from './thf-radio-group-base.component';
/**
 * \@docsExtends ThfRadioGroupBaseComponent
 *
 * \@example
 *
 * <example name="thf-radio-group-basic" title="Totvs Radio Group Basic">
 *  <file name="sample-thf-radio-group-basic/sample-thf-radio-group-basic.component.html"> </file>
 *  <file name="sample-thf-radio-group-basic/sample-thf-radio-group-basic.component.ts"> </file>
 *  <file name="sample-thf-radio-group-basic/sample-thf-radio-group-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-thf-radio-group-basic/sample-thf-radio-group-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="thf-radio-group-labs" title="Totvs Radio Group Labs">
 *  <file name="sample-thf-radio-group-labs/sample-thf-radio-group-labs.component.html"> </file>
 *  <file name="sample-thf-radio-group-labs/sample-thf-radio-group-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-radio-group-translator" title="Totvs Radio Group - Translator">
 *  <file name="sample-thf-radio-group-translator/sample-thf-radio-group-translator.component.html"> </file>
 *  <file name="sample-thf-radio-group-translator/sample-thf-radio-group-translator.component.ts"> </file>
 * </example>
 *
 * <example name="thf-radio-group-translator-reactive-form" title="Totvs Radio Group - Translator Reactive Form">
 *  <file name="sample-thf-radio-group-translator-reactive-form/sample-thf-radio-group-translator-reactive-form.component.html"> </file>
 *  <file name="sample-thf-radio-group-translator-reactive-form/sample-thf-radio-group-translator-reactive-form.component.ts"> </file>
 * </example>
 *
 */
export class ThfRadioGroupComponent extends ThfRadioGroupBaseComponent {
    /**
     * @param {?} differs
     */
    constructor(differs) {
        super();
        this.differ = differs.find([]).create(null);
    }
    /**
     * @return {?}
     */
    ngDoCheck() {
        /** @type {?} */
        const change = this.differ.diff(this.options);
        if (change) {
            removeDuplicatedOptions(this.options);
        }
    }
    /**
     * @param {?} value
     * @param {?} disabled
     * @return {?}
     */
    eventClick(value, disabled) {
        if (!disabled) {
            this.changeValue(value);
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    getElementByValue(value) {
        return this.inputEl.nativeElement.querySelector(`input[value='${value}']`);
    }
    /**
     * @param {?} event
     * @param {?} value
     * @return {?}
     */
    onKeyUp(event, value) {
        /** @type {?} */
        const key = event.keyCode || event.which;
        if (this.isArrowKey(key)) {
            this.changeValue(value);
        }
    }
    /**
     * @private
     * @param {?} key
     * @return {?}
     */
    isArrowKey(key) {
        return key >= 37 && key <= 40;
    }
}
ThfRadioGroupComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-radio-group',
                template: "<thf-field-container\n  [t-help]=\"help\"\n  [t-label]=\"label\"\n  [t-optional]=\"!required && optional\">\n\n  <div class=\"thf-row thf-pt-1 thf-pb-1\" #inp>\n    <div *ngFor=\"let option of options\"\n      class=\"thf-radio-group-item thf-md-{{ mdColumns }} thf-lg-{{ columns }}\">\n\n      <input #input\n        class=\"thf-radio-group-input\"\n        type=\"radio\"\n        [attr.name]=\"name\"\n        [checked]=\"value === option.value\"\n        [class.thf-radio-group-input-checked]=\"value === option.value\"\n        [disabled]=\"option.disabled === true || disabled\"\n        [readonly]=\"readonly\"\n        [required]=\"required\"\n        [value]=\"option.value\"\n        (keyup)=\"onKeyUp($event, option.value)\">\n        <label\n          class=\"thf-radio-group-label\"\n          [class.thf-clickable]=\"!input.disabled\"\n          [for]=\"name\"\n          (click)=\"eventClick(option.value, option.disabled === true || disabled)\">\n        {{ option.label }}\n      </label>\n    </div>\n  </div>\n  <thf-field-container-bottom></thf-field-container-bottom>\n</thf-field-container>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => ThfRadioGroupComponent)),
                        multi: true,
                    },
                    {
                        provide: NG_VALIDATORS,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => ThfRadioGroupComponent)),
                        multi: true,
                    }
                ]
            }] }
];
/** @nocollapse */
ThfRadioGroupComponent.ctorParameters = () => [
    { type: IterableDiffers }
];
ThfRadioGroupComponent.propDecorators = {
    label: [{ type: Input, args: ['t-label',] }],
    help: [{ type: Input, args: ['t-help',] }],
    inputEl: [{ type: ViewChild, args: ['inp', { read: ElementRef, static: true },] }]
};
if (false) {
    /**
     * Label do campo.
     * @type {?}
     */
    ThfRadioGroupComponent.prototype.label;
    /**
     * Texto de apoio do campo.
     * @type {?}
     */
    ThfRadioGroupComponent.prototype.help;
    /** @type {?} */
    ThfRadioGroupComponent.prototype.inputEl;
    /** @type {?} */
    ThfRadioGroupComponent.prototype.differ;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXJhZGlvLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZmllbGQvdGhmLXJhZGlvLWdyb3VwL3RoZi1yYWRpby1ncm91cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVcsVUFBVSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RyxPQUFPLEVBQUUsYUFBYSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFOUQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBOEM5RSxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsMEJBQTBCOzs7O0lBWXBFLFlBQVksT0FBd0I7UUFDbEMsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxTQUFTOztjQUNELE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQzdDLElBQUksTUFBTSxFQUFFO1lBQ1YsdUJBQXVCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ3ZDO0lBQ0gsQ0FBQzs7Ozs7O0lBRUQsVUFBVSxDQUFDLEtBQVUsRUFBRSxRQUFhO1FBQ2xDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDYixJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzs7Ozs7SUFFRCxpQkFBaUIsQ0FBQyxLQUFLO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLGdCQUFnQixLQUFLLElBQUksQ0FBQyxDQUFDO0lBQzdFLENBQUM7Ozs7OztJQUVELE9BQU8sQ0FBQyxLQUFvQixFQUFFLEtBQUs7O2NBQzNCLEdBQUcsR0FBRyxLQUFLLENBQUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxLQUFLO1FBRXhDLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUN4QixJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzs7Ozs7O0lBRU8sVUFBVSxDQUFDLEdBQVc7UUFDNUIsT0FBTyxHQUFHLElBQUksRUFBRSxJQUFJLEdBQUcsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQzs7O1lBNURGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixzbUNBQStDO2dCQUMvQyxTQUFTLEVBQUU7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjt3QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozt3QkFBQyxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsRUFBQzt3QkFDckQsS0FBSyxFQUFFLElBQUk7cUJBQ1o7b0JBQ0Q7d0JBQ0UsT0FBTyxFQUFFLGFBQWE7d0JBQ3RCLFdBQVcsRUFBRSxVQUFVOzs7d0JBQUMsR0FBRyxFQUFFLENBQUMsc0JBQXNCLEVBQUM7d0JBQ3JELEtBQUssRUFBRSxJQUFJO3FCQUNaO2lCQUNGO2FBQ0Y7Ozs7WUFsRDJELGVBQWU7OztvQkFzRHhFLEtBQUssU0FBQyxTQUFTO21CQUdmLEtBQUssU0FBQyxRQUFRO3NCQUVkLFNBQVMsU0FBQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Ozs7Ozs7SUFMbkQsdUNBQWlDOzs7OztJQUdqQyxzQ0FBK0I7O0lBRS9CLHlDQUF5RTs7SUFFekUsd0NBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIERvQ2hlY2ssIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIElucHV0LCBJdGVyYWJsZURpZmZlcnMsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdfVkFMSURBVE9SUywgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IHJlbW92ZUR1cGxpY2F0ZWRPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFRoZlJhZGlvR3JvdXBCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtcmFkaW8tZ3JvdXAtYmFzZS5jb21wb25lbnQnO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBUaGZSYWRpb0dyb3VwQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1yYWRpby1ncm91cC1iYXNpY1wiIHRpdGxlPVwiVG90dnMgUmFkaW8gR3JvdXAgQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1yYWRpby1ncm91cC1iYXNpYy9zYW1wbGUtdGhmLXJhZGlvLWdyb3VwLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1yYWRpby1ncm91cC1iYXNpYy9zYW1wbGUtdGhmLXJhZGlvLWdyb3VwLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtcmFkaW8tZ3JvdXAtYmFzaWMvc2FtcGxlLXRoZi1yYWRpby1ncm91cC1iYXNpYy5jb21wb25lbnQuZTJlLXNwZWMudHNcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXJhZGlvLWdyb3VwLWJhc2ljL3NhbXBsZS10aGYtcmFkaW8tZ3JvdXAtYmFzaWMuY29tcG9uZW50LnBvLnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLXJhZGlvLWdyb3VwLWxhYnNcIiB0aXRsZT1cIlRvdHZzIFJhZGlvIEdyb3VwIExhYnNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1yYWRpby1ncm91cC1sYWJzL3NhbXBsZS10aGYtcmFkaW8tZ3JvdXAtbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtcmFkaW8tZ3JvdXAtbGFicy9zYW1wbGUtdGhmLXJhZGlvLWdyb3VwLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLXJhZGlvLWdyb3VwLXRyYW5zbGF0b3JcIiB0aXRsZT1cIlRvdHZzIFJhZGlvIEdyb3VwIC0gVHJhbnNsYXRvclwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXJhZGlvLWdyb3VwLXRyYW5zbGF0b3Ivc2FtcGxlLXRoZi1yYWRpby1ncm91cC10cmFuc2xhdG9yLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1yYWRpby1ncm91cC10cmFuc2xhdG9yL3NhbXBsZS10aGYtcmFkaW8tZ3JvdXAtdHJhbnNsYXRvci5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtcmFkaW8tZ3JvdXAtdHJhbnNsYXRvci1yZWFjdGl2ZS1mb3JtXCIgdGl0bGU9XCJUb3R2cyBSYWRpbyBHcm91cCAtIFRyYW5zbGF0b3IgUmVhY3RpdmUgRm9ybVwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXJhZGlvLWdyb3VwLXRyYW5zbGF0b3ItcmVhY3RpdmUtZm9ybS9zYW1wbGUtdGhmLXJhZGlvLWdyb3VwLXRyYW5zbGF0b3ItcmVhY3RpdmUtZm9ybS5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtcmFkaW8tZ3JvdXAtdHJhbnNsYXRvci1yZWFjdGl2ZS1mb3JtL3NhbXBsZS10aGYtcmFkaW8tZ3JvdXAtdHJhbnNsYXRvci1yZWFjdGl2ZS1mb3JtLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtcmFkaW8tZ3JvdXAnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXJhZGlvLWdyb3VwLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUaGZSYWRpb0dyb3VwQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRoZlJhZGlvR3JvdXBDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFRoZlJhZGlvR3JvdXBDb21wb25lbnQgZXh0ZW5kcyBUaGZSYWRpb0dyb3VwQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIERvQ2hlY2sge1xuXG4gIC8qKiBMYWJlbCBkbyBjYW1wby4gKi9cbiAgQElucHV0KCd0LWxhYmVsJykgbGFiZWw/OiBzdHJpbmc7XG5cbiAgLyoqIFRleHRvIGRlIGFwb2lvIGRvIGNhbXBvLiAqL1xuICBASW5wdXQoJ3QtaGVscCcpIGhlbHA/OiBzdHJpbmc7XG5cbiAgQFZpZXdDaGlsZCgnaW5wJywge3JlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogdHJ1ZSB9KSBpbnB1dEVsOiBFbGVtZW50UmVmO1xuXG4gIGRpZmZlcjogYW55O1xuXG4gIGNvbnN0cnVjdG9yKGRpZmZlcnM6IEl0ZXJhYmxlRGlmZmVycykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5kaWZmZXIgPSBkaWZmZXJzLmZpbmQoW10pLmNyZWF0ZShudWxsKTtcbiAgfVxuXG4gIG5nRG9DaGVjaygpIHtcbiAgICBjb25zdCBjaGFuZ2UgPSB0aGlzLmRpZmZlci5kaWZmKHRoaXMub3B0aW9ucyk7XG4gICAgaWYgKGNoYW5nZSkge1xuICAgICAgcmVtb3ZlRHVwbGljYXRlZE9wdGlvbnModGhpcy5vcHRpb25zKTtcbiAgICB9XG4gIH1cblxuICBldmVudENsaWNrKHZhbHVlOiBhbnksIGRpc2FibGVkOiBhbnkpIHtcbiAgICBpZiAoIWRpc2FibGVkKSB7XG4gICAgICB0aGlzLmNoYW5nZVZhbHVlKHZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBnZXRFbGVtZW50QnlWYWx1ZSh2YWx1ZSkge1xuICAgIHJldHVybiB0aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKGBpbnB1dFt2YWx1ZT0nJHt2YWx1ZX0nXWApO1xuICB9XG5cbiAgb25LZXlVcChldmVudDogS2V5Ym9hcmRFdmVudCwgdmFsdWUpIHtcbiAgICBjb25zdCBrZXkgPSBldmVudC5rZXlDb2RlIHx8IGV2ZW50LndoaWNoO1xuXG4gICAgaWYgKHRoaXMuaXNBcnJvd0tleShrZXkpKSB7XG4gICAgICB0aGlzLmNoYW5nZVZhbHVlKHZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGlzQXJyb3dLZXkoa2V5OiBudW1iZXIpIHtcbiAgICByZXR1cm4ga2V5ID49IDM3ICYmIGtleSA8PSA0MDtcbiAgfVxuXG59XG4iXX0=