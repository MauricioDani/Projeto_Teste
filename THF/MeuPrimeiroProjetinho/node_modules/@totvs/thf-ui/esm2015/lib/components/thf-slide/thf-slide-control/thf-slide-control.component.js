/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente para a seta que controla a passagem de itens do `thf-slide`.
 */
export class ThfSlideControlComponent {
    constructor() {
        /**
         * Evento emitido ao clicar em um controle.
         */
        this.click = new EventEmitter();
    }
}
ThfSlideControlComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-slide-control',
                template: "<div class=\"thf-slide-control-{{control}}\">\n  <div class=\"thf-slide-arrow-circle\" (click)=\"click.emit();\">\n    <div class=\"thf-slide-arrow thf-slide-arrow-{{control}}\"></div>\n  </div>\n</div>\n"
            }] }
];
ThfSlideControlComponent.propDecorators = {
    control: [{ type: Input, args: ['t-control',] }],
    click: [{ type: Output, args: ['t-click',] }]
};
if (false) {
    /**
     * Tipo de controle que aceita os valores: 'previous' e 'next'.
     * @type {?}
     */
    ThfSlideControlComponent.prototype.control;
    /**
     * Evento emitido ao clicar em um controle.
     * @type {?}
     */
    ThfSlideControlComponent.prototype.click;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXNsaWRlLWNvbnRyb2wuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1zbGlkZS90aGYtc2xpZGUtY29udHJvbC90aGYtc2xpZGUtY29udHJvbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7O0FBYXZFLE1BQU0sT0FBTyx3QkFBd0I7SUFKckM7Ozs7UUFVcUIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFFckQsQ0FBQzs7O1lBWkEsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLHdOQUFpRDthQUNsRDs7O3NCQUlFLEtBQUssU0FBQyxXQUFXO29CQUdqQixNQUFNLFNBQUMsU0FBUzs7Ozs7OztJQUhqQiwyQ0FBb0M7Ozs7O0lBR3BDLHlDQUFtRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBwYXJhIGEgc2V0YSBxdWUgY29udHJvbGEgYSBwYXNzYWdlbSBkZSBpdGVucyBkbyBgdGhmLXNsaWRlYC5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLXNsaWRlLWNvbnRyb2wnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXNsaWRlLWNvbnRyb2wuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoZlNsaWRlQ29udHJvbENvbXBvbmVudCB7XG5cbiAgLyoqIFRpcG8gZGUgY29udHJvbGUgcXVlIGFjZWl0YSBvcyB2YWxvcmVzOiAncHJldmlvdXMnIGUgJ25leHQnLiAqL1xuICBASW5wdXQoJ3QtY29udHJvbCcpIGNvbnRyb2w6IHN0cmluZztcblxuICAvKiogRXZlbnRvIGVtaXRpZG8gYW8gY2xpY2FyIGVtIHVtIGNvbnRyb2xlLiAqL1xuICBAT3V0cHV0KCd0LWNsaWNrJykgY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxufVxuIl19