/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function ThfDynamicField() { }
if (false) {
    /**
     * Identificador
     * @type {?|undefined}
     */
    ThfDynamicField.prototype.key;
    /**
     * Nome de referência do campo.
     * @type {?}
     */
    ThfDynamicField.prototype.property;
    /**
     * Rótulo do campo exibido.
     * @type {?|undefined}
     */
    ThfDynamicField.prototype.label;
    /**
     * Tamanho de exibição do campo em telas.
     *
     * Deve ser usado o sistema de **grid** do THF (1 ... 12 colunas).
     *
     * > Esta propriedade é generica, aplica o valor em todos os tamanhos de telas.
     * @type {?|undefined}
     */
    ThfDynamicField.prototype.gridColumns;
    /**
     * Tamanho de exibição do campo em telas menores (sm).
     *
     * Deve ser usado o sistema de **grid** do THF (1 ... 12 colunas).
     *
     * > Esta propriedade sobrescreve o valor definido para o tamanho dela na `gridColumns`.
     *
     * \@default `12`
     * @type {?|undefined}
     */
    ThfDynamicField.prototype.gridSmColumns;
    /**
     * Tamanho de exibição do campo em telas médias (md).
     *
     * Deve ser usado o sistema de **grid** do THF (1 ... 12 colunas).
     *
     * > Esta propriedade sobrescreve o valor definido para o tamanho dela na `gridColumns`.
     *
     * \@default `6`
     * @type {?|undefined}
     */
    ThfDynamicField.prototype.gridMdColumns;
    /**
     * Tamanho de exibição do campo em telas grandes (lg).
     *
     * Deve ser usado o sistema de **grid** do THF (1 ... 12 colunas).
     *
     * > Esta propriedade sobrescreve o valor definido para o tamanho dela na `gridColumns`.
     *
     * \@default `4`
     * @type {?|undefined}
     */
    ThfDynamicField.prototype.gridLgColumns;
    /**
     * Tamanho de exibição do campo em telas extra grandes (xl).
     *
     * Deve ser usado o sistema de **grid** do THF (1 ... 12 colunas).
     *
     * > Esta propriedade sobrescreve o valor definido para o tamanho dela na `gridColumns`.
     *
     * \@default `3`
     * @type {?|undefined}
     */
    ThfDynamicField.prototype.gridXlColumns;
    /**
     * Indica se o campo será visível.
     *
     * \@default `true`
     * @type {?|undefined}
     */
    ThfDynamicField.prototype.visible;
    /**
     * Exibirá um divisor acima, utilizando o seu conteudo como título.
     * @type {?|undefined}
     */
    ThfDynamicField.prototype.divider;
    /**
     * Tipo do valor campo.
     *
     * Valores válidos:
     *
     * - `boolean`: Valores *booleanos*.
     * - `currency`: Valores monetários.
     * - `date`: Valores de datas.
     *  + Aceita os tipos **string** e **Date** padrão do Javascript,
     *  por exemplo: `'2017-11-28'` ou `new Date(2017, 10, 28)`.
     * - `dateTime`: Valor de data com horário.
     *  + Aceita o tipo _string_ no formato **ISO-8601** extendido **'yyyy-mm-ddThh:mm:ss+|-hh:mm'**
     * e o tipo **Date** padrão do Javascript, por exemplo: `'2017-11-28T00:00:00-02:00'` ou `new Date(2017, 10, 28)`.
     * - `number`: Valores numéricos.
     * - `string`: Textos.
     * - `time`: Valor do horário.
     *  + Aceita o tipo **string** nos formatos **'HH:mm:ss'** ou **'HH:mm:ss.ffffff'**, por exemplo: `'23:12:45'`.
     *
     * \@default `string`
     * @type {?|undefined}
     */
    ThfDynamicField.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWR5bmFtaWMtZmllbGQuaW50ZXJmYWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1keW5hbWljL3RoZi1keW5hbWljLWZpZWxkLmludGVyZmFjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUEscUNBZ0dDOzs7Ozs7SUE3RkMsOEJBQWM7Ozs7O0lBR2QsbUNBQWlCOzs7OztJQUdqQixnQ0FBZTs7Ozs7Ozs7O0lBU2Ysc0NBQXFCOzs7Ozs7Ozs7OztJQVdyQix3Q0FBdUI7Ozs7Ozs7Ozs7O0lBV3ZCLHdDQUF1Qjs7Ozs7Ozs7Ozs7SUFXdkIsd0NBQXVCOzs7Ozs7Ozs7OztJQVd2Qix3Q0FBdUI7Ozs7Ozs7SUFPdkIsa0NBQWtCOzs7OztJQUdsQixrQ0FBaUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFzQmpCLCtCQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRoZkR5bmFtaWNGaWVsZFR5cGUgfSBmcm9tICcuL3RoZi1keW5hbWljLWZpZWxkLXR5cGUuZW51bSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGhmRHluYW1pY0ZpZWxkIHtcblxuICAvKiogSWRlbnRpZmljYWRvciAqL1xuICBrZXk/OiBib29sZWFuO1xuXG4gIC8qKiBOb21lIGRlIHJlZmVyw6puY2lhIGRvIGNhbXBvLiAqL1xuICBwcm9wZXJ0eTogc3RyaW5nO1xuXG4gIC8qKiBSw7N0dWxvIGRvIGNhbXBvIGV4aWJpZG8uICovXG4gIGxhYmVsPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUYW1hbmhvIGRlIGV4aWJpw6fDo28gZG8gY2FtcG8gZW0gdGVsYXMuXG4gICAqXG4gICAqIERldmUgc2VyIHVzYWRvIG8gc2lzdGVtYSBkZSAqKmdyaWQqKiBkbyBUSEYgKDEgLi4uIDEyIGNvbHVuYXMpLlxuICAgKlxuICAgKiA+IEVzdGEgcHJvcHJpZWRhZGUgw6kgZ2VuZXJpY2EsIGFwbGljYSBvIHZhbG9yIGVtIHRvZG9zIG9zIHRhbWFuaG9zIGRlIHRlbGFzLlxuICAgKi9cbiAgZ3JpZENvbHVtbnM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRhbWFuaG8gZGUgZXhpYmnDp8OjbyBkbyBjYW1wbyBlbSB0ZWxhcyBtZW5vcmVzIChzbSkuXG4gICAqXG4gICAqIERldmUgc2VyIHVzYWRvIG8gc2lzdGVtYSBkZSAqKmdyaWQqKiBkbyBUSEYgKDEgLi4uIDEyIGNvbHVuYXMpLlxuICAgKlxuICAgKiA+IEVzdGEgcHJvcHJpZWRhZGUgc29icmVzY3JldmUgbyB2YWxvciBkZWZpbmlkbyBwYXJhIG8gdGFtYW5obyBkZWxhIG5hIGBncmlkQ29sdW1uc2AuXG4gICAqXG4gICAqIEBkZWZhdWx0IGAxMmBcbiAgICovXG4gIGdyaWRTbUNvbHVtbnM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRhbWFuaG8gZGUgZXhpYmnDp8OjbyBkbyBjYW1wbyBlbSB0ZWxhcyBtw6lkaWFzIChtZCkuXG4gICAqXG4gICAqIERldmUgc2VyIHVzYWRvIG8gc2lzdGVtYSBkZSAqKmdyaWQqKiBkbyBUSEYgKDEgLi4uIDEyIGNvbHVuYXMpLlxuICAgKlxuICAgKiA+IEVzdGEgcHJvcHJpZWRhZGUgc29icmVzY3JldmUgbyB2YWxvciBkZWZpbmlkbyBwYXJhIG8gdGFtYW5obyBkZWxhIG5hIGBncmlkQ29sdW1uc2AuXG4gICAqXG4gICAqIEBkZWZhdWx0IGA2YFxuICAgKi9cbiAgZ3JpZE1kQ29sdW1ucz86IG51bWJlcjtcblxuICAvKipcbiAgICogVGFtYW5obyBkZSBleGliacOnw6NvIGRvIGNhbXBvIGVtIHRlbGFzIGdyYW5kZXMgKGxnKS5cbiAgICpcbiAgICogRGV2ZSBzZXIgdXNhZG8gbyBzaXN0ZW1hIGRlICoqZ3JpZCoqIGRvIFRIRiAoMSAuLi4gMTIgY29sdW5hcykuXG4gICAqXG4gICAqID4gRXN0YSBwcm9wcmllZGFkZSBzb2JyZXNjcmV2ZSBvIHZhbG9yIGRlZmluaWRvIHBhcmEgbyB0YW1hbmhvIGRlbGEgbmEgYGdyaWRDb2x1bW5zYC5cbiAgICpcbiAgICogQGRlZmF1bHQgYDRgXG4gICAqL1xuICBncmlkTGdDb2x1bW5zPzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUYW1hbmhvIGRlIGV4aWJpw6fDo28gZG8gY2FtcG8gZW0gdGVsYXMgZXh0cmEgZ3JhbmRlcyAoeGwpLlxuICAgKlxuICAgKiBEZXZlIHNlciB1c2FkbyBvIHNpc3RlbWEgZGUgKipncmlkKiogZG8gVEhGICgxIC4uLiAxMiBjb2x1bmFzKS5cbiAgICpcbiAgICogPiBFc3RhIHByb3ByaWVkYWRlIHNvYnJlc2NyZXZlIG8gdmFsb3IgZGVmaW5pZG8gcGFyYSBvIHRhbWFuaG8gZGVsYSBuYSBgZ3JpZENvbHVtbnNgLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgM2BcbiAgICovXG4gIGdyaWRYbENvbHVtbnM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEluZGljYSBzZSBvIGNhbXBvIHNlcsOhIHZpc8OtdmVsLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgdHJ1ZWBcbiAgICovXG4gIHZpc2libGU/OiBib29sZWFuO1xuXG4gIC8qKiBFeGliaXLDoSB1bSBkaXZpc29yIGFjaW1hLCB1dGlsaXphbmRvIG8gc2V1IGNvbnRldWRvIGNvbW8gdMOtdHVsby4gKi9cbiAgZGl2aWRlcj86IHN0cmluZztcblxuICAvKipcbiAgICogVGlwbyBkbyB2YWxvciBjYW1wby5cbiAgICpcbiAgICogVmFsb3JlcyB2w6FsaWRvczpcbiAgICpcbiAgICogLSBgYm9vbGVhbmA6IFZhbG9yZXMgKmJvb2xlYW5vcyouXG4gICAqIC0gYGN1cnJlbmN5YDogVmFsb3JlcyBtb25ldMOhcmlvcy5cbiAgICogLSBgZGF0ZWA6IFZhbG9yZXMgZGUgZGF0YXMuXG4gICAqICArIEFjZWl0YSBvcyB0aXBvcyAqKnN0cmluZyoqIGUgKipEYXRlKiogcGFkcsOjbyBkbyBKYXZhc2NyaXB0LFxuICAgKiAgcG9yIGV4ZW1wbG86IGAnMjAxNy0xMS0yOCdgIG91IGBuZXcgRGF0ZSgyMDE3LCAxMCwgMjgpYC5cbiAgICogLSBgZGF0ZVRpbWVgOiBWYWxvciBkZSBkYXRhIGNvbSBob3LDoXJpby5cbiAgICogICsgQWNlaXRhIG8gdGlwbyBfc3RyaW5nXyBubyBmb3JtYXRvICoqSVNPLTg2MDEqKiBleHRlbmRpZG8gKioneXl5eS1tbS1kZFRoaDptbTpzcyt8LWhoOm1tJyoqXG4gICAqIGUgbyB0aXBvICoqRGF0ZSoqIHBhZHLDo28gZG8gSmF2YXNjcmlwdCwgcG9yIGV4ZW1wbG86IGAnMjAxNy0xMS0yOFQwMDowMDowMC0wMjowMCdgIG91IGBuZXcgRGF0ZSgyMDE3LCAxMCwgMjgpYC5cbiAgICogLSBgbnVtYmVyYDogVmFsb3JlcyBudW3DqXJpY29zLlxuICAgKiAtIGBzdHJpbmdgOiBUZXh0b3MuXG4gICAqIC0gYHRpbWVgOiBWYWxvciBkbyBob3LDoXJpby5cbiAgICogICsgQWNlaXRhIG8gdGlwbyAqKnN0cmluZyoqIG5vcyBmb3JtYXRvcyAqKidISDptbTpzcycqKiBvdSAqKidISDptbTpzcy5mZmZmZmYnKiosIHBvciBleGVtcGxvOiBgJzIzOjEyOjQ1J2AuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBzdHJpbmdgXG4gICAqL1xuICB0eXBlPzogc3RyaW5nIHwgVGhmRHluYW1pY0ZpZWxkVHlwZTtcblxufVxuIl19