/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ThfControlPositionService } from '../../../services/thf-control-position/thf-control-position.service';
/**
 * \@docsPrivate
 *
 * \@usedBy ThfToolbarComponent
 *
 * \@description
 *
 * O componente `thf-toolbar-notification` tem como objetivo notificar o usuário de novas ações da aplicação que necessitam de atenção,
 * como por exemplo um alerta de nova mensagem.
 *
 * O mesmo também permite que a cada nova notificação seja incrementado e exibido, ou não, este número em uma *tag* ao lado do
 * ícone de notificações.
 */
export class ThfToolbarNotificationComponent {
    constructor() {
        this._notificationNumber = 0;
    }
    /**
     * Define o número de notificações.
     * @param {?} value
     * @return {?}
     */
    set notificationNumber(value) {
        this._notificationNumber = Number.isInteger(value) ? value : 0;
    }
    /**
     * @return {?}
     */
    get notificationNumber() {
        return this._notificationNumber;
    }
}
ThfToolbarNotificationComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-toolbar-notification',
                template: "<div class=\"thf-toolbar-notification thf-clickable\" (click)=\"popup.toggle()\">\n  <span #notification class=\"thf-icon thf-icon-notification thf-toolbar-icon\"></span>\n  <div *ngIf=\"notificationNumber\" class=\"thf-toolbar-notification-badge\">\n    {{ notificationNumber }}\n  </div>\n</div>\n\n<thf-popup #popup\n  [t-actions]=\"notificationActions\"\n  [t-target]=\"notification\">\n</thf-popup>\n",
                providers: [ThfControlPositionService]
            }] }
];
ThfToolbarNotificationComponent.propDecorators = {
    notificationActions: [{ type: Input, args: ['t-notification-actions',] }],
    notificationNumber: [{ type: Input, args: ['t-notification-number',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfToolbarNotificationComponent.prototype._notificationNumber;
    /**
     * Define uma lista de ações.
     * @type {?}
     */
    ThfToolbarNotificationComponent.prototype.notificationActions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXRvb2xiYXItbm90aWZpY2F0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtdG9vbGJhci90aGYtdG9vbGJhci1ub3RpZmljYXRpb24vdGhmLXRvb2xiYXItbm90aWZpY2F0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0scUVBQXFFLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FBc0JoSCxNQUFNLE9BQU8sK0JBQStCO0lBTDVDO1FBT1Usd0JBQW1CLEdBQVksQ0FBQyxDQUFDO0lBYzNDLENBQUM7Ozs7OztJQVJDLElBQW9DLGtCQUFrQixDQUFDLEtBQWE7UUFDbEUsSUFBSSxDQUFDLG1CQUFtQixHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pFLENBQUM7Ozs7SUFFRCxJQUFJLGtCQUFrQjtRQUNwQixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztJQUNsQyxDQUFDOzs7WUFuQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwwQkFBMEI7Z0JBQ3BDLGlhQUF3RDtnQkFDeEQsU0FBUyxFQUFFLENBQUUseUJBQXlCLENBQUU7YUFDekM7OztrQ0FNRSxLQUFLLFNBQUMsd0JBQXdCO2lDQUc5QixLQUFLLFNBQUMsdUJBQXVCOzs7Ozs7O0lBTjlCLDhEQUF5Qzs7Ozs7SUFHekMsOERBQStFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaGZDb250cm9sUG9zaXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvdGhmLWNvbnRyb2wtcG9zaXRpb24vdGhmLWNvbnRyb2wtcG9zaXRpb24uc2VydmljZSc7XG5cbmltcG9ydCB7IFRoZlRvb2xiYXJBY3Rpb24gfSBmcm9tICcuLi90aGYtdG9vbGJhci1hY3Rpb24uaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAdXNlZEJ5IFRoZlRvb2xiYXJDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPIGNvbXBvbmVudGUgYHRoZi10b29sYmFyLW5vdGlmaWNhdGlvbmAgdGVtIGNvbW8gb2JqZXRpdm8gbm90aWZpY2FyIG8gdXN1w6FyaW8gZGUgbm92YXMgYcOnw7VlcyBkYSBhcGxpY2HDp8OjbyBxdWUgbmVjZXNzaXRhbSBkZSBhdGVuw6fDo28sXG4gKiBjb21vIHBvciBleGVtcGxvIHVtIGFsZXJ0YSBkZSBub3ZhIG1lbnNhZ2VtLlxuICpcbiAqIE8gbWVzbW8gdGFtYsOpbSBwZXJtaXRlIHF1ZSBhIGNhZGEgbm92YSBub3RpZmljYcOnw6NvIHNlamEgaW5jcmVtZW50YWRvIGUgZXhpYmlkbywgb3UgbsOjbywgZXN0ZSBuw7ptZXJvIGVtIHVtYSAqdGFnKiBhbyBsYWRvIGRvXG4gKiDDrWNvbmUgZGUgbm90aWZpY2HDp8O1ZXMuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi10b29sYmFyLW5vdGlmaWNhdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtdG9vbGJhci1ub3RpZmljYXRpb24uY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFsgVGhmQ29udHJvbFBvc2l0aW9uU2VydmljZSBdXG59KVxuZXhwb3J0IGNsYXNzIFRoZlRvb2xiYXJOb3RpZmljYXRpb25Db21wb25lbnQge1xuXG4gIHByaXZhdGUgX25vdGlmaWNhdGlvbk51bWJlcj86IG51bWJlciA9IDA7XG5cbiAgLyoqIERlZmluZSB1bWEgbGlzdGEgZGUgYcOnw7Vlcy4gKi9cbiAgQElucHV0KCd0LW5vdGlmaWNhdGlvbi1hY3Rpb25zJykgbm90aWZpY2F0aW9uQWN0aW9ucz86IEFycmF5PFRoZlRvb2xiYXJBY3Rpb24+O1xuXG4gIC8qKiBEZWZpbmUgbyBuw7ptZXJvIGRlIG5vdGlmaWNhw6fDtWVzLiAqL1xuICBASW5wdXQoJ3Qtbm90aWZpY2F0aW9uLW51bWJlcicpIHNldCBub3RpZmljYXRpb25OdW1iZXIodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX25vdGlmaWNhdGlvbk51bWJlciA9IE51bWJlci5pc0ludGVnZXIodmFsdWUpID8gdmFsdWUgOiAwO1xuICB9XG5cbiAgZ2V0IG5vdGlmaWNhdGlvbk51bWJlcigpIHtcbiAgICByZXR1cm4gdGhpcy5fbm90aWZpY2F0aW9uTnVtYmVyO1xuICB9XG5cbn1cbiJdfQ==