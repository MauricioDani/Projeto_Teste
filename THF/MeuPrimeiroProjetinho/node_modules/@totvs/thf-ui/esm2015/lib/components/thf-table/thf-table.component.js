/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ContentChild, ElementRef, IterableDiffers, QueryList, Renderer2, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { Router } from '@angular/router';
import { capitalizeFirstLetter, convertToBoolean } from '../../utils/util';
import { ThfDateService } from '../../services/thf-date/thf-date.service';
import { ThfPopupComponent } from '../thf-popup/thf-popup.component';
import { ThfTableBaseComponent } from './thf-table-base.component';
import { ThfTableRowTemplateDirective } from './thf-table-row-template/thf-table-row-template.directive';
/**
 * \@docsExtends ThfTableBaseComponent
 *
 * \@example
 *
 * <example name="thf-table-basic" title="Totvs Table Basic">
 *  <file name="sample-thf-table-basic/sample-thf-table-basic.component.ts"> </file>
 *  <file name="sample-thf-table-basic/sample-thf-table-basic.component.html"> </file>
 * </example>
 *
 * <example name="thf-table-labs" title="Totvs Table Labs">
 *  <file name="sample-thf-table-labs/sample-thf-table-labs.component.ts"> </file>
 *  <file name="sample-thf-table-labs/sample-thf-table-labs.component.html"> </file>
 *  <file name="sample-thf-table-labs/sample-thf-table-labs.component.e2e-spec.ts"> </file>
 *  <file name="sample-thf-table-labs/sample-thf-table-labs.component.po.ts"> </file>
 *  <file name="sample-thf-table-labs/sample-thf-table-labs.service.ts"> </file>
 * </example>
 *
 * <example name="thf-table-transport" title="Totvs Table - Transport">
 *  <file name="sample-thf-table-transport/sample-thf-table-transport.component.ts"> </file>
 *  <file name="sample-thf-table-transport/sample-thf-table-transport.component.html"> </file>
 *  <file name="sample-thf-table-transport/sample-thf-table-transport.service.ts"> </file>
 * </example>
 *
 * <example name="thf-table-airfare" title="Totvs Table - Airfare">
 *  <file name="sample-thf-table-airfare/sample-thf-table-airfare.component.ts"> </file>
 *  <file name="sample-thf-table-airfare/sample-thf-table-airfare.component.html"> </file>
 *  <file name="sample-thf-table-airfare/sample-thf-table-airfare.service.ts"> </file>
 * </example>
 *
 * <example name="thf-table-components" title="Totvs Table - Thf Field Components">
 *  <file name="sample-thf-table-components/sample-thf-table-components.component.ts"> </file>
 *  <file name="sample-thf-table-components/sample-thf-table-components.component.html"> </file>
 * </example>
 */
export class ThfTableComponent extends ThfTableBaseComponent {
    /**
     * @param {?} thfDate
     * @param {?} differs
     * @param {?} viewRef
     * @param {?} renderer
     * @param {?} changeDetector
     * @param {?} decimalPipe
     * @param {?} router
     */
    constructor(thfDate, differs, viewRef, renderer, changeDetector, decimalPipe, router) {
        super(thfDate);
        this.changeDetector = changeDetector;
        this.decimalPipe = decimalPipe;
        this.router = router;
        this.tableOpacity = 0;
        this.initialized = false;
        this.visibleElement = false;
        this.parentRef = viewRef['_view']['component'];
        this.differ = differs.find([]).create(null);
        // TODO: #5550 ao remover este listener, no portal, quando as colunas forem fixas não sofrem
        // alteração de largura, pois o ngDoCheck não é executado.
        this.clickListener = renderer.listen('document', 'click', (/**
         * @return {?}
         */
        () => { }));
        this.resizeListener = renderer.listen('window', 'resize', (/**
         * @param {?} event
         * @return {?}
         */
        (event) => {
            this.debounceResize();
        }));
    }
    /**
     * @return {?}
     */
    get detailHideSelect() {
        /** @type {?} */
        const masterDetail = this.getColumnMasterDetail();
        return masterDetail && masterDetail.detail ? masterDetail.detail.hideSelect : false;
    }
    /**
     * @return {?}
     */
    get firstAction() {
        return this.visibleActions && this.visibleActions[0];
    }
    /**
     * @return {?}
     */
    get hasRowTemplate() {
        return !!this.tableRowTemplate;
    }
    /**
     * @return {?}
     */
    get visibleActions() {
        return this.actions && this.actions.filter((/**
         * @param {?} action
         * @return {?}
         */
        action => action.visible !== false));
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.initialized = true;
        if (!this.container) {
            this.hideContainer();
        }
    }
    /**
     * @return {?}
     */
    ngDoCheck() {
        this.checkChangesItems();
        this.verifyCalculateHeightTableContainer();
        // Permite que os cabeçalhos sejam calculados na primeira vez que o componente torna-se visível,
        // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.
        if (this.tableWrapperElement.nativeElement.offsetWidth && !this.visibleElement && this.initialized) {
            this.debounceResize();
            this.visibleElement = true;
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.removeListeners();
    }
    /**
     * @param {?} row
     * @param {?} column
     * @return {?}
     */
    checkDisabled(row, column) {
        return column.disabled ? column.disabled(row) : false;
    }
    /**
     * @param {?} row
     * @param {?} tableAction
     * @return {?}
     */
    executeTableAction(row, tableAction) {
        if (!row.disabled && !this.validateTableAction(row, tableAction)) {
            tableAction.action.call(this.parentRef, row);
            this.toggleRowAction(row);
        }
    }
    /**
     * @return {?}
     */
    columnCountForMasterDetail() {
        return (this.getMainColumns().length + 1) + (this.actions.length > 0 ? 1 : 0) + (this.checkbox ? 1 : 0);
    }
    /**
     * @return {?}
     */
    columnCount() {
        return (this.getMainColumns().length +
            (this.actions.length > 0 ? 1 : 0) +
            (this.checkbox ? 1 : 0) +
            (!this.hideDetail && this.getColumnMasterDetail() !== undefined ? 1 : 0));
    }
    /**
     * @param {?} value
     * @param {?} format
     * @return {?}
     */
    formatNumber(value, format) {
        if (!format) {
            return value;
        }
        return this.decimalPipe.transform(value, format);
    }
    /**
     * @param {?} row
     * @param {?} subtitleColumn
     * @return {?}
     */
    getSubtitleColumn(row, subtitleColumn) {
        return subtitleColumn.subtitles.find((/**
         * @param {?} subtitleItem
         * @return {?}
         */
        subtitleItem => row[subtitleColumn.property] === subtitleItem.value));
    }
    /**
     * @param {?} rowValue
     * @param {?} columnBoolean
     * @return {?}
     */
    getBooleanLabel(rowValue, columnBoolean) {
        if (rowValue || rowValue === false || rowValue === 0) {
            rowValue = convertToBoolean(rowValue);
            if (columnBoolean.boolean) {
                return rowValue ? columnBoolean.boolean.trueLabel || 'Sim' : columnBoolean.boolean.falseLabel || 'Não';
            }
            else {
                return rowValue ? 'Sim' : 'Não';
            }
        }
        return rowValue;
    }
    /**
     * @param {?} row
     * @param {?} columnIcon
     * @return {?}
     */
    getColumnIcons(row, columnIcon) {
        /** @type {?} */
        const columnValues = row[columnIcon.property];
        if (columnIcon.icons) {
            if (columnValues instanceof Array) {
                return this.mergeCustomIcons(columnValues, columnIcon.icons);
            }
            if (typeof columnValues === 'string') {
                /** @type {?} */
                const customIcon = columnIcon.icons.find((/**
                 * @param {?} icon
                 * @return {?}
                 */
                icon => columnValues === icon.value));
                if (customIcon) {
                    return [customIcon];
                }
            }
        }
        return columnValues;
    }
    /**
     * @param {?} row
     * @param {?} columnLabel
     * @return {?}
     */
    getColumnLabel(row, columnLabel) {
        return columnLabel.labels.find((/**
         * @param {?} labelItem
         * @return {?}
         */
        labelItem => row[columnLabel.property] === labelItem.value));
    }
    /**
     * @param {?} column
     * @return {?}
     */
    getColumnTitleLabel(column) {
        return column.label || capitalizeFirstLetter(column.property);
    }
    /**
     * @return {?}
     */
    verifyWidthColumnsPixels() {
        /** @type {?} */
        const columns = this.getMainColumns();
        return columns.length ? columns.every((/**
         * @param {?} column
         * @return {?}
         */
        column => column.width && column.width.includes('px'))) : false;
    }
    /**
     * @return {?}
     */
    calculateWidthHeaders() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            if (this.height) {
                this.headersTable.forEach((/**
                 * @param {?} header
                 * @return {?}
                 */
                header => {
                    /** @type {?} */
                    const divHeader = header.nativeElement.querySelector('.thf-table-header-fixed-inner');
                    if (divHeader) {
                        divHeader.style.width = `${header.nativeElement.offsetWidth}px`;
                    }
                }));
            }
        }));
    }
    /**
     * @param {?} row
     * @return {?}
     */
    containsMasterDetail(row) {
        return row[this.getNameColumnDetail()] && row[this.getNameColumnDetail()].length;
    }
    /**
     * @param {?} row
     * @param {?} index
     * @return {?}
     */
    isShowRowTemplate(row, index) {
        if (this.tableRowTemplate && this.tableRowTemplate.thfTableRowTemplateShow) {
            return this.tableRowTemplate.thfTableRowTemplateShow(row, index);
        }
        return true;
    }
    /**
     * @param {?} row
     * @return {?}
     */
    isShowMasterDetail(row) {
        return !this.hideDetail &&
            this.getNameColumnDetail() &&
            row.$showDetail &&
            this.containsMasterDetail(row) &&
            !this.hasRowTemplate;
    }
    /**
     * @param {?} event
     * @param {?=} column
     * @param {?=} row
     * @return {?}
     */
    tooltipMouseEnter(event, column, row) {
        this.tooltipText = undefined;
        if (this.hideTextOverflow &&
            event.target.offsetWidth < event.target.scrollWidth &&
            event.target.innerText.trim()) {
            return this.tooltipText = event.target.innerText;
        }
        if (column) {
            this.checkingIfColumnHasTooltip(column, row);
        }
    }
    /**
     * @return {?}
     */
    tooltipMouseLeave() {
        this.tooltipText = undefined;
    }
    /**
     * @return {?}
     */
    verifyChangeHeightInFooter() {
        return this.footerHeight !== this.getHeightTableFooter();
    }
    /**
     * @return {?}
     */
    verifyCalculateHeightTableContainer() {
        if (this.height && this.verifyChangeHeightInFooter()) {
            this.footerHeight = this.getHeightTableFooter();
            this.calculateHeightTableContainer(this.height);
        }
    }
    /**
     * @param {?} height
     * @return {?}
     */
    calculateHeightTableContainer(height) {
        /** @type {?} */
        const value = parseFloat(height);
        this.heightTableContainer = value ? (value - this.getHeightTableFooter()) : undefined;
        this.setTableOpacity(1);
        this.changeDetector.detectChanges();
    }
    /**
     * @param {?} row
     * @param {?} targetRef
     * @return {?}
     */
    togglePopup(row, targetRef) {
        this.popupTarget = targetRef;
        this.changeDetector.detectChanges();
        this.thfPopupComponent.toggle(row);
    }
    /**
     * @protected
     * @param {?} container
     * @return {?}
     */
    showContainer(container) {
        /** @type {?} */
        const containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;
        containerClassList.add('thf-container');
        container === 'border' ? containerClassList.add('thf-container-no-shadow') : containerClassList.remove('thf-container-no-shadow');
    }
    /**
     * @private
     * @return {?}
     */
    checkChangesItems() {
        /** @type {?} */
        const changesItems = this.differ.diff(this.items);
        if (changesItems && this.selectAll) {
            this.selectAll = null;
        }
        if (changesItems && !this.hasColumns() && this.hasItems()) {
            this.columns = this.getDefaultColumns(this.items[0]);
        }
    }
    /**
     * @private
     * @param {?} column
     * @param {?} row
     * @return {?}
     */
    checkingIfColumnHasTooltip(column, row) {
        if (column.type === 'link' && column.tooltip && !this.checkDisabled(row, column)) {
            return this.tooltipText = column.tooltip;
        }
        if (column.type === 'label') {
            /** @type {?} */
            const columnLabel = this.getColumnLabel(row, column);
            return this.tooltipText = columnLabel.tooltip;
        }
    }
    /**
     * @private
     * @return {?}
     */
    getHeightTableFooter() {
        return this.tableFooterElement ? this.tableFooterElement.nativeElement.offsetHeight : 0;
    }
    /**
     * @private
     * @return {?}
     */
    hideContainer() {
        /** @type {?} */
        const containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;
        containerClassList.remove('thf-container');
    }
    /**
     * @private
     * @param {?} columnValues
     * @param {?} customIcons
     * @return {?}
     */
    mergeCustomIcons(columnValues, customIcons) {
        /** @type {?} */
        const icons = [];
        columnValues.forEach((/**
         * @param {?} columnValue
         * @return {?}
         */
        columnValue => {
            /** @type {?} */
            const foundCustomIcon = customIcons.find((/**
             * @param {?} customIcon
             * @return {?}
             */
            customIcon => columnValue === customIcon.icon || columnValue === customIcon.value));
            foundCustomIcon ? icons.push(foundCustomIcon) : icons.push(columnValue);
        }));
        return icons;
    }
    /**
     * @private
     * @param {?} row
     * @param {?} tableAction
     * @return {?}
     */
    validateTableAction(row, tableAction) {
        if (typeof tableAction.disabled === 'function') {
            return tableAction.disabled.call(this.parentRef, row);
        }
        else {
            return tableAction.disabled;
        }
    }
    /**
     * @private
     * @return {?}
     */
    debounceResize() {
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout((/**
         * @return {?}
         */
        () => {
            this.calculateWidthHeaders();
            // show the table
            this.setTableOpacity(1);
        }));
    }
    /**
     * @private
     * @return {?}
     */
    removeListeners() {
        if (this.resizeListener) {
            this.resizeListener();
        }
        if (this.clickListener) {
            this.clickListener();
        }
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    setTableOpacity(value) {
        this.tableOpacity = value;
    }
}
ThfTableComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-table',
                template: "<thf-container #tableContainer t-no-padding>\n  <div [class.thf-table-container-relative]=\"loading\">\n    <div *ngIf=\"loading\" class=\"thf-table-overlay\">\n      <thf-loading class=\"thf-table-overlay-content\" [t-text]=\"literals.loadingData\"></thf-loading>\n    </div>\n\n    <div class=\"thf-table-main-container\">\n      <div #tableWrapper\n        class=\"thf-table-wrapper\"\n        [class.thf-table-header-fixed-columns-pixels]=\"verifyWidthColumnsPixels()\"\n        [style.opacity]=\"tableOpacity\">\n\n        <div class=\"thf-table-container\" *ngIf=\"height\" [style.height.px]=\"heightTableContainer\">\n          <div class=\"thf-table-header-fixed thf-table-header\"></div>\n          <div class=\"thf-table-container-fixed-inner\">\n            <ng-container *ngTemplateOutlet=\"tableTemplate\"></ng-container>\n          </div>\n        </div>\n\n        <div *ngIf=\"!height\">\n          <ng-container *ngTemplateOutlet=\"tableTemplate\"></ng-container>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"thf-table-footer\" *ngIf=\"hasItems() && getSubtitleColumns().length\">\n    <div *ngFor=\"let column of getSubtitleColumns()\">\n      <thf-table-subtitle-footer [t-literals]=\"literals\" [t-subtitles]=\"column.subtitles\"></thf-table-subtitle-footer>\n    </div>\n  </div>\n</thf-container>\n\n<div class=\"thf-row thf-table-footer-show-more\" [class.thf-invisible]=\"showMore.observers.length === 0\" #tableFooter>\n  <thf-button\n    class=\"thf-offset-xl-4 thf-offset-lg-4 thf-offset-md-3 thf-lg-4 thf-md-6\"\n    [t-disabled]=\"showMoreDisabled\"\n    [t-label]=\"literals.loadMoreData\"\n    (t-click)=\"onShowMore()\">\n  </thf-button>\n</div>\n\n<ng-template #tableTemplate>\n  <table class=\"thf-table\"\n    [class.thf-table-striped]=\"striped\"\n    [class.thf-table-layout-fixed]=\"hideTextOverflow\">\n    <thead>\n      <tr [class.thf-table-header]=\"!height\">\n        <th *ngIf=\"checkbox && hasItems()\" class=\"thf-table-column-checkbox\">\n          <div [class.thf-table-header-fixed-inner]=\"height\">\n            <input *ngIf=\"!hideSelectAll\" type=\"checkbox\" class=\"thf-table-checkbox\"\n            [class.thf-table-checkbox-checked]=\"selectAll\"\n            [class.thf-table-checkbox-indeterminate]=\"selectAll === null\">\n            <label *ngIf=\"!hideSelectAll\" class=\"thf-table-checkbox-label thf-clickable\" (click)=\"selectAllRows()\"></label>\n          </div>\n        </th>\n        <th *ngIf=\"hasItems() && !hideDetail && getColumnMasterDetail() !== undefined || hasRowTemplate\"\n          class=\"thf-table-header-column thf-table-header-master-detail\">\n        </th>\n        <th *ngIf=\"!hasColumns()\" class=\"thf-table-header-column thf-text-center\">{{ literals.noColumns }}</th>\n        <th *ngFor=\"let column of getMainColumns(); let i = index\" #headersTable\n          class=\"thf-table-header-ellipsis\"\n          [style.width]=\"column.width\" [style.max-width]=\"column.width\" [style.min-width]=\"column.width\"\n          [class.thf-clickable]=\"sort\"\n          [class.thf-table-column-right]= \"column.type === 'currency' || column.type === 'number'\"\n          [class.thf-table-header-subtitle]=\"column.type === 'subtitle'\"\n          (click)=\"sortColumn(column)\">\n            <div *ngIf=\"height\" class=\"thf-table-header-fixed-inner\">\n              <ng-container *ngTemplateOutlet=\"contentHeaderTemplate\"></ng-container>\n            </div>\n            <div *ngIf=\"!height\">\n              <ng-container *ngTemplateOutlet=\"contentHeaderTemplate\"></ng-container>\n            </div>\n            <ng-template #contentHeaderTemplate>\n              <span *ngIf=\"sort\"\n                [class.thf-table-header-icon-unselected]= \"sortedColumn?.property !== column\"\n                [class.thf-table-header-icon-descending]= \"sortedColumn?.property === column && sortedColumn.ascending\"\n                [class.thf-table-header-icon-ascending]= \"sortedColumn?.property === column && !sortedColumn.ascending\">\n              </span>\n              <span\n                class=\"thf-table-header-ellipsis thf-table-header-block\"\n                [t-tooltip]=\"tooltipText\"\n                (mouseenter)=\"tooltipMouseEnter($event)\"\n                (mouseleave)=\"tooltipMouseLeave()\">\n                {{ getColumnTitleLabel(column) }}\n              </span>\n            </ng-template>\n        </th>\n        <th *ngIf=\"visibleActions.length > 1 && hasItems()\" class=\"thf-table-header-action\"></th>\n        <th *ngIf=\"visibleActions.length === 1 && hasItems()\" class=\"thf-table-header-single-action\"></th>\n      </tr>\n    </thead>\n\n    <tbody class=\"thf-table-group-row\" *ngIf=\"!hasItems()\">\n      <tr class=\"thf-table-row\">\n        <td [colSpan]=\"columnCount()\" class=\"thf-table-no-data thf-text-center\">\n          <span> {{ literals.noData }} </span>\n        </td>\n      </tr>\n    </tbody>\n\n    <tbody class=\"thf-table-group-row\" *ngFor=\"let row of items, let rowIndex = index;\">\n      <tr class=\"thf-table-row\" [class.thf-table-row-active]=\"row.$selected || row.$selected === null && checkbox\">\n        <td *ngIf=\"checkbox\" class=\"thf-table-column thf-table-column-checkbox\">\n          <ng-container *ngIf=\"singleSelect; then inputRadio; else inputCheckbox\"> </ng-container>\n\n          <ng-template #inputRadio>\n            <input type=\"radio\" class=\"thf-radio-group-input\" [class.thf-radio-group-input-checked]=\"row.$selected\">\n            <label class=\"thf-radio-group-label thf-clickable\" (click)=\"checkbox ? selectRow(row) : 'javascript:;'\"></label>\n          </ng-template>\n\n          <ng-template #inputCheckbox>\n            <input type=\"checkbox\" class=\"thf-table-checkbox\" [class.thf-table-checkbox-checked]=\"row.$selected\">\n            <label class=\"thf-table-checkbox-label thf-clickable\" (click)=\"checkbox ? selectRow(row) : 'javascript:;'\"></label>\n          </ng-template>\n\n        </td>\n        <td\n          *ngIf=\"(getColumnMasterDetail() !== undefined) && !hideDetail || hasRowTemplate\"\n          (click)=\"row.$showDetail = !row.$showDetail\"\n          class=\"thf-table-column-detail-toggle\">\n          <span\n            *ngIf=\"(containsMasterDetail(row) && !hasRowTemplate) || isShowRowTemplate(row, rowIndex) && hasRowTemplate\"\n            [class.thf-icon-arrow-up]=\"row.$showDetail\"\n            [class.thf-icon-arrow-down]=\"!row.$showDetail\"\n            class=\"thf-icon thf-clickable\">\n          </span>\n        </td>\n\n        <td *ngFor=\"let column of getMainColumns(), let columnIndex = index;\"\n          [style.width]=\"column.width\" [style.max-width]=\"column.width\" [style.min-width]=\"column.width\"\n          [class.thf-table-column]=\"column.type !== 'icon'\"\n          [class.thf-table-column-right]=\"column.type == 'currency' || column.type == 'number'\"\n          [class.thf-table-column-center]=\"column.type === 'subtitle'\"\n          [class.thf-table-column-icons]=\"column.type === 'icon'\"\n          [ngClass]=\"getClassColor(row, column)\"\n          (click)=\"checkbox ? selectRow(row) : 'javascript:;'\">\n          <div \n            class=\"thf-table-column-cell\"\n            [class.thf-table-body-ellipsis]=\"hideTextOverflow\"\n            [ngSwitch]=\"column.type\"\n            [t-tooltip]=\"tooltipText\"\n            (mouseenter)=\"tooltipMouseEnter($event, column, row)\"\n            (mouseleave)=\"tooltipMouseLeave()\">\n            <span *ngSwitchCase=\"'boolean'\">{{ getBooleanLabel(row[column.property], column) }}</span>\n            <span *ngSwitchCase=\"'currency'\">{{ row[column.property] | currency:column.format:'symbol':'1.2-2' }}</span>\n            <span *ngSwitchCase=\"'date'\" >{{ row[column.property] | date: column.format || 'dd/MM/yyyy' }}</span>\n            <span *ngSwitchCase=\"'time'\" >{{ row[column.property] | thf_time: column.format || 'HH:mm:ss.ffffff' }}</span>\n            <span *ngSwitchCase=\"'dateTime'\" >{{ row[column.property] | date: column.format || 'dd/MM/yyyy HH:mm:ss' }}</span>\n            <span *ngSwitchCase=\"'number'\">{{ formatNumber(row[column.property], column.format) }}</span>\n            <thf-table-column-link *ngSwitchCase=\"'link'\"\n              [t-action]=\"column.action\"\n              [t-disabled]=\"checkDisabled(row, column)\"\n              [t-link]=\"row[column.link]\"\n              [t-row]=\"row\"\n              [t-value]=\"row[column.property]\">\n            </thf-table-column-link>\n            <span *ngSwitchCase=\"'icon'\">\n              <thf-table-column-icon\n                [t-icons]=\"getColumnIcons(row, column)\"\n                [t-column]=\"column\"\n                [t-row]=\"row\">\n              </thf-table-column-icon>\n            </span>\n            <span *ngSwitchCase=\"'subtitle'\">\n              <thf-table-subtitle-circle [t-subtitle]=\"getSubtitleColumn(row, column)\"></thf-table-subtitle-circle>\n            </span>\n            <span *ngSwitchCase=\"'label'\">\n              <thf-table-column-label [t-value]=\"getColumnLabel(row, column)\"></thf-table-column-label>\n            </span>\n            <span *ngSwitchDefault>{{ row[column.property] }}</span>\n          </div>\n        </td>\n        <td *ngIf=\"visibleActions.length === 1\" class=\"thf-table-column thf-table-column-single-action\">\n          <div *ngIf=\"firstAction.visible !== false\"\n            class=\"thf-table-single-action thf-clickable\"\n            [class.thf-table-action-disabled]= \"firstAction.disabled ? validateTableAction(row, firstAction) : false\"\n            (click)=\"executeTableAction(row, firstAction)\">\n\n            <span *ngIf=\"firstAction.icon\" class=\"thf-icon {{ firstAction.icon }}\"></span>\n            {{ firstAction.label }}\n          </div>\n        </td>\n        <td *ngIf=\"visibleActions.length > 1\" class=\"thf-table-column-actions\">\n          <span #popupTarget class=\"thf-icon thf-icon-more thf-clickable\" (click)=\"togglePopup(row, popupTarget)\">\n          </span>\n        </td>\n      </tr>\n\n      <tr *ngIf=\"hasRowTemplate && row.$showDetail && isShowRowTemplate(row, rowIndex)\">\n        <td class=\"thf-table-row-template-container\" [colSpan]=\"columnCountForMasterDetail()\">\n\n          <ng-template\n            [ngTemplateOutlet]=\"tableRowTemplate.templateRef\"\n            [ngTemplateOutletContext]=\"{ $implicit: row, rowIndex: rowIndex }\">\n          </ng-template>\n\n        </td>\n      </tr>\n\n      <tr *ngIf=\"isShowMasterDetail(row)\">\n        <td class=\"thf-table-column-detail\" [colSpan]=\"columnCountForMasterDetail()\">\n\n          <thf-table-detail\n            [t-checkbox]=\"checkbox && !detailHideSelect\"\n            [t-detail]=\"getColumnMasterDetail().detail\"\n            [t-items]=\"row[getNameColumnDetail()]\"\n            (t-select-row)=\"selectDetailRow($event)\">\n          </thf-table-detail>\n\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <thf-popup #popup\n    [t-actions]=\"actions\"\n    [t-target]=\"popupTarget\">\n  </thf-popup>\n\n</ng-template>\n",
                providers: [ThfDateService]
            }] }
];
/** @nocollapse */
ThfTableComponent.ctorParameters = () => [
    { type: ThfDateService },
    { type: IterableDiffers },
    { type: ViewContainerRef },
    { type: Renderer2 },
    { type: ChangeDetectorRef },
    { type: DecimalPipe },
    { type: Router }
];
ThfTableComponent.propDecorators = {
    tableRowTemplate: [{ type: ContentChild, args: [ThfTableRowTemplateDirective, { static: true },] }],
    thfPopupComponent: [{ type: ViewChild, args: ['popup', { static: false },] }],
    tableContainerElement: [{ type: ViewChild, args: ['tableContainer', { read: ElementRef, static: true },] }],
    tableFooterElement: [{ type: ViewChild, args: ['tableFooter', { read: ElementRef, static: true },] }],
    tableWrapperElement: [{ type: ViewChild, args: ['tableWrapper', { read: ElementRef, static: true },] }],
    actionsIconElement: [{ type: ViewChildren, args: ['actionsIconElement', { read: ElementRef },] }],
    actionsElement: [{ type: ViewChildren, args: ['actionsElement', { read: ElementRef },] }],
    headersTable: [{ type: ViewChildren, args: ['headersTable',] }]
};
if (false) {
    /** @type {?} */
    ThfTableComponent.prototype.tableRowTemplate;
    /** @type {?} */
    ThfTableComponent.prototype.thfPopupComponent;
    /** @type {?} */
    ThfTableComponent.prototype.tableContainerElement;
    /** @type {?} */
    ThfTableComponent.prototype.tableFooterElement;
    /** @type {?} */
    ThfTableComponent.prototype.tableWrapperElement;
    /** @type {?} */
    ThfTableComponent.prototype.actionsIconElement;
    /** @type {?} */
    ThfTableComponent.prototype.actionsElement;
    /** @type {?} */
    ThfTableComponent.prototype.headersTable;
    /** @type {?} */
    ThfTableComponent.prototype.heightTableContainer;
    /** @type {?} */
    ThfTableComponent.prototype.parentRef;
    /** @type {?} */
    ThfTableComponent.prototype.popupTarget;
    /** @type {?} */
    ThfTableComponent.prototype.tableOpacity;
    /** @type {?} */
    ThfTableComponent.prototype.tooltipText;
    /**
     * @type {?}
     * @private
     */
    ThfTableComponent.prototype.differ;
    /**
     * @type {?}
     * @private
     */
    ThfTableComponent.prototype.footerHeight;
    /**
     * @type {?}
     * @private
     */
    ThfTableComponent.prototype.initialized;
    /**
     * @type {?}
     * @private
     */
    ThfTableComponent.prototype.timeoutResize;
    /**
     * @type {?}
     * @private
     */
    ThfTableComponent.prototype.visibleElement;
    /**
     * @type {?}
     * @private
     */
    ThfTableComponent.prototype.clickListener;
    /**
     * @type {?}
     * @private
     */
    ThfTableComponent.prototype.resizeListener;
    /**
     * @type {?}
     * @private
     */
    ThfTableComponent.prototype.changeDetector;
    /**
     * @type {?}
     * @private
     */
    ThfTableComponent.prototype.decimalPipe;
    /**
     * @type {?}
     * @private
     */
    ThfTableComponent.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,