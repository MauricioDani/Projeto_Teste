/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';
import { isKeyCodeEnter } from './../../utils/util';
import { ThfDropdownBaseComponent } from './thf-dropdown-base.component';
/**
 * \@docsExtends ThfDropdownBaseComponent
 *
 * \@example
 *
 * <example name="thf-dropdown-basic" title="Totvs Dropdown Basic" >
 *  <file name="sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.html"> </file>
 *  <file name="sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.ts"> </file>
 *  <file name="sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-thf-dropdown-basic/sample-thf-dropdown-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="thf-dropdown-labs" title="Totvs Dropdown Labs" >
 *  <file name="sample-thf-dropdown-labs/sample-thf-dropdown-labs.component.html"> </file>
 *  <file name="sample-thf-dropdown-labs/sample-thf-dropdown-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-dropdown-social-network" title="Totvs Dropdown - Social Network" >
 *  <file name="sample-thf-dropdown-social-network/sample-thf-dropdown-social-network.component.html"> </file>
 *  <file name="sample-thf-dropdown-social-network/sample-thf-dropdown-social-network.component.ts"> </file>
 * </example>
 */
export class ThfDropdownComponent extends ThfDropdownBaseComponent {
    /**
     * @param {?} renderer
     */
    constructor(renderer) {
        super();
        this.renderer = renderer;
        this.onScroll = (/**
         * @return {?}
         */
        () => {
            if (this.open) {
                this.hideDropdown();
            }
        });
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onKeyDown(event) {
        if (isKeyCodeEnter(event)) {
            this.toggleDropdown();
        }
    }
    /**
     * @return {?}
     */
    toggleDropdown() {
        this.dropdownRef && !this.open && !this.disabled ? this.showDropdown() : this.hideDropdown();
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    checkClickArea(event) {
        return this.dropdownRef && this.dropdownRef.nativeElement.contains(event.target);
    }
    /**
     * @private
     * @return {?}
     */
    hideDropdown() {
        this.icon = 'thf-icon-arrow-down';
        this.removeListeners();
        this.popupRef.close();
        this.open = false;
    }
    /**
     * @private
     * @return {?}
     */
    initializeListeners() {
        this.clickoutListener = this.renderer.listen('document', 'click', (/**
         * @param {?} event
         * @return {?}
         */
        (event) => {
            this.wasClickedOnDropdown(event);
        }));
        this.resizeListener = this.renderer.listen('window', 'resize', (/**
         * @return {?}
         */
        () => {
            this.hideDropdown();
        }));
        window.addEventListener('scroll', this.onScroll, true);
    }
    /**
     * @private
     * @return {?}
     */
    removeListeners() {
        if (this.clickoutListener) {
            this.clickoutListener();
        }
        if (this.resizeListener) {
            this.resizeListener();
        }
        window.removeEventListener('scroll', this.onScroll, true);
    }
    /**
     * @private
     * @return {?}
     */
    showDropdown() {
        this.icon = 'thf-icon-arrow-up';
        this.initializeListeners();
        this.popupRef.open();
        this.open = true;
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    wasClickedOnDropdown(event) {
        /** @type {?} */
        const clickedOnDropdown = this.checkClickArea(event);
        if (!clickedOnDropdown) {
            this.hideDropdown();
        }
    }
}
ThfDropdownComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-dropdown',
                template: "<div #dropdownRef\n  class=\"thf-dropdown\"\n  tabindex=\"{{ disabled ? -1 : 0 }}\"\n  (click)=\"toggleDropdown()\"\n  (keydown)=\"onKeyDown($event)\">\n\n  <div class=\"thf-dropdown-button\" [ngClass]=\"{'thf-dropdown-button-disabled' : disabled}\">\n    {{ label }}\n    <div class=\"thf-dropdown-icon thf-icon {{icon}}\"></div>\n  </div>\n\n  <thf-popup #popupRef\n    t-hide-arrow\n    t-is-corner-align\n    t-position=\"bottom-left\"\n    [t-actions]=\"actions\"\n    [t-custom-positions]=\"['bottom-left', 'top-left']\"\n    [t-target]=\"dropdownRef\">\n  </thf-popup>\n\n</div>\n"
            }] }
];
/** @nocollapse */
ThfDropdownComponent.ctorParameters = () => [
    { type: Renderer2 }
];
ThfDropdownComponent.propDecorators = {
    dropdownRef: [{ type: ViewChild, args: ['dropdownRef', { read: ElementRef, static: true },] }],
    popupRef: [{ type: ViewChild, args: ['popupRef', { static: false },] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfDropdownComponent.prototype.clickoutListener;
    /**
     * @type {?}
     * @private
     */
    ThfDropdownComponent.prototype.resizeListener;
    /** @type {?} */
    ThfDropdownComponent.prototype.dropdownRef;
    /** @type {?} */
    ThfDropdownComponent.prototype.popupRef;
    /**
     * @type {?}
     * @private
     */
    ThfDropdownComponent.prototype.onScroll;
    /**
     * @type {?}
     * @private
     */
    ThfDropdownComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWRyb3Bkb3duLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZHJvcGRvd24vdGhmLWRyb3Bkb3duLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU1RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFcEQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEJ6RSxNQUFNLE9BQU8sb0JBQXFCLFNBQVEsd0JBQXdCOzs7O0lBUWhFLFlBQW9CLFFBQW1CO1FBQ3JDLEtBQUssRUFBRSxDQUFDO1FBRFUsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQXFDL0IsYUFBUTs7O1FBQUcsR0FBUyxFQUFFO1lBQzVCLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDYixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7YUFDckI7UUFDSCxDQUFDLEVBQUE7SUF2Q0QsQ0FBQzs7Ozs7SUFFRCxTQUFTLENBQUMsS0FBVTtRQUNsQixJQUFJLGNBQWMsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN6QixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7U0FDdkI7SUFDSCxDQUFDOzs7O0lBRUQsY0FBYztRQUNaLElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDL0YsQ0FBQzs7Ozs7O0lBRU8sY0FBYyxDQUFDLEtBQWlCO1FBQ3RDLE9BQU8sSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25GLENBQUM7Ozs7O0lBRU8sWUFBWTtRQUNsQixJQUFJLENBQUMsSUFBSSxHQUFHLHFCQUFxQixDQUFDO1FBQ2xDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Ozs7O0lBRU8sbUJBQW1CO1FBQ3pCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsT0FBTzs7OztRQUFFLENBQUMsS0FBaUIsRUFBRSxFQUFFO1lBQ3RGLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuQyxDQUFDLEVBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLFFBQVE7OztRQUFFLEdBQUcsRUFBRTtZQUNsRSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDdEIsQ0FBQyxFQUFDLENBQUM7UUFFSCxNQUFNLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDekQsQ0FBQzs7Ozs7SUFRTyxlQUFlO1FBQ3JCLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ3pCLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1NBQ3pCO1FBRUQsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUN2QjtRQUVELE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM1RCxDQUFDOzs7OztJQUVPLFlBQVk7UUFDbEIsSUFBSSxDQUFDLElBQUksR0FBRyxtQkFBbUIsQ0FBQztRQUNoQyxJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztRQUMzQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Ozs7OztJQUVPLG9CQUFvQixDQUFDLEtBQWlCOztjQUN0QyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQztRQUVwRCxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDdEIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQzs7O1lBaEZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsY0FBYztnQkFDeEIsdWxCQUE0QzthQUM3Qzs7OztZQS9CK0IsU0FBUzs7OzBCQXFDdEMsU0FBUyxTQUFDLGFBQWEsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTt1QkFDM0QsU0FBUyxTQUFDLFVBQVUsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7Ozs7Ozs7SUFKeEMsZ0RBQXFDOzs7OztJQUNyQyw4Q0FBbUM7O0lBRW5DLDJDQUFzRjs7SUFDdEYsd0NBQXdEOzs7OztJQXVDeEQsd0NBSUM7Ozs7O0lBekNXLHdDQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgaXNLZXlDb2RlRW50ZXIgfSBmcm9tICcuLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBUaGZEcm9wZG93bkJhc2VDb21wb25lbnQgfSBmcm9tICcuL3RoZi1kcm9wZG93bi1iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFRoZkRyb3Bkb3duQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1kcm9wZG93bi1iYXNpY1wiIHRpdGxlPVwiVG90dnMgRHJvcGRvd24gQmFzaWNcIiA+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtZHJvcGRvd24tYmFzaWMvc2FtcGxlLXRoZi1kcm9wZG93bi1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtZHJvcGRvd24tYmFzaWMvc2FtcGxlLXRoZi1kcm9wZG93bi1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWRyb3Bkb3duLWJhc2ljL3NhbXBsZS10aGYtZHJvcGRvd24tYmFzaWMuY29tcG9uZW50LmUyZS1zcGVjLnRzXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1kcm9wZG93bi1iYXNpYy9zYW1wbGUtdGhmLWRyb3Bkb3duLWJhc2ljLmNvbXBvbmVudC5wby50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1kcm9wZG93bi1sYWJzXCIgdGl0bGU9XCJUb3R2cyBEcm9wZG93biBMYWJzXCIgPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWRyb3Bkb3duLWxhYnMvc2FtcGxlLXRoZi1kcm9wZG93bi1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1kcm9wZG93bi1sYWJzL3NhbXBsZS10aGYtZHJvcGRvd24tbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJ0aGYtZHJvcGRvd24tc29jaWFsLW5ldHdvcmtcIiB0aXRsZT1cIlRvdHZzIERyb3Bkb3duIC0gU29jaWFsIE5ldHdvcmtcIiA+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtZHJvcGRvd24tc29jaWFsLW5ldHdvcmsvc2FtcGxlLXRoZi1kcm9wZG93bi1zb2NpYWwtbmV0d29yay5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtZHJvcGRvd24tc29jaWFsLW5ldHdvcmsvc2FtcGxlLXRoZi1kcm9wZG93bi1zb2NpYWwtbmV0d29yay5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtZHJvcGRvd24nLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLWRyb3Bkb3duLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZEcm9wZG93bkNvbXBvbmVudCBleHRlbmRzIFRoZkRyb3Bkb3duQmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBjbGlja291dExpc3RlbmVyOiAoKSA9PiB2b2lkO1xuICBwcml2YXRlIHJlc2l6ZUxpc3RlbmVyOiAoKSA9PiB2b2lkO1xuXG4gIEBWaWV3Q2hpbGQoJ2Ryb3Bkb3duUmVmJywgeyByZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgZHJvcGRvd25SZWY6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ3BvcHVwUmVmJywgeyBzdGF0aWM6IGZhbHNlIH0pIHBvcHVwUmVmOiBhbnk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIG9uS2V5RG93bihldmVudDogYW55KSB7XG4gICAgaWYgKGlzS2V5Q29kZUVudGVyKGV2ZW50KSkge1xuICAgICAgdGhpcy50b2dnbGVEcm9wZG93bigpO1xuICAgIH1cbiAgfVxuXG4gIHRvZ2dsZURyb3Bkb3duKCk6IHZvaWQge1xuICAgIHRoaXMuZHJvcGRvd25SZWYgJiYgIXRoaXMub3BlbiAmJiAhdGhpcy5kaXNhYmxlZCA/IHRoaXMuc2hvd0Ryb3Bkb3duKCkgOiB0aGlzLmhpZGVEcm9wZG93bigpO1xuICB9XG5cbiAgcHJpdmF0ZSBjaGVja0NsaWNrQXJlYShldmVudDogTW91c2VFdmVudCkge1xuICAgIHJldHVybiB0aGlzLmRyb3Bkb3duUmVmICYmIHRoaXMuZHJvcGRvd25SZWYubmF0aXZlRWxlbWVudC5jb250YWlucyhldmVudC50YXJnZXQpO1xuICB9XG5cbiAgcHJpdmF0ZSBoaWRlRHJvcGRvd24oKSB7XG4gICAgdGhpcy5pY29uID0gJ3RoZi1pY29uLWFycm93LWRvd24nO1xuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgdGhpcy5wb3B1cFJlZi5jbG9zZSgpO1xuICAgIHRoaXMub3BlbiA9IGZhbHNlO1xuICB9XG5cbiAgcHJpdmF0ZSBpbml0aWFsaXplTGlzdGVuZXJzKCkge1xuICAgIHRoaXMuY2xpY2tvdXRMaXN0ZW5lciA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCdkb2N1bWVudCcsICdjbGljaycsIChldmVudDogTW91c2VFdmVudCkgPT4ge1xuICAgICAgdGhpcy53YXNDbGlja2VkT25Ecm9wZG93bihldmVudCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLnJlc2l6ZUxpc3RlbmVyID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ3dpbmRvdycsICdyZXNpemUnLCAoKSA9PiB7XG4gICAgICB0aGlzLmhpZGVEcm9wZG93bigpO1xuICAgIH0pO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMub25TY3JvbGwsIHRydWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBvblNjcm9sbCA9ICgpOiB2b2lkID0+IHtcbiAgICBpZiAodGhpcy5vcGVuKSB7XG4gICAgICB0aGlzLmhpZGVEcm9wZG93bigpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgcmVtb3ZlTGlzdGVuZXJzKCkge1xuICAgIGlmICh0aGlzLmNsaWNrb3V0TGlzdGVuZXIpIHtcbiAgICAgIHRoaXMuY2xpY2tvdXRMaXN0ZW5lcigpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnJlc2l6ZUxpc3RlbmVyKSB7XG4gICAgICB0aGlzLnJlc2l6ZUxpc3RlbmVyKCk7XG4gICAgfVxuXG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMub25TY3JvbGwsIHRydWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBzaG93RHJvcGRvd24oKSB7XG4gICAgdGhpcy5pY29uID0gJ3RoZi1pY29uLWFycm93LXVwJztcbiAgICB0aGlzLmluaXRpYWxpemVMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLnBvcHVwUmVmLm9wZW4oKTtcbiAgICB0aGlzLm9wZW4gPSB0cnVlO1xuICB9XG5cbiAgcHJpdmF0ZSB3YXNDbGlja2VkT25Ecm9wZG93bihldmVudDogTW91c2VFdmVudCkge1xuICAgIGNvbnN0IGNsaWNrZWRPbkRyb3Bkb3duID0gdGhpcy5jaGVja0NsaWNrQXJlYShldmVudCk7XG5cbiAgICBpZiAoIWNsaWNrZWRPbkRyb3Bkb3duKSB7XG4gICAgICB0aGlzLmhpZGVEcm9wZG93bigpO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=