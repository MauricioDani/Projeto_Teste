/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { isTypeof } from '../../../../utils/util';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Componente de pesquisa que será criado dentro do dropdown do `thf-multiselect`.
 */
export class ThfMultiselectSearchComponent {
    constructor() {
        /**
         * Evento que será disparado a cada tecla digitada no campo de busca.
         */
        this.change = new EventEmitter();
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Placeholder do campo de pesquisa.
     *
     * > Caso o mesmo não seja informado, o valor padrão será traduzido com base no idioma do navegador (pt, es e en).
     *
     * \@default `Buscar`
     * @param {?} placeholder
     * @return {?}
     */
    set placeholder(placeholder) {
        this._placeholder = placeholder && isTypeof(placeholder, 'string') ? placeholder : this.literals.placeholderSearch;
    }
    /**
     * @return {?}
     */
    get placeholder() {
        return this._placeholder || this.literals.placeholderSearch;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onChange(event) {
        this.change.emit({ event: event, value: this.inputElement.nativeElement.value });
    }
    /**
     * @return {?}
     */
    setFocus() {
        this.inputElement.nativeElement.focus();
    }
    /**
     * @return {?}
     */
    clean() {
        this.inputElement.nativeElement.value = '';
    }
}
ThfMultiselectSearchComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-multiselect-search',
                template: "<div class=\"thf-field-container-content thf-multiselect-container-search\">\n\n  <div class=\"thf-field-icon-container-left\">\n    <span class=\"thf-icon thf-icon-search thf-field-icon\"></span>\n  </div>\n\n  <input #inputElement\n    class=\"thf-input thf-input-icon-left\"\n    type=\"text\"\n    [placeholder]=\"placeholder\"\n    (keyup)=\"onChange($event)\">\n\n</div>\n"
            }] }
];
ThfMultiselectSearchComponent.propDecorators = {
    literals: [{ type: Input, args: ['t-literals',] }],
    placeholder: [{ type: Input, args: ['t-placeholder',] }],
    change: [{ type: Output, args: ['t-change',] }],
    inputElement: [{ type: ViewChild, args: ['inputElement', { read: ElementRef, static: true },] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfMultiselectSearchComponent.prototype._placeholder;
    /**
     * Propriedade que recebe as literais definidas no `thf-multiselect`.
     * @type {?}
     */
    ThfMultiselectSearchComponent.prototype.literals;
    /**
     * Evento que será disparado a cada tecla digitada no campo de busca.
     * @type {?}
     */
    ThfMultiselectSearchComponent.prototype.change;
    /** @type {?} */
    ThfMultiselectSearchComponent.prototype.inputElement;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLW11bHRpc2VsZWN0LXNlYXJjaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLWZpZWxkL3RoZi1tdWx0aXNlbGVjdC90aGYtbXVsdGlzZWxlY3Qtc2VhcmNoL3RoZi1tdWx0aXNlbGVjdC1zZWFyY2guY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUYsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7Ozs7OztBQWVsRCxNQUFNLE9BQU8sNkJBQTZCO0lBSjFDOzs7O1FBK0JzQixXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQWdCbEQsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7SUF6QkMsSUFBNEIsV0FBVyxDQUFDLFdBQW1CO1FBQ3pELElBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxJQUFJLFFBQVEsQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQztJQUNySCxDQUFDOzs7O0lBRUQsSUFBSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUM7SUFDOUQsQ0FBQzs7Ozs7SUFPRCxRQUFRLENBQUMsS0FBSztRQUNaLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFDLENBQUMsQ0FBQztJQUNqRixDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzFDLENBQUM7Ozs7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUM3QyxDQUFDOzs7WUE3Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLHNZQUFzRDthQUN2RDs7O3VCQU1FLEtBQUssU0FBQyxZQUFZOzBCQWFsQixLQUFLLFNBQUMsZUFBZTtxQkFTckIsTUFBTSxTQUFDLFVBQVU7MkJBRWpCLFNBQVMsU0FBQyxjQUFjLEVBQUUsRUFBQyxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Ozs7Ozs7SUEzQjVELHFEQUE4Qjs7Ozs7SUFHOUIsaURBQXVEOzs7OztJQXNCdkQsK0NBQWdEOztJQUVoRCxxREFBdUYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGlzVHlwZW9mIH0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFRoZk11bHRpc2VsZWN0TGl0ZXJhbHMgfSBmcm9tICcuLi8uLi9pbmRleCc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBkZSBwZXNxdWlzYSBxdWUgc2Vyw6EgY3JpYWRvIGRlbnRybyBkbyBkcm9wZG93biBkbyBgdGhmLW11bHRpc2VsZWN0YC5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLW11bHRpc2VsZWN0LXNlYXJjaCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGYtbXVsdGlzZWxlY3Qtc2VhcmNoLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgVGhmTXVsdGlzZWxlY3RTZWFyY2hDb21wb25lbnQge1xuXG4gIHByaXZhdGUgX3BsYWNlaG9sZGVyPzogc3RyaW5nO1xuXG4gIC8qKiBQcm9wcmllZGFkZSBxdWUgcmVjZWJlIGFzIGxpdGVyYWlzIGRlZmluaWRhcyBubyBgdGhmLW11bHRpc2VsZWN0YC4gKi9cbiAgQElucHV0KCd0LWxpdGVyYWxzJykgbGl0ZXJhbHM/OiBUaGZNdWx0aXNlbGVjdExpdGVyYWxzO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFBsYWNlaG9sZGVyIGRvIGNhbXBvIGRlIHBlc3F1aXNhLlxuICAgKlxuICAgKiA+IENhc28gbyBtZXNtbyBuw6NvIHNlamEgaW5mb3JtYWRvLCBvIHZhbG9yIHBhZHLDo28gc2Vyw6EgdHJhZHV6aWRvIGNvbSBiYXNlIG5vIGlkaW9tYSBkbyBuYXZlZ2Fkb3IgKHB0LCBlcyBlIGVuKS5cbiAgICpcbiAgICogQGRlZmF1bHQgYEJ1c2NhcmBcbiAgICovXG4gIEBJbnB1dCgndC1wbGFjZWhvbGRlcicpIHNldCBwbGFjZWhvbGRlcihwbGFjZWhvbGRlcjogc3RyaW5nKSB7XG4gICAgdGhpcy5fcGxhY2Vob2xkZXIgPSBwbGFjZWhvbGRlciAmJiBpc1R5cGVvZihwbGFjZWhvbGRlciwgJ3N0cmluZycpID8gcGxhY2Vob2xkZXIgOiB0aGlzLmxpdGVyYWxzLnBsYWNlaG9sZGVyU2VhcmNoO1xuICB9XG5cbiAgZ2V0IHBsYWNlaG9sZGVyKCkge1xuICAgIHJldHVybiB0aGlzLl9wbGFjZWhvbGRlciB8fCB0aGlzLmxpdGVyYWxzLnBsYWNlaG9sZGVyU2VhcmNoO1xuICB9XG5cbiAgLyoqIEV2ZW50byBxdWUgc2Vyw6EgZGlzcGFyYWRvIGEgY2FkYSB0ZWNsYSBkaWdpdGFkYSBubyBjYW1wbyBkZSBidXNjYS4gKi9cbiAgQE91dHB1dCgndC1jaGFuZ2UnKSBjaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQFZpZXdDaGlsZCgnaW5wdXRFbGVtZW50Jywge3JlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogdHJ1ZSB9KSBpbnB1dEVsZW1lbnQ6IEVsZW1lbnRSZWY7XG5cbiAgb25DaGFuZ2UoZXZlbnQpIHtcbiAgICB0aGlzLmNoYW5nZS5lbWl0KHtldmVudDogZXZlbnQsIHZhbHVlOiB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LnZhbHVlfSk7XG4gIH1cblxuICBzZXRGb2N1cygpIHtcbiAgICB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gIH1cblxuICBjbGVhbigpIHtcbiAgICB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LnZhbHVlID0gJyc7XG4gIH1cblxufVxuIl19