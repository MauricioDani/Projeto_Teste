/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * \@docsPrivate
 *
 * \@description
 *
 * Este é um componente interno utilizado pelo thf-disclaimer-group, se comporta como um botão e recebe uma ação para remover todos os
 * thf-disclaimers do grupo.
 */
export class ThfDisclaimerRemoveComponent {
    constructor() {
        /**
         * Ação para remover todos.
         */
        this.removeAllAction = new EventEmitter();
    }
    // Emite a ação de remover todos.
    /**
     * @return {?}
     */
    removeAction() {
        this.removeAllAction.emit();
    }
}
ThfDisclaimerRemoveComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-disclaimer-remove',
                template: "<thf-disclaimer\n  class=\"thf-clickable\"\n  tabindex=\"0\"\n  t-hide-close=\"true\"\n  t-type=\"danger\"\n  [t-label]=\"label\"\n  (click)=\"removeAction()\">\n</thf-disclaimer>\n"
            }] }
];
ThfDisclaimerRemoveComponent.propDecorators = {
    label: [{ type: Input, args: ['t-label',] }],
    removeAllAction: [{ type: Output, args: ['t-remove-all-action',] }]
};
if (false) {
    /**
     * Texto exibido.
     * @type {?}
     */
    ThfDisclaimerRemoveComponent.prototype.label;
    /**
     * Ação para remover todos.
     * @type {?}
     */
    ThfDisclaimerRemoveComponent.prototype.removeAllAction;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWRpc2NsYWltZXItcmVtb3ZlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtZGlzY2xhaW1lci1ncm91cC90aGYtZGlzY2xhaW1lci1yZW1vdmUvdGhmLWRpc2NsYWltZXItcmVtb3ZlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7O0FBYXZFLE1BQU0sT0FBTyw0QkFBNEI7SUFKekM7Ozs7UUFVaUMsb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBTXRFLENBQUM7Ozs7O0lBSEMsWUFBWTtRQUNWLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDOUIsQ0FBQzs7O1lBZkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx1QkFBdUI7Z0JBQ2pDLGlNQUFxRDthQUN0RDs7O29CQUlFLEtBQUssU0FBQyxTQUFTOzhCQUdmLE1BQU0sU0FBQyxxQkFBcUI7Ozs7Ozs7SUFIN0IsNkNBQWlDOzs7OztJQUdqQyx1REFBb0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBFc3RlIMOpIHVtIGNvbXBvbmVudGUgaW50ZXJubyB1dGlsaXphZG8gcGVsbyB0aGYtZGlzY2xhaW1lci1ncm91cCwgc2UgY29tcG9ydGEgY29tbyB1bSBib3TDo28gZSByZWNlYmUgdW1hIGHDp8OjbyBwYXJhIHJlbW92ZXIgdG9kb3Mgb3NcbiAqIHRoZi1kaXNjbGFpbWVycyBkbyBncnVwby5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLWRpc2NsYWltZXItcmVtb3ZlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1kaXNjbGFpbWVyLXJlbW92ZS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmRGlzY2xhaW1lclJlbW92ZUNvbXBvbmVudCB7XG5cbiAgLyoqIFRleHRvIGV4aWJpZG8uICAqL1xuICBASW5wdXQoJ3QtbGFiZWwnKSBsYWJlbD86IHN0cmluZztcblxuICAvKiogQcOnw6NvIHBhcmEgcmVtb3ZlciB0b2Rvcy4gICovXG4gIEBPdXRwdXQoJ3QtcmVtb3ZlLWFsbC1hY3Rpb24nKSByZW1vdmVBbGxBY3Rpb24gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLy8gRW1pdGUgYSBhw6fDo28gZGUgcmVtb3ZlciB0b2Rvcy5cbiAgcmVtb3ZlQWN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQWxsQWN0aW9uLmVtaXQoKTtcbiAgfVxufVxuIl19