import { ThfNavbarIconAction } from './interfaces/thf-navbar-icon-action.interface';
import { ThfNavbarItem } from './interfaces/thf-navbar-item.interface';
import { ThfNavbarLiterals } from './interfaces/thf-navbar-literals.interface';
export declare const thfNavbarLiteralsDefault: {
    en: ThfNavbarLiterals;
    es: ThfNavbarLiterals;
    pt: ThfNavbarLiterals;
};
/**
 * @description
 *
 * O componente `thf-navbar` é um cabeçalho fixo que permite apresentar uma lista de links para facilitar a navegação pelas
 * páginas da aplicação. Também possui ícones com ações.
 */
export declare class ThfNavbarBaseComponent {
    private _iconActions;
    private _items;
    private _literals;
    private _shadow;
    /**
     * @optional
     *
     * @description
     *
     * Define uma lista de ações apresentadas em ícones no lado direito do `thf-navbar`.
     */
    iconActions: Array<ThfNavbarIconAction>;
    /**
     * @optional
     *
     * @description
     *
     * Define uma lista de items do `thf-navbar`.
     */
    items: Array<ThfNavbarItem>;
    /**
     * @optional
     *
     * @description
     *
     * Objeto com a literal usada na propriedade `t-literals`.
     *
     * Para customizar a literal, basta declarar um objeto do tipo `ThfNavbarLiterals` conforme exemplo abaixo:
     *
     * ```
     *  const customLiterals: ThfNavbarLiterals = {
     *    navbarLinks: 'Itens de navegação'
     *  };
     * ```
     *
     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
     *
     * ```
     * <thf-navbar
     *   [t-literals]="customLiterals">
     * </thf-navbar>
     * ```
     *
     *  > O objeto padrão de literais será traduzido de acordo com o idioma do *browser* (pt, en, es).
     */
    literals: ThfNavbarLiterals;
    /**
     * @optional
     *
     * @description
     *
     * Define a logo apresentada `thf-navbar`.
     */
    logo?: string;
    /**
     * @optional
     *
     * @description
     *
     * Caso já possua um menu na aplicação o mesmo deve ser repassado para essa propriedade para que quando entre em modo
     * responsivo os items do `thf-navbar` possam ser adicionados no primeiro item do menu definido.
     *
     * Exemplo:
     *
     * ```
     * <thf-navbar
     *  [t-items]="items"
     *  [t-icon-actions]="iconActions"
     *  [t-menu]="userMenu">
     * </thf-navbar>
     * <div class="thf-wrapper">
     *  <thf-menu #userMenu
     *   [t-menus]="[{ label: 'Item 1', link: '/' }]">
     *  </thf-menu>
     * </div>
     * ```
     */
    menu?: any;
    /**
     * @optional
     *
     * @description
     *
     * Aplica uma sombra na parte inferior do `thf-navbar`.
     *
     * @default `false`
     */
    shadow: boolean;
}
