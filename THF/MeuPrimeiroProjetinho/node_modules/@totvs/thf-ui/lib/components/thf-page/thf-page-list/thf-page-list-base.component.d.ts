import { ThfBreadcrumb } from '../../thf-breadcrumb/thf-breadcrumb.interface';
import { ThfDisclaimerGroup } from '../../thf-disclaimer-group/thf-disclaimer-group.interface';
import { ThfPageDefaultBaseComponent } from '../thf-page-default/thf-page-default-base.component';
import { ThfPageFilter } from './../thf-page-filter.interface';
import { ThfPageListLiterals } from './thf-page-list-literals.interface';
export declare const thfPageListLiteralsDefault: {
    en: ThfPageListLiterals;
    es: ThfPageListLiterals;
    pt: ThfPageListLiterals;
};
/**
 * @description
 *
 * O componente `thf-page-list` é utilizado como o container principal para as telas de listagem de dados,
 * podendo ser apresentado como lista ou tabela.
 *
 * Este componente possibilita realizar filtro dos dados, no qual permite que seja atribuido uma função que será executada no momento
 * da filtragem. Este comportamento pode ser acionado tanto ao *click* do ícone [thf-icon-search](/guides/icons)
 * quanto ao pressionar da tecla *ENTER* quando o foco estiver no campo de pesquisa.
 *
 * Para facilitar a manipulação e visualização dos filtros aplicados, é possível também utilizar o componente
 * [`thf-disclaimer-group`](/documentation/thf-disclaimer-group).
 */
export declare abstract class ThfPageListBaseComponent extends ThfPageDefaultBaseComponent {
    private _disclaimerGroup?;
    private _literals;
    /**
     * @optional
     *
     * @description
     *
     * Objeto que implementa as propriedades da interface `ThfBreadcrumb`.
     */
    breadcrumb?: ThfBreadcrumb;
    /**
     * @optional
     *
     * @description
     *
     * Objeto que implementa as propriedades da interface `ThfDisclaimerGroup`.
     */
    disclaimerGroup: ThfDisclaimerGroup;
    /**
     * @description
     *
     * Objeto que implementa as propriedades da interface `ThfPageFilter`.
     */
    filter: ThfPageFilter;
    /**
     * @optional
     *
     * @description
     *
     * Objeto com as literais usadas no `thf-page-list`.
     *
     * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
     *
     * ```
     *  const customLiterals: ThfPageListLiterals = {
     *    otherActions: 'Mais ações'
     *  };
     * ```
     *
     * Ou passando apenas as literais que deseja customizar:
     *
     * ```
     *  const customLiterals: ThfPageListLiterals = {
     *    otherActions: 'Ações da página'
     *  };
     * ```
     *
     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
     *
     * ```
     * <thf-page-list
     *   [t-literals]="customLiterals">
     * </thf-page-list>
     * ```
     *
     *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).
     */
    literals: ThfPageListLiterals;
    protected resizeListener: () => void;
}
