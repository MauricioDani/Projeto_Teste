import { AfterContentInit, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChange, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
import { callFunction } from '../../../utils/util';
import { ThfPageAction } from '../thf-page-action.interface';
import { ThfPageContentComponent } from '../thf-page-content/thf-page-content.component';
import { ThfPageListBaseComponent } from './thf-page-list-base.component';
/**
 * @docsExtends ThfPageListBaseComponent
 *
 * @example
 *
 * <example name="thf-page-list-basic" title="Totvs Page List Basic">
 *  <file name="sample-thf-page-list-basic/sample-thf-page-list-basic.component.html"> </file>
 *  <file name="sample-thf-page-list-basic/sample-thf-page-list-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-list-labs" title="Totvs Page List Labs">
 *  <file name="sample-thf-page-list-labs/sample-thf-page-list-labs.component.html"> </file>
 *  <file name="sample-thf-page-list-labs/sample-thf-page-list-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-list-hiring-processes" title="Totvs Page List - Hiring Processes">
 *  <file name="sample-thf-page-list-hiring-processes/sample-thf-page-list-hiring-processes.component.html"> </file>
 *  <file name="sample-thf-page-list-hiring-processes/sample-thf-page-list-hiring-processes.component.ts"> </file>
 *  <file name="sample-thf-page-list-hiring-processes/sample-thf-page-list-hiring-processes.service.ts"> </file>
 * </example>
 */
export declare class ThfPageListComponent extends ThfPageListBaseComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {
    renderer: Renderer2;
    private router;
    advancedSearch: string;
    dropdownActions: Array<ThfPageAction>;
    isMobile: boolean;
    limitPrimaryActions: number;
    private isRecalculate;
    private maxWidthMobile;
    private parentRef;
    callFunction: typeof callFunction;
    thfPageContent: ThfPageContentComponent;
    constructor(viewRef: ViewContainerRef, renderer: Renderer2, router: Router);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnChanges(changes: {
        [propName: string]: SimpleChange;
    }): void;
    ngOnDestroy(): void;
    actionIsDisabled(action: any): any;
    callAction(item: ThfPageAction): void;
    hasPageHeader(): boolean;
    private onResize;
    private setIsMobile;
    setDropdownActions(): void;
    callActionFilter(field: string): void;
    initFixedLiterals(): any;
    onkeypress(key: any): void;
    changeModel(newModel: any): void;
    onChangeDisclaimerGroup(disclaimers: any): void;
    private initializeListeners;
    private removeListeners;
}
