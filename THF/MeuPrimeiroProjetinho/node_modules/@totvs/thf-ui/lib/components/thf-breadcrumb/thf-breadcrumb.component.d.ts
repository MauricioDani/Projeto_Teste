import { AfterViewInit, DoCheck, ElementRef, IterableDiffers, OnDestroy, Renderer2 } from '@angular/core';
import { ThfBreadcrumbBaseComponent } from './thf-breadcrumb-base.component';
import { ThfBreadcrumbItem } from './thf-breadcrumb-item.interface';
/**
 * @docsExtends ThfBreadcrumbBaseComponent
 *
 * @example
 *
 * <example name="thf-breadcrumb-basic" title="Totvs Breadcrumb Basic">
 *  <file name="sample-thf-breadcrumb-basic/sample-thf-breadcrumb-basic.component.html"> </file>
 *  <file name="sample-thf-breadcrumb-basic/sample-thf-breadcrumb-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-breadcrumb-labs" title="Totvs Breadcrumb Labs">
 *  <file name="sample-thf-breadcrumb-labs/sample-thf-breadcrumb-labs.component.html"> </file>
 *  <file name="sample-thf-breadcrumb-labs/sample-thf-breadcrumb-labs.component.ts"> </file>
 * </example>
 */
export declare class ThfBreadcrumbComponent extends ThfBreadcrumbBaseComponent implements AfterViewInit, DoCheck, OnDestroy {
    private element;
    renderer: Renderer2;
    showDropdown: boolean;
    showDropdownToggle: boolean;
    dropdownItems: Array<ThfBreadcrumbItem>;
    private _breadcrumbItemsLenght;
    private calculatedElement;
    private differ;
    private hiddenWithoutResize;
    private initialized;
    private timeoutResize;
    breadcrumbElement: ElementRef;
    dropdownIcon: ElementRef;
    constructor(differs: IterableDiffers, element: ElementRef, renderer: Renderer2);
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    toggleDropdown(): void;
    private wasClickedonDropdown;
    private checkClickOutElement;
    private checkChangeOnItems;
    private calcBreadcrumb;
    private getBreadcrumbFavoriteWidth;
    private getBreadcrumbWidth;
    private calcBreadcrumbItemsWidth;
    private enableBreadcrumbResponsive;
    private disableBreadcrumbResponsive;
    private debounceResize;
    private initBreadcrumbSize;
    private initializeClickoutListener;
    private initializeResizeListener;
    private removeClickoutListener;
    private removeResizeListener;
}
