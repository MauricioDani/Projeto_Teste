import { ChangeDetectorRef, QueryList } from '@angular/core';
import { ThfTabComponent } from './thf-tab/thf-tab.component';
import { ThfTabDropdownComponent } from './thf-tab-dropdown/thf-tab-dropdown.component';
import { ThfTabsBaseComponent } from './thf-tabs-base.component';
/**
 * @docsExtends ThfTabsBaseComponent
 *
 * @example
 *
 * <example name="thf-tabs-basic" title="Totvs Tabs Basic">
 *  <file name="sample-thf-tabs-basic/sample-thf-tabs-basic.component.html"> </file>
 *  <file name="sample-thf-tabs-basic/sample-thf-tabs-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-tabs-labs" title="Totvs Tabs Labs">
 *  <file name="sample-thf-tabs-labs/sample-thf-tabs-labs.component.html"> </file>
 *  <file name="sample-thf-tabs-labs/sample-thf-tabs-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-tabs-travel" title="Totvs Tabs - Travel">
 *  <file name="sample-thf-tabs-travel/sample-thf-tabs-travel.component.html"> </file>
 *  <file name="sample-thf-tabs-travel/sample-thf-tabs-travel.component.ts"> </file>
 * </example>
 *
 * <example name="thf-tabs-business-conf" title="Totvs Tabs - Business Conference">
 *  <file name="sample-thf-tabs-business-conf/sample-thf-tabs-business-conf.component.html"> </file>
 *  <file name="sample-thf-tabs-business-conf/sample-thf-tabs-business-conf.component.ts"> </file>
 * </example>
 */
export declare class ThfTabsComponent extends ThfTabsBaseComponent {
    private changeDetector;
    maxNumberOfTabs: number;
    private previousActiveTab;
    tabs: QueryList<ThfTabComponent>;
    tabDropdown: ThfTabDropdownComponent;
    constructor(changeDetector: ChangeDetectorRef);
    readonly isShowTabDropdown: boolean;
    readonly overflowedTabs: ThfTabComponent[];
    readonly visibleTabs: ThfTabComponent[];
    closePopover(): void;
    isVisibleTab(tab: any): boolean;
    onTabActive(tab: any): void;
    onTabChangeState(tab: ThfTabComponent): void;
    selectedTab(tab: ThfTabComponent): void;
    trackByFn(_i: any, tab: ThfTabComponent): string;
    private activeDistinctTab;
    private activeFirstTab;
    private deactivateTab;
}
