import { ElementRef } from '@angular/core';
/**
 * @description
 *
 * O componente `thf-popover` é um container pequeno recomendado para incluir vários tipos de conteúdo como:
 * gráficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.
 *
 * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva
 * [**thf-tooltip**](https://thf.totvs.com.br/documentation/thf-tooltip?view=doc).
 *
 * Para conteúdos maiores recomenda-se o uso do [**thf-modal**](https://thf.totvs.com.br/documentation/thf-modal?view=doc).
 *
 * Ele contém um título e também é possível escolher as posições do popover em relação ao componente pai,
 * as posições permitidas são: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,
 * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.
 *
 * Também é possível escolher entre os dois eventos que podem abrir o *popover*.
 * Os eventos permitidos são: `click` e `hover`.
 *
 */
export declare class ThfPopoverBaseComponent {
    isHidden: boolean;
    private _hideArrow;
    private _position?;
    private _trigger?;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a seta do componente *popover*.
     *
     * @default `false`
     */
    hideArrow: boolean;
    /**
     * @optional
     *
     * @description
     *
     * Define a posição que o thf-popover abrirá em relação ao componente alvo. Sugere-se que seja
     * usada a orientação "right" (direita), porém o mesmo é flexível e será rotacionado
     * automaticamente para se adequar a tela, caso necessário.
     *
     * Posições válidas:
     * - `right`: Posiciona o thf-popover no lado direito do componente alvo.
     * - `right-bottom`: Posiciona o thf-popover no lado direito inferior do componente alvo.
     * - `right-top`: Posiciona o thf-popover no lado direito superior do componente alvo.
     * - `bottom`: Posiciona o thf-popover abaixo do componente alvo.
     * - `bottom-left`: Posiciona o thf-popover abaixo e à esquerda do componente alvo.
     * - `bottom-right`: Posiciona o thf-popover abaixo e à direita do componente alvo.
     * - `left`: Posiciona o thf-popover no lado esquerdo do componente alvo.
     * - `left-top`: Posiciona o thf-popover no lado esquerdo superior do componente alvo.
     * - `left-bottom`: Posiciona o thf-popover no lado esquerdo inferior do componente alvo.
     * - `top`: Posiciona o thf-popover acima do componente alvo.
     * - `top-right`: Posiciona o thf-popover acima e à direita do componente alvo.
     * - `top-left`: Posiciona o thf-popover acima e à esquerda do componente alvo.
     *
     *
     * @default right
     */
    position: string;
    /**
     * @description
     *
     * ElementRef do componente de origem responsável por abrir o popover.
     * Para utilizar o thf-popover deve-se colocar uma variável no componente que vai disparar o evento
     * de abertura, exemplo:
     *
     * ```
     * <thf-button
     *   t-label="Open Popover">
     * </thf-button>
     *
     * <thf-popover
     *   [t-origin]="thfButton"
     *   [t-title]="Totvs Popover">
     * </thf-popover>
     * ```
     *
     * Também deve-se criar um ViewChild para cada popover, passando como referência o elemento do
     * HTML que irá disparar o evento. Exemplo:
     *
     * ```
     * @ViewChild(ThfButtonComponent, {read: ElementRef}) thfButton: ThfButtonComponent;
     * ```
     */
    target: ElementRef;
    /** Título do popover. */
    title?: string;
    /**
     * @description
     *
     * Define o evento que abrirá o thf-popover.
     *
     * Valores válidos:
     *  - `click`: Abre ao clicar no componente alvo.
     *  - `hover`: Abre ao passar o mouse sobre o componente alvo.
     *
     * @default click
     * @optional
     */
    trigger: string;
    protected clickoutListener: () => void;
    protected mouseEnterListener: () => void;
    protected mouseLeaveListener: () => void;
    protected resizeListener: () => void;
}
