import { ElementRef, OnDestroy, OnInit } from '@angular/core';
import { ThfLookupBaseComponent } from './thf-lookup-base.component';
import { ThfLookupFilterService } from './services/thf-lookup-filter.service';
import { ThfLookupModalService } from './services/thf-lookup-modal.service';
/**
 * @docsExtends ThfLookupBaseComponent
 *
 * @description
 *
 * Quando existe muitos dados o thf-lookup por padrão traz apenas 10 itens na tabela e os demais são carregados por demanda através do
 * botão 'Carregar mais resultados'. Para que funcione corretamente, é importante que o serviço siga o
 * [Guia de implementação das APIs TOTVS](http://tdn.totvs.com/pages/releaseview.action?pageId=271660444).
 *
 * Importante:
 *
 * - Caso o thf-lookup contenha o [(ngModel)] sem o atributo name, ocorrerá um erro de angular.
 * Então será necessário informar o atributo name ou o atributo [ngModelOptions]="{standalone: true}".
 * ```
 * <thf-lookup
 *   [(ngModel)]="pessoa.nome"
 *   [ngModelOptions]="{standalone: true}">
 * </thf-lookup>
 * ```
 *
 * @example
 *
 * <example name="thf-lookup-basic" title="Totvs Lookup Basic">
 *  <file name="sample-thf-lookup-basic/sample-thf-lookup-basic.component.html"> </file>
 *  <file name="sample-thf-lookup-basic/sample-thf-lookup-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-lookup-labs" title="Totvs Lookup Labs">
 *  <file name="sample-thf-lookup-labs/sample-thf-lookup-labs.component.html"> </file>
 *  <file name="sample-thf-lookup-labs/sample-thf-lookup-labs.component.ts"> </file>
 *  <file name="sample-thf-lookup.service.ts"> </file>
 * </example>
 *
 * <example name="thf-lookup-hero" title="Totvs Lookup - Hero">
 *  <file name="sample-thf-lookup-hero/sample-thf-lookup-hero.component.html"> </file>
 *  <file name="sample-thf-lookup-hero/sample-thf-lookup-hero.component.ts"> </file>
 *  <file name="sample-thf-lookup.service.ts"> </file>
 * </example>
 *
 * <example name="thf-lookup-hero-reactive-form" title="Totvs Lookup - Hero Reactive Form">
 *  <file name="sample-thf-lookup-hero-reactive-form/sample-thf-lookup-hero-reactive-form.component.html"> </file>
 *  <file name="sample-thf-lookup-hero-reactive-form/sample-thf-lookup-hero-reactive-form.component.ts"> </file>
 *  <file name="sample-thf-lookup.service.ts"> </file>
 * </example>
 *
 * <example name="thf-lookup-sw-films" title="Totvs Lookup - Star Wars films">
 *  <file name="sample-thf-lookup-sw-films/sample-thf-lookup-sw-films.component.html"> </file>
 *  <file name="sample-thf-lookup-sw-films/sample-thf-lookup-sw-films.component.ts"> </file>
 *  <file name="sample-thf-lookup-sw-films/sample-thf-lookup-sw-films.service.ts"> </file>
 * </example>
 */
export declare class ThfLookupComponent extends ThfLookupBaseComponent implements OnDestroy, OnInit {
    private thfLookupModalService;
    private modalSubscription;
    inputEl: ElementRef;
    constructor(thfLookupFilterService: ThfLookupFilterService, thfLookupModalService: ThfLookupModalService);
    ngOnDestroy(): void;
    ngOnInit(): void;
    openLookup(): void;
    setViewValue(value: any, object: any): void;
    getViewValue(): string;
    searchEvent(): void;
    private isAllowedOpenModal;
    private setInputValueWithFieldFormat;
}
