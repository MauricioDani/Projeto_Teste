import { AfterViewInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { ThfControlPositionService } from './../../../services/thf-control-position/thf-control-position.service';
import { ThfCalendarComponent } from './thf-calendar/thf-calendar.component';
import { ThfDatepickerBaseComponent } from './thf-datepicker-base.component';
/**
 * @docsExtends ThfDatepickerBaseComponent
 *
 * @example
 *
 * <example name="thf-datepicker-basic" title="Totvs Datepicker Basic">
 *  <file name="sample-thf-datepicker-basic/sample-thf-datepicker-basic.component.html"> </file>
 *  <file name="sample-thf-datepicker-basic/sample-thf-datepicker-basic.component.ts"> </file>
 *  <file name="sample-thf-datepicker-basic/sample-thf-datepicker-basic.component.po.ts"> </file>
 *  <file name="sample-thf-datepicker-basic/sample-thf-datepicker-basic.component.e2e-spec.ts"> </file>
 * </example>
 *
 * <example name="thf-datepicker-labs" title="Totvs Datepicker Labs">
 *  <file name="sample-thf-datepicker-labs/sample-thf-datepicker-labs.component.html"> </file>
 *  <file name="sample-thf-datepicker-labs/sample-thf-datepicker-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-datepicker-airfare" title="Totvs Datepicker - Airfare">
 *  <file name="sample-thf-datepicker-airfare/sample-thf-datepicker-airfare.component.html"> </file>
 *  <file name="sample-thf-datepicker-airfare/sample-thf-datepicker-airfare.component.ts"> </file>
 * </example>
 *
 * <example name="thf-datepicker-airfare-reactive-form" title="Totvs Datepicker - Airfare Reactive Form">
 *  <file name="sample-thf-datepicker-airfare-reactive-form/sample-thf-datepicker-airfare-reactive-form.component.html"> </file>
 *  <file name="sample-thf-datepicker-airfare-reactive-form/sample-thf-datepicker-airfare-reactive-form.component.ts"> </file>
 * </example>
 */
export declare class ThfDatepickerComponent extends ThfDatepickerBaseComponent implements AfterViewInit, OnDestroy {
    private controlPosition;
    private renderer;
    date: any;
    el: ElementRef;
    hour: string;
    private clickListener;
    private readonly dateRegex;
    private readonly isoRegex;
    private timeoutChange;
    private valueBeforeChange;
    eventListenerFunction: () => void;
    eventResizeListener: () => void;
    calendar: ThfCalendarComponent;
    dialogPicker: ElementRef;
    iconDatepicker: ElementRef;
    inputEl: ElementRef;
    /** RÃ³tulo do campo. */
    label?: string;
    /** Texto de apoio do campo. */
    help?: string;
    constructor(controlPosition: ThfControlPositionService, renderer: Renderer2, el: ElementRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    togglePicker(): void;
    dateSelected(): void;
    wasClickedOnPicker(event: any): void;
    onKeyup($event: any): void;
    onKeydown($event?: any): void;
    hasInvalidClass(): boolean;
    getErrorPattern(): string;
    clear(): void;
    eventOnBlur($event: any): void;
    eventOnChange($event: any): void;
    eventOnClick($event: any): void;
    formatToDate(value: Date): string;
    refreshValue(value: Date): void;
    writeValue(value: any): void;
    isValidDateIso(value: string): boolean;
    isValidExtendedIso(value: any): boolean;
    hasOverlayClass(element: any): any;
    verifyMobile(): RegExpMatchArray;
    private closeCalendar;
    private controlChangeEmitter;
    private hasAttrCalendar;
    private initializeListeners;
    private onScroll;
    private removeListeners;
    private setDialogPickerStyleDisplay;
    private setCalendarPosition;
}
