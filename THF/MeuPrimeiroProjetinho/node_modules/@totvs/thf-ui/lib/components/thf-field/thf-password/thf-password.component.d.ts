import { AbstractControl } from '@angular/forms';
import { ElementRef } from '@angular/core';
import { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';
/**
 * @docsExtends ThfInputBaseComponent
 *
 * @description
 * O thf-password é um input específico para senhas. Já possui tipo, estilo e ícone predefinidos.
 *
 * @example
 *
 * <example name="thf-password-basic" title="Totvs Password Basic">
 *   <file name="sample-thf-password-basic/sample-thf-password-basic.component.html"> </file>
 *   <file name="sample-thf-password-basic/sample-thf-password-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-password-labs" title="Totvs Password Labs">
 *   <file name="sample-thf-password-labs/sample-thf-password-labs.component.html"> </file>
 *   <file name="sample-thf-password-labs/sample-thf-password-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-password-reset" title="Totvs Password - Reset">
 *   <file name="sample-thf-password-reset/sample-thf-password-reset.component.html"> </file>
 *   <file name="sample-thf-password-reset/sample-thf-password-reset.component.ts"> </file>
 * </example>
 */
export declare class ThfPasswordComponent extends ThfInputGeneric {
    private _hidePasswordPeek?;
    type: string;
    visiblePassword: boolean;
    /**
     * @optional
     *
     * @description
     *
     * Permite esconder a função de espiar a senha digitada.
     *
     * @default `false`
     */
    hidePasswordPeek: boolean;
    constructor(el: ElementRef);
    extraValidation(c: AbstractControl): {
        [key: string]: any;
    };
    showPassword(): void;
}
