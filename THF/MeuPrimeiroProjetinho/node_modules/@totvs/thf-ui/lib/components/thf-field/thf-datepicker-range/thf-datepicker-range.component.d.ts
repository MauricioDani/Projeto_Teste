import { ElementRef, OnInit } from '@angular/core';
import { ThfDatepickerRange } from './interfaces/thf-datepicker-range.interface';
import { ThfDatepickerRangeBaseComponent } from './thf-datepicker-range-base.component';
import { ThfDateService } from './../../../services/thf-date/thf-date.service';
/**
 * @docsExtends ThfDatepickerRangeBaseComponent
 *
 * @example
 *
 * <example name="thf-datepicker-range-basic" title="Totvs Datepicker Range Basic">
 *  <file name="sample-thf-datepicker-range-basic/sample-thf-datepicker-range-basic.component.html"> </file>
 *  <file name="sample-thf-datepicker-range-basic/sample-thf-datepicker-range-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-datepicker-range-labs" title="Totvs Datepicker Range Labs">
 *  <file name="sample-thf-datepicker-range-labs/sample-thf-datepicker-range-labs.component.html"> </file>
 *  <file name="sample-thf-datepicker-range-labs/sample-thf-datepicker-range-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-datepicker-range-vacations" title="Totvs Datepicker Range - Vacations Suggestion">
 *  <file name="sample-thf-datepicker-range-vacations/sample-thf-datepicker-range-vacations.component.html"> </file>
 *  <file name="sample-thf-datepicker-range-vacations/sample-thf-datepicker-range-vacations.component.ts"> </file>
 * </example>
 *
 * <example name="thf-datepicker-range-vacations-reactive-form" title="Totvs Datepicker Range - Vacations Reactive Form">
 *  <file name="sample-thf-datepicker-range-vacations-reactive-form/sample-thf-datepicker-range-vacations-reactive-form.component.html">
 *  </file>
 *  <file name="sample-thf-datepicker-range-vacations-reactive-form/sample-thf-datepicker-range-vacations-reactive-form.component.ts">
 *  </file>
 * </example>
 */
export declare class ThfDatepickerRangeComponent extends ThfDatepickerRangeBaseComponent implements OnInit {
    private thfDatepickerRangeElement;
    private thfMaskObject;
    dateRangeField: ElementRef;
    endDateInput: ElementRef;
    startDateInput: ElementRef;
    readonly enableCleaner: boolean;
    readonly endDateInputName: string;
    readonly endDateInputValue: string;
    readonly getErrorMessage: string;
    readonly isDateRangeInputUncompleted: boolean;
    readonly isDirtyDateRangeInput: boolean;
    readonly startDateInputName: string;
    readonly startDateInputValue: string;
    static getKeyCode(event: KeyboardEvent): number;
    static getTargetElement(event: any): any;
    static isValidKey(keyCode: number): boolean;
    constructor(thfDateService: ThfDateService, thfDatepickerRangeElement: ElementRef);
    ngOnInit(): void;
    clear(): void;
    onBlur(): void;
    onFocus(): void;
    onKeydown(event?: any): void;
    onKeyup(event: any): void;
    resetDateRangeInputValidation(): void;
    updateScreenByModel(model: ThfDatepickerRange): void;
    private applyFocusOnDatePickerRangeField;
    private buildMask;
    private formatDate;
    private formatScreenToModel;
    private formatModelToScreen;
    private getDateRangeFormatValidation;
    private getValidatedModel;
    private hasInvalidClass;
    private isEqualBeforeValue;
    private isSetFocusOnBackspace;
    private removeFocusFromDatePickerRangeField;
    private setDateRangeInputValidation;
    private setFocus;
    private setFocusAndPosition;
    private focusOnElement;
    private setFocusOnArrowLeft;
    private setFocusOnArrowRight;
    private setFocusOnBackspace;
    private setFocusOnStartDateCompleted;
    private updateModelByScreen;
}
