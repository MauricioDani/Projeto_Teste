import { AfterViewInit, ElementRef, OnDestroy } from '@angular/core';
import { AbstractControl } from '@angular/forms';
import { ThfInputGeneric } from '../thf-input-generic/thf-input-generic';
/**
 * @docsExtends ThfInputBaseComponent
 *
 * @description
 *
 * thf-email é um input específico para receber E-mail, com o pattern já configurado.
 *
 * @example
 *
 * <example name="thf-email-basic" title="Totvs Email Basic">
 *  <file name="sample-thf-email-basic/sample-thf-email-basic.component.html"> </file>
 *  <file name="sample-thf-email-basic/sample-thf-email-basic.component.ts"> </file>
 *  <file name="sample-thf-email-basic/sample-thf-email-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-thf-email-basic/sample-thf-email-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="thf-email-labs" title="Totvs Email Labs">
 *  <file name="sample-thf-email-labs/sample-thf-email-labs.component.html"> </file>
 *  <file name="sample-thf-email-labs/sample-thf-email-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-email-newsletter" title="Totvs Email - Newsletter">
 *  <file name="sample-thf-email-newsletter/sample-thf-email-newsletter.component.html"> </file>
 *  <file name="sample-thf-email-newsletter/sample-thf-email-newsletter.component.ts"> </file>
 * </example>
 */
export declare class ThfEmailComponent extends ThfInputGeneric implements AfterViewInit, OnDestroy {
    icon: string;
    maxlength: number;
    type: string;
    pattern: string;
    mask: string;
    private listener;
    constructor(el: ElementRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    extraValidation(c: AbstractControl): {
        [key: string]: any;
    };
}
