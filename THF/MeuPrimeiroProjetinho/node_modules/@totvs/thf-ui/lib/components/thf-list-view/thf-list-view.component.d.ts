import { AfterContentInit, ChangeDetectorRef, DoCheck, IterableDiffers } from '@angular/core';
import { ThfPopupComponent } from '../thf-popup/thf-popup.component';
import { ThfListViewAction } from './interfaces/thf-list-view-action.interface';
import { ThfListViewBaseComponent } from './thf-list-view-base.component';
import { ThfListViewContentTemplateDirective } from './thf-list-view-content-template/thf-list-view-content-template.directive';
import { ThfListViewDetailTemplateDirective } from './thf-list-view-detail-template/thf-list-view-detail-template.directive';
/**
 * @docsExtends ThfListViewBaseComponent
 *
 * @example
 *
 * <example name="thf-list-view-basic" title="Totvs List View Basic">
 *  <file name="sample-thf-list-view-basic/sample-thf-list-view-basic.component.html"> </file>
 *  <file name="sample-thf-list-view-basic/sample-thf-list-view-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-list-view-labs" title="Totvs List View Labs">
 *  <file name="sample-thf-list-view-labs/sample-thf-list-view-labs.component.html"> </file>
 *  <file name="sample-thf-list-view-labs/sample-thf-list-view-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-list-view-hiring-processes" title="Totvs List View - Hiring Processes">
 *  <file name="sample-thf-list-view-hiring-processes/sample-thf-list-view-hiring-processes.component.html"> </file>
 *  <file name="sample-thf-list-view-hiring-processes/sample-thf-list-view-hiring-processes.component.ts"> </file>
 *  <file name="sample-thf-list-view-hiring-processes/sample-thf-list-view-hiring-processes.service.ts"> </file>
 * </example>
 */
export declare class ThfListViewComponent extends ThfListViewBaseComponent implements AfterContentInit, DoCheck {
    private changeDetector;
    listViewContentTemplate: ThfListViewContentTemplateDirective;
    listViewDetailTemplate: ThfListViewDetailTemplateDirective;
    thfPopupComponent: ThfPopupComponent;
    private differ;
    constructor(changeDetector: ChangeDetectorRef, differs: IterableDiffers);
    readonly hasContentTemplate: boolean;
    readonly hasDetailTemplate: boolean;
    readonly displayShowMoreButton: boolean;
    readonly showButtonsActions: boolean;
    readonly showPopupActions: boolean;
    readonly titleHasAction: boolean;
    readonly visibleActions: ThfListViewAction[];
    ngAfterContentInit(): void;
    ngDoCheck(): void;
    checkTitleType(item: any): "externalLink" | "internalLink" | "noLink";
    getItemTitle(item: any): any;
    hasItems(): boolean;
    returnBooleanValue(listViewAction: ThfListViewAction, item: any): any;
    trackBy(index: any): any;
    togglePopup(item: any, targetRef: HTMLElement): void;
    private checkItemsChange;
    private initShowDetail;
}
