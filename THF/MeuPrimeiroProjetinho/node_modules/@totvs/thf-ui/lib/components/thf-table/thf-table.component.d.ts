import { AfterViewInit, ChangeDetectorRef, DoCheck, IterableDiffers, OnDestroy, QueryList, Renderer2, ViewContainerRef } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { Router } from '@angular/router';
import { ThfDateService } from '../../services/thf-date/thf-date.service';
import { ThfPopupComponent } from '../thf-popup/thf-popup.component';
import { ThfTableAction } from './interfaces/thf-table-action.interface';
import { ThfTableBaseComponent } from './thf-table-base.component';
import { ThfTableColumn } from './interfaces/thf-table-column.interface';
import { ThfTableColumnLabel } from './thf-table-column-label/thf-table-column-label.interface';
import { ThfTableRowTemplateDirective } from './thf-table-row-template/thf-table-row-template.directive';
import { ThfTableSubtitleColumn } from './thf-table-subtitle-footer/thf-table-subtitle-column.interface';
/**
 * @docsExtends ThfTableBaseComponent
 *
 * @example
 *
 * <example name="thf-table-basic" title="Totvs Table Basic">
 *  <file name="sample-thf-table-basic/sample-thf-table-basic.component.ts"> </file>
 *  <file name="sample-thf-table-basic/sample-thf-table-basic.component.html"> </file>
 * </example>
 *
 * <example name="thf-table-labs" title="Totvs Table Labs">
 *  <file name="sample-thf-table-labs/sample-thf-table-labs.component.ts"> </file>
 *  <file name="sample-thf-table-labs/sample-thf-table-labs.component.html"> </file>
 *  <file name="sample-thf-table-labs/sample-thf-table-labs.component.e2e-spec.ts"> </file>
 *  <file name="sample-thf-table-labs/sample-thf-table-labs.component.po.ts"> </file>
 *  <file name="sample-thf-table-labs/sample-thf-table-labs.service.ts"> </file>
 * </example>
 *
 * <example name="thf-table-transport" title="Totvs Table - Transport">
 *  <file name="sample-thf-table-transport/sample-thf-table-transport.component.ts"> </file>
 *  <file name="sample-thf-table-transport/sample-thf-table-transport.component.html"> </file>
 *  <file name="sample-thf-table-transport/sample-thf-table-transport.service.ts"> </file>
 * </example>
 *
 * <example name="thf-table-airfare" title="Totvs Table - Airfare">
 *  <file name="sample-thf-table-airfare/sample-thf-table-airfare.component.ts"> </file>
 *  <file name="sample-thf-table-airfare/sample-thf-table-airfare.component.html"> </file>
 *  <file name="sample-thf-table-airfare/sample-thf-table-airfare.service.ts"> </file>
 * </example>
 *
 * <example name="thf-table-components" title="Totvs Table - Thf Field Components">
 *  <file name="sample-thf-table-components/sample-thf-table-components.component.ts"> </file>
 *  <file name="sample-thf-table-components/sample-thf-table-components.component.html"> </file>
 * </example>
 */
export declare class ThfTableComponent extends ThfTableBaseComponent implements AfterViewInit, DoCheck, OnDestroy {
    private changeDetector;
    private decimalPipe;
    private router;
    tableRowTemplate: ThfTableRowTemplateDirective;
    thfPopupComponent: ThfPopupComponent;
    tableContainerElement: any;
    tableFooterElement: any;
    tableWrapperElement: any;
    actionsIconElement: QueryList<any>;
    actionsElement: QueryList<any>;
    headersTable: QueryList<any>;
    heightTableContainer: any;
    parentRef: any;
    popupTarget: any;
    tableOpacity: number;
    tooltipText: string;
    private differ;
    private footerHeight;
    private initialized;
    private timeoutResize;
    private visibleElement;
    private clickListener;
    private resizeListener;
    constructor(thfDate: ThfDateService, differs: IterableDiffers, viewRef: ViewContainerRef, renderer: Renderer2, changeDetector: ChangeDetectorRef, decimalPipe: DecimalPipe, router: Router);
    readonly detailHideSelect: boolean;
    readonly firstAction: ThfTableAction;
    readonly hasRowTemplate: boolean;
    readonly visibleActions: ThfTableAction[];
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    checkDisabled(row: any, column: ThfTableColumn): any;
    executeTableAction(row: any, tableAction: any): void;
    columnCountForMasterDetail(): number;
    columnCount(): number;
    formatNumber(value: any, format: string): any;
    getSubtitleColumn(row: any, subtitleColumn: ThfTableColumn): ThfTableSubtitleColumn;
    getBooleanLabel(rowValue: any, columnBoolean: ThfTableColumn): string;
    getColumnIcons(row: any, columnIcon: ThfTableColumn): any;
    getColumnLabel(row: any, columnLabel: ThfTableColumn): ThfTableColumnLabel;
    getColumnTitleLabel(column: ThfTableColumn): string;
    verifyWidthColumnsPixels(): boolean;
    calculateWidthHeaders(): void;
    containsMasterDetail(row: any): any;
    isShowRowTemplate(row: any, index: number): boolean;
    isShowMasterDetail(row: any): boolean;
    tooltipMouseEnter(event: any, column?: ThfTableColumn, row?: any): any;
    tooltipMouseLeave(): void;
    verifyChangeHeightInFooter(): boolean;
    verifyCalculateHeightTableContainer(): void;
    calculateHeightTableContainer(height: any): void;
    togglePopup(row: any, targetRef: any): void;
    protected showContainer(container: string): void;
    private checkChangesItems;
    private checkingIfColumnHasTooltip;
    private getHeightTableFooter;
    private hideContainer;
    private mergeCustomIcons;
    private validateTableAction;
    private debounceResize;
    private removeListeners;
    private setTableOpacity;
}
