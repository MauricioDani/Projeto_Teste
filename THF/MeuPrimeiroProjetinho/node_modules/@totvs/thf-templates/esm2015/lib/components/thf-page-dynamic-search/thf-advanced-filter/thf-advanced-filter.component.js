/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild } from '@angular/core';
import { ThfDynamicFormComponent, ThfModalComponent } from '@totvs/thf-ui';
import { ThfAdvancedFilterBaseComponent } from './thf-advanced-filter-base.component';
/**
 * \@docsPrivate
 *
 * \@docsExtends ThfAdvancedFilterBaseComponent
 *
 * \@examplePrivate
 *
 * <example-private name="thf-advanced-filter" title="Totvs Busca AvanÃ§ada">
 *   <file name="sample-thf-advanced-filter.component.html"> </file>
 *   <file name="sample-thf-advanced-filter.component.ts"> </file>
 * </example-private>
 */
export class ThfAdvancedFilterComponent extends ThfAdvancedFilterBaseComponent {
    constructor() {
        super(...arguments);
        this.filter = {};
        this.primaryAction = {
            action: (/**
             * @return {?}
             */
            () => {
                /** @type {?} */
                const models = this.getValuesFromForm();
                this.searchEvent.emit(models);
                this.thfModal.close();
            }),
            label: this.literals.primaryActionLabel
        };
        this.secondaryAction = {
            action: (/**
             * @return {?}
             */
            () => {
                this.thfModal.close();
            }),
            label: this.literals.secondaryActionLabel
        };
    }
    // Retorna os models dos campos preenchidos
    /**
     * @return {?}
     */
    getValuesFromForm() {
        Object.keys(this.filter).forEach((/**
         * @param {?} property
         * @return {?}
         */
        property => {
            if (this.filter[property] === undefined || this.filter[property] === '') {
                delete this.filter[property];
            }
        }));
        return this.filter;
    }
    /**
     * @return {?}
     */
    open() {
        this.filter = {};
        this.thfModal.open();
    }
}
ThfAdvancedFilterComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-advanced-filter',
                template: "<thf-modal\n  t-hide-close\n  [t-primary-action]=\"primaryAction\"\n  [t-secondary-action]=\"secondaryAction\"\n  [t-title]=\"literals.title\">\n\n  <thf-dynamic-form\n    [t-fields]=\"filters\"\n    [t-value]=\"filter\">\n  </thf-dynamic-form>\n\n</thf-modal>\n"
            }] }
];
ThfAdvancedFilterComponent.propDecorators = {
    thfModal: [{ type: ViewChild, args: [ThfModalComponent, { static: true },] }],
    thfDynamicForm: [{ type: ViewChild, args: [ThfDynamicFormComponent, { static: true },] }]
};
if (false) {
    /** @type {?} */
    ThfAdvancedFilterComponent.prototype.filter;
    /** @type {?} */
    ThfAdvancedFilterComponent.prototype.thfModal;
    /** @type {?} */
    ThfAdvancedFilterComponent.prototype.thfDynamicForm;
    /** @type {?} */
    ThfAdvancedFilterComponent.prototype.primaryAction;
    /** @type {?} */
    ThfAdvancedFilterComponent.prototype.secondaryAction;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWFkdmFuY2VkLWZpbHRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXRlbXBsYXRlcy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1wYWdlLWR5bmFtaWMtc2VhcmNoL3RoZi1hZHZhbmNlZC1maWx0ZXIvdGhmLWFkdmFuY2VkLWZpbHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXJELE9BQU8sRUFBRSx1QkFBdUIsRUFBa0IsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0YsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7Ozs7Ozs7Ozs7Ozs7QUFrQnRGLE1BQU0sT0FBTywwQkFBMkIsU0FBUSw4QkFBOEI7SUFKOUU7O1FBTUUsV0FBTSxHQUFHLEVBQUUsQ0FBQztRQU1aLGtCQUFhLEdBQW1CO1lBQzlCLE1BQU07OztZQUFFLEdBQUcsRUFBRTs7c0JBQ0wsTUFBTSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtnQkFFdkMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQzlCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDeEIsQ0FBQyxDQUFBO1lBQ0QsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsa0JBQWtCO1NBQ3hDLENBQUM7UUFFRixvQkFBZSxHQUFtQjtZQUNoQyxNQUFNOzs7WUFBRSxHQUFHLEVBQUU7Z0JBQ1gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUN4QixDQUFDLENBQUE7WUFDRCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0I7U0FDMUMsQ0FBQztJQWtCSixDQUFDOzs7OztJQWZDLGlCQUFpQjtRQUNmLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU87Ozs7UUFBQyxRQUFRLENBQUMsRUFBRTtZQUMxQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssU0FBUyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxFQUFFO2dCQUN2RSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDOUI7UUFDSCxDQUFDLEVBQUMsQ0FBQztRQUVILE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQsSUFBSTtRQUNGLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDdkIsQ0FBQzs7O1lBM0NGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixrUkFBbUQ7YUFDcEQ7Ozt1QkFLRSxTQUFTLFNBQUMsaUJBQWlCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOzZCQUU3QyxTQUFTLFNBQUMsdUJBQXVCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOzs7O0lBSnBELDRDQUFZOztJQUVaLDhDQUE0RTs7SUFFNUUsb0RBQThGOztJQUU5RixtREFRRTs7SUFFRixxREFLRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZkR5bmFtaWNGb3JtQ29tcG9uZW50LCBUaGZNb2RhbEFjdGlvbiwgVGhmTW9kYWxDb21wb25lbnQgfSBmcm9tICdAdG90dnMvdGhmLXVpJztcblxuaW1wb3J0IHsgVGhmQWR2YW5jZWRGaWx0ZXJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi90aGYtYWR2YW5jZWQtZmlsdGVyLWJhc2UuY29tcG9uZW50JztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZG9jc0V4dGVuZHMgVGhmQWR2YW5jZWRGaWx0ZXJCYXNlQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVQcml2YXRlXG4gKlxuICogPGV4YW1wbGUtcHJpdmF0ZSBuYW1lPVwidGhmLWFkdmFuY2VkLWZpbHRlclwiIHRpdGxlPVwiVG90dnMgQnVzY2EgQXZhbsOnYWRhXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWFkdmFuY2VkLWZpbHRlci5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLWFkdmFuY2VkLWZpbHRlci5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlLXByaXZhdGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1hZHZhbmNlZC1maWx0ZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLWFkdmFuY2VkLWZpbHRlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGhmQWR2YW5jZWRGaWx0ZXJDb21wb25lbnQgZXh0ZW5kcyBUaGZBZHZhbmNlZEZpbHRlckJhc2VDb21wb25lbnQge1xuXG4gIGZpbHRlciA9IHt9O1xuXG4gIEBWaWV3Q2hpbGQoVGhmTW9kYWxDb21wb25lbnQsIHsgc3RhdGljOiB0cnVlIH0pIHRoZk1vZGFsOiBUaGZNb2RhbENvbXBvbmVudDtcblxuICBAVmlld0NoaWxkKFRoZkR5bmFtaWNGb3JtQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSB0aGZEeW5hbWljRm9ybTogVGhmRHluYW1pY0Zvcm1Db21wb25lbnQ7XG5cbiAgcHJpbWFyeUFjdGlvbjogVGhmTW9kYWxBY3Rpb24gPSB7XG4gICAgYWN0aW9uOiAoKSA9PiB7XG4gICAgICBjb25zdCBtb2RlbHMgPSB0aGlzLmdldFZhbHVlc0Zyb21Gb3JtKCk7XG5cbiAgICAgIHRoaXMuc2VhcmNoRXZlbnQuZW1pdChtb2RlbHMpO1xuICAgICAgdGhpcy50aGZNb2RhbC5jbG9zZSgpO1xuICAgIH0sXG4gICAgbGFiZWw6IHRoaXMubGl0ZXJhbHMucHJpbWFyeUFjdGlvbkxhYmVsXG4gIH07XG5cbiAgc2Vjb25kYXJ5QWN0aW9uOiBUaGZNb2RhbEFjdGlvbiA9IHtcbiAgICBhY3Rpb246ICgpID0+IHtcbiAgICAgIHRoaXMudGhmTW9kYWwuY2xvc2UoKTtcbiAgICB9LFxuICAgIGxhYmVsOiB0aGlzLmxpdGVyYWxzLnNlY29uZGFyeUFjdGlvbkxhYmVsXG4gIH07XG5cbiAgLy8gUmV0b3JuYSBvcyBtb2RlbHMgZG9zIGNhbXBvcyBwcmVlbmNoaWRvc1xuICBnZXRWYWx1ZXNGcm9tRm9ybSgpIHtcbiAgICBPYmplY3Qua2V5cyh0aGlzLmZpbHRlcikuZm9yRWFjaChwcm9wZXJ0eSA9PiB7XG4gICAgICBpZiAodGhpcy5maWx0ZXJbcHJvcGVydHldID09PSB1bmRlZmluZWQgfHwgdGhpcy5maWx0ZXJbcHJvcGVydHldID09PSAnJykge1xuICAgICAgICBkZWxldGUgdGhpcy5maWx0ZXJbcHJvcGVydHldO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRoaXMuZmlsdGVyO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLmZpbHRlciA9IHt9O1xuICAgIHRoaXMudGhmTW9kYWwub3BlbigpO1xuICB9XG5cbn1cbiJdfQ==