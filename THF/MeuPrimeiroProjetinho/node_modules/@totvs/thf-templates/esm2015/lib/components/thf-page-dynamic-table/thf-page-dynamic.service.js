/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { map } from 'rxjs/operators';
export class ThfPageDynamicService {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
        this.endpoint = '/';
        this.headers = new HttpHeaders({
            'X-TOTVS-SCREEN-LOCK': 'true'
        });
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    configServiceApi(config = {}) {
        this.endpoint = config.endpoint;
    }
    /**
     * @param {?=} type
     * @return {?}
     */
    getMetadata(type = 'list') {
        /** @type {?} */
        const key = `${this.endpoint}-${type}-metadata`;
        /** @type {?} */
        const cache = JSON.parse(localStorage.getItem(key)) || {};
        /** @type {?} */
        const url = `${this.endpoint}/metadata?type=${type}&version=${cache.version || ''}`;
        return this.http.get(url).pipe(map((/**
         * @param {?} response
         * @return {?}
         */
        (response) => {
            if (response.version === cache.version) {
                return cache;
            }
            localStorage.setItem(key, JSON.stringify(response));
            return Object.assign({}, cache, response);
        })));
    }
    // Deleta um único recurso
    /**
     * @param {?} id
     * @return {?}
     */
    deleteResource(id) {
        return this.http.delete(`${this.endpoint}/${id}`, { headers: this.headers });
    }
    // Deleta recursos em lote
    /**
     * @param {?} ids
     * @return {?}
     */
    deleteResources(ids) {
        return this.http.request('delete', `${this.endpoint}`, { headers: this.headers, body: ids });
    }
    // Busca uma lista de recursos
    /**
     * @param {?=} params
     * @return {?}
     */
    getResources(params = {}) {
        return this.http.get(this.endpoint, { headers: this.headers, params });
    }
    // Busca um único recurso
    /**
     * @param {?} id
     * @return {?}
     */
    getResource(id) {
        return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers });
    }
    // Cria um recurso
    /**
     * @param {?} resource
     * @return {?}
     */
    createResource(resource) {
        return this.http.post(`${this.endpoint}`, resource, { headers: this.headers });
    }
    // Atualiza um recurso
    /**
     * @param {?} id
     * @param {?} resource
     * @return {?}
     */
    updateResource(id, resource) {
        return this.http.put(`${this.endpoint}/${id}`, resource, { headers: this.headers });
    }
}
ThfPageDynamicService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ThfPageDynamicService.ctorParameters = () => [
    { type: HttpClient }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicService.prototype.endpoint;
    /** @type {?} */
    ThfPageDynamicService.prototype.headers;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2UtZHluYW1pYy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvdHZzL3RoZi10ZW1wbGF0ZXMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aGYtcGFnZS1keW5hbWljLXRhYmxlL3RoZi1wYWdlLWR5bmFtaWMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRy9ELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUdyQyxNQUFNLE9BQU8scUJBQXFCOzs7O0lBUWhDLFlBQW9CLElBQWdCO1FBQWhCLFNBQUksR0FBSixJQUFJLENBQVk7UUFONUIsYUFBUSxHQUFHLEdBQUcsQ0FBQztRQUVkLFlBQU8sR0FBZ0IsSUFBSSxXQUFXLENBQUM7WUFDOUMscUJBQXFCLEVBQUUsTUFBTTtTQUM5QixDQUFDLENBQUM7SUFFcUMsQ0FBQzs7Ozs7SUFFekMsZ0JBQWdCLENBQUMsU0FBZ0MsRUFBRTtRQUNqRCxJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7SUFDbEMsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBZSxNQUFNOztjQUN6QixHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksV0FBVzs7Y0FDekMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUU7O2NBRW5ELEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLGtCQUFrQixJQUFJLFlBQVksS0FBSyxDQUFDLE9BQU8sSUFBSSxFQUFFLEVBQUU7UUFFbkYsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRzs7OztRQUFDLENBQUMsUUFBYSxFQUFFLEVBQUU7WUFDbkQsSUFBSSxRQUFRLENBQUMsT0FBTyxLQUFLLEtBQUssQ0FBQyxPQUFPLEVBQUU7Z0JBQ3RDLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFFRCxZQUFZLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFFcEQseUJBQWEsS0FBSyxFQUFLLFFBQVEsRUFBRztRQUNwQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQ04sQ0FBQzs7Ozs7O0lBR0QsY0FBYyxDQUFDLEVBQUU7UUFDZixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztJQUMvRSxDQUFDOzs7Ozs7SUFHRCxlQUFlLENBQUMsR0FBZTtRQUM3QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBRSxDQUFDO0lBQ2hHLENBQUM7Ozs7OztJQUdELFlBQVksQ0FBQyxTQUFhLEVBQUU7UUFDMUIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUN6RSxDQUFDOzs7Ozs7SUFHRCxXQUFXLENBQUMsRUFBRTtRQUNaLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQzVFLENBQUM7Ozs7OztJQUdELGNBQWMsQ0FBQyxRQUFRO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7Ozs7Ozs7SUFHRCxjQUFjLENBQUMsRUFBRSxFQUFFLFFBQVE7UUFDekIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLElBQUksRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQ3RGLENBQUM7OztZQTVERixVQUFVOzs7O1lBTEYsVUFBVTs7Ozs7OztJQVFqQix5Q0FBdUI7O0lBRXZCLHdDQUVHOzs7OztJQUVTLHFDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBIZWFkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUaGZQYWdlRHluYW1pY1NlcnZpY2Uge1xuXG4gIHByaXZhdGUgZW5kcG9pbnQgPSAnLyc7XG5cbiAgcmVhZG9ubHkgaGVhZGVyczogSHR0cEhlYWRlcnMgPSBuZXcgSHR0cEhlYWRlcnMoe1xuICAgICdYLVRPVFZTLVNDUkVFTi1MT0NLJzogJ3RydWUnXG4gIH0pO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cENsaWVudCkgeyB9XG5cbiAgY29uZmlnU2VydmljZUFwaShjb25maWc6IHsgZW5kcG9pbnQ/OiBzdHJpbmcgfSA9IHt9KSB7XG4gICAgdGhpcy5lbmRwb2ludCA9IGNvbmZpZy5lbmRwb2ludDtcbiAgfVxuXG4gIGdldE1ldGFkYXRhKHR5cGU6IHN0cmluZyA9ICdsaXN0Jyk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgY29uc3Qga2V5ID0gYCR7dGhpcy5lbmRwb2ludH0tJHt0eXBlfS1tZXRhZGF0YWA7XG4gICAgY29uc3QgY2FjaGUgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpIHx8IHt9O1xuXG4gICAgY29uc3QgdXJsID0gYCR7dGhpcy5lbmRwb2ludH0vbWV0YWRhdGE/dHlwZT0ke3R5cGV9JnZlcnNpb249JHtjYWNoZS52ZXJzaW9uIHx8ICcnfWA7XG5cbiAgICByZXR1cm4gdGhpcy5odHRwLmdldCh1cmwpLnBpcGUobWFwKChyZXNwb25zZTogYW55KSA9PiB7XG4gICAgICBpZiAocmVzcG9uc2UudmVyc2lvbiA9PT0gY2FjaGUudmVyc2lvbikge1xuICAgICAgICByZXR1cm4gY2FjaGU7XG4gICAgICB9XG5cbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpKTtcblxuICAgICAgcmV0dXJuICB7IC4uLmNhY2hlLCAuLi5yZXNwb25zZSB9O1xuICAgIH0pKTtcbiAgfVxuXG4gIC8vIERlbGV0YSB1bSDDum5pY28gcmVjdXJzb1xuICBkZWxldGVSZXNvdXJjZShpZCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5kZWxldGUoYCR7dGhpcy5lbmRwb2ludH0vJHtpZH1gLCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KTtcbiAgfVxuXG4gIC8vIERlbGV0YSByZWN1cnNvcyBlbSBsb3RlXG4gIGRlbGV0ZVJlc291cmNlcyhpZHM6IEFycmF5PGFueT4pOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAucmVxdWVzdCgnZGVsZXRlJywgYCR7dGhpcy5lbmRwb2ludH1gLCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycywgYm9keTogaWRzIH0gKTtcbiAgfVxuXG4gIC8vIEJ1c2NhIHVtYSBsaXN0YSBkZSByZWN1cnNvc1xuICBnZXRSZXNvdXJjZXMocGFyYW1zOiB7fSA9IHt9KTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldCh0aGlzLmVuZHBvaW50LCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycywgcGFyYW1zIH0pO1xuICB9XG5cbiAgLy8gQnVzY2EgdW0gw7puaWNvIHJlY3Vyc29cbiAgZ2V0UmVzb3VyY2UoaWQpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KGAke3RoaXMuZW5kcG9pbnR9LyR7aWR9YCwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSk7XG4gIH1cblxuICAvLyBDcmlhIHVtIHJlY3Vyc29cbiAgY3JlYXRlUmVzb3VyY2UocmVzb3VyY2UpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAucG9zdChgJHt0aGlzLmVuZHBvaW50fWAsIHJlc291cmNlLCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KTtcbiAgfVxuXG4gIC8vIEF0dWFsaXphIHVtIHJlY3Vyc29cbiAgdXBkYXRlUmVzb3VyY2UoaWQsIHJlc291cmNlKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLnB1dChgJHt0aGlzLmVuZHBvaW50fS8ke2lkfWAsIHJlc291cmNlLCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KTtcbiAgfVxufVxuIl19