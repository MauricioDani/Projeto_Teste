/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Input, Output } from '@angular/core';
import { browserLanguage, thfLocaleDefault } from '../../utils/util';
/** @type {?} */
export const thfPageDynamicSearchLiteralsDefault = {
    en: {
        disclaimerGroupTitle: 'Displaying results filtered by:',
        filterSettingsPlaceholder: 'Search',
        quickSearchLabel: 'Quick search:'
    },
    es: {
        disclaimerGroupTitle: 'Presentando resultados filtrados por:',
        filterSettingsPlaceholder: 'Buscar',
        quickSearchLabel: 'Búsqueda rápida:'
    },
    pt: {
        disclaimerGroupTitle: 'Apresentando resultados filtrados por:',
        filterSettingsPlaceholder: 'Pesquisar',
        quickSearchLabel: 'Pesquisa rápida:'
    }
};
/**
 * \@description
 *
 * Componente com as ações de pesquisa já definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs
 * e exiba as informações.
 */
export class ThfPageDynamicSearchBaseComponent {
    constructor() {
        this._filters = [];
        this.literals = Object.assign({}, thfPageDynamicSearchLiteralsDefault[thfLocaleDefault], thfPageDynamicSearchLiteralsDefault[browserLanguage()]);
        /**
         * Nesta propriedade deve ser definido um array de objetos que implementam a interface `ThfPageAction`.
         */
        this.actions = [];
        /**
         * Objeto com propriedades do breadcrumb.
         */
        this.breadcrumb = { items: [] };
        /**
         * \@description
         *
         * Evento disparado ao executar a pesquisa avançada, o mesmo irá repassar um objeto com os valores preenchidos no modal de pesquisa.
         *
         * > Campos não preenchidos não irão aparecer no objeto passado por parâmetro.
         */
        this.advancedSearch = new EventEmitter();
        /**
         * Evento disparado ao remover um ou todos os disclaimers pelo usuário.
         */
        this.changeDisclaimers = new EventEmitter();
        /**
         * Evento disparado ao realizar uma busca pelo campo de pesquisa rápida, o mesmo será chamado repassando o valor digitado.
         */
        this.quickSearch = new EventEmitter();
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Lista dos campos usados na busca avançada. Caso o mesmo não seja passado a busca avançada não será exibida.
     * @param {?} filters
     * @return {?}
     */
    set filters(filters) {
        this._filters = Array.isArray(filters) ? [...filters] : [];
    }
    /**
     * @return {?}
     */
    get filters() {
        return this._filters;
    }
}
ThfPageDynamicSearchBaseComponent.propDecorators = {
    actions: [{ type: Input, args: ['t-actions',] }],
    breadcrumb: [{ type: Input, args: ['t-breadcrumb',] }],
    filters: [{ type: Input, args: ['t-filters',] }],
    title: [{ type: Input, args: ['t-title',] }],
    advancedSearch: [{ type: Output, args: ['t-advanced-search',] }],
    changeDisclaimers: [{ type: Output, args: ['t-change-disclaimers',] }],
    quickSearch: [{ type: Output, args: ['t-quick-search',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicSearchBaseComponent.prototype._filters;
    /** @type {?} */
    ThfPageDynamicSearchBaseComponent.prototype.literals;
    /**
     * Nesta propriedade deve ser definido um array de objetos que implementam a interface `ThfPageAction`.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.actions;
    /**
     * Objeto com propriedades do breadcrumb.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.breadcrumb;
    /**
     * Título da página.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.title;
    /**
     * \@description
     *
     * Evento disparado ao executar a pesquisa avançada, o mesmo irá repassar um objeto com os valores preenchidos no modal de pesquisa.
     *
     * > Campos não preenchidos não irão aparecer no objeto passado por parâmetro.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.advancedSearch;
    /**
     * Evento disparado ao remover um ou todos os disclaimers pelo usuário.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.changeDisclaimers;
    /**
     * Evento disparado ao realizar uma busca pelo campo de pesquisa rápida, o mesmo será chamado repassando o valor digitado.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.quickSearch;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2UtZHluYW1pYy1zZWFyY2gtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXRlbXBsYXRlcy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1wYWdlLWR5bmFtaWMtc2VhcmNoL3RoZi1wYWdlLWR5bmFtaWMtc2VhcmNoLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQUVyRSxNQUFNLE9BQU8sbUNBQW1DLEdBQUc7SUFDakQsRUFBRSxFQUFFO1FBQ0Ysb0JBQW9CLEVBQUUsaUNBQWlDO1FBQ3ZELHlCQUF5QixFQUFFLFFBQVE7UUFDbkMsZ0JBQWdCLEVBQUUsZUFBZTtLQUNsQztJQUNELEVBQUUsRUFBRTtRQUNGLG9CQUFvQixFQUFFLHVDQUF1QztRQUM3RCx5QkFBeUIsRUFBRSxRQUFRO1FBQ25DLGdCQUFnQixFQUFFLGtCQUFrQjtLQUNyQztJQUNELEVBQUUsRUFBRTtRQUNGLG9CQUFvQixFQUFFLHdDQUF3QztRQUM5RCx5QkFBeUIsRUFBRSxXQUFXO1FBQ3RDLGdCQUFnQixFQUFFLGtCQUFrQjtLQUNyQztDQUNGOzs7Ozs7O0FBUUQsTUFBTSxPQUFPLGlDQUFpQztJQUE5QztRQUVVLGFBQVEsR0FBK0IsRUFBRSxDQUFDO1FBRWxELGFBQVEscUJBQ0gsbUNBQW1DLENBQUMsZ0JBQWdCLENBQUMsRUFDckQsbUNBQW1DLENBQUMsZUFBZSxFQUFFLENBQUMsRUFDekQ7Ozs7UUFHa0IsWUFBTyxHQUEwQixFQUFFLENBQUM7Ozs7UUFHakMsZUFBVSxHQUFtQixFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQzs7Ozs7Ozs7UUEyQnJDLG1CQUFjLEdBQXVCLElBQUksWUFBWSxFQUFFLENBQUM7Ozs7UUFHckQsc0JBQWlCLEdBQXVCLElBQUksWUFBWSxFQUFFLENBQUM7Ozs7UUFHakUsZ0JBQVcsR0FBMEIsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUVwRixDQUFDOzs7Ozs7Ozs7O0lBMUJDLElBQXdCLE9BQU8sQ0FBQyxPQUFtQztRQUNqRSxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzdELENBQUM7Ozs7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQzs7O3NCQWxCQSxLQUFLLFNBQUMsV0FBVzt5QkFHakIsS0FBSyxTQUFDLGNBQWM7c0JBU3BCLEtBQUssU0FBQyxXQUFXO29CQVNqQixLQUFLLFNBQUMsU0FBUzs2QkFTZixNQUFNLFNBQUMsbUJBQW1CO2dDQUcxQixNQUFNLFNBQUMsc0JBQXNCOzBCQUc3QixNQUFNLFNBQUMsZ0JBQWdCOzs7Ozs7O0lBNUN4QixxREFBa0Q7O0lBRWxELHFEQUdFOzs7OztJQUdGLG9EQUF3RDs7Ozs7SUFHeEQsdURBQWtFOzs7OztJQWtCbEUsa0RBQWdDOzs7Ozs7Ozs7SUFTaEMsMkRBQXFGOzs7OztJQUdyRiw4REFBMkY7Ozs7O0lBRzNGLHdEQUFrRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaGZCcmVhZGNydW1iLCBUaGZEeW5hbWljRm9ybUZpZWxkLCBUaGZQYWdlQWN0aW9uIH0gZnJvbSAnQHRvdHZzL3RoZi11aSc7XG5cbmltcG9ydCB7IGJyb3dzZXJMYW5ndWFnZSwgdGhmTG9jYWxlRGVmYXVsdCB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5leHBvcnQgY29uc3QgdGhmUGFnZUR5bmFtaWNTZWFyY2hMaXRlcmFsc0RlZmF1bHQgPSB7XG4gIGVuOiB7XG4gICAgZGlzY2xhaW1lckdyb3VwVGl0bGU6ICdEaXNwbGF5aW5nIHJlc3VsdHMgZmlsdGVyZWQgYnk6JyxcbiAgICBmaWx0ZXJTZXR0aW5nc1BsYWNlaG9sZGVyOiAnU2VhcmNoJyxcbiAgICBxdWlja1NlYXJjaExhYmVsOiAnUXVpY2sgc2VhcmNoOidcbiAgfSxcbiAgZXM6IHtcbiAgICBkaXNjbGFpbWVyR3JvdXBUaXRsZTogJ1ByZXNlbnRhbmRvIHJlc3VsdGFkb3MgZmlsdHJhZG9zIHBvcjonLFxuICAgIGZpbHRlclNldHRpbmdzUGxhY2Vob2xkZXI6ICdCdXNjYXInLFxuICAgIHF1aWNrU2VhcmNoTGFiZWw6ICdCw7pzcXVlZGEgcsOhcGlkYTonXG4gIH0sXG4gIHB0OiB7XG4gICAgZGlzY2xhaW1lckdyb3VwVGl0bGU6ICdBcHJlc2VudGFuZG8gcmVzdWx0YWRvcyBmaWx0cmFkb3MgcG9yOicsXG4gICAgZmlsdGVyU2V0dGluZ3NQbGFjZWhvbGRlcjogJ1Blc3F1aXNhcicsXG4gICAgcXVpY2tTZWFyY2hMYWJlbDogJ1Blc3F1aXNhIHLDoXBpZGE6J1xuICB9XG59O1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgY29tIGFzIGHDp8O1ZXMgZGUgcGVzcXVpc2EgasOhIGRlZmluaWRhcywgYmFzdGFuZG8gcXVlIG8gZGVzZW52b2x2ZWRvciBpbXBsZW1lbnRlIGFwZW5hcyBhIGNoYW1hZGEgcGFyYSBhcyBBUElzXG4gKiBlIGV4aWJhIGFzIGluZm9ybWHDp8O1ZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBUaGZQYWdlRHluYW1pY1NlYXJjaEJhc2VDb21wb25lbnQge1xuXG4gIHByaXZhdGUgX2ZpbHRlcnM6IEFycmF5PFRoZkR5bmFtaWNGb3JtRmllbGQ+ID0gW107XG5cbiAgbGl0ZXJhbHMgPSB7XG4gICAgLi4udGhmUGFnZUR5bmFtaWNTZWFyY2hMaXRlcmFsc0RlZmF1bHRbdGhmTG9jYWxlRGVmYXVsdF0sXG4gICAgLi4udGhmUGFnZUR5bmFtaWNTZWFyY2hMaXRlcmFsc0RlZmF1bHRbYnJvd3Nlckxhbmd1YWdlKCldXG4gIH07XG5cbiAgLyoqIE5lc3RhIHByb3ByaWVkYWRlIGRldmUgc2VyIGRlZmluaWRvIHVtIGFycmF5IGRlIG9iamV0b3MgcXVlIGltcGxlbWVudGFtIGEgaW50ZXJmYWNlIGBUaGZQYWdlQWN0aW9uYC4gKi9cbiAgQElucHV0KCd0LWFjdGlvbnMnKSBhY3Rpb25zPzogQXJyYXk8VGhmUGFnZUFjdGlvbj4gPSBbXTtcblxuICAvKiogT2JqZXRvIGNvbSBwcm9wcmllZGFkZXMgZG8gYnJlYWRjcnVtYi4gKi9cbiAgQElucHV0KCd0LWJyZWFkY3J1bWInKSBicmVhZGNydW1iPzogVGhmQnJlYWRjcnVtYiA9IHsgaXRlbXM6IFtdIH07XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogTGlzdGEgZG9zIGNhbXBvcyB1c2Fkb3MgbmEgYnVzY2EgYXZhbsOnYWRhLiBDYXNvIG8gbWVzbW8gbsOjbyBzZWphIHBhc3NhZG8gYSBidXNjYSBhdmFuw6dhZGEgbsOjbyBzZXLDoSBleGliaWRhLlxuICAgKi9cbiAgQElucHV0KCd0LWZpbHRlcnMnKSBzZXQgZmlsdGVycyhmaWx0ZXJzOiBBcnJheTxUaGZEeW5hbWljRm9ybUZpZWxkPikge1xuICAgIHRoaXMuX2ZpbHRlcnMgPSBBcnJheS5pc0FycmF5KGZpbHRlcnMpID8gWy4uLmZpbHRlcnNdIDogW107XG4gIH1cblxuICBnZXQgZmlsdGVycygpOiBBcnJheTxUaGZEeW5hbWljRm9ybUZpZWxkPiB7XG4gICAgcmV0dXJuIHRoaXMuX2ZpbHRlcnM7XG4gIH1cblxuICAvKiogVMOtdHVsbyBkYSBww6FnaW5hLiAqL1xuICBASW5wdXQoJ3QtdGl0bGUnKSB0aXRsZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRXZlbnRvIGRpc3BhcmFkbyBhbyBleGVjdXRhciBhIHBlc3F1aXNhIGF2YW7Dp2FkYSwgbyBtZXNtbyBpcsOhIHJlcGFzc2FyIHVtIG9iamV0byBjb20gb3MgdmFsb3JlcyBwcmVlbmNoaWRvcyBubyBtb2RhbCBkZSBwZXNxdWlzYS5cbiAgICpcbiAgICogPiBDYW1wb3MgbsOjbyBwcmVlbmNoaWRvcyBuw6NvIGlyw6NvIGFwYXJlY2VyIG5vIG9iamV0byBwYXNzYWRvIHBvciBwYXLDom1ldHJvLlxuICAgKi9cbiAgQE91dHB1dCgndC1hZHZhbmNlZC1zZWFyY2gnKSBhZHZhbmNlZFNlYXJjaD86IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIC8qKiBFdmVudG8gZGlzcGFyYWRvIGFvIHJlbW92ZXIgdW0gb3UgdG9kb3Mgb3MgZGlzY2xhaW1lcnMgcGVsbyB1c3XDoXJpby4gKi9cbiAgQE91dHB1dCgndC1jaGFuZ2UtZGlzY2xhaW1lcnMnKSBjaGFuZ2VEaXNjbGFpbWVycz86IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIC8qKiBFdmVudG8gZGlzcGFyYWRvIGFvIHJlYWxpemFyIHVtYSBidXNjYSBwZWxvIGNhbXBvIGRlIHBlc3F1aXNhIHLDoXBpZGEsIG8gbWVzbW8gc2Vyw6EgY2hhbWFkbyByZXBhc3NhbmRvIG8gdmFsb3IgZGlnaXRhZG8uICovXG4gIEBPdXRwdXQoJ3QtcXVpY2stc2VhcmNoJykgcXVpY2tTZWFyY2g/OiBFdmVudEVtaXR0ZXI8c3RyaW5nPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxufVxuIl19