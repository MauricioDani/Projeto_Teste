/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { browserLanguage, convertToBoolean, isTypeof } from './../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para definição de cor de fundo e dos logotipos primário e secundário para os templates
 * de `thf-page-login` e demais templates de login.
 */
export class ThfPageBackgroundComponent {
    constructor() {
        this._showSelectLanguage = false;
        this.selectLanguageOptions = [
            { label: 'English', value: 'en' },
            { label: 'Español', value: 'es' },
            { label: 'Português', value: 'pt' }
        ];
        /**
         * Evento disparado ao selecionar alguma opção no seletor de idiomas.
         * Para este evento será passado como parâmetro o valor de idioma selecionado.
         */
        this.selectedLanguage = new EventEmitter();
    }
    /**
     * Caminho para a logomarca localizada na parte superior.
     * @param {?} value
     * @return {?}
     */
    set logo(value) {
        this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;
    }
    /**
     * @return {?}
     */
    get logo() {
        return this._logo;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Caminho para a logomarca localizada no rodapé.
     * @param {?} value
     * @return {?}
     */
    set secondaryLogo(value) {
        this._secondaryLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;
    }
    /**
     * @return {?}
     */
    get secondaryLogo() {
        return this._secondaryLogo;
    }
    /**
     * Define se o seletor de idiomas deve ser exibido.
     * @param {?} showSelectLanguage
     * @return {?}
     */
    set showSelectLanguage(showSelectLanguage) {
        this._showSelectLanguage = convertToBoolean(showSelectLanguage);
    }
    /**
     * @return {?}
     */
    get showSelectLanguage() {
        return this._showSelectLanguage;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.selectedLanguageOption = browserLanguage();
    }
    /**
     * @return {?}
     */
    onChangeLanguage() {
        this.selectedLanguage.emit(this.selectedLanguageOption);
    }
}
ThfPageBackgroundComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-page-background',
                template: "<div class=\"thf-page-login-container\">\n  <div class=\"thf-page-login-panel\">\n    <img *ngIf=\"logo\"\n      class=\"thf-page-background-main-logo\"\n      [class.thf-page-background-hide-logo]=\"hideLogo\"\n      alt=\"main-logo\"\n      [src]=\"logo\">\n\n    <div class=\"thf-page-login-body\">\n      <div class=\"thf-page-login-panel-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div class=\"thf-page-background-footer thf-sm-12\">\n\n      <thf-divider class=\"thf-page-background-footer-mobile-only\"></thf-divider>\n\n      <div class=\"thf-page-background-footer-content\">\n        <div *ngIf=\"showSelectLanguage\" class=\"thf-page-background-footer-select\">\n          <thf-select\n            name=\"selectedLanguageOption\"\n            [(ngModel)]=\"selectedLanguageOption\"\n            [t-options]=\"selectLanguageOptions\"\n            (t-change) = \"onChangeLanguage()\">\n          </thf-select>\n        </div>\n\n        <div class=\"thf-page-background-secondary-logo\"\n          [ngClass]=\"showSelectLanguage ? 'thf-page-background-secondary-logo-right' : 'thf-page-background-secondary-logo-centered'\">\n\n          <img *ngIf=\"secondaryLogo\"\n            class=\"thf-page-background-secondary-logo-image\"\n            alt=\"secondary-logo\"\n            [src]=\"secondaryLogo\">\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"background\"\n    [ngClass]=\"background ? 'thf-page-login-highlight-image' : 'thf-page-login-highlight-image-off'\"\n    [style.background-image]=\"'url(' + background + ')'\">\n    <div class=\"thf-page-login-highlight-text\">\n      <div class=\"thf-font-display\">{{ highlightInfo }}</div>\n    </div>\n  </div>\n</div>\n"
            }] }
];
ThfPageBackgroundComponent.propDecorators = {
    background: [{ type: Input, args: ['t-background',] }],
    hideLogo: [{ type: Input, args: ['t-hide-logo',] }],
    highlightInfo: [{ type: Input, args: ['t-highlight-info',] }],
    logo: [{ type: Input, args: ['t-logo',] }],
    secondaryLogo: [{ type: Input, args: ['t-secondary-logo',] }],
    showSelectLanguage: [{ type: Input, args: ['t-show-select-language',] }],
    selectedLanguage: [{ type: Output, args: ['t-selected-language',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageBackgroundComponent.prototype._logo;
    /**
     * @type {?}
     * @private
     */
    ThfPageBackgroundComponent.prototype._secondaryLogo;
    /**
     * @type {?}
     * @private
     */
    ThfPageBackgroundComponent.prototype._showSelectLanguage;
    /** @type {?} */
    ThfPageBackgroundComponent.prototype.selectedLanguageOption;
    /** @type {?} */
    ThfPageBackgroundComponent.prototype.selectLanguageOptions;
    /**
     * Insere uma imagem de destaque ao lado direito do container.
     * @type {?}
     */
    ThfPageBackgroundComponent.prototype.background;
    /**
     * Designa se o logotipo deve desaparecer em resoluções menores.
     * @type {?}
     */
    ThfPageBackgroundComponent.prototype.hideLogo;
    /**
     * Texto de destaque sobreposto à imagem de destaque. Essa opção é utilizada em conjunto com o atributo `t-background`.
     * @type {?}
     */
    ThfPageBackgroundComponent.prototype.highlightInfo;
    /**
     * Evento disparado ao selecionar alguma opção no seletor de idiomas.
     * Para este evento será passado como parâmetro o valor de idioma selecionado.
     * @type {?}
     */
    ThfPageBackgroundComponent.prototype.selectedLanguage;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2UtYmFja2dyb3VuZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXRlbXBsYXRlcy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1wYWdlLWJhY2tncm91bmQvdGhmLXBhZ2UtYmFja2dyb3VuZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFL0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxRQUFRLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVFqRjs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxPQUFPLDBCQUEwQjtJQWJ2QztRQWlCVSx3QkFBbUIsR0FBYSxLQUFLLENBQUM7UUFJOUMsMEJBQXFCLEdBQTJCO1lBQzlDLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO1lBQ2pDLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO1lBQ2pDLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO1NBQ3BDLENBQUM7Ozs7O1FBK0M2QixxQkFBZ0IsR0FBdUIsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQVVoRyxDQUFDOzs7Ozs7SUE3Q0MsSUFBcUIsSUFBSSxDQUFDLEtBQVU7UUFDbEMsSUFBSSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxJQUFJLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDN0UsQ0FBQzs7OztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDOzs7Ozs7Ozs7O0lBU0QsSUFBK0IsYUFBYSxDQUFDLEtBQVU7UUFDckQsSUFBSSxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxJQUFJLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDdEYsQ0FBQzs7OztJQUVELElBQUksYUFBYTtRQUNmLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUM3QixDQUFDOzs7Ozs7SUFHRCxJQUFxQyxrQkFBa0IsQ0FBQyxrQkFBMkI7UUFDakYsSUFBSSxDQUFDLG1CQUFtQixHQUFHLGdCQUFnQixDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDbEUsQ0FBQzs7OztJQUNELElBQUksa0JBQWtCO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDO0lBQ2xDLENBQUM7Ozs7SUFRRCxRQUFRO1FBQ04sSUFBSSxDQUFDLHNCQUFzQixHQUFHLGVBQWUsRUFBRSxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxnQkFBZ0I7UUFDZCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBQzFELENBQUM7OztZQWhGRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsMnREQUFtRDthQUNwRDs7O3lCQXlCRSxLQUFLLFNBQUMsY0FBYzt1QkFHcEIsS0FBSyxTQUFDLGFBQWE7NEJBR25CLEtBQUssU0FBQyxrQkFBa0I7bUJBR3hCLEtBQUssU0FBQyxRQUFROzRCQWVkLEtBQUssU0FBQyxrQkFBa0I7aUNBU3hCLEtBQUssU0FBQyx3QkFBd0I7K0JBVzlCLE1BQU0sU0FBQyxxQkFBcUI7Ozs7Ozs7SUF6RDdCLDJDQUF1Qjs7Ozs7SUFDdkIsb0RBQWdDOzs7OztJQUNoQyx5REFBOEM7O0lBRTlDLDREQUErQjs7SUFFL0IsMkRBSUU7Ozs7O0lBR0YsZ0RBQTJDOzs7OztJQUczQyw4Q0FBeUM7Ozs7O0lBR3pDLG1EQUFrRDs7Ozs7O0lBc0NsRCxzREFBOEYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGJyb3dzZXJMYW5ndWFnZSwgY29udmVydFRvQm9vbGVhbiwgaXNUeXBlb2YgfSBmcm9tICcuLy4uLy4uL3V0aWxzL3V0aWwnO1xuaW1wb3J0IHsgVGhmU2VsZWN0T3B0aW9uIH0gZnJvbSAnQHRvdHZzL3RoZi11aSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoZi1wYWdlLWJhY2tncm91bmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXBhZ2UtYmFja2dyb3VuZC5jb21wb25lbnQuaHRtbCdcbn0pXG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBwYXJhIGRlZmluacOnw6NvIGRlIGNvciBkZSBmdW5kbyBlIGRvcyBsb2dvdGlwb3MgcHJpbcOhcmlvIGUgc2VjdW5kw6FyaW8gcGFyYSBvcyB0ZW1wbGF0ZXNcbiAqIGRlIGB0aGYtcGFnZS1sb2dpbmAgZSBkZW1haXMgdGVtcGxhdGVzIGRlIGxvZ2luLlxuICovXG5leHBvcnQgY2xhc3MgVGhmUGFnZUJhY2tncm91bmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIHByaXZhdGUgX2xvZ28/OiBzdHJpbmc7XG4gIHByaXZhdGUgX3NlY29uZGFyeUxvZ28/OiBzdHJpbmc7XG4gIHByaXZhdGUgX3Nob3dTZWxlY3RMYW5ndWFnZT86IGJvb2xlYW4gPSBmYWxzZTtcblxuICBzZWxlY3RlZExhbmd1YWdlT3B0aW9uOiBzdHJpbmc7XG5cbiAgc2VsZWN0TGFuZ3VhZ2VPcHRpb25zOiBBcnJheTxUaGZTZWxlY3RPcHRpb24+ID0gW1xuICAgIHsgbGFiZWw6ICdFbmdsaXNoJywgdmFsdWU6ICdlbicgfSxcbiAgICB7IGxhYmVsOiAnRXNwYcOxb2wnLCB2YWx1ZTogJ2VzJyB9LFxuICAgIHsgbGFiZWw6ICdQb3J0dWd1w6pzJywgdmFsdWU6ICdwdCcgfVxuICBdO1xuXG4gIC8qKiBJbnNlcmUgdW1hIGltYWdlbSBkZSBkZXN0YXF1ZSBhbyBsYWRvIGRpcmVpdG8gZG8gY29udGFpbmVyLiAqL1xuICBASW5wdXQoJ3QtYmFja2dyb3VuZCcpIGJhY2tncm91bmQ/OiBzdHJpbmc7XG5cbiAgLyoqIERlc2lnbmEgc2UgbyBsb2dvdGlwbyBkZXZlIGRlc2FwYXJlY2VyIGVtIHJlc29sdcOnw7VlcyBtZW5vcmVzLiAqL1xuICBASW5wdXQoJ3QtaGlkZS1sb2dvJykgaGlkZUxvZ28/OiBib29sZWFuO1xuXG4gIC8qKiBUZXh0byBkZSBkZXN0YXF1ZSBzb2JyZXBvc3RvIMOgIGltYWdlbSBkZSBkZXN0YXF1ZS4gRXNzYSBvcMOnw6NvIMOpIHV0aWxpemFkYSBlbSBjb25qdW50byBjb20gbyBhdHJpYnV0byBgdC1iYWNrZ3JvdW5kYC4gKi9cbiAgQElucHV0KCd0LWhpZ2hsaWdodC1pbmZvJykgaGlnaGxpZ2h0SW5mbz86IHN0cmluZztcblxuICAvKiogQ2FtaW5obyBwYXJhIGEgbG9nb21hcmNhIGxvY2FsaXphZGEgbmEgcGFydGUgc3VwZXJpb3IuICovXG4gIEBJbnB1dCgndC1sb2dvJykgc2V0IGxvZ28odmFsdWU6IGFueSkge1xuICAgIHRoaXMuX2xvZ28gPSBpc1R5cGVvZih2YWx1ZSwgJ3N0cmluZycpICYmIHZhbHVlLnRyaW0oKSA/IHZhbHVlIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgZ2V0IGxvZ28oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xvZ287XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBDYW1pbmhvIHBhcmEgYSBsb2dvbWFyY2EgbG9jYWxpemFkYSBubyByb2RhcMOpLlxuICAgKi9cbiAgQElucHV0KCd0LXNlY29uZGFyeS1sb2dvJykgc2V0IHNlY29uZGFyeUxvZ28odmFsdWU6IGFueSkge1xuICAgIHRoaXMuX3NlY29uZGFyeUxvZ28gPSBpc1R5cGVvZih2YWx1ZSwgJ3N0cmluZycpICYmIHZhbHVlLnRyaW0oKSA/IHZhbHVlIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgZ2V0IHNlY29uZGFyeUxvZ28oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NlY29uZGFyeUxvZ287XG4gIH1cblxuICAvKiogRGVmaW5lIHNlIG8gc2VsZXRvciBkZSBpZGlvbWFzIGRldmUgc2VyIGV4aWJpZG8uICovXG4gIEBJbnB1dCgndC1zaG93LXNlbGVjdC1sYW5ndWFnZScpIHNldCBzaG93U2VsZWN0TGFuZ3VhZ2Uoc2hvd1NlbGVjdExhbmd1YWdlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fc2hvd1NlbGVjdExhbmd1YWdlID0gY29udmVydFRvQm9vbGVhbihzaG93U2VsZWN0TGFuZ3VhZ2UpO1xuICB9XG4gIGdldCBzaG93U2VsZWN0TGFuZ3VhZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Nob3dTZWxlY3RMYW5ndWFnZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFdmVudG8gZGlzcGFyYWRvIGFvIHNlbGVjaW9uYXIgYWxndW1hIG9ww6fDo28gbm8gc2VsZXRvciBkZSBpZGlvbWFzLlxuICAgKiBQYXJhIGVzdGUgZXZlbnRvIHNlcsOhIHBhc3NhZG8gY29tbyBwYXLDom1ldHJvIG8gdmFsb3IgZGUgaWRpb21hIHNlbGVjaW9uYWRvLlxuICAgKi9cbiAgQE91dHB1dCgndC1zZWxlY3RlZC1sYW5ndWFnZScpIHNlbGVjdGVkTGFuZ3VhZ2U/OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2VsZWN0ZWRMYW5ndWFnZU9wdGlvbiA9IGJyb3dzZXJMYW5ndWFnZSgpO1xuICB9XG5cbiAgb25DaGFuZ2VMYW5ndWFnZSgpIHtcbiAgICB0aGlzLnNlbGVjdGVkTGFuZ3VhZ2UuZW1pdCh0aGlzLnNlbGVjdGVkTGFuZ3VhZ2VPcHRpb24pO1xuICB9XG5cbn1cbiJdfQ==