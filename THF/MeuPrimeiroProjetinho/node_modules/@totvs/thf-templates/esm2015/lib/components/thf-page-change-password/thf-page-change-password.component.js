/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { ThfComponentInjectorService, ThfModalComponent } from '@totvs/thf-ui';
import { browserLanguage, isExternalLink, isTypeof, thfLocaleDefault } from '../../utils/util';
import { ThfModalPasswordRecoveryComponent } from '../thf-modal-password-recovery/thf-modal-password-recovery.component';
import { ThfModalPasswordRecoveryType } from '../thf-modal-password-recovery/enums/thf-modal-password-recovery-type.enum';
import { ThfPageChangePasswordBaseComponent } from './thf-page-change-password-base.component';
import { thfPageChangePasswordLiterals } from './literals/i18n/thf-page-change-password-literals';
import { ThfPageChangePasswordService } from './thf-page-change-password.service';
/**
 * \@docsExtends ThfPageChangePasswordBaseComponent
 *
 * \@example
 *
 * <example name="thf-page-change-password-basic" title="Totvs Page Change Password Basic">
 *  <file name="sample-thf-page-change-password-basic/sample-thf-page-change-password-basic.component.html"> </file>
 *  <file name="sample-thf-page-change-password-basic/sample-thf-page-change-password-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-change-password-labs" title="Totvs Page Change Password Labs">
 *  <file name="sample-thf-page-change-password-labs/sample-thf-page-change-password-labs.component.html"> </file>
 *  <file name="sample-thf-page-change-password-labs/sample-thf-page-change-password-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-change-password-modify" title="Totvs Page Change Password Modify">
 *  <file name="sample-thf-page-change-password-modify/sample-thf-page-change-password-modify.component.html"> </file>
 *  <file name="sample-thf-page-change-password-modify/sample-thf-page-change-password-modify.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-change-password-create" title="Totvs Page Change Password Create">
 *  <file name="sample-thf-page-change-password-create/sample-thf-page-change-password-create.component.html"> </file>
 *  <file name="sample-thf-page-change-password-create/sample-thf-page-change-password-create.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-change-password-request" title="Totvs Page Change Password Request">
 *  <file name="sample-thf-page-change-password-request/sample-thf-page-change-password-request.component.html"> </file>
 *  <file name="sample-thf-page-change-password-request/sample-thf-page-change-password-request.component.ts"> </file>
 * </example>
 */
export class ThfPageChangePasswordComponent extends ThfPageChangePasswordBaseComponent {
    /**
     * @param {?} activatedRoute
     * @param {?} route
     * @param {?} router
     * @param {?} service
     * @param {?} thfComponentInjector
     * @param {?} viewRef
     */
    constructor(activatedRoute, route, router, service, thfComponentInjector, viewRef) {
        super();
        this.activatedRoute = activatedRoute;
        this.route = route;
        this.router = router;
        this.service = service;
        this.thfComponentInjector = thfComponentInjector;
        this.literals = Object.assign({}, thfPageChangePasswordLiterals[thfLocaleDefault], thfPageChangePasswordLiterals[browserLanguage()]);
        this.componentRef = null;
        this.modalAction = {
            action: this.navigateTo.bind(this, this.urlHome),
            label: this.literals.enterSystemButton
        };
        this.parentRef = viewRef['_view']['component'];
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if (this.urlNewPassword) {
            this.subscribeToTokenParameter();
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.newPasswordSubscription) {
            this.newPasswordSubscription.unsubscribe();
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);
    }
    /**
     * @param {?} url
     * @return {?}
     */
    navigateTo(url) {
        isExternalLink(url) ? window.open(url) : this.router.navigate([url || '/']);
    }
    /**
     * @param {?} recovery
     * @return {?}
     */
    onForgotPasswordClick(recovery) {
        if (isTypeof(recovery, 'function')) {
            recovery();
        }
        else {
            this.createModalPasswordRecoveryComponent(recovery);
        }
    }
    /**
     * @return {?}
     */
    onLoginSubmit() {
        /** @type {?} */
        const form = this.getLoginForm();
        if (this.urlNewPassword) {
            this.postUrlNewPassword(form);
        }
        else if (this.submit && this.submit.observers.length) {
            this.emitSubmit(form);
        }
    }
    /**
     * Abre uma modal de confirmação com texto, imagem e botão que redireciona para o link definido na propriedade `t-url-home`
     * @return {?}
     */
    openConfirmation() {
        this.modal.open();
    }
    /**
     * @return {?}
     */
    validatePassword() {
        /** @type {?} */
        const controls = this.passwordForm.form.controls;
        /** @type {?} */
        const controlConfirmPassword = controls['confirmPassword'];
        /** @type {?} */
        const controlNewPassword = controls['newPassword'];
        if (!this.newPassword) {
            this.setFormErrors({ 'required': true }, [controlNewPassword]);
        }
        else if (!this.confirmPassword) {
            this.setFormErrors({ 'required': true }, [controlConfirmPassword]);
        }
        else if (this.newPassword && this.confirmPassword && this.newPassword !== this.confirmPassword) {
            this.setFormErrors({ 'equalPassword': true }, [controlNewPassword, controlConfirmPassword]);
        }
        else {
            this.setFormErrors(null, [controlConfirmPassword, controlNewPassword]);
        }
        if (this.requirements.length && this.requirements.find((/**
         * @param {?} requirement
         * @return {?}
         */
        requirement => this.validateRequirement(requirement) === false))) {
            this.setFormErrors({ 'requirement': true }, [controlNewPassword]);
        }
    }
    /**
     * @param {?} requirement
     * @return {?}
     */
    validateRequirement(requirement) {
        return typeof requirement.status === 'function' ? requirement.status.call(this.parentRef, this.newPassword) : requirement.status;
    }
    /**
     * @private
     * @param {?} object
     * @param {?} property
     * @return {?}
     */
    checkingForMetadataProperty(object, property) {
        if (Object.prototype.hasOwnProperty.call(object, property)) {
            return object[property];
        }
    }
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    checkingForRouteMetadata(data) {
        if (Object.keys(data).length !== 0) {
            this.urlNewPassword = this.checkingForMetadataProperty(data, 'serviceApi') || this.urlNewPassword;
            this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;
            this.hideCurrentPassword = this.checkingForMetadataProperty(data, 'hideCurrentPassword') || this.hideCurrentPassword;
        }
    }
    /**
     * @private
     * @param {?} recovery
     * @return {?}
     */
    createModalPasswordRecoveryComponent(recovery) {
        if (this.componentRef) {
            this.thfComponentInjector.destroyComponentInApplication(this.componentRef);
        }
        this.componentRef = this.thfComponentInjector.createComponentInApplication(ThfModalPasswordRecoveryComponent);
        this.componentRef.instance.recovery = recovery.url;
        this.componentRef.instance.contactEmail = recovery.contactMail;
        this.componentRef.instance.phoneMask = recovery.phoneMask;
        this.componentRef.instance.type = recovery.type || ThfModalPasswordRecoveryType.Email;
        this.componentRef.changeDetectorRef.detectChanges();
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.componentRef.instance.open();
        }));
    }
    /**
     * @private
     * @param {?} form
     * @return {?}
     */
    emitSubmit(form) {
        this.submit.emit(form);
    }
    /**
     * @private
     * @return {?}
     */
    getLoginForm() {
        return {
            currentPassword: this.currentPassword,
            newPassword: this.newPassword
        };
    }
    /**
     * @private
     * @param {?} form
     * @return {?}
     */
    postUrlNewPassword(form) {
        form['token'] = this.token;
        this.service.post(this.urlNewPassword, form).subscribe((/**
         * @param {?} response
         * @return {?}
         */
        response => {
            if (response.status === 204) {
                this.openConfirmation();
            }
        }));
    }
    /**
     * @private
     * @param {?} error
     * @param {?=} controls
     * @return {?}
     */
    setFormErrors(error, controls) {
        controls.forEach((/**
         * @param {?} control
         * @return {?}
         */
        control => {
            control.setErrors(error);
        }));
    }
    /**
     * @private
     * @return {?}
     */
    subscribeToTokenParameter() {
        this.route.queryParams.subscribe((/**
         * @param {?} params
         * @return {?}
         */
        params => {
            /** @type {?} */
            const token = params['token'];
            if (token) {
                this.token = token;
            }
        }));
    }
}
ThfPageChangePasswordComponent.decorators = [
    { type: Component, args: [{
                selector: 'thf-page-change-password',
                template: "<div class=\"thf-page-change-password-wrapper\" #pageChangePassword>\n  <div class=\"thf-page-change-password-container\">\n    <thf-page-background class=\"thf-page-change-password\"\n      [t-logo]=\"logo\"\n      [t-secondary-logo]=\"secondaryLogo\">\n\n      <div class=\"thf-page-blocked-user-header thf-row\">\n        <div class=\"thf-md-12\">{{literals.createNewPassword}}</div>\n        <div class=\"thf-md-12 thf-text-center thf-font-text\">\n          {{literals.createNewPasswordPhrase}}\n        </div>\n      </div>\n\n      <form #passwordForm=\"ngForm\">\n\n        <div class=\"thf-row thf-mt-3 thf-mt-sm-1\">\n          <div class=\"thf-md-6\"\n            [ngClass]=\"{'thf-offset-md-3 thf-offset-lg-3 thf-offset-xl-3': !showRequirements}\">\n            <div *ngIf=\"!hideCurrentPassword\">\n              <thf-password\n                name=\"currentPassword\"\n                [(ngModel)]=\"currentPassword\"\n                t-required\n                [t-label]=\"literals.currentPassword\">\n              </thf-password>\n            </div>\n            <div *ngIf=\"!hideCurrentPassword && recovery\" class=\"thf-text-center thf-mb-sm-1 thf-mb-2\">\n              <a *ngIf=\"recoveryUrlType === 'internalLink'\"\n                class=\"thf-font-text-bold thf-page-change-password-forgot-password\"\n                [routerLink]=\"recovery\">\n                {{literals.forgotPassword}}\n              </a>\n              <a *ngIf=\"recoveryUrlType === 'externalLink'\"\n                class=\"thf-font-text-bold thf-page-change-password-forgot-password\"\n                [href]=\"recovery\">\n                {{literals.forgotPassword}}\n              </a>\n              <a *ngIf=\"!recoveryUrlType\"\n                class=\"thf-font-text-bold thf-page-change-password-forgot-password thf-clickable\"\n                (click)=\"onForgotPasswordClick(recovery)\">\n                {{literals.forgotPassword}}\n              </a>\n            </div>\n            <div>\n              <thf-password\n                name=\"newPassword\"\n                [(ngModel)]=\"newPassword\"\n                t-required\n                [t-label]=\"literals.newPassword\"\n                (t-change-model)=\"validatePassword()\">\n              </thf-password>\n            </div>\n            <div>\n              <thf-password\n                name=\"confirmPassword\"\n                [(ngModel)]=\"confirmPassword\"\n                t-required\n                [t-label]=\"literals.confirmPassword\"\n                (t-change-model)=\"validatePassword()\">\n              </thf-password>\n            </div>\n          </div>\n          <div *ngIf=\"showRequirements\"\n            class=\"thf-md-6 thf-page-change-password-required-container\">\n            <thf-container>\n              <ul class=\"thf-page-change-password-required-list\">\n                <li class=\"thf-page-change-password-required-item\">\n                  <p class=\"thf-mb-1 thf-font-text-bold thf-page-change-password-required-title\">\n                    {{literals?.requirements}}\n                  </p>\n                </li>\n                <li *ngFor=\"let requirement of requirements\"\n                  class=\"thf-page-change-password-required-item\">\n                  <span class=\"thf-icon thf-page-change-password-required-icon\"\n                    [ngClass]=\"validateRequirement(requirement) ? 'thf-icon-ok thf-page-change-password-required-ok' : 'thf-icon-minus thf-page-change-password-required-minus'\">\n                  </span>\n                  <p class=\"thf-page-change-password-required-text thf-font-text\">\n                    {{requirement.requirement}}\n                  </p>\n                </li>\n              </ul>\n            </thf-container>\n          </div>\n        </div>\n      </form>\n\n      <thf-divider class=\"thf-sm-12\"></thf-divider>\n\n      <div class=\"thf-page-change-password-tips thf-row\">\n        <div class=\"thf-md-2 thf-mr-3\">\n          <img\n            class=\"thf-page-change-password-lock-image thf-mb-3\"\n            alt=\"Blocked user image\"\n            src=\"./assets/images/big-lock.svg\"\n          />\n        </div>\n        <div class=\"thf-md-9 thf-page-change-password-tips-text\">\n          <div class=\"thf-font-text-bold thf-pb-1\">{{literals.safetyTips}}</div>\n          <div class=\"thf-font-text-small\">\n            <div class=\"thf-row thf-pb-1\">{{literals.safetyTipsPhrase}}</div>\n            <div class=\"thf-row thf-pb-1\">\u2022 {{literals.safetyTipsFirst}}</div>\n            <div class=\"thf-row thf-pb-1\">\u2022 {{literals.safetyTipsSecond}}</div>\n            <div class=\"thf-row thf-pb-1\">\u2022 {{literals.safetyTipsThird}}</div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"thf-page-change-password-buttons thf-row\">\n\n        <thf-divider class=\"thf-sm-12 thf-mobile-only\"></thf-divider>\n\n        <thf-button *ngIf=\"!hideCurrentPassword\"\n          class=\"thf-sm-6 thf-mb-sm-1\"\n          [t-label]=\"literals.backButton\"\n          (t-click)=\"navigateTo(urlBack)\">\n        </thf-button>\n\n        <thf-button\n          [ngClass]=\"hideCurrentPassword ? 'thf-md-12':'thf-sm-6'\"\n          t-type=\"primary\"\n          [t-disabled]=\"passwordForm.invalid\"\n          [t-label]=\"literals.saveButton\"\n          (t-click)=\"onLoginSubmit()\">\n        </thf-button>\n\n      </div>\n\n    </thf-page-background>\n\n  </div>\n</div>\n\n<thf-modal\n  [t-primary-action]=\"modalAction\"\n  t-hide-close\n  t-size=\"auto\"\n  [t-title]=\"hideCurrentPassword ? literals.passwordSuccessfullyCreated : literals.passwordSuccessfullyUpdated\">\n\n  <div class=\"thf-text-center\">\n    <img\n      alt=\"Blocked user image\"\n      class=\"thf-page-change-password-lock-image thf-mb-3\"\n      src=\"./assets/images/success.svg\"\n    />\n  </div>\n</thf-modal>\n"
            }] }
];
/** @nocollapse */
ThfPageChangePasswordComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: ActivatedRoute },
    { type: Router },
    { type: ThfPageChangePasswordService },
    { type: ThfComponentInjectorService },
    { type: ViewContainerRef }
];
ThfPageChangePasswordComponent.propDecorators = {
    modal: [{ type: ViewChild, args: [ThfModalComponent, { static: true },] }],
    pageChangePassword: [{ type: ViewChild, args: ['pageChangePassword', { read: ViewContainerRef, static: true },] }],
    passwordForm: [{ type: ViewChild, args: ['passwordForm', { read: NgForm, static: true },] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageChangePasswordComponent.prototype.newPasswordSubscription;
    /** @type {?} */
    ThfPageChangePasswordComponent.prototype.literals;
    /**
     * @type {?}
     * @private
     */
    ThfPageChangePasswordComponent.prototype.componentRef;
    /** @type {?} */
    ThfPageChangePasswordComponent.prototype.modalAction;
    /** @type {?} */
    ThfPageChangePasswordComponent.prototype.parentRef;
    /** @type {?} */
    ThfPageChangePasswordComponent.prototype.modal;
    /** @type {?} */
    ThfPageChangePasswordComponent.prototype.pageChangePassword;
    /** @type {?} */
    ThfPageChangePasswordComponent.prototype.passwordForm;
    /**
     * @type {?}
     * @private
     */
    ThfPageChangePasswordComponent.prototype.activatedRoute;
    /**
     * @type {?}
     * @private
     */
    ThfPageChangePasswordComponent.prototype.route;
    /**
     * @type {?}
     * @private
     */
    ThfPageChangePasswordComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    ThfPageChangePasswordComponent.prototype.service;
    /**
     * @type {?}
     * @private
     */
    ThfPageChangePasswordComponent.prototype.thfComponentInjector;
}
//# sourceMappingURL=data:application/json;base64,