import { ActivatedRoute, Router } from '@angular/router';
import { OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
import { Observable } from 'rxjs';
import { ThfDialogService, ThfDynamicFormField, ThfNotificationService, ThfPageAction, ThfStepperItem } from '@totvs/thf-ui';
import { ThfPageJobSchedulerBaseComponent } from './thf-page-job-scheduler-base.component';
import { ThfPageJobSchedulerLookupService } from './thf-page-job-scheduler-lookup.service';
import { ThfPageJobSchedulerService } from './thf-page-job-scheduler.service';
/**
 * @docsExtends ThfPageJobSchedulerBaseComponent
 *
 * @example
 *
 * <example name="thf-page-job-scheduler-basic" title="Totvs Page Job Scheduler Basic">
 *  <file name="sample-thf-page-job-scheduler-basic/sample-thf-page-job-scheduler-basic.component.html"> </file>
 *  <file name="sample-thf-page-job-scheduler-basic/sample-thf-page-job-scheduler-basic.component.ts"> </file>
 * </example>
 *
 */
export declare class ThfPageJobSchedulerComponent extends ThfPageJobSchedulerBaseComponent implements OnInit {
    thfPageDynamicLookupService: ThfPageJobSchedulerLookupService;
    private activatedRoute;
    private thfDialogService;
    private thfNotification;
    private router;
    isEdit: boolean;
    literals: any;
    parameters: Array<ThfDynamicFormField>;
    saveOperation: Observable<any>;
    step: number;
    private backPageAction;
    private concludePageActions;
    private nextPageActions;
    jobSchedulerActions: Array<ThfPageAction>;
    readonly steps: Array<ThfStepperItem>;
    schedulerExecution: {
        form: NgForm;
    };
    schedulerParameters: {
        form: NgForm;
    };
    constructor(thfPageDynamicLookupService: ThfPageJobSchedulerLookupService, activatedRoute: ActivatedRoute, thfDialogService: ThfDialogService, thfNotification: ThfNotificationService, router: Router, thfPageJobSchedulerService: ThfPageJobSchedulerService);
    readonly stepperOrientation: 'horizontal' | 'vertical';
    ngOnInit(): void;
    changePageActionsBySteps(currentStep: number, nextStep: number): void;
    nextStep(stepNumber: number): void;
    onChangeProcess(process: {
        processId: string;
        existAPI: boolean;
    }): void;
    private confirmJobScheduler;
    private emitSuccessMessage;
    private getParametersByProcess;
    private isDisabledAdvance;
    private isDisabledBack;
    private nextStepOperation;
    private resetJobSchedulerForm;
    private save;
}
