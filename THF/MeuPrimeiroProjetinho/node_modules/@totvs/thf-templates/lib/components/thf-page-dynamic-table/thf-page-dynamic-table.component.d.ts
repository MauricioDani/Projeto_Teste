import { OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { ThfDialogService, ThfNotificationService, ThfPageAction, ThfTableAction } from '@totvs/thf-ui';
import { ThfPageDynamicListBaseComponent } from './thf-page-dynamic-list-base.component';
import { ThfPageDynamicService } from './thf-page-dynamic.service';
import { ThfPageDynamicTableActions } from './thf-page-dynamic-table-actions.interface';
export declare const thfPageDynamicTableLiteralsDefault: {
    en: {
        pageAction: string;
        pageActionRemoveAll: string;
        tableActionView: string;
        tableActionEdit: string;
        tableActionDuplicate: string;
        tableActionDelete: string;
        confirmRemoveTitle: string;
        confirmRemoveMessage: string;
        confirmRemoveAllTitle: string;
        confirmRemoveAllMessage: string;
        loadDataErrorNotification: string;
        removeSuccessNotification: string;
        removeAllSuccessNotification: string;
    };
    es: {
        pageAction: string;
        pageActionRemoveAll: string;
        tableActionView: string;
        tableActionEdit: string;
        tableActionDuplicate: string;
        tableActionDelete: string;
        confirmRemoveTitle: string;
        confirmRemoveMessage: string;
        confirmRemoveAllTitle: string;
        confirmRemoveAllMessage: string;
        loadDataErrorNotification: string;
        removeSuccessNotification: string;
        removeAllSuccessNotification: string;
    };
    pt: {
        pageAction: string;
        pageActionRemoveAll: string;
        tableActionView: string;
        tableActionEdit: string;
        tableActionDuplicate: string;
        tableActionDelete: string;
        confirmRemoveTitle: string;
        confirmRemoveMessage: string;
        confirmRemoveAllTitle: string;
        confirmRemoveAllMessage: string;
        loadDataErrorNotification: string;
        removeSuccessNotification: string;
        removeAllSuccessNotification: string;
    };
};
/**
 * @docsExtends ThfPageDynamicListBaseComponent
 *
 * @description
 *
 * O `thf-page-dynamic-table` é uma página que exibe uma lista de registros em uma tabela baseado em uma lista de fields,
 * o mesmo também suporta metadados conforme especificado na documentação.
 *
 * @example
 *
 * <example name="thf-page-dynamic-table-basic" title="Totvs Page Dynamic Table Basic">
 *  <file name="sample-thf-page-dynamic-table-basic/sample-thf-page-dynamic-table-basic.component.html"> </file>
 *  <file name="sample-thf-page-dynamic-table-basic/sample-thf-page-dynamic-table-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-dynamic-table-users" title="Totvs Page Dynamic Table - Users">
 *  <file name="sample-thf-page-dynamic-table-users/sample-thf-page-dynamic-table-users.component.html"> </file>
 *  <file name="sample-thf-page-dynamic-table-users/sample-thf-page-dynamic-table-users.component.ts"> </file>
 * </example>
 */
export declare class ThfPageDynamicTableComponent extends ThfPageDynamicListBaseComponent implements OnInit {
    private router;
    private activatedRoute;
    private thfDialogService;
    private thfNotification;
    private thfPageDynamicService;
    private _actions;
    private _pageActions;
    private _tableActions;
    private page;
    private params;
    hasNext: boolean;
    items: any[];
    literals: any;
    /**
     * @optional
     *
     * @description
     *
     * Ações da página e da tabela.
     */
    actions: ThfPageDynamicTableActions;
    constructor(router: Router, activatedRoute: ActivatedRoute, thfDialogService: ThfDialogService, thfNotification: ThfNotificationService, thfPageDynamicService: ThfPageDynamicService);
    ngOnInit(): void;
    onAdvancedSearch(filter: any): void;
    onChangeDisclaimers(disclaimers: any): void;
    onQuickSearch(filter: any): void;
    showMore(): void;
    readonly hasActionRemoveAll: boolean;
    readonly pageActions: ThfPageAction[];
    readonly tableActions: ThfTableAction[];
    private confirmRemove;
    private confirmRemoveAll;
    private formatUniqueKey;
    private loadData;
    private loadMetadata;
    private navigateTo;
    private openDetail;
    private openDuplicate;
    private openEdit;
    private openNew;
    /**
     * Caso exista mais de um identificador, será concatenado com '|'.
     *
     * Ex: { id: 1, company: 'totvs' }
     *
     * Para o endpoint /resources/:id será executada a url /resources/1|totvs
     */
    private remove;
    private removeAll;
    private removeLocalItems;
    private resolveUrl;
    private setPageActions;
    private setRemoveAllAction;
    private setTableActions;
}
