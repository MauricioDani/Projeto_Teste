/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ThfPageJobSchedulerService } from './thf-page-job-scheduler.service';
var ThfPageJobSchedulerLookupService = /** @class */ (function () {
    function ThfPageJobSchedulerLookupService(thfPageJobSchedulerService) {
        this.thfPageJobSchedulerService = thfPageJobSchedulerService;
    }
    /**
     * @param {?} search
     * @param {?} page
     * @param {?} pageSize
     * @return {?}
     */
    ThfPageJobSchedulerLookupService.prototype.getFilteredData = /**
     * @param {?} search
     * @param {?} page
     * @param {?} pageSize
     * @return {?}
     */
    function (search, page, pageSize) {
        /** @type {?} */
        var params = { page: page, pageSize: pageSize, search: search };
        return this.thfPageJobSchedulerService.getProcesses(params);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    ThfPageJobSchedulerLookupService.prototype.getObjectByValue = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.thfPageJobSchedulerService.getProcess(processId);
    };
    ThfPageJobSchedulerLookupService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ThfPageJobSchedulerLookupService.ctorParameters = function () { return [
        { type: ThfPageJobSchedulerService }
    ]; };
    return ThfPageJobSchedulerLookupService;
}());
export { ThfPageJobSchedulerLookupService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageJobSchedulerLookupService.prototype.thfPageJobSchedulerService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2Utam9iLXNjaGVkdWxlci1sb29rdXAuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdGVtcGxhdGVzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXBhZ2Utam9iLXNjaGVkdWxlci90aGYtcGFnZS1qb2Itc2NoZWR1bGVyLWxvb2t1cC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTTNDLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRTlFO0lBR0UsMENBQW9CLDBCQUFzRDtRQUF0RCwrQkFBMEIsR0FBMUIsMEJBQTBCLENBQTRCO0lBQUksQ0FBQzs7Ozs7OztJQUUvRSwwREFBZTs7Ozs7O0lBQWYsVUFBZ0IsTUFBYyxFQUFFLElBQVksRUFBRSxRQUFnQjs7WUFDdEQsTUFBTSxHQUFHLEVBQUUsSUFBSSxNQUFBLEVBQUUsUUFBUSxVQUFBLEVBQUUsTUFBTSxRQUFBLEVBQUU7UUFFekMsT0FBTyxJQUFJLENBQUMsMEJBQTBCLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlELENBQUM7Ozs7O0lBRUQsMkRBQWdCOzs7O0lBQWhCLFVBQWlCLFNBQWlCO1FBQ2hDLE9BQU8sSUFBSSxDQUFDLDBCQUEwQixDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMvRCxDQUFDOztnQkFiRixVQUFVOzs7O2dCQUZGLDBCQUEwQjs7SUFpQm5DLHVDQUFDO0NBQUEsQUFmRCxJQWVDO1NBZFksZ0NBQWdDOzs7Ozs7SUFFL0Isc0VBQThEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFRoZkxvb2t1cEZpbHRlciB9IGZyb20gJ0B0b3R2cy90aGYtdWknO1xuXG5pbXBvcnQgeyBUaGZQYWdlSm9iU2NoZWR1bGVyU2VydmljZSB9IGZyb20gJy4vdGhmLXBhZ2Utam9iLXNjaGVkdWxlci5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRoZlBhZ2VKb2JTY2hlZHVsZXJMb29rdXBTZXJ2aWNlIGltcGxlbWVudHMgVGhmTG9va3VwRmlsdGVyIHtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRoZlBhZ2VKb2JTY2hlZHVsZXJTZXJ2aWNlOiBUaGZQYWdlSm9iU2NoZWR1bGVyU2VydmljZSkgeyB9XG5cbiAgZ2V0RmlsdGVyZWREYXRhKHNlYXJjaDogc3RyaW5nLCBwYWdlOiBudW1iZXIsIHBhZ2VTaXplOiBudW1iZXIpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIGNvbnN0IHBhcmFtcyA9IHsgcGFnZSwgcGFnZVNpemUsIHNlYXJjaCB9O1xuXG4gICAgcmV0dXJuIHRoaXMudGhmUGFnZUpvYlNjaGVkdWxlclNlcnZpY2UuZ2V0UHJvY2Vzc2VzKHBhcmFtcyk7XG4gIH1cblxuICBnZXRPYmplY3RCeVZhbHVlKHByb2Nlc3NJZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy50aGZQYWdlSm9iU2NoZWR1bGVyU2VydmljZS5nZXRQcm9jZXNzKHByb2Nlc3NJZCk7XG4gIH1cblxufVxuIl19