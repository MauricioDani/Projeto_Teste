/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { ThfDynamicFormComponent, ThfModalComponent } from '@totvs/thf-ui';
import { ThfAdvancedFilterBaseComponent } from './thf-advanced-filter-base.component';
/**
 * \@docsPrivate
 *
 * \@docsExtends ThfAdvancedFilterBaseComponent
 *
 * \@examplePrivate
 *
 * <example-private name="thf-advanced-filter" title="Totvs Busca AvanÃ§ada">
 *   <file name="sample-thf-advanced-filter.component.html"> </file>
 *   <file name="sample-thf-advanced-filter.component.ts"> </file>
 * </example-private>
 */
var ThfAdvancedFilterComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfAdvancedFilterComponent, _super);
    function ThfAdvancedFilterComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.filter = {};
        _this.primaryAction = {
            action: (/**
             * @return {?}
             */
            function () {
                /** @type {?} */
                var models = _this.getValuesFromForm();
                _this.searchEvent.emit(models);
                _this.thfModal.close();
            }),
            label: _this.literals.primaryActionLabel
        };
        _this.secondaryAction = {
            action: (/**
             * @return {?}
             */
            function () {
                _this.thfModal.close();
            }),
            label: _this.literals.secondaryActionLabel
        };
        return _this;
    }
    // Retorna os models dos campos preenchidos
    // Retorna os models dos campos preenchidos
    /**
     * @return {?}
     */
    ThfAdvancedFilterComponent.prototype.getValuesFromForm = 
    // Retorna os models dos campos preenchidos
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        Object.keys(this.filter).forEach((/**
         * @param {?} property
         * @return {?}
         */
        function (property) {
            if (_this.filter[property] === undefined || _this.filter[property] === '') {
                delete _this.filter[property];
            }
        }));
        return this.filter;
    };
    /**
     * @return {?}
     */
    ThfAdvancedFilterComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        this.filter = {};
        this.thfModal.open();
    };
    ThfAdvancedFilterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-advanced-filter',
                    template: "<thf-modal\n  t-hide-close\n  [t-primary-action]=\"primaryAction\"\n  [t-secondary-action]=\"secondaryAction\"\n  [t-title]=\"literals.title\">\n\n  <thf-dynamic-form\n    [t-fields]=\"filters\"\n    [t-value]=\"filter\">\n  </thf-dynamic-form>\n\n</thf-modal>\n"
                }] }
    ];
    ThfAdvancedFilterComponent.propDecorators = {
        thfModal: [{ type: ViewChild, args: [ThfModalComponent, { static: true },] }],
        thfDynamicForm: [{ type: ViewChild, args: [ThfDynamicFormComponent, { static: true },] }]
    };
    return ThfAdvancedFilterComponent;
}(ThfAdvancedFilterBaseComponent));
export { ThfAdvancedFilterComponent };
if (false) {
    /** @type {?} */
    ThfAdvancedFilterComponent.prototype.filter;
    /** @type {?} */
    ThfAdvancedFilterComponent.prototype.thfModal;
    /** @type {?} */
    ThfAdvancedFilterComponent.prototype.thfDynamicForm;
    /** @type {?} */
    ThfAdvancedFilterComponent.prototype.primaryAction;
    /** @type {?} */
    ThfAdvancedFilterComponent.prototype.secondaryAction;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLWFkdmFuY2VkLWZpbHRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXRlbXBsYXRlcy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1wYWdlLWR5bmFtaWMtc2VhcmNoL3RoZi1hZHZhbmNlZC1maWx0ZXIvdGhmLWFkdmFuY2VkLWZpbHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVyRCxPQUFPLEVBQUUsdUJBQXVCLEVBQWtCLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNGLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDOzs7Ozs7Ozs7Ozs7O0FBY3RGO0lBSWdELHNEQUE4QjtJQUo5RTtRQUFBLHFFQTZDQztRQXZDQyxZQUFNLEdBQUcsRUFBRSxDQUFDO1FBTVosbUJBQWEsR0FBbUI7WUFDOUIsTUFBTTs7O1lBQUU7O29CQUNBLE1BQU0sR0FBRyxLQUFJLENBQUMsaUJBQWlCLEVBQUU7Z0JBRXZDLEtBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM5QixLQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ3hCLENBQUMsQ0FBQTtZQUNELEtBQUssRUFBRSxLQUFJLENBQUMsUUFBUSxDQUFDLGtCQUFrQjtTQUN4QyxDQUFDO1FBRUYscUJBQWUsR0FBbUI7WUFDaEMsTUFBTTs7O1lBQUU7Z0JBQ04sS0FBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUN4QixDQUFDLENBQUE7WUFDRCxLQUFLLEVBQUUsS0FBSSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0I7U0FDMUMsQ0FBQzs7SUFrQkosQ0FBQztJQWhCQywyQ0FBMkM7Ozs7O0lBQzNDLHNEQUFpQjs7Ozs7SUFBakI7UUFBQSxpQkFRQztRQVBDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU87Ozs7UUFBQyxVQUFBLFFBQVE7WUFDdkMsSUFBSSxLQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLFNBQVMsSUFBSSxLQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsRUFBRTtnQkFDdkUsT0FBTyxLQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQzlCO1FBQ0gsQ0FBQyxFQUFDLENBQUM7UUFFSCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQzs7OztJQUVELHlDQUFJOzs7SUFBSjtRQUNFLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDdkIsQ0FBQzs7Z0JBM0NGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUscUJBQXFCO29CQUMvQixrUkFBbUQ7aUJBQ3BEOzs7MkJBS0UsU0FBUyxTQUFDLGlCQUFpQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtpQ0FFN0MsU0FBUyxTQUFDLHVCQUF1QixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7SUFtQ3RELGlDQUFDO0NBQUEsQUE3Q0QsQ0FJZ0QsOEJBQThCLEdBeUM3RTtTQXpDWSwwQkFBMEI7OztJQUVyQyw0Q0FBWTs7SUFFWiw4Q0FBNEU7O0lBRTVFLG9EQUE4Rjs7SUFFOUYsbURBUUU7O0lBRUYscURBS0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaGZEeW5hbWljRm9ybUNvbXBvbmVudCwgVGhmTW9kYWxBY3Rpb24sIFRoZk1vZGFsQ29tcG9uZW50IH0gZnJvbSAnQHRvdHZzL3RoZi11aSc7XG5cbmltcG9ydCB7IFRoZkFkdmFuY2VkRmlsdGVyQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vdGhmLWFkdmFuY2VkLWZpbHRlci1iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRvY3NFeHRlbmRzIFRoZkFkdmFuY2VkRmlsdGVyQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlUHJpdmF0ZVxuICpcbiAqIDxleGFtcGxlLXByaXZhdGUgbmFtZT1cInRoZi1hZHZhbmNlZC1maWx0ZXJcIiB0aXRsZT1cIlRvdHZzIEJ1c2NhIEF2YW7Dp2FkYVwiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1hZHZhbmNlZC1maWx0ZXIuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1hZHZhbmNlZC1maWx0ZXIuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZS1wcml2YXRlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtYWR2YW5jZWQtZmlsdGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RoZi1hZHZhbmNlZC1maWx0ZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoZkFkdmFuY2VkRmlsdGVyQ29tcG9uZW50IGV4dGVuZHMgVGhmQWR2YW5jZWRGaWx0ZXJCYXNlQ29tcG9uZW50IHtcblxuICBmaWx0ZXIgPSB7fTtcblxuICBAVmlld0NoaWxkKFRoZk1vZGFsQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSB0aGZNb2RhbDogVGhmTW9kYWxDb21wb25lbnQ7XG5cbiAgQFZpZXdDaGlsZChUaGZEeW5hbWljRm9ybUNvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgdGhmRHluYW1pY0Zvcm06IFRoZkR5bmFtaWNGb3JtQ29tcG9uZW50O1xuXG4gIHByaW1hcnlBY3Rpb246IFRoZk1vZGFsQWN0aW9uID0ge1xuICAgIGFjdGlvbjogKCkgPT4ge1xuICAgICAgY29uc3QgbW9kZWxzID0gdGhpcy5nZXRWYWx1ZXNGcm9tRm9ybSgpO1xuXG4gICAgICB0aGlzLnNlYXJjaEV2ZW50LmVtaXQobW9kZWxzKTtcbiAgICAgIHRoaXMudGhmTW9kYWwuY2xvc2UoKTtcbiAgICB9LFxuICAgIGxhYmVsOiB0aGlzLmxpdGVyYWxzLnByaW1hcnlBY3Rpb25MYWJlbFxuICB9O1xuXG4gIHNlY29uZGFyeUFjdGlvbjogVGhmTW9kYWxBY3Rpb24gPSB7XG4gICAgYWN0aW9uOiAoKSA9PiB7XG4gICAgICB0aGlzLnRoZk1vZGFsLmNsb3NlKCk7XG4gICAgfSxcbiAgICBsYWJlbDogdGhpcy5saXRlcmFscy5zZWNvbmRhcnlBY3Rpb25MYWJlbFxuICB9O1xuXG4gIC8vIFJldG9ybmEgb3MgbW9kZWxzIGRvcyBjYW1wb3MgcHJlZW5jaGlkb3NcbiAgZ2V0VmFsdWVzRnJvbUZvcm0oKSB7XG4gICAgT2JqZWN0LmtleXModGhpcy5maWx0ZXIpLmZvckVhY2gocHJvcGVydHkgPT4ge1xuICAgICAgaWYgKHRoaXMuZmlsdGVyW3Byb3BlcnR5XSA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuZmlsdGVyW3Byb3BlcnR5XSA9PT0gJycpIHtcbiAgICAgICAgZGVsZXRlIHRoaXMuZmlsdGVyW3Byb3BlcnR5XTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiB0aGlzLmZpbHRlcjtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5maWx0ZXIgPSB7fTtcbiAgICB0aGlzLnRoZk1vZGFsLm9wZW4oKTtcbiAgfVxuXG59XG4iXX0=