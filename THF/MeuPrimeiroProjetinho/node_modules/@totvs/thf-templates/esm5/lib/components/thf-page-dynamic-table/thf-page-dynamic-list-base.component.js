/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
var ThfPageDynamicListBaseComponent = /** @class */ (function () {
    function ThfPageDynamicListBaseComponent() {
        this._autoRouter = false;
        this._columns = [];
        this._duplicates = [];
        this._fields = [];
        this._filters = [];
        this._keys = [];
        /**
         * Objeto com propriedades do breadcrumb.
         */
        this.breadcrumb = { items: [] };
    }
    Object.defineProperty(ThfPageDynamicListBaseComponent.prototype, "autoRouter", {
        get: /**
         * @return {?}
         */
        function () {
            return this._autoRouter;
        },
        /**
         * @optional
         *
         * @description
         *
         * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso sejam definidas ações na propriedade `t-actions`
         *
         * As rotas criadas serão baseadas na propriedade `t-actions`.
         *
         * > Para o correto funcionamento não pode haver nenhuma rota coringa (`**`) especificada.
         *
         * @default false
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso sejam definidas ações na propriedade `t-actions`
         *
         * As rotas criadas serão baseadas na propriedade `t-actions`.
         *
         * > Para o correto funcionamento não pode haver nenhuma rota coringa (`**`) especificada.
         *
         * \@default false
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._autoRouter = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicListBaseComponent.prototype, "fields", {
        get: /**
         * @return {?}
         */
        function () {
            return this._fields;
        },
        /**
         * @optional
         *
         * @description
         *
         * Lista dos campos usados na tabela e busca avançada.
         *
         *
         * > Caso não seja definido fields a tabela assumirá o comportamento padrão.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Lista dos campos usados na tabela e busca avançada.
         *
         *
         * > Caso não seja definido fields a tabela assumirá o comportamento padrão.
         * @param {?} fields
         * @return {?}
         */
        function (fields) {
            this._fields = Array.isArray(fields) ? tslib_1.__spread(fields) : [];
            this.setFieldsProperties(this.fields);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicListBaseComponent.prototype, "columns", {
        get: /**
         * @return {?}
         */
        function () {
            return tslib_1.__spread(this._columns);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicListBaseComponent.prototype, "duplicates", {
        get: /**
         * @return {?}
         */
        function () {
            return tslib_1.__spread(this._duplicates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicListBaseComponent.prototype, "filters", {
        get: /**
         * @return {?}
         */
        function () {
            return tslib_1.__spread(this._filters);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicListBaseComponent.prototype, "keys", {
        get: /**
         * @return {?}
         */
        function () {
            return tslib_1.__spread(this._keys);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @param {?} fields
     * @return {?}
     */
    ThfPageDynamicListBaseComponent.prototype.setFieldsProperties = /**
     * @private
     * @param {?} fields
     * @return {?}
     */
    function (fields) {
        this._filters = fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.filter === true; }));
        this._columns = fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.visible === undefined || field.visible === true; }));
        this._keys = fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.key === true; })).map((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.property; }));
        this._duplicates = fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.duplicate === true; })).map((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.property; }));
    };
    ThfPageDynamicListBaseComponent.propDecorators = {
        autoRouter: [{ type: Input, args: ['t-auto-router',] }],
        breadcrumb: [{ type: Input, args: ['t-breadcrumb',] }],
        fields: [{ type: Input, args: ['t-fields',] }],
        serviceApi: [{ type: Input, args: ['t-service-api',] }],
        title: [{ type: Input, args: ['t-title',] }]
    };
    return ThfPageDynamicListBaseComponent;
}());
export { ThfPageDynamicListBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicListBaseComponent.prototype._autoRouter;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicListBaseComponent.prototype._columns;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicListBaseComponent.prototype._duplicates;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicListBaseComponent.prototype._fields;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicListBaseComponent.prototype._filters;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicListBaseComponent.prototype._keys;
    /**
     * Objeto com propriedades do breadcrumb.
     * @type {?}
     */
    ThfPageDynamicListBaseComponent.prototype.breadcrumb;
    /**
     * \@description
     *
     * Endpoint usado pelo template para requisição dos recursos que serão exibidos.
     *
     * Caso a ação `remove` estiver configurada, será feito uma requisição de exclusão nesse mesmo endpoint passando os campos
     * setados como `key: true`.
     *
     * > `DELETE {end-point}/{keys}`
     *
     * ```
     *  <thf-page-dynamic-table
     *    [t-actions]="{ remove: true }"
     *    [t-fields]="[ { property: 'id', key: true } ]"
     *    t-service="/api/thf-samples/v1/people"
     *    ...>
     *  </thf-page-dynamic-table>
     * ```
     *
     * Resquisição disparada, onde a propriedade `id` é igual a 2:
     *
     * ```
     *  DELETE /api/thf-samples/v1/people/2 HTTP/1.1
     *  Host: localhost:4000
     *  Connection: keep-alive
     *  Accept: application/json, text/plain
     *  ...
     * ```
     *
     * Para a ação `removeAll`, será feito uma requisição de exclusão em lote para esse mesmo endpoint passando, uma lista
     * de objetos com os campos setados como `key: true` via `payload`.
     *
     * > `DELETE {end-point}`
     *
     * > `Payload: [ {key}, {key} ... {key} ]`
     *
     * ```
     *  <thf-page-dynamic-table
     *    [t-actions]="{ removeAll: true }"
     *    [t-fields]="[ { property: 'id', key: true } ]"
     *    t-service="/api/thf-samples/v1/people"
     *    ...>
     *  </thf-page-dynamic-table>
     * ```
     *
     * Resquisição disparada, onde foram selecionados 3 itens para serem removidos:
     *
     * ```
     *  DELETE /api/thf-samples/v1/people HTTP/1.1
     *  Host: localhost:4000
     *  Connection: keep-alive
     *  Accept: application/json, text/plain
     *  ...
     * ```
     *
     * Request payload:
     *
     * ```
     * [{"id":2},{"id":4},{"id":5}]
     * ```
     *
     * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar
     * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.
     * >
     * > `GET {end-point}/metadata?type=list&version={version}`
     * @type {?}
     */
    ThfPageDynamicListBaseComponent.prototype.serviceApi;
    /**
     * Título da página.
     * @type {?}
     */
    ThfPageDynamicListBaseComponent.prototype.title;
}
//# sourceMappingURL=data:application/json;base64,