/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
var ThfPageJobSchedulerParametersComponent = /** @class */ (function () {
    function ThfPageJobSchedulerParametersComponent() {
        this.literals = (/** @type {?} */ ({}));
        this.parameters = [];
        this.valueChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ThfPageJobSchedulerParametersComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.form) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.form.valueChanges.subscribe((/**
                 * @param {?} value
                 * @return {?}
                 */
                function (value) {
                    _this.valueChange.emit(value);
                }));
            }));
        }
    };
    ThfPageJobSchedulerParametersComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-page-job-scheduler-parameters',
                    template: "<ng-container *ngIf=\"parameters && parameters.length; then formFieldsTemplate; else parametersNotFoundTemplate\">\n</ng-container>\n\n<ng-template #parametersNotFoundTemplate>\n\n  <div class=\"thf-text-center\">\n    <span class=\"thf-icon thf-icon-info\"></span>\n    <span class=\"thf-font-text-large\">\n      {{ literals.parametersNotFound }}\n    </span>\n  </div>\n\n</ng-template>\n\n<ng-template #formFieldsTemplate>\n  <form #parametersForm=\"ngForm\">\n    <thf-dynamic-form\n      t-group-form\n      [t-fields]=\"parameters\"\n      [t-value]=\"value\">\n    </thf-dynamic-form>\n  </form>\n</ng-template>\n"
                }] }
    ];
    ThfPageJobSchedulerParametersComponent.propDecorators = {
        form: [{ type: ViewChild, args: ['parametersForm', { static: true },] }],
        literals: [{ type: Input, args: ['t-literals',] }],
        parameters: [{ type: Input, args: ['t-parameters',] }],
        value: [{ type: Input, args: ['t-value',] }],
        valueChange: [{ type: Output, args: ['t-valueChange',] }]
    };
    return ThfPageJobSchedulerParametersComponent;
}());
export { ThfPageJobSchedulerParametersComponent };
if (false) {
    /** @type {?} */
    ThfPageJobSchedulerParametersComponent.prototype.form;
    /** @type {?} */
    ThfPageJobSchedulerParametersComponent.prototype.literals;
    /** @type {?} */
    ThfPageJobSchedulerParametersComponent.prototype.parameters;
    /** @type {?} */
    ThfPageJobSchedulerParametersComponent.prototype.value;
    /** @type {?} */
    ThfPageJobSchedulerParametersComponent.prototype.valueChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdGVtcGxhdGVzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXBhZ2Utam9iLXNjaGVkdWxlci90aGYtcGFnZS1qb2Itc2NoZWR1bGVyLXBhcmFtZXRlcnMvdGhmLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFpQixTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUl4QztJQUFBO1FBUXVCLGFBQVEsR0FBRyxtQkFBTSxFQUFFLEVBQUEsQ0FBQztRQUVsQixlQUFVLEdBQStCLEVBQUUsQ0FBQztRQUkxQyxnQkFBVyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBY3BGLENBQUM7Ozs7SUFaQyxnRUFBZTs7O0lBQWY7UUFBQSxpQkFVQztRQVRDLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNiLFVBQVU7OztZQUFDO2dCQUVULEtBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVM7Ozs7Z0JBQUMsVUFBQSxLQUFLO29CQUNwQyxLQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDL0IsQ0FBQyxFQUFDLENBQUM7WUFFTCxDQUFDLEVBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQzs7Z0JBMUJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsbUNBQW1DO29CQUM3Qyx5bkJBQStEO2lCQUNoRTs7O3VCQUdFLFNBQVMsU0FBQyxnQkFBZ0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7MkJBRTVDLEtBQUssU0FBQyxZQUFZOzZCQUVsQixLQUFLLFNBQUMsY0FBYzt3QkFFcEIsS0FBSyxTQUFDLFNBQVM7OEJBRWYsTUFBTSxTQUFDLGVBQWU7O0lBY3pCLDZDQUFDO0NBQUEsQUE1QkQsSUE0QkM7U0F4Qlksc0NBQXNDOzs7SUFFakQsc0RBQTREOztJQUU1RCwwREFBeUM7O0lBRXpDLDREQUFtRTs7SUFFbkUsdURBQXdCOztJQUV4Qiw2REFBa0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ0Zvcm0gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IFRoZkR5bmFtaWNGb3JtRmllbGQgfSBmcm9tICdAdG90dnMvdGhmLXVpJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGhmLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzJyxcbiAgdGVtcGxhdGVVcmw6ICd0aGYtcGFnZS1qb2Itc2NoZWR1bGVyLXBhcmFtZXRlcnMuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoZlBhZ2VKb2JTY2hlZHVsZXJQYXJhbWV0ZXJzQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG5cbiAgQFZpZXdDaGlsZCgncGFyYW1ldGVyc0Zvcm0nLCB7IHN0YXRpYzogdHJ1ZSB9KSBmb3JtOiBOZ0Zvcm07XG5cbiAgQElucHV0KCd0LWxpdGVyYWxzJykgbGl0ZXJhbHMgPSA8YW55PiB7fTtcblxuICBASW5wdXQoJ3QtcGFyYW1ldGVycycpIHBhcmFtZXRlcnM6IEFycmF5PFRoZkR5bmFtaWNGb3JtRmllbGQ+ID0gW107XG5cbiAgQElucHV0KCd0LXZhbHVlJykgdmFsdWU7XG5cbiAgQE91dHB1dCgndC12YWx1ZUNoYW5nZScpIHZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBpZiAodGhpcy5mb3JtKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcblxuICAgICAgICB0aGlzLmZvcm0udmFsdWVDaGFuZ2VzLnN1YnNjcmliZSh2YWx1ZSA9PiB7XG4gICAgICAgICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KHZhbHVlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=