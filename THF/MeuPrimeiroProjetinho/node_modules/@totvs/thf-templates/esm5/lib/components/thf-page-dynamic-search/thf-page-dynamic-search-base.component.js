/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { EventEmitter, Input, Output } from '@angular/core';
import { browserLanguage, thfLocaleDefault } from '../../utils/util';
/** @type {?} */
export var thfPageDynamicSearchLiteralsDefault = {
    en: {
        disclaimerGroupTitle: 'Displaying results filtered by:',
        filterSettingsPlaceholder: 'Search',
        quickSearchLabel: 'Quick search:'
    },
    es: {
        disclaimerGroupTitle: 'Presentando resultados filtrados por:',
        filterSettingsPlaceholder: 'Buscar',
        quickSearchLabel: 'Búsqueda rápida:'
    },
    pt: {
        disclaimerGroupTitle: 'Apresentando resultados filtrados por:',
        filterSettingsPlaceholder: 'Pesquisar',
        quickSearchLabel: 'Pesquisa rápida:'
    }
};
/**
 * \@description
 *
 * Componente com as ações de pesquisa já definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs
 * e exiba as informações.
 */
var ThfPageDynamicSearchBaseComponent = /** @class */ (function () {
    function ThfPageDynamicSearchBaseComponent() {
        this._filters = [];
        this.literals = tslib_1.__assign({}, thfPageDynamicSearchLiteralsDefault[thfLocaleDefault], thfPageDynamicSearchLiteralsDefault[browserLanguage()]);
        /**
         * Nesta propriedade deve ser definido um array de objetos que implementam a interface `ThfPageAction`.
         */
        this.actions = [];
        /**
         * Objeto com propriedades do breadcrumb.
         */
        this.breadcrumb = { items: [] };
        /**
         * \@description
         *
         * Evento disparado ao executar a pesquisa avançada, o mesmo irá repassar um objeto com os valores preenchidos no modal de pesquisa.
         *
         * > Campos não preenchidos não irão aparecer no objeto passado por parâmetro.
         */
        this.advancedSearch = new EventEmitter();
        /**
         * Evento disparado ao remover um ou todos os disclaimers pelo usuário.
         */
        this.changeDisclaimers = new EventEmitter();
        /**
         * Evento disparado ao realizar uma busca pelo campo de pesquisa rápida, o mesmo será chamado repassando o valor digitado.
         */
        this.quickSearch = new EventEmitter();
    }
    Object.defineProperty(ThfPageDynamicSearchBaseComponent.prototype, "filters", {
        get: /**
         * @return {?}
         */
        function () {
            return this._filters;
        },
        /**
         * @optional
         *
         * @description
         *
         * Lista dos campos usados na busca avançada. Caso o mesmo não seja passado a busca avançada não será exibida.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Lista dos campos usados na busca avançada. Caso o mesmo não seja passado a busca avançada não será exibida.
         * @param {?} filters
         * @return {?}
         */
        function (filters) {
            this._filters = Array.isArray(filters) ? tslib_1.__spread(filters) : [];
        },
        enumerable: true,
        configurable: true
    });
    ThfPageDynamicSearchBaseComponent.propDecorators = {
        actions: [{ type: Input, args: ['t-actions',] }],
        breadcrumb: [{ type: Input, args: ['t-breadcrumb',] }],
        filters: [{ type: Input, args: ['t-filters',] }],
        title: [{ type: Input, args: ['t-title',] }],
        advancedSearch: [{ type: Output, args: ['t-advanced-search',] }],
        changeDisclaimers: [{ type: Output, args: ['t-change-disclaimers',] }],
        quickSearch: [{ type: Output, args: ['t-quick-search',] }]
    };
    return ThfPageDynamicSearchBaseComponent;
}());
export { ThfPageDynamicSearchBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicSearchBaseComponent.prototype._filters;
    /** @type {?} */
    ThfPageDynamicSearchBaseComponent.prototype.literals;
    /**
     * Nesta propriedade deve ser definido um array de objetos que implementam a interface `ThfPageAction`.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.actions;
    /**
     * Objeto com propriedades do breadcrumb.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.breadcrumb;
    /**
     * Título da página.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.title;
    /**
     * \@description
     *
     * Evento disparado ao executar a pesquisa avançada, o mesmo irá repassar um objeto com os valores preenchidos no modal de pesquisa.
     *
     * > Campos não preenchidos não irão aparecer no objeto passado por parâmetro.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.advancedSearch;
    /**
     * Evento disparado ao remover um ou todos os disclaimers pelo usuário.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.changeDisclaimers;
    /**
     * Evento disparado ao realizar uma busca pelo campo de pesquisa rápida, o mesmo será chamado repassando o valor digitado.
     * @type {?}
     */
    ThfPageDynamicSearchBaseComponent.prototype.quickSearch;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2UtZHluYW1pYy1zZWFyY2gtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdG90dnMvdGhmLXRlbXBsYXRlcy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RoZi1wYWdlLWR5bmFtaWMtc2VhcmNoL3RoZi1wYWdlLWR5bmFtaWMtc2VhcmNoLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSTVELE9BQU8sRUFBRSxlQUFlLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFFckUsTUFBTSxLQUFPLG1DQUFtQyxHQUFHO0lBQ2pELEVBQUUsRUFBRTtRQUNGLG9CQUFvQixFQUFFLGlDQUFpQztRQUN2RCx5QkFBeUIsRUFBRSxRQUFRO1FBQ25DLGdCQUFnQixFQUFFLGVBQWU7S0FDbEM7SUFDRCxFQUFFLEVBQUU7UUFDRixvQkFBb0IsRUFBRSx1Q0FBdUM7UUFDN0QseUJBQXlCLEVBQUUsUUFBUTtRQUNuQyxnQkFBZ0IsRUFBRSxrQkFBa0I7S0FDckM7SUFDRCxFQUFFLEVBQUU7UUFDRixvQkFBb0IsRUFBRSx3Q0FBd0M7UUFDOUQseUJBQXlCLEVBQUUsV0FBVztRQUN0QyxnQkFBZ0IsRUFBRSxrQkFBa0I7S0FDckM7Q0FDRjs7Ozs7OztBQVFEO0lBQUE7UUFFVSxhQUFRLEdBQStCLEVBQUUsQ0FBQztRQUVsRCxhQUFRLHdCQUNILG1DQUFtQyxDQUFDLGdCQUFnQixDQUFDLEVBQ3JELG1DQUFtQyxDQUFDLGVBQWUsRUFBRSxDQUFDLEVBQ3pEOzs7O1FBR2tCLFlBQU8sR0FBMEIsRUFBRSxDQUFDOzs7O1FBR2pDLGVBQVUsR0FBbUIsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUM7Ozs7Ozs7O1FBMkJyQyxtQkFBYyxHQUF1QixJQUFJLFlBQVksRUFBRSxDQUFDOzs7O1FBR3JELHNCQUFpQixHQUF1QixJQUFJLFlBQVksRUFBRSxDQUFDOzs7O1FBR2pFLGdCQUFXLEdBQTBCLElBQUksWUFBWSxFQUFFLENBQUM7SUFFcEYsQ0FBQztJQTFCQyxzQkFBd0Isc0RBQU87Ozs7UUFJL0I7WUFDRSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkIsQ0FBQztRQWJEOzs7Ozs7V0FNRzs7Ozs7Ozs7OztRQUNILFVBQWdDLE9BQW1DO1lBQ2pFLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLGtCQUFLLE9BQU8sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzdELENBQUM7OztPQUFBOzswQkFkQSxLQUFLLFNBQUMsV0FBVzs2QkFHakIsS0FBSyxTQUFDLGNBQWM7MEJBU3BCLEtBQUssU0FBQyxXQUFXO3dCQVNqQixLQUFLLFNBQUMsU0FBUztpQ0FTZixNQUFNLFNBQUMsbUJBQW1CO29DQUcxQixNQUFNLFNBQUMsc0JBQXNCOzhCQUc3QixNQUFNLFNBQUMsZ0JBQWdCOztJQUUxQix3Q0FBQztDQUFBLEFBaERELElBZ0RDO1NBaERZLGlDQUFpQzs7Ozs7O0lBRTVDLHFEQUFrRDs7SUFFbEQscURBR0U7Ozs7O0lBR0Ysb0RBQXdEOzs7OztJQUd4RCx1REFBa0U7Ozs7O0lBa0JsRSxrREFBZ0M7Ozs7Ozs7OztJQVNoQywyREFBcUY7Ozs7O0lBR3JGLDhEQUEyRjs7Ozs7SUFHM0Ysd0RBQWtGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRoZkJyZWFkY3J1bWIsIFRoZkR5bmFtaWNGb3JtRmllbGQsIFRoZlBhZ2VBY3Rpb24gfSBmcm9tICdAdG90dnMvdGhmLXVpJztcblxuaW1wb3J0IHsgYnJvd3Nlckxhbmd1YWdlLCB0aGZMb2NhbGVEZWZhdWx0IH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmV4cG9ydCBjb25zdCB0aGZQYWdlRHluYW1pY1NlYXJjaExpdGVyYWxzRGVmYXVsdCA9IHtcbiAgZW46IHtcbiAgICBkaXNjbGFpbWVyR3JvdXBUaXRsZTogJ0Rpc3BsYXlpbmcgcmVzdWx0cyBmaWx0ZXJlZCBieTonLFxuICAgIGZpbHRlclNldHRpbmdzUGxhY2Vob2xkZXI6ICdTZWFyY2gnLFxuICAgIHF1aWNrU2VhcmNoTGFiZWw6ICdRdWljayBzZWFyY2g6J1xuICB9LFxuICBlczoge1xuICAgIGRpc2NsYWltZXJHcm91cFRpdGxlOiAnUHJlc2VudGFuZG8gcmVzdWx0YWRvcyBmaWx0cmFkb3MgcG9yOicsXG4gICAgZmlsdGVyU2V0dGluZ3NQbGFjZWhvbGRlcjogJ0J1c2NhcicsXG4gICAgcXVpY2tTZWFyY2hMYWJlbDogJ0LDunNxdWVkYSByw6FwaWRhOidcbiAgfSxcbiAgcHQ6IHtcbiAgICBkaXNjbGFpbWVyR3JvdXBUaXRsZTogJ0FwcmVzZW50YW5kbyByZXN1bHRhZG9zIGZpbHRyYWRvcyBwb3I6JyxcbiAgICBmaWx0ZXJTZXR0aW5nc1BsYWNlaG9sZGVyOiAnUGVzcXVpc2FyJyxcbiAgICBxdWlja1NlYXJjaExhYmVsOiAnUGVzcXVpc2EgcsOhcGlkYTonXG4gIH1cbn07XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBjb20gYXMgYcOnw7VlcyBkZSBwZXNxdWlzYSBqw6EgZGVmaW5pZGFzLCBiYXN0YW5kbyBxdWUgbyBkZXNlbnZvbHZlZG9yIGltcGxlbWVudGUgYXBlbmFzIGEgY2hhbWFkYSBwYXJhIGFzIEFQSXNcbiAqIGUgZXhpYmEgYXMgaW5mb3JtYcOnw7Vlcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFRoZlBhZ2VEeW5hbWljU2VhcmNoQmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfZmlsdGVyczogQXJyYXk8VGhmRHluYW1pY0Zvcm1GaWVsZD4gPSBbXTtcblxuICBsaXRlcmFscyA9IHtcbiAgICAuLi50aGZQYWdlRHluYW1pY1NlYXJjaExpdGVyYWxzRGVmYXVsdFt0aGZMb2NhbGVEZWZhdWx0XSxcbiAgICAuLi50aGZQYWdlRHluYW1pY1NlYXJjaExpdGVyYWxzRGVmYXVsdFticm93c2VyTGFuZ3VhZ2UoKV1cbiAgfTtcblxuICAvKiogTmVzdGEgcHJvcHJpZWRhZGUgZGV2ZSBzZXIgZGVmaW5pZG8gdW0gYXJyYXkgZGUgb2JqZXRvcyBxdWUgaW1wbGVtZW50YW0gYSBpbnRlcmZhY2UgYFRoZlBhZ2VBY3Rpb25gLiAqL1xuICBASW5wdXQoJ3QtYWN0aW9ucycpIGFjdGlvbnM/OiBBcnJheTxUaGZQYWdlQWN0aW9uPiA9IFtdO1xuXG4gIC8qKiBPYmpldG8gY29tIHByb3ByaWVkYWRlcyBkbyBicmVhZGNydW1iLiAqL1xuICBASW5wdXQoJ3QtYnJlYWRjcnVtYicpIGJyZWFkY3J1bWI/OiBUaGZCcmVhZGNydW1iID0geyBpdGVtczogW10gfTtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBMaXN0YSBkb3MgY2FtcG9zIHVzYWRvcyBuYSBidXNjYSBhdmFuw6dhZGEuIENhc28gbyBtZXNtbyBuw6NvIHNlamEgcGFzc2FkbyBhIGJ1c2NhIGF2YW7Dp2FkYSBuw6NvIHNlcsOhIGV4aWJpZGEuXG4gICAqL1xuICBASW5wdXQoJ3QtZmlsdGVycycpIHNldCBmaWx0ZXJzKGZpbHRlcnM6IEFycmF5PFRoZkR5bmFtaWNGb3JtRmllbGQ+KSB7XG4gICAgdGhpcy5fZmlsdGVycyA9IEFycmF5LmlzQXJyYXkoZmlsdGVycykgPyBbLi4uZmlsdGVyc10gOiBbXTtcbiAgfVxuXG4gIGdldCBmaWx0ZXJzKCk6IEFycmF5PFRoZkR5bmFtaWNGb3JtRmllbGQ+IHtcbiAgICByZXR1cm4gdGhpcy5fZmlsdGVycztcbiAgfVxuXG4gIC8qKiBUw610dWxvIGRhIHDDoWdpbmEuICovXG4gIEBJbnB1dCgndC10aXRsZScpIHRpdGxlOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBFdmVudG8gZGlzcGFyYWRvIGFvIGV4ZWN1dGFyIGEgcGVzcXVpc2EgYXZhbsOnYWRhLCBvIG1lc21vIGlyw6EgcmVwYXNzYXIgdW0gb2JqZXRvIGNvbSBvcyB2YWxvcmVzIHByZWVuY2hpZG9zIG5vIG1vZGFsIGRlIHBlc3F1aXNhLlxuICAgKlxuICAgKiA+IENhbXBvcyBuw6NvIHByZWVuY2hpZG9zIG7Do28gaXLDo28gYXBhcmVjZXIgbm8gb2JqZXRvIHBhc3NhZG8gcG9yIHBhcsOibWV0cm8uXG4gICAqL1xuICBAT3V0cHV0KCd0LWFkdmFuY2VkLXNlYXJjaCcpIGFkdmFuY2VkU2VhcmNoPzogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLyoqIEV2ZW50byBkaXNwYXJhZG8gYW8gcmVtb3ZlciB1bSBvdSB0b2RvcyBvcyBkaXNjbGFpbWVycyBwZWxvIHVzdcOhcmlvLiAqL1xuICBAT3V0cHV0KCd0LWNoYW5nZS1kaXNjbGFpbWVycycpIGNoYW5nZURpc2NsYWltZXJzPzogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLyoqIEV2ZW50byBkaXNwYXJhZG8gYW8gcmVhbGl6YXIgdW1hIGJ1c2NhIHBlbG8gY2FtcG8gZGUgcGVzcXVpc2EgcsOhcGlkYSwgbyBtZXNtbyBzZXLDoSBjaGFtYWRvIHJlcGFzc2FuZG8gbyB2YWxvciBkaWdpdGFkby4gKi9cbiAgQE91dHB1dCgndC1xdWljay1zZWFyY2gnKSBxdWlja1NlYXJjaD86IEV2ZW50RW1pdHRlcjxzdHJpbmc+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG59XG4iXX0=