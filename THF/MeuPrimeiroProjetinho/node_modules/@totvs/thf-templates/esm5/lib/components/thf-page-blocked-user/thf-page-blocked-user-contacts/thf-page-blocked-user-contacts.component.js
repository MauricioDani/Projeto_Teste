/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ElementRef, Input, ViewChild } from '@angular/core';
/** @type {?} */
var thfPageBlockedUserContactItemMargin = 16;
var ThfPageBlockedUserContactsComponent = /** @class */ (function () {
    function ThfPageBlockedUserContactsComponent(changeDetector) {
        this.changeDetector = changeDetector;
        this.overflowItem = false;
    }
    /**
     * @return {?}
     */
    ThfPageBlockedUserContactsComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.checkContactItemWidth();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ThfPageBlockedUserContactsComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.email || changes.phone) {
            this.checkContactItemWidth();
        }
    };
    /**
     * @private
     * @return {?}
     */
    ThfPageBlockedUserContactsComponent.prototype.checkContactItemWidth = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.email || !this.phone) {
            this.overflowItem = true;
            return;
        }
        else {
            setTimeout((/**
             * @return {?}
             */
            function () {
                /** @type {?} */
                var phoneWidth = _this.phoneItem.nativeElement.offsetWidth;
                /** @type {?} */
                var mailWidth = _this.mailItem.nativeElement.offsetWidth;
                /** @type {?} */
                var contactGroupHalfWidth = _this.contactGroup.nativeElement.offsetWidth / 2;
                _this.overflowItem = phoneWidth > contactGroupHalfWidth || mailWidth > contactGroupHalfWidth - thfPageBlockedUserContactItemMargin;
            }));
        }
        this.changeDetector.detectChanges();
    };
    ThfPageBlockedUserContactsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-page-blocked-user-contacts',
                    template: "<div #contactGroup class=\"thf-page-blocked-user-contact-group thf-row thf-mb-3\">\n  <div *ngIf=\"phone\"\n    class=\"thf-page-blocked-user-contact-item\"\n    [ngClass]=\"overflowItem ? 'thf-md-12' : 'thf-md-6'\">\n    <a\n      class=\"thf-page-blocked-user-link thf-clickable\"\n      [class.thf-page-blocked-user-contact-content-inline]=\"overflowItem\"\n      href=\"tel:{{ phone }}\"\n      target=\"_self\">\n      <div class=\"thf-page-blocked-user-contact-group-item\">\n        <span class=\"thf-page-blocked-user-contact-icon thf-icon thf-icon-telephone thf-pr-1\"></span>\n        <span #phoneItem class=\"thf-page-blocked-user-contact-text thf-font-text\">{{ phone }}</span>\n      </div>\n    </a>\n  </div>\n  <div *ngIf=\"email\"\n    class=\"thf-page-blocked-user-contact-item thf-page-blocked-user-contact-mail\"\n    [ngClass]=\"overflowItem ? 'thf-md-12' : 'thf-md-6'\">\n    <a\n      class=\"thf-page-blocked-user-link thf-clickable\"\n      [class.thf-page-blocked-user-contact-content-inline]=\"overflowItem\"\n      href=\"mailto:{{ email }}\"\n      target=\"_self\">\n      <div class=\"thf-page-blocked-user-contact-group-item\">\n        <span class=\"thf-page-blocked-user-contact-icon thf-icon thf-icon-mail thf-pr-1 \"></span>\n        <span #mailItem class=\"thf-page-blocked-user-contact-text thf-font-text\">{{ email }}</span>\n      </div>\n    </a>\n  </div>\n</div>"
                }] }
    ];
    /** @nocollapse */
    ThfPageBlockedUserContactsComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    ThfPageBlockedUserContactsComponent.propDecorators = {
        email: [{ type: Input, args: ['t-email',] }],
        phone: [{ type: Input, args: ['t-phone',] }],
        contactGroup: [{ type: ViewChild, args: ['contactGroup', { static: true },] }],
        mailItem: [{ type: ViewChild, args: ['mailItem', { static: true },] }],
        phoneItem: [{ type: ViewChild, args: ['phoneItem', { static: true },] }]
    };
    return ThfPageBlockedUserContactsComponent;
}());
export { ThfPageBlockedUserContactsComponent };
if (false) {
    /** @type {?} */
    ThfPageBlockedUserContactsComponent.prototype.literals;
    /** @type {?} */
    ThfPageBlockedUserContactsComponent.prototype.overflowItem;
    /**
     * @type {?}
     * @private
     */
    ThfPageBlockedUserContactsComponent.prototype.mailText;
    /**
     * @type {?}
     * @private
     */
    ThfPageBlockedUserContactsComponent.prototype.phoneText;
    /** @type {?} */
    ThfPageBlockedUserContactsComponent.prototype.email;
    /** @type {?} */
    ThfPageBlockedUserContactsComponent.prototype.phone;
    /** @type {?} */
    ThfPageBlockedUserContactsComponent.prototype.contactGroup;
    /** @type {?} */
    ThfPageBlockedUserContactsComponent.prototype.mailItem;
    /** @type {?} */
    ThfPageBlockedUserContactsComponent.prototype.phoneItem;
    /**
     * @type {?}
     * @private
     */
    ThfPageBlockedUserContactsComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2UtYmxvY2tlZC11c2VyLWNvbnRhY3RzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdGVtcGxhdGVzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXBhZ2UtYmxvY2tlZC11c2VyL3RoZi1wYWdlLWJsb2NrZWQtdXNlci1jb250YWN0cy90aGYtcGFnZS1ibG9ja2VkLXVzZXItY29udGFjdHMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQWlCLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUE0QixTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7O0lBRTlILG1DQUFtQyxHQUFHLEVBQUU7QUFFOUM7SUFzQkUsNkNBQW9CLGNBQWlDO1FBQWpDLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtRQWZyRCxpQkFBWSxHQUFZLEtBQUssQ0FBQztJQWUwQixDQUFDOzs7O0lBRXpELDZEQUFlOzs7SUFBZjtRQUNFLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO0lBQy9CLENBQUM7Ozs7O0lBRUQseURBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLEtBQUssSUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFO1lBQ2xDLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1NBQzlCO0lBQ0gsQ0FBQzs7Ozs7SUFFTyxtRUFBcUI7Ozs7SUFBN0I7UUFBQSxpQkFjQztRQWJDLElBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRztZQUNoQyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztZQUN6QixPQUFPO1NBQ1I7YUFBTTtZQUNMLFVBQVU7OztZQUFDOztvQkFDSCxVQUFVLEdBQUcsS0FBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsV0FBVzs7b0JBQ3JELFNBQVMsR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxXQUFXOztvQkFDbkQscUJBQXFCLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsV0FBVyxHQUFHLENBQUM7Z0JBRTdFLEtBQUksQ0FBQyxZQUFZLEdBQUcsVUFBVSxHQUFHLHFCQUFxQixJQUFJLFNBQVMsR0FBRyxxQkFBcUIsR0FBRyxtQ0FBbUMsQ0FBQztZQUNwSSxDQUFDLEVBQUMsQ0FBQztTQUNKO1FBQ0QsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN0QyxDQUFDOztnQkFoREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQ0FBZ0M7b0JBQzFDLHk0Q0FBOEQ7aUJBQy9EOzs7O2dCQVB1QixpQkFBaUI7Ozt3QkFnQnRDLEtBQUssU0FBQyxTQUFTO3dCQUVmLEtBQUssU0FBQyxTQUFTOytCQUVmLFNBQVMsU0FBQyxjQUFjLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOzJCQUUxQyxTQUFTLFNBQUMsVUFBVSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs0QkFFdEMsU0FBUyxTQUFDLFdBQVcsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7O0lBOEIxQywwQ0FBQztDQUFBLEFBbERELElBa0RDO1NBOUNZLG1DQUFtQzs7O0lBRTlDLHVEQUFpQjs7SUFDakIsMkRBQThCOzs7OztJQUU5Qix1REFBeUI7Ozs7O0lBQ3pCLHdEQUEwQjs7SUFFMUIsb0RBQWdDOztJQUVoQyxvREFBZ0M7O0lBRWhDLDJEQUFzRTs7SUFFdEUsdURBQThEOztJQUU5RCx3REFBZ0U7Ozs7O0lBRXBELDZEQUF5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5jb25zdCB0aGZQYWdlQmxvY2tlZFVzZXJDb250YWN0SXRlbU1hcmdpbiA9IDE2O1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtcGFnZS1ibG9ja2VkLXVzZXItY29udGFjdHMnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXBhZ2UtYmxvY2tlZC11c2VyLWNvbnRhY3RzLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaGZQYWdlQmxvY2tlZFVzZXJDb250YWN0c0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcyB7XG5cbiAgbGl0ZXJhbHM6IE9iamVjdDtcbiAgb3ZlcmZsb3dJdGVtOiBib29sZWFuID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBtYWlsVGV4dDogc3RyaW5nO1xuICBwcml2YXRlIHBob25lVGV4dDogc3RyaW5nO1xuXG4gIEBJbnB1dCgndC1lbWFpbCcpIGVtYWlsOiBzdHJpbmc7XG5cbiAgQElucHV0KCd0LXBob25lJykgcGhvbmU6IHN0cmluZztcblxuICBAVmlld0NoaWxkKCdjb250YWN0R3JvdXAnLCB7IHN0YXRpYzogdHJ1ZSB9KSBjb250YWN0R3JvdXA6IEVsZW1lbnRSZWY7XG5cbiAgQFZpZXdDaGlsZCgnbWFpbEl0ZW0nLCB7IHN0YXRpYzogdHJ1ZSB9KSBtYWlsSXRlbTogRWxlbWVudFJlZjtcblxuICBAVmlld0NoaWxkKCdwaG9uZUl0ZW0nLCB7IHN0YXRpYzogdHJ1ZSB9KSBwaG9uZUl0ZW06IEVsZW1lbnRSZWY7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMuY2hlY2tDb250YWN0SXRlbVdpZHRoKCk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKGNoYW5nZXMuZW1haWwgfHwgY2hhbmdlcy5waG9uZSkge1xuICAgICAgdGhpcy5jaGVja0NvbnRhY3RJdGVtV2lkdGgoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGNoZWNrQ29udGFjdEl0ZW1XaWR0aCgpIHtcbiAgICBpZiAoICF0aGlzLmVtYWlsIHx8ICF0aGlzLnBob25lICkge1xuICAgICAgdGhpcy5vdmVyZmxvd0l0ZW0gPSB0cnVlO1xuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY29uc3QgcGhvbmVXaWR0aCA9IHRoaXMucGhvbmVJdGVtLm5hdGl2ZUVsZW1lbnQub2Zmc2V0V2lkdGg7XG4gICAgICAgIGNvbnN0IG1haWxXaWR0aCA9IHRoaXMubWFpbEl0ZW0ubmF0aXZlRWxlbWVudC5vZmZzZXRXaWR0aDtcbiAgICAgICAgY29uc3QgY29udGFjdEdyb3VwSGFsZldpZHRoID0gdGhpcy5jb250YWN0R3JvdXAubmF0aXZlRWxlbWVudC5vZmZzZXRXaWR0aCAvIDI7XG5cbiAgICAgICAgdGhpcy5vdmVyZmxvd0l0ZW0gPSBwaG9uZVdpZHRoID4gY29udGFjdEdyb3VwSGFsZldpZHRoIHx8IG1haWxXaWR0aCA+IGNvbnRhY3RHcm91cEhhbGZXaWR0aCAtIHRoZlBhZ2VCbG9ja2VkVXNlckNvbnRhY3RJdGVtTWFyZ2luO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG5cbn1cbiJdfQ==