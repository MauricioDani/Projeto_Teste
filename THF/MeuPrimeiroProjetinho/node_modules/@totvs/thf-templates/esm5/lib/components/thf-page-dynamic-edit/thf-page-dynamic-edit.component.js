/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { ThfDialogService, ThfDynamicFormComponent, ThfGridComponent, ThfNotificationService } from '@totvs/thf-ui';
import * as util from './../../utils/util';
import { ThfPageDynamicService } from './thf-page-dynamic.service';
/** @type {?} */
export var thfPageDynamicEditLiteralsDefault = {
    en: {
        cancelConfirmMessage: 'Are you sure you want to cancel this operation?',
        detailActionNew: 'New',
        pageActionCancel: 'Cancel',
        pageActionSave: 'Save',
        pageActionSaveNew: 'Save and new',
        registerNotFound: 'Register not found.',
        saveNewNotificationSuccessSave: 'Resource successfully saved.',
        saveNewNotificationSuccessUpdate: 'Resource successfully updated.',
        saveNewNotificationWarning: 'Form must be filled out correctly.',
        saveNotificationSuccessSave: 'Resource successfully saved.',
        saveNotificationSuccessUpdate: 'Resource successfully updated.',
        saveNotificationWarning: 'Form must be filled out correctly.',
    },
    es: {
        cancelConfirmMessage: 'Está seguro de que desea cancelar esta operación?',
        detailActionNew: 'Nuevo',
        pageActionCancel: 'Cancelar',
        pageActionSave: 'Guardar',
        pageActionSaveNew: 'Guardar y nuevo',
        registerNotFound: 'Registro no encontrado.',
        saveNewNotificationSuccessSave: 'Recurso salvo con éxito.',
        saveNewNotificationSuccessUpdate: 'Recurso actualizado con éxito.',
        saveNewNotificationWarning: 'El formulario debe llenarse correctamente.',
        saveNotificationSuccessSave: 'Recurso salvo con éxito.',
        saveNotificationSuccessUpdate: 'Recurso actualizado con éxito.',
        saveNotificationWarning: 'El formulario debe llenarse correctamente.',
    },
    pt: {
        cancelConfirmMessage: 'Tem certeza que deseja cancelar esta operação?',
        detailActionNew: 'Novo',
        pageActionCancel: 'Cancelar',
        pageActionSave: 'Salvar',
        pageActionSaveNew: 'Salvar e novo',
        registerNotFound: 'Registro não encontrado.',
        saveNewNotificationSuccessSave: 'Recurso salvo com sucesso.',
        saveNewNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',
        saveNewNotificationWarning: 'Formulário precisa ser preenchido corretamente.',
        saveNotificationSuccessSave: 'Recurso salvo com sucesso.',
        saveNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',
        saveNotificationWarning: 'Formulário precisa ser preenchido corretamente.',
    }
};
/**
 * \@description
 *
 * O `thf-page-dynamic-edit` é uma página que pode servir para editar ou criar novos registros,
 * o mesmo também suporta metadados conforme especificado na documentação.
 *
 * \@example
 *
 * <example name="thf-page-dynamic-edit-basic" title="Totvs Page Dynamic Edit Basic">
 *  <file name="sample-thf-page-dynamic-edit-basic/sample-thf-page-dynamic-edit-basic.component.html"> </file>
 *  <file name="sample-thf-page-dynamic-edit-basic/sample-thf-page-dynamic-edit-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-dynamic-edit-user" title="Totvs Page Dynamic Edit - User">
 *  <file name="sample-thf-page-dynamic-edit-user/sample-thf-page-dynamic-edit-user.component.html"> </file>
 *  <file name="sample-thf-page-dynamic-edit-user/sample-thf-page-dynamic-edit-user.component.ts"> </file>
 * </example>
 *
 * <example name="thf-page-dynamic-edit-master-detail" title="Totvs Page Dynamic Edit - Master Detail">
 *  <file name="sample-thf-page-dynamic-edit-master-detail/sample-thf-page-dynamic-edit-master-detail.component.html"> </file>
 *  <file name="sample-thf-page-dynamic-edit-master-detail/sample-thf-page-dynamic-edit-master-detail.component.ts"> </file>
 * </example>
 */
var ThfPageDynamicEditComponent = /** @class */ (function () {
    function ThfPageDynamicEditComponent(router, activatedRoute, thfNotification, thfDialogService, thfPageDynamicService) {
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.thfNotification = thfNotification;
        this.thfDialogService = thfDialogService;
        this.thfPageDynamicService = thfPageDynamicService;
        this._actions = {};
        this._autoRouter = false;
        this._controlFields = [];
        this._detailFields = [];
        this._duplicates = [];
        this._fields = [];
        this._keys = [];
        this._pageActions = [];
        this.literals = tslib_1.__assign({}, thfPageDynamicEditLiteralsDefault[util.thfLocaleDefault], thfPageDynamicEditLiteralsDefault[util.browserLanguage()]);
        this.model = {};
        // beforeSave: return boolean
        // afterSave
        // beforeRemove: return boolean
        // afterRemove
        // beforeInsert: : return boolean
        this.detailActions = {};
        /**
         * Objeto com propriedades do breadcrumb.
         */
        this.breadcrumb = { items: [] };
    }
    Object.defineProperty(ThfPageDynamicEditComponent.prototype, "actions", {
        /**
         * @optional
         *
         * @description
         *
         * Ações da página.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Ações da página.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._actions = this.isObject(value) ? value : {};
            this._pageActions = this.getPageActions(this._actions);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicEditComponent.prototype, "autoRouter", {
        get: /**
         * @return {?}
         */
        function () {
            return this._autoRouter;
        },
        /**
         * @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.
         *
         * @optional
         *
         * @description
         *
         * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações
         * estejam definidas nas ações.
         *
         * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.
         *
         * @default false
         */
        set: /**
         * \@todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.
         *
         * \@optional
         *
         * \@description
         *
         * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações
         * estejam definidas nas ações.
         *
         * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.
         *
         * \@default false
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._autoRouter = util.convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicEditComponent.prototype, "fields", {
        get: /**
         * @return {?}
         */
        function () {
            return this._fields;
        },
        /** Lista dos campos usados na tabela e busca avançada. */
        set: /**
         * Lista dos campos usados na tabela e busca avançada.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._fields = Array.isArray(value) ? tslib_1.__spread(value) : [];
            this._keys = this.getKeysByFields(this._fields);
            this._duplicates = this.getDuplicatesByFields(this._fields);
            this._controlFields = this.getControlFields(this._fields);
            this._detailFields = this.getDetailFields(this._fields);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var paramId = this.activatedRoute.snapshot.params['id'];
        /** @type {?} */
        var duplicate = this.activatedRoute.snapshot.queryParams['duplicate'];
        if (this.activatedRoute.snapshot.data.serviceApi) {
            this.serviceApi = this.activatedRoute.snapshot.data.serviceApi;
            this.thfPageDynamicService.configServiceApi({ endpoint: this.serviceApi });
            this.loadMetadata(paramId, duplicate);
        }
        else {
            this.thfPageDynamicService.configServiceApi({ endpoint: this.serviceApi });
            this.loadData(paramId, duplicate);
        }
    };
    Object.defineProperty(ThfPageDynamicEditComponent.prototype, "duplicates", {
        get: /**
         * @return {?}
         */
        function () {
            return tslib_1.__spread(this._duplicates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicEditComponent.prototype, "keys", {
        get: /**
         * @return {?}
         */
        function () {
            return tslib_1.__spread(this._keys);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicEditComponent.prototype, "pageActions", {
        get: /**
         * @return {?}
         */
        function () {
            return tslib_1.__spread(this._pageActions);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicEditComponent.prototype, "controlFields", {
        get: /**
         * @return {?}
         */
        function () {
            return this._controlFields;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageDynamicEditComponent.prototype, "detailFields", {
        get: /**
         * @return {?}
         */
        function () {
            return this._detailFields;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @param {?} path
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.cancel = /**
     * @private
     * @param {?} path
     * @return {?}
     */
    function (path) {
        if (this.dynamicForm && this.dynamicForm.form.dirty) {
            this.thfDialogService.confirm({
                message: this.literals.cancelConfirmMessage,
                title: this.literals.pageActionCancel,
                confirm: this.goBack.bind(this, path)
            });
        }
        else {
            this.goBack(path);
        }
    };
    /**
     * @private
     * @param {?} item
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.formatUniqueKey = /**
     * @private
     * @param {?} item
     * @return {?}
     */
    function (item) {
        /** @type {?} */
        var keys = util.mapObjectByProperties(item, this.keys);
        return util.valuesFromObject(keys).join('|');
    };
    /**
     * @private
     * @param {?} path
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.goBack = /**
     * @private
     * @param {?} path
     * @return {?}
     */
    function (path) {
        if (path) {
            this.router.navigate([path]);
        }
        else {
            window.history.back();
        }
    };
    /**
     * @private
     * @param {?} id
     * @param {?=} duplicate
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.loadData = /**
     * @private
     * @param {?} id
     * @param {?=} duplicate
     * @return {?}
     */
    function (id, duplicate) {
        var _this = this;
        if (!id) {
            try {
                this.model = JSON.parse(duplicate) || {};
            }
            catch (_a) {
                this.model = {};
            }
            return;
        }
        this.thfPageDynamicService.getResource(id).toPromise().then((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            _this.model = response;
        })).catch((/**
         * @return {?}
         */
        function () {
            _this.model = undefined;
            _this.actions = undefined;
            _this._pageActions = [];
        }));
    };
    /**
     * @private
     * @param {?} paramId
     * @param {?} duplicate
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.loadMetadata = /**
     * @private
     * @param {?} paramId
     * @param {?} duplicate
     * @return {?}
     */
    function (paramId, duplicate) {
        var _this = this;
        /** @type {?} */
        var typeMetadata = paramId ? 'edit' : 'create';
        this.thfPageDynamicService.getMetadata(typeMetadata).toPromise().then((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            _this.autoRouter = response.autoRouter;
            _this.actions = response.actions || {};
            _this.breadcrumb = response.breadcrumb || { items: [] };
            _this.fields = response.fields || [];
            _this.title = response.title;
            _this.loadData(paramId, duplicate);
        }));
    };
    /**
     * @private
     * @param {?} path
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.navigateTo = /**
     * @private
     * @param {?} path
     * @return {?}
     */
    function (path) {
        if (path) {
            /** @type {?} */
            var url = this.resolveUrl(this.model, path);
            this.router.navigate([url]);
        }
        else {
            window.history.back();
        }
    };
    /**
     * @private
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.detailActionNew = /**
     * @private
     * @return {?}
     */
    function () {
        this.gridDetail.insertRow();
    };
    /**
     * @private
     * @param {?} item
     * @param {?} path
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.resolveUrl = /**
     * @private
     * @param {?} item
     * @param {?} path
     * @return {?}
     */
    function (item, path) {
        /** @type {?} */
        var uniqueKey = this.formatUniqueKey(item);
        return path.replace(/:id/g, uniqueKey);
    };
    /**
     * @private
     * @param {?} path
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.save = /**
     * @private
     * @param {?} path
     * @return {?}
     */
    function (path) {
        var _this = this;
        if (this.dynamicForm.form.invalid) {
            this.thfNotification.warning(this.literals.saveNotificationWarning);
            return;
        }
        /** @type {?} */
        var paramId = this.activatedRoute.snapshot.params['id'];
        /** @type {?} */
        var saveOperation = paramId
            ? this.thfPageDynamicService.updateResource(paramId, this.model)
            : this.thfPageDynamicService.createResource(this.model);
        /** @type {?} */
        var msgSucess = paramId ? this.literals.saveNotificationSuccessUpdate : this.literals.saveNotificationSuccessSave;
        saveOperation.toPromise().then((/**
         * @return {?}
         */
        function () {
            _this.thfNotification.success(msgSucess);
            _this.navigateTo(path);
        }));
    };
    /**
     * @private
     * @param {?} path
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.saveNew = /**
     * @private
     * @param {?} path
     * @return {?}
     */
    function (path) {
        var _this = this;
        if (this.dynamicForm.form.invalid) {
            this.thfNotification.warning(this.literals.saveNewNotificationWarning);
            return;
        }
        /** @type {?} */
        var paramId = this.activatedRoute.snapshot.params['id'];
        if (paramId) {
            this.thfPageDynamicService.updateResource(paramId, this.model)
                .toPromise().then((/**
             * @return {?}
             */
            function () {
                _this.thfNotification.success(_this.literals.saveNewNotificationSuccessUpdate);
                _this.navigateTo(path);
            }));
        }
        else {
            this.thfPageDynamicService.createResource(this.model)
                .toPromise().then((/**
             * @return {?}
             */
            function () {
                _this.thfNotification.success(_this.literals.saveNewNotificationSuccessSave);
                _this.model = {};
                _this.dynamicForm.form.reset();
            }));
        }
    };
    /**
     * @private
     * @param {?=} fields
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.getKeysByFields = /**
     * @private
     * @param {?=} fields
     * @return {?}
     */
    function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.key === true; })).map((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.property; }));
    };
    /**
     * @private
     * @param {?=} fields
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.getControlFields = /**
     * @private
     * @param {?=} fields
     * @return {?}
     */
    function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.type !== 'detail'; }));
    };
    /**
     * @private
     * @param {?=} fields
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.getDetailFields = /**
     * @private
     * @param {?=} fields
     * @return {?}
     */
    function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.type === 'detail'; }));
    };
    /**
     * @private
     * @param {?=} fields
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.getDuplicatesByFields = /**
     * @private
     * @param {?=} fields
     * @return {?}
     */
    function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.duplicate === true; })).map((/**
         * @param {?} field
         * @return {?}
         */
        function (field) { return field.property; }));
    };
    /**
     * @private
     * @param {?=} actions
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.getPageActions = /**
     * @private
     * @param {?=} actions
     * @return {?}
     */
    function (actions) {
        if (actions === void 0) { actions = {}; }
        /** @type {?} */
        var pageActions = [{ label: this.literals.pageActionSave, action: this.save.bind(this, actions.save) }];
        if (actions.saveNew) {
            pageActions.push({ label: this.literals.pageActionSaveNew, action: this.saveNew.bind(this, actions.saveNew) });
        }
        if (actions.cancel === undefined || actions.cancel) {
            pageActions.push({ label: this.literals.pageActionCancel, action: this.cancel.bind(this, actions.cancel) });
        }
        return pageActions;
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    ThfPageDynamicEditComponent.prototype.isObject = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return !!value && typeof value === 'object' && !Array.isArray(value);
    };
    ThfPageDynamicEditComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-page-dynamic-edit',
                    template: "<thf-page-default\n  [t-actions]=\"pageActions\"\n  [t-breadcrumb]=\"breadcrumb\"\n  [t-title]=\"title\">\n\n  <ng-container *ngIf=\"model; then formFieldsTemplate; else registerNotFoundTemplate\">\n  </ng-container>\n\n</thf-page-default>\n\n<ng-template #registerNotFoundTemplate>\n\n  <thf-widget>\n    <span class=\"thf-icon thf-icon-info\"></span>\n    <span class=\"thf-font-text-large\">\n      {{ literals.registerNotFound }}\n    </span>\n  </thf-widget>\n\n</ng-template>\n\n<ng-template #formFieldsTemplate>\n\n  <thf-dynamic-form #dynamicForm [t-fields]=\"controlFields\" [t-value]=\"model\">\n  </thf-dynamic-form>\n\n  <div *ngIf=\"detailFields.length > 0\" class=\"thf-sm-12\">\n    <thf-divider [t-label]=\"detailFields[0].divider\"></thf-divider>\n\n    <div class=\"thf-row thf-mb-2\">\n      <thf-button [t-label]=\"literals.detailActionNew\" (t-click)=\"detailActionNew()\" t-small></thf-button>\n    </div>\n\n    <thf-grid #gridDetail\n      [t-row-actions]=\"detailActions\"\n      [t-columns]=\"detailFields[0].detail.columns\"\n      [t-data]=\"model[detailFields[0].property]\">\n    </thf-grid>\n  </div>\n\n</ng-template>\n",
                    providers: [ThfPageDynamicService]
                }] }
    ];
    /** @nocollapse */
    ThfPageDynamicEditComponent.ctorParameters = function () { return [
        { type: Router },
        { type: ActivatedRoute },
        { type: ThfNotificationService },
        { type: ThfDialogService },
        { type: ThfPageDynamicService }
    ]; };
    ThfPageDynamicEditComponent.propDecorators = {
        actions: [{ type: Input, args: ['t-actions',] }],
        autoRouter: [{ type: Input, args: ['t-auto-router',] }],
        breadcrumb: [{ type: Input, args: ['t-breadcrumb',] }],
        fields: [{ type: Input, args: ['t-fields',] }],
        serviceApi: [{ type: Input, args: ['t-service-api',] }],
        title: [{ type: Input, args: ['t-title',] }],
        dynamicForm: [{ type: ViewChild, args: ['dynamicForm', { static: true },] }],
        gridDetail: [{ type: ViewChild, args: ['gridDetail', { static: true },] }]
    };
    return ThfPageDynamicEditComponent;
}());
export { ThfPageDynamicEditComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype._actions;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype._autoRouter;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype._controlFields;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype._detailFields;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype._duplicates;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype._fields;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype._keys;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype._pageActions;
    /** @type {?} */
    ThfPageDynamicEditComponent.prototype.literals;
    /** @type {?} */
    ThfPageDynamicEditComponent.prototype.model;
    /** @type {?} */
    ThfPageDynamicEditComponent.prototype.detailActions;
    /**
     * Objeto com propriedades do breadcrumb.
     * @type {?}
     */
    ThfPageDynamicEditComponent.prototype.breadcrumb;
    /**
     * \@description
     *
     * Endpoint usado pelo template para requisição do recurso que serão exibido para edição.
     *
     * Para as ações de `save` e `saveNew`, será feito uma requisição de criação nesse mesmo endpoint passando os valores
     * preenchidos pelo usuário via payload.
     *
     * > `POST {end-point}`
     *
     * ```
     *  <thf-page-dynamic-edit
     *    [t-actions]="{ save: '/', saveNew: 'new' }"
     *    [t-fields]="[ { property: 'name' }, { property: 'city' } ]"
     *    t-service="/api/thf-samples/v1/people"
     *    ...>
     *  </thf-page-dynamic-edit>
     * ```
     *
     * Resquisição disparada, onde a propriedade `name` e `city` foram preenchidas:
     *
     * ```
     *  POST /api/thf-samples/v1/people HTTP/1.1
     *  Host: localhost:4000
     *  Connection: keep-alive
     *  Accept: application/json, text/plain
     *  ...
     * ```
     *
     * Request payload:
     *
     * ```
     * { "name": "Fulano", "city": "Smallville" }
     * ```
     * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar
     * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.
     * >
     * > `GET {end-point}/metadata?type=create&version={version}`
     *
     * Caso queira que o template carregue um recurso já existente, deve-se ser incluído um parametro na rota chamado `id`.
     *
     * Exemplo de configuração de rota:
     *
     * ```
     *  RouterModule.forRoot([
     *    ...
     *    { path: 'edit/:id', component: PersonEditComponent },
     *    ...
     *  ],
     * ```
     *
     * Baseado nisso, na inicialização do template, será disparado uma requisição para buscar o recurso que será editado.
     *
     * > `GET {end-point}/{id}`
     *
     * Nos métodos de `save` e `saveNew`, ao invés de um `POST`, será disparado um `PUT`.
     *
     * Resquisição disparada, onde a propriedade `name` e `city` foram preenchidas / atualizadas, e o `id` da url é 2:
     *
     * ```
     *  PUT /api/thf-samples/v1/people/2 HTTP/1.1
     *  Host: localhost:4000
     *  Connection: keep-alive
     *  Accept: application/json, text/plain
     *  ...
     * ```
     *
     * Request payload:
     *
     * ```
     * { "name": "Fulano", "city": "Metropolis" }
     * ```
     *
     * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar
     * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.
     * >
     * > `GET {end-point}/metadata?type=edit&version={version}`
     * @type {?}
     */
    ThfPageDynamicEditComponent.prototype.serviceApi;
    /**
     * Título da página.
     * @type {?}
     */
    ThfPageDynamicEditComponent.prototype.title;
    /** @type {?} */
    ThfPageDynamicEditComponent.prototype.dynamicForm;
    /** @type {?} */
    ThfPageDynamicEditComponent.prototype.gridDetail;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype.activatedRoute;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype.thfNotification;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype.thfDialogService;
    /**
     * @type {?}
     * @private
     */
    ThfPageDynamicEditComponent.prototype.thfPageDynamicService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhmLXBhZ2UtZHluYW1pYy1lZGl0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0b3R2cy90aGYtdGVtcGxhdGVzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGhmLXBhZ2UtZHluYW1pYy1lZGl0L3RoZi1wYWdlLWR5bmFtaWMtZWRpdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUl6RCxPQUFPLEVBRUwsZ0JBQWdCLEVBQ2hCLHVCQUF1QixFQUN2QixnQkFBZ0IsRUFFaEIsc0JBQXNCLEVBQ1AsTUFBTSxlQUFlLENBQUM7QUFFdkMsT0FBTyxLQUFLLElBQUksTUFBTSxvQkFBb0IsQ0FBQztBQUkzQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7QUFFbkUsTUFBTSxLQUFPLGlDQUFpQyxHQUFHO0lBQy9DLEVBQUUsRUFBRTtRQUNGLG9CQUFvQixFQUFFLGlEQUFpRDtRQUN2RSxlQUFlLEVBQUUsS0FBSztRQUN0QixnQkFBZ0IsRUFBRSxRQUFRO1FBQzFCLGNBQWMsRUFBRSxNQUFNO1FBQ3RCLGlCQUFpQixFQUFFLGNBQWM7UUFDakMsZ0JBQWdCLEVBQUUscUJBQXFCO1FBQ3ZDLDhCQUE4QixFQUFFLDhCQUE4QjtRQUM5RCxnQ0FBZ0MsRUFBRSxnQ0FBZ0M7UUFDbEUsMEJBQTBCLEVBQUUsb0NBQW9DO1FBQ2hFLDJCQUEyQixFQUFFLDhCQUE4QjtRQUMzRCw2QkFBNkIsRUFBRSxnQ0FBZ0M7UUFDL0QsdUJBQXVCLEVBQUUsb0NBQW9DO0tBQzlEO0lBQ0QsRUFBRSxFQUFFO1FBQ0Ysb0JBQW9CLEVBQUUsbURBQW1EO1FBQ3pFLGVBQWUsRUFBRSxPQUFPO1FBQ3hCLGdCQUFn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LElBQUksRUFBRTs2QkFDekMsU0FBUyxTQUFDLFlBQVksRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7O0lBZ04zQyxrQ0FBQztDQUFBLEFBdFhELElBc1hDO1NBalhZLDJCQUEyQjs7Ozs7O0lBRXRDLCtDQUFpRDs7Ozs7SUFDakQsa0RBQXFDOzs7OztJQUNyQyxxREFBd0M7Ozs7O0lBQ3hDLG9EQUF1Qzs7Ozs7SUFDdkMsa0RBQXFDOzs7OztJQUNyQyw4Q0FBaUM7Ozs7O0lBQ2pDLDRDQUErQjs7Ozs7SUFDL0IsbURBQWdEOztJQUVoRCwrQ0FHRTs7SUFDRiw0Q0FBZ0I7O0lBT2hCLG9EQUFnRDs7Ozs7SUFzQ2hELGlEQUFrRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUErRmxFLGlEQUEyQzs7Ozs7SUFHM0MsNENBQWdDOztJQUVoQyxrREFBaUY7O0lBQ2pGLGlEQUF3RTs7Ozs7SUFHdEUsNkNBQXNCOzs7OztJQUN0QixxREFBc0M7Ozs7O0lBQ3RDLHNEQUErQzs7Ozs7SUFDL0MsdURBQTBDOzs7OztJQUMxQyw0REFBb0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUsIFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHtcbiAgVGhmQnJlYWRjcnVtYixcbiAgVGhmRGlhbG9nU2VydmljZSxcbiAgVGhmRHluYW1pY0Zvcm1Db21wb25lbnQsXG4gIFRoZkdyaWRDb21wb25lbnQsXG4gIFRoZkdyaWRSb3dBY3Rpb25zLFxuICBUaGZOb3RpZmljYXRpb25TZXJ2aWNlLFxuICBUaGZQYWdlQWN0aW9uIH0gZnJvbSAnQHRvdHZzL3RoZi11aSc7XG5cbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgVGhmUGFnZUR5bmFtaWNFZGl0QWN0aW9ucyB9IGZyb20gJy4vdGhmLXBhZ2UtZHluYW1pYy1lZGl0LWFjdGlvbnMuaW50ZXJmYWNlJztcbmltcG9ydCB7IFRoZlBhZ2VEeW5hbWljRWRpdEZpZWxkIH0gZnJvbSAnLi90aGYtcGFnZS1keW5hbWljLWVkaXQtZmllbGQuaW50ZXJmYWNlJztcbmltcG9ydCB7IFRoZlBhZ2VEeW5hbWljU2VydmljZSB9IGZyb20gJy4vdGhmLXBhZ2UtZHluYW1pYy5zZXJ2aWNlJztcblxuZXhwb3J0IGNvbnN0IHRoZlBhZ2VEeW5hbWljRWRpdExpdGVyYWxzRGVmYXVsdCA9IHtcbiAgZW46IHtcbiAgICBjYW5jZWxDb25maXJtTWVzc2FnZTogJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBjYW5jZWwgdGhpcyBvcGVyYXRpb24/JyxcbiAgICBkZXRhaWxBY3Rpb25OZXc6ICdOZXcnLFxuICAgIHBhZ2VBY3Rpb25DYW5jZWw6ICdDYW5jZWwnLFxuICAgIHBhZ2VBY3Rpb25TYXZlOiAnU2F2ZScsXG4gICAgcGFnZUFjdGlvblNhdmVOZXc6ICdTYXZlIGFuZCBuZXcnLFxuICAgIHJlZ2lzdGVyTm90Rm91bmQ6ICdSZWdpc3RlciBub3QgZm91bmQuJyxcbiAgICBzYXZlTmV3Tm90aWZpY2F0aW9uU3VjY2Vzc1NhdmU6ICdSZXNvdXJjZSBzdWNjZXNzZnVsbHkgc2F2ZWQuJyxcbiAgICBzYXZlTmV3Tm90aWZpY2F0aW9uU3VjY2Vzc1VwZGF0ZTogJ1Jlc291cmNlIHN1Y2Nlc3NmdWxseSB1cGRhdGVkLicsXG4gICAgc2F2ZU5ld05vdGlmaWNhdGlvbldhcm5pbmc6ICdGb3JtIG11c3QgYmUgZmlsbGVkIG91dCBjb3JyZWN0bHkuJyxcbiAgICBzYXZlTm90aWZpY2F0aW9uU3VjY2Vzc1NhdmU6ICdSZXNvdXJjZSBzdWNjZXNzZnVsbHkgc2F2ZWQuJyxcbiAgICBzYXZlTm90aWZpY2F0aW9uU3VjY2Vzc1VwZGF0ZTogJ1Jlc291cmNlIHN1Y2Nlc3NmdWxseSB1cGRhdGVkLicsXG4gICAgc2F2ZU5vdGlmaWNhdGlvbldhcm5pbmc6ICdGb3JtIG11c3QgYmUgZmlsbGVkIG91dCBjb3JyZWN0bHkuJyxcbiAgfSxcbiAgZXM6IHtcbiAgICBjYW5jZWxDb25maXJtTWVzc2FnZTogJ0VzdMOhIHNlZ3VybyBkZSBxdWUgZGVzZWEgY2FuY2VsYXIgZXN0YSBvcGVyYWNpw7NuPycsXG4gICAgZGV0YWlsQWN0aW9uTmV3OiAnTnVldm8nLFxuICAgIHBhZ2VBY3Rpb25DYW5jZWw6ICdDYW5jZWxhcicsXG4gICAgcGFnZUFjdGlvblNhdmU6ICdHdWFyZGFyJyxcbiAgICBwYWdlQWN0aW9uU2F2ZU5ldzogJ0d1YXJkYXIgeSBudWV2bycsXG4gICAgcmVnaXN0ZXJOb3RGb3VuZDogJ1JlZ2lzdHJvIG5vIGVuY29udHJhZG8uJyxcbiAgICBzYXZlTmV3Tm90aWZpY2F0aW9uU3VjY2Vzc1NhdmU6ICdSZWN1cnNvIHNhbHZvIGNvbiDDqXhpdG8uJyxcbiAgICBzYXZlTmV3Tm90aWZpY2F0aW9uU3VjY2Vzc1VwZGF0ZTogJ1JlY3Vyc28gYWN0dWFsaXphZG8gY29uIMOpeGl0by4nLFxuICAgIHNhdmVOZXdOb3RpZmljYXRpb25XYXJuaW5nOiAnRWwgZm9ybXVsYXJpbyBkZWJlIGxsZW5hcnNlIGNvcnJlY3RhbWVudGUuJyxcbiAgICBzYXZlTm90aWZpY2F0aW9uU3VjY2Vzc1NhdmU6ICdSZWN1cnNvIHNhbHZvIGNvbiDDqXhpdG8uJyxcbiAgICBzYXZlTm90aWZpY2F0aW9uU3VjY2Vzc1VwZGF0ZTogJ1JlY3Vyc28gYWN0dWFsaXphZG8gY29uIMOpeGl0by4nLFxuICAgIHNhdmVOb3RpZmljYXRpb25XYXJuaW5nOiAnRWwgZm9ybXVsYXJpbyBkZWJlIGxsZW5hcnNlIGNvcnJlY3RhbWVudGUuJyxcbiAgfSxcbiAgcHQ6IHtcbiAgICBjYW5jZWxDb25maXJtTWVzc2FnZTogJ1RlbSBjZXJ0ZXphIHF1ZSBkZXNlamEgY2FuY2VsYXIgZXN0YSBvcGVyYcOnw6NvPycsXG4gICAgZGV0YWlsQWN0aW9uTmV3OiAnTm92bycsXG4gICAgcGFnZUFjdGlvbkNhbmNlbDogJ0NhbmNlbGFyJyxcbiAgICBwYWdlQWN0aW9uU2F2ZTogJ1NhbHZhcicsXG4gICAgcGFnZUFjdGlvblNhdmVOZXc6ICdTYWx2YXIgZSBub3ZvJyxcbiAgICByZWdpc3Rlck5vdEZvdW5kOiAnUmVnaXN0cm8gbsOjbyBlbmNvbnRyYWRvLicsXG4gICAgc2F2ZU5ld05vdGlmaWNhdGlvblN1Y2Nlc3NTYXZlOiAnUmVjdXJzbyBzYWx2byBjb20gc3VjZXNzby4nLFxuICAgIHNhdmVOZXdOb3RpZmljYXRpb25TdWNjZXNzVXBkYXRlOiAnUmVjdXJzbyBhdHVhbGl6YWRvIGNvbSBzdWNlc3NvLicsXG4gICAgc2F2ZU5ld05vdGlmaWNhdGlvbldhcm5pbmc6ICdGb3JtdWzDoXJpbyBwcmVjaXNhIHNlciBwcmVlbmNoaWRvIGNvcnJldGFtZW50ZS4nLFxuICAgIHNhdmVOb3RpZmljYXRpb25TdWNjZXNzU2F2ZTogJ1JlY3Vyc28gc2Fsdm8gY29tIHN1Y2Vzc28uJyxcbiAgICBzYXZlTm90aWZpY2F0aW9uU3VjY2Vzc1VwZGF0ZTogJ1JlY3Vyc28gYXR1YWxpemFkbyBjb20gc3VjZXNzby4nLFxuICAgIHNhdmVOb3RpZmljYXRpb25XYXJuaW5nOiAnRm9ybXVsw6FyaW8gcHJlY2lzYSBzZXIgcHJlZW5jaGlkbyBjb3JyZXRhbWVudGUuJyxcbiAgfVxufTtcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPIGB0aGYtcGFnZS1keW5hbWljLWVkaXRgIMOpIHVtYSBww6FnaW5hIHF1ZSBwb2RlIHNlcnZpciBwYXJhIGVkaXRhciBvdSBjcmlhciBub3ZvcyByZWdpc3Ryb3MsXG4gKiBvIG1lc21vIHRhbWLDqW0gc3Vwb3J0YSBtZXRhZGFkb3MgY29uZm9ybWUgZXNwZWNpZmljYWRvIG5hIGRvY3VtZW50YcOnw6NvLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1wYWdlLWR5bmFtaWMtZWRpdC1iYXNpY1wiIHRpdGxlPVwiVG90dnMgUGFnZSBEeW5hbWljIEVkaXQgQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1wYWdlLWR5bmFtaWMtZWRpdC1iYXNpYy9zYW1wbGUtdGhmLXBhZ2UtZHluYW1pYy1lZGl0LWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1wYWdlLWR5bmFtaWMtZWRpdC1iYXNpYy9zYW1wbGUtdGhmLXBhZ2UtZHluYW1pYy1lZGl0LWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInRoZi1wYWdlLWR5bmFtaWMtZWRpdC11c2VyXCIgdGl0bGU9XCJUb3R2cyBQYWdlIER5bmFtaWMgRWRpdCAtIFVzZXJcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1wYWdlLWR5bmFtaWMtZWRpdC11c2VyL3NhbXBsZS10aGYtcGFnZS1keW5hbWljLWVkaXQtdXNlci5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS10aGYtcGFnZS1keW5hbWljLWVkaXQtdXNlci9zYW1wbGUtdGhmLXBhZ2UtZHluYW1pYy1lZGl0LXVzZXIuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwidGhmLXBhZ2UtZHluYW1pYy1lZGl0LW1hc3Rlci1kZXRhaWxcIiB0aXRsZT1cIlRvdHZzIFBhZ2UgRHluYW1pYyBFZGl0IC0gTWFzdGVyIERldGFpbFwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtdGhmLXBhZ2UtZHluYW1pYy1lZGl0LW1hc3Rlci1kZXRhaWwvc2FtcGxlLXRoZi1wYWdlLWR5bmFtaWMtZWRpdC1tYXN0ZXItZGV0YWlsLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXRoZi1wYWdlLWR5bmFtaWMtZWRpdC1tYXN0ZXItZGV0YWlsL3NhbXBsZS10aGYtcGFnZS1keW5hbWljLWVkaXQtbWFzdGVyLWRldGFpbC5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0aGYtcGFnZS1keW5hbWljLWVkaXQnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGhmLXBhZ2UtZHluYW1pYy1lZGl0LmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbIFRoZlBhZ2VEeW5hbWljU2VydmljZSBdXG59KVxuZXhwb3J0IGNsYXNzIFRoZlBhZ2VEeW5hbWljRWRpdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgcHJpdmF0ZSBfYWN0aW9uczogVGhmUGFnZUR5bmFtaWNFZGl0QWN0aW9ucyA9IHt9O1xuICBwcml2YXRlIF9hdXRvUm91dGVyOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX2NvbnRyb2xGaWVsZHM6IEFycmF5PGFueT4gPSBbXTtcbiAgcHJpdmF0ZSBfZGV0YWlsRmllbGRzOiBBcnJheTxhbnk+ID0gW107XG4gIHByaXZhdGUgX2R1cGxpY2F0ZXM6IEFycmF5PGFueT4gPSBbXTtcbiAgcHJpdmF0ZSBfZmllbGRzOiBBcnJheTxhbnk+ID0gW107XG4gIHByaXZhdGUgX2tleXM6IEFycmF5PGFueT4gPSBbXTtcbiAgcHJpdmF0ZSBfcGFnZUFjdGlvbnM6IEFycmF5PFRoZlBhZ2VBY3Rpb24+ID0gW107XG5cbiAgbGl0ZXJhbHMgPSB7XG4gICAgLi4udGhmUGFnZUR5bmFtaWNFZGl0TGl0ZXJhbHNEZWZhdWx0W3V0aWwudGhmTG9jYWxlRGVmYXVsdF0sXG4gICAgLi4udGhmUGFnZUR5bmFtaWNFZGl0TGl0ZXJhbHNEZWZhdWx0W3V0aWwuYnJvd3Nlckxhbmd1YWdlKCldXG4gIH07XG4gIG1vZGVsOiBhbnkgPSB7fTtcblxuICAvLyBiZWZvcmVTYXZlOiByZXR1cm4gYm9vbGVhblxuICAvLyBhZnRlclNhdmVcbiAgLy8gYmVmb3JlUmVtb3ZlOiByZXR1cm4gYm9vbGVhblxuICAvLyBhZnRlclJlbW92ZVxuICAvLyBiZWZvcmVJbnNlcnQ6IDogcmV0dXJuIGJvb2xlYW5cbiAgcmVhZG9ubHkgZGV0YWlsQWN0aW9uczogVGhmR3JpZFJvd0FjdGlvbnMgPSB7IH07XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogQcOnw7VlcyBkYSBww6FnaW5hLlxuICAgKi9cbiAgQElucHV0KCd0LWFjdGlvbnMnKSBzZXQgYWN0aW9ucyh2YWx1ZTogVGhmUGFnZUR5bmFtaWNFZGl0QWN0aW9ucykge1xuICAgIHRoaXMuX2FjdGlvbnMgPSB0aGlzLmlzT2JqZWN0KHZhbHVlKSA/IHZhbHVlIDoge307XG5cbiAgICB0aGlzLl9wYWdlQWN0aW9ucyA9IHRoaXMuZ2V0UGFnZUFjdGlvbnModGhpcy5fYWN0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQHRvZG8gVmFsaWRhciByb3RhcyBuYSBtw6NvIHBvaXMgc2UgZXhpc3RpciB1bWEgcm90YSAnKionIG8gY2F0Y2ggZG8gbmF2aWdhdGlvbiBuw6NvIGZ1bmNpb25hLlxuICAgKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIENyaWEgYXV0b21hdGljYW1lbnRlIGFzIHJvdGFzIGRlIGVkacOnw6NvIChub3ZvL2R1cGxpY2F0ZSkgZSBkZXRhbGhlcyBjYXNvIGFzIGHDp8O1ZXNcbiAgICogZXN0ZWphbSBkZWZpbmlkYXMgbmFzIGHDp8O1ZXMuXG4gICAqXG4gICAqID4gUGFyYSBvIGNvcnJldG8gZnVuY2lvbmFtZW50byBuw6NvIHBvZGUgaGF2ZXIgbmVuaHVtIHJvdGEgY29yaW5nYSAoYCoqYCkgZXNwZWNpZmljYWRhLlxuICAgKlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgQElucHV0KCd0LWF1dG8tcm91dGVyJykgc2V0IGF1dG9Sb3V0ZXIodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9hdXRvUm91dGVyID0gdXRpbC5jb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBhdXRvUm91dGVyKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9hdXRvUm91dGVyO1xuICB9XG5cbiAgLyoqIE9iamV0byBjb20gcHJvcHJpZWRhZGVzIGRvIGJyZWFkY3J1bWIuICovXG4gIEBJbnB1dCgndC1icmVhZGNydW1iJykgYnJlYWRjcnVtYj86IFRoZkJyZWFkY3J1bWIgPSB7IGl0ZW1zOiBbXSB9O1xuXG4gIC8qKiBMaXN0YSBkb3MgY2FtcG9zIHVzYWRvcyBuYSB0YWJlbGEgZSBidXNjYSBhdmFuw6dhZGEuICovXG4gIEBJbnB1dCgndC1maWVsZHMnKSBzZXQgZmllbGRzKHZhbHVlOiBBcnJheTxUaGZQYWdlRHluYW1pY0VkaXRGaWVsZD4pIHtcbiAgICB0aGlzLl9maWVsZHMgPSBBcnJheS5pc0FycmF5KHZhbHVlKSA/IFsuLi52YWx1ZV0gOiBbXTtcblxuICAgIHRoaXMuX2tleXMgPSB0aGlzLmdldEtleXNCeUZpZWxkcyh0aGlzLl9maWVsZHMpO1xuICAgIHRoaXMuX2R1cGxpY2F0ZXMgPSB0aGlzLmdldER1cGxpY2F0ZXNCeUZpZWxkcyh0aGlzLl9maWVsZHMpO1xuXG4gICAgdGhpcy5fY29udHJvbEZpZWxkcyA9IHRoaXMuZ2V0Q29udHJvbEZpZWxkcyh0aGlzLl9maWVsZHMpO1xuICAgIHRoaXMuX2RldGFpbEZpZWxkcyA9IHRoaXMuZ2V0RGV0YWlsRmllbGRzKHRoaXMuX2ZpZWxkcyk7XG4gIH1cblxuICBnZXQgZmllbGRzKCk6IEFycmF5PFRoZlBhZ2VEeW5hbWljRWRpdEZpZWxkPiB7XG4gICAgcmV0dXJuIHRoaXMuX2ZpZWxkcztcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRW5kcG9pbnQgdXNhZG8gcGVsbyB0ZW1wbGF0ZSBwYXJhIHJlcXVpc2nDp8OjbyBkbyByZWN1cnNvIHF1ZSBzZXLDo28gZXhpYmlkbyBwYXJhIGVkacOnw6NvLlxuICAgKlxuICAgKiBQYXJhIGFzIGHDp8O1ZXMgZGUgYHNhdmVgIGUgYHNhdmVOZXdgLCBzZXLDoSBmZWl0byB1bWEgcmVxdWlzacOnw6NvIGRlIGNyaWHDp8OjbyBuZXNzZSBtZXNtbyBlbmRwb2ludCBwYXNzYW5kbyBvcyB2YWxvcmVzXG4gICAqIHByZWVuY2hpZG9zIHBlbG8gdXN1w6FyaW8gdmlhIHBheWxvYWQuXG4gICAqXG4gICAqID4gYFBPU1Qge2VuZC1wb2ludH1gXG4gICAqXG4gICAqIGBgYFxuICAgKiAgPHRoZi1wYWdlLWR5bmFtaWMtZWRpdFxuICAgKiAgICBbdC1hY3Rpb25zXT1cInsgc2F2ZTogJy8nLCBzYXZlTmV3OiAnbmV3JyB9XCJcbiAgICogICAgW3QtZmllbGRzXT1cIlsgeyBwcm9wZXJ0eTogJ25hbWUnIH0sIHsgcHJvcGVydHk6ICdjaXR5JyB9IF1cIlxuICAgKiAgICB0LXNlcnZpY2U9XCIvYXBpL3RoZi1zYW1wbGVzL3YxL3Blb3BsZVwiXG4gICAqICAgIC4uLj5cbiAgICogIDwvdGhmLXBhZ2UtZHluYW1pYy1lZGl0PlxuICAgKiBgYGBcbiAgICpcbiAgICogUmVzcXVpc2nDp8OjbyBkaXNwYXJhZGEsIG9uZGUgYSBwcm9wcmllZGFkZSBgbmFtZWAgZSBgY2l0eWAgZm9yYW0gcHJlZW5jaGlkYXM6XG4gICAqXG4gICAqIGBgYFxuICAgKiAgUE9TVCAvYXBpL3RoZi1zYW1wbGVzL3YxL3Blb3BsZSBIVFRQLzEuMVxuICAgKiAgSG9zdDogbG9jYWxob3N0OjQwMDBcbiAgICogIENvbm5lY3Rpb246IGtlZXAtYWxpdmVcbiAgICogIEFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpblxuICAgKiAgLi4uXG4gICAqIGBgYFxuICAgKlxuICAgKiBSZXF1ZXN0IHBheWxvYWQ6XG4gICAqXG4gICAqIGBgYFxuICAgKiB7IFwibmFtZVwiOiBcIkZ1bGFub1wiLCBcImNpdHlcIjogXCJTbWFsbHZpbGxlXCIgfVxuICAgKiBgYGBcbiAgICogPiBDYXNvIGVzdGVqYSB1c2FuZG8gbWV0YWRhZG9zIGNvbSBvIHRlbXBsYXRlLCBzZXLDoSBkaXNwYXJhZG8gdW1hIHJlcXVpc2nDp8OjbyBuYSBpbmljaWFsaXphw6fDo28gZG8gdGVtcGxhdGUgcGFyYSBidXNjYXJcbiAgICogPiBvcyBtZXRhZGFkb3MgZGEgcMOhZ2luYSBwYXNzYW5kbyBvIHRpcG8gZG8gbWV0YWRhZG8gZXNwZXJhZG8gZSBhIHZlcnPDo28gY2FjaGVhZGEgcGVsbyBicm93c2VyLlxuICAgKiA+XG4gICAqID4gYEdFVCB7ZW5kLXBvaW50fS9tZXRhZGF0YT90eXBlPWNyZWF0ZSZ2ZXJzaW9uPXt2ZXJzaW9ufWBcbiAgICpcbiAgICogQ2FzbyBxdWVpcmEgcXVlIG8gdGVtcGxhdGUgY2FycmVndWUgdW0gcmVjdXJzbyBqw6EgZXhpc3RlbnRlLCBkZXZlLXNlIHNlciBpbmNsdcOtZG8gdW0gcGFyYW1ldHJvIG5hIHJvdGEgY2hhbWFkbyBgaWRgLlxuICAgKlxuICAgKiBFeGVtcGxvIGRlIGNvbmZpZ3VyYcOnw6NvIGRlIHJvdGE6XG4gICAqXG4gICAqIGBgYFxuICAgKiAgUm91dGVyTW9kdWxlLmZvclJvb3QoW1xuICAgKiAgICAuLi5cbiAgICogICAgeyBwYXRoOiAnZWRpdC86aWQnLCBjb21wb25lbnQ6IFBlcnNvbkVkaXRDb21wb25lbnQgfSxcbiAgICogICAgLi4uXG4gICAqICBdLFxuICAgKiBgYGBcbiAgICpcbiAgICogQmFzZWFkbyBuaXNzbywgbmEgaW5pY2lhbGl6YcOnw6NvIGRvIHRlbXBsYXRlLCBzZXLDoSBkaXNwYXJhZG8gdW1hIHJlcXVpc2nDp8OjbyBwYXJhIGJ1c2NhciBvIHJlY3Vyc28gcXVlIHNlcsOhIGVkaXRhZG8uXG4gICAqXG4gICAqID4gYEdFVCB7ZW5kLXBvaW50fS97aWR9YFxuICAgKlxuICAgKiBOb3MgbcOpdG9kb3MgZGUgYHNhdmVgIGUgYHNhdmVOZXdgLCBhbyBpbnbDqXMgZGUgdW0gYFBPU1RgLCBzZXLDoSBkaXNwYXJhZG8gdW0gYFBVVGAuXG4gICAqXG4gICAqIFJlc3F1aXNpw6fDo28gZGlzcGFyYWRhLCBvbmRlIGEgcHJvcHJpZWRhZGUgYG5hbWVgIGUgYGNpdHlgIGZvcmFtIHByZWVuY2hpZGFzIC8gYXR1YWxpemFkYXMsIGUgbyBgaWRgIGRhIHVybCDDqSAyOlxuICAgKlxuICAgKiBgYGBcbiAgICogIFBVVCAvYXBpL3RoZi1zYW1wbGVzL3YxL3Blb3BsZS8yIEhUVFAvMS4xXG4gICAqICBIb3N0OiBsb2NhbGhvc3Q6NDAwMFxuICAgKiAgQ29ubmVjdGlvbjoga2VlcC1hbGl2ZVxuICAgKiAgQWNjZXB0OiBhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluXG4gICAqICAuLi5cbiAgICogYGBgXG4gICAqXG4gICAqIFJlcXVlc3QgcGF5bG9hZDpcbiAgICpcbiAgICogYGBgXG4gICAqIHsgXCJuYW1lXCI6IFwiRnVsYW5vXCIsIFwiY2l0eVwiOiBcIk1ldHJvcG9saXNcIiB9XG4gICAqIGBgYFxuICAgKlxuICAgKiA+IENhc28gZXN0ZWphIHVzYW5kbyBtZXRhZGFkb3MgY29tIG8gdGVtcGxhdGUsIHNlcsOhIGRpc3BhcmFkbyB1bWEgcmVxdWlzacOnw6NvIG5hIGluaWNpYWxpemHDp8OjbyBkbyB0ZW1wbGF0ZSBwYXJhIGJ1c2NhclxuICAgKiA+IG9zIG1ldGFkYWRvcyBkYSBww6FnaW5hIHBhc3NhbmRvIG8gdGlwbyBkbyBtZXRhZGFkbyBlc3BlcmFkbyBlIGEgdmVyc8OjbyBjYWNoZWFkYSBwZWxvIGJyb3dzZXIuXG4gICAqID5cbiAgICogPiBgR0VUIHtlbmQtcG9pbnR9L21ldGFkYXRhP3R5cGU9ZWRpdCZ2ZXJzaW9uPXt2ZXJzaW9ufWBcbiAgICovXG4gIEBJbnB1dCgndC1zZXJ2aWNlLWFwaScpIHNlcnZpY2VBcGk6IHN0cmluZztcblxuICAvKiogVMOtdHVsbyBkYSBww6FnaW5hLiAqL1xuICBASW5wdXQoJ3QtdGl0bGUnKSB0aXRsZTogc3RyaW5nO1xuXG4gIEBWaWV3Q2hpbGQoJ2R5bmFtaWNGb3JtJywgeyBzdGF0aWM6IHRydWUgfSkgZHluYW1pY0Zvcm06IFRoZkR5bmFtaWNGb3JtQ29tcG9uZW50O1xuICBAVmlld0NoaWxkKCdncmlkRGV0YWlsJywgeyBzdGF0aWM6IHRydWUgfSkgZ3JpZERldGFpbDogVGhmR3JpZENvbXBvbmVudDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgIHByaXZhdGUgYWN0aXZhdGVkUm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgIHByaXZhdGUgdGhmTm90aWZpY2F0aW9uOiBUaGZOb3RpZmljYXRpb25TZXJ2aWNlLFxuICAgIHByaXZhdGUgdGhmRGlhbG9nU2VydmljZTogVGhmRGlhbG9nU2VydmljZSxcbiAgICBwcml2YXRlIHRoZlBhZ2VEeW5hbWljU2VydmljZTogVGhmUGFnZUR5bmFtaWNTZXJ2aWNlKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBjb25zdCBwYXJhbUlkID0gdGhpcy5hY3RpdmF0ZWRSb3V0ZS5zbmFwc2hvdC5wYXJhbXNbJ2lkJ107XG4gICAgY29uc3QgZHVwbGljYXRlID0gdGhpcy5hY3RpdmF0ZWRSb3V0ZS5zbmFwc2hvdC5xdWVyeVBhcmFtc1snZHVwbGljYXRlJ107XG5cbiAgICBpZiAodGhpcy5hY3RpdmF0ZWRSb3V0ZS5zbmFwc2hvdC5kYXRhLnNlcnZpY2VBcGkpIHtcbiAgICAgIHRoaXMuc2VydmljZUFwaSA9IHRoaXMuYWN0aXZhdGVkUm91dGUuc25hcHNob3QuZGF0YS5zZXJ2aWNlQXBpO1xuXG4gICAgICB0aGlzLnRoZlBhZ2VEeW5hbWljU2VydmljZS5jb25maWdTZXJ2aWNlQXBpKHsgZW5kcG9pbnQ6IHRoaXMuc2VydmljZUFwaSB9KTtcblxuICAgICAgdGhpcy5sb2FkTWV0YWRhdGEocGFyYW1JZCwgZHVwbGljYXRlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy50aGZQYWdlRHluYW1pY1NlcnZpY2UuY29uZmlnU2VydmljZUFwaSh7IGVuZHBvaW50OiB0aGlzLnNlcnZpY2VBcGkgfSk7XG5cbiAgICAgIHRoaXMubG9hZERhdGEocGFyYW1JZCwgZHVwbGljYXRlKTtcbiAgICB9XG4gIH1cblxuICBnZXQgZHVwbGljYXRlcygpIHtcbiAgICByZXR1cm4gWy4uLnRoaXMuX2R1cGxpY2F0ZXNdO1xuICB9XG5cbiAgZ2V0IGtleXMoKSB7XG4gICAgcmV0dXJuIFsuLi50aGlzLl9rZXlzXTtcbiAgfVxuXG4gIGdldCBwYWdlQWN0aW9ucygpIHtcbiAgICByZXR1cm4gWy4uLnRoaXMuX3BhZ2VBY3Rpb25zXTtcbiAgfVxuXG4gIGdldCBjb250cm9sRmllbGRzKCkge1xuICAgIHJldHVybiB0aGlzLl9jb250cm9sRmllbGRzO1xuICB9XG5cbiAgZ2V0IGRldGFpbEZpZWxkcygpIHtcbiAgICByZXR1cm4gdGhpcy5fZGV0YWlsRmllbGRzO1xuICB9XG5cbiAgcHJpdmF0ZSBjYW5jZWwocGF0aCkge1xuICAgIGlmICh0aGlzLmR5bmFtaWNGb3JtICYmIHRoaXMuZHluYW1pY0Zvcm0uZm9ybS5kaXJ0eSkge1xuICAgICAgdGhpcy50aGZEaWFsb2dTZXJ2aWNlLmNvbmZpcm0oe1xuICAgICAgICBtZXNzYWdlOiB0aGlzLmxpdGVyYWxzLmNhbmNlbENvbmZpcm1NZXNzYWdlLFxuICAgICAgICB0aXRsZTogdGhpcy5saXRlcmFscy5wYWdlQWN0aW9uQ2FuY2VsLFxuICAgICAgICBjb25maXJtOiB0aGlzLmdvQmFjay5iaW5kKHRoaXMsIHBhdGgpXG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5nb0JhY2socGF0aCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBmb3JtYXRVbmlxdWVLZXkoaXRlbSkge1xuICAgIGNvbnN0IGtleXMgPSB1dGlsLm1hcE9iamVjdEJ5UHJvcGVydGllcyhpdGVtLCB0aGlzLmtleXMpO1xuXG4gICAgcmV0dXJuIHV0aWwudmFsdWVzRnJvbU9iamVjdChrZXlzKS5qb2luKCd8Jyk7XG4gIH1cblxuICBwcml2YXRlIGdvQmFjayhwYXRoKSB7XG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFtwYXRoXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGxvYWREYXRhKGlkLCBkdXBsaWNhdGU/KSB7XG4gICAgaWYgKCFpZCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgdGhpcy5tb2RlbCA9IEpTT04ucGFyc2UoZHVwbGljYXRlKSB8fCB7fTtcbiAgICAgIH0gY2F0Y2gge1xuICAgICAgICB0aGlzLm1vZGVsID0ge307XG4gICAgICB9XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnRoZlBhZ2VEeW5hbWljU2VydmljZS5nZXRSZXNvdXJjZShpZCkudG9Qcm9taXNlKCkudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICB0aGlzLm1vZGVsID0gcmVzcG9uc2U7XG4gICAgfSkuY2F0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5tb2RlbCA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuYWN0aW9ucyA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX3BhZ2VBY3Rpb25zID0gW107XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGxvYWRNZXRhZGF0YShwYXJhbUlkOiBzdHJpbmcgfCBudW1iZXIsIGR1cGxpY2F0ZTogc3RyaW5nKSB7XG4gICAgY29uc3QgdHlwZU1ldGFkYXRhID0gcGFyYW1JZCA/ICdlZGl0JyA6ICdjcmVhdGUnO1xuXG4gICAgdGhpcy50aGZQYWdlRHluYW1pY1NlcnZpY2UuZ2V0TWV0YWRhdGEodHlwZU1ldGFkYXRhKS50b1Byb21pc2UoKS50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgIHRoaXMuYXV0b1JvdXRlciA9IHJlc3BvbnNlLmF1dG9Sb3V0ZXI7XG4gICAgICB0aGlzLmFjdGlvbnMgPSByZXNwb25zZS5hY3Rpb25zIHx8IHt9O1xuICAgICAgdGhpcy5icmVhZGNydW1iID0gcmVzcG9uc2UuYnJlYWRjcnVtYiB8fCB7IGl0ZW1zIDogW10gfTtcbiAgICAgIHRoaXMuZmllbGRzID0gcmVzcG9uc2UuZmllbGRzIHx8IFtdO1xuICAgICAgdGhpcy50aXRsZSA9IHJlc3BvbnNlLnRpdGxlO1xuXG4gICAgICB0aGlzLmxvYWREYXRhKHBhcmFtSWQsIGR1cGxpY2F0ZSk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIG5hdmlnYXRlVG8ocGF0aDogc3RyaW5nKSB7XG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIGNvbnN0IHVybCA9IHRoaXMucmVzb2x2ZVVybCh0aGlzLm1vZGVsLCBwYXRoKTtcblxuICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoW3VybF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBkZXRhaWxBY3Rpb25OZXcoKSB7XG4gICAgdGhpcy5ncmlkRGV0YWlsLmluc2VydFJvdygpO1xuICB9XG5cbiAgcHJpdmF0ZSByZXNvbHZlVXJsKGl0ZW06IGFueSwgcGF0aDogc3RyaW5nKSB7XG4gICAgY29uc3QgdW5pcXVlS2V5ID0gdGhpcy5mb3JtYXRVbmlxdWVLZXkoaXRlbSk7XG5cbiAgICByZXR1cm4gcGF0aC5yZXBsYWNlKC86aWQvZywgdW5pcXVlS2V5KTtcbiAgfVxuXG4gIHByaXZhdGUgc2F2ZShwYXRoKSB7XG4gICAgaWYgKHRoaXMuZHluYW1pY0Zvcm0uZm9ybS5pbnZhbGlkKSB7XG4gICAgICB0aGlzLnRoZk5vdGlmaWNhdGlvbi53YXJuaW5nKHRoaXMubGl0ZXJhbHMuc2F2ZU5vdGlmaWNhdGlvbldhcm5pbmcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHBhcmFtSWQgPSB0aGlzLmFjdGl2YXRlZFJvdXRlLnNuYXBzaG90LnBhcmFtc1snaWQnXTtcblxuICAgIGNvbnN0IHNhdmVPcGVyYXRpb246IE9ic2VydmFibGU8YW55PiA9IHBhcmFtSWRcbiAgICAgID8gdGhpcy50aGZQYWdlRHluYW1pY1NlcnZpY2UudXBkYXRlUmVzb3VyY2UocGFyYW1JZCwgdGhpcy5tb2RlbClcbiAgICAgIDogdGhpcy50aGZQYWdlRHluYW1pY1NlcnZpY2UuY3JlYXRlUmVzb3VyY2UodGhpcy5tb2RlbCk7XG5cbiAgICBjb25zdCBtc2dTdWNlc3MgPSBwYXJhbUlkID8gdGhpcy5saXRlcmFscy5zYXZlTm90aWZpY2F0aW9uU3VjY2Vzc1VwZGF0ZSA6IHRoaXMubGl0ZXJhbHMuc2F2ZU5vdGlmaWNhdGlvblN1Y2Nlc3NTYXZlO1xuXG4gICAgc2F2ZU9wZXJhdGlvbi50b1Byb21pc2UoKS50aGVuKCgpID0+IHtcbiAgICAgIHRoaXMudGhmTm90aWZpY2F0aW9uLnN1Y2Nlc3MobXNnU3VjZXNzKTtcblxuICAgICAgdGhpcy5uYXZpZ2F0ZVRvKHBhdGgpO1xuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBzYXZlTmV3KHBhdGgpIHtcbiAgICBpZiAodGhpcy5keW5hbWljRm9ybS5mb3JtLmludmFsaWQpIHtcbiAgICAgIHRoaXMudGhmTm90aWZpY2F0aW9uLndhcm5pbmcodGhpcy5saXRlcmFscy5zYXZlTmV3Tm90aWZpY2F0aW9uV2FybmluZyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcGFyYW1JZCA9IHRoaXMuYWN0aXZhdGVkUm91dGUuc25hcHNob3QucGFyYW1zWydpZCddO1xuXG4gICAgaWYgKHBhcmFtSWQpIHtcbiAgICAgIHRoaXMudGhmUGFnZUR5bmFtaWNTZXJ2aWNlLnVwZGF0ZVJlc291cmNlKHBhcmFtSWQsIHRoaXMubW9kZWwpXG4gICAgICAgIC50b1Byb21pc2UoKS50aGVuKCgpID0+IHtcbiAgICAgICAgICB0aGlzLnRoZk5vdGlmaWNhdGlvbi5zdWNjZXNzKHRoaXMubGl0ZXJhbHMuc2F2ZU5ld05vdGlmaWNhdGlvblN1Y2Nlc3NVcGRhdGUpO1xuXG4gICAgICAgICAgdGhpcy5uYXZpZ2F0ZVRvKHBhdGgpO1xuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy50aGZQYWdlRHluYW1pY1NlcnZpY2UuY3JlYXRlUmVzb3VyY2UodGhpcy5tb2RlbClcbiAgICAgICAgLnRvUHJvbWlzZSgpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIHRoaXMudGhmTm90aWZpY2F0aW9uLnN1Y2Nlc3ModGhpcy5saXRlcmFscy5zYXZlTmV3Tm90aWZpY2F0aW9uU3VjY2Vzc1NhdmUpO1xuXG4gICAgICAgICAgdGhpcy5tb2RlbCA9IHt9O1xuICAgICAgICAgIHRoaXMuZHluYW1pY0Zvcm0uZm9ybS5yZXNldCgpO1xuICAgICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldEtleXNCeUZpZWxkcyhmaWVsZHM6IEFycmF5PGFueT4gPSBbXSkge1xuICAgIHJldHVybiBmaWVsZHMuZmlsdGVyKGZpZWxkID0+IGZpZWxkLmtleSA9PT0gdHJ1ZSkubWFwKGZpZWxkID0+IGZpZWxkLnByb3BlcnR5KTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0Q29udHJvbEZpZWxkcyhmaWVsZHM6IEFycmF5PGFueT4gPSBbXSkge1xuICAgIHJldHVybiBmaWVsZHMuZmlsdGVyKGZpZWxkID0+IGZpZWxkLnR5cGUgIT09ICdkZXRhaWwnKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0RGV0YWlsRmllbGRzKGZpZWxkczogQXJyYXk8YW55PiA9IFtdKSB7XG4gICAgcmV0dXJuIGZpZWxkcy5maWx0ZXIoZmllbGQgPT4gZmllbGQudHlwZSA9PT0gJ2RldGFpbCcpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXREdXBsaWNhdGVzQnlGaWVsZHMoZmllbGRzOiBBcnJheTxhbnk+ID0gW10pIHtcbiAgICByZXR1cm4gZmllbGRzLmZpbHRlcihmaWVsZCA9PiBmaWVsZC5kdXBsaWNhdGUgPT09IHRydWUpLm1hcChmaWVsZCA9PiBmaWVsZC5wcm9wZXJ0eSk7XG4gIH1cblxuICBwcml2YXRlIGdldFBhZ2VBY3Rpb25zKGFjdGlvbnM6IFRoZlBhZ2VEeW5hbWljRWRpdEFjdGlvbnMgPSB7fSk6IEFycmF5PFRoZlBhZ2VBY3Rpb24+IHtcbiAgICBjb25zdCBwYWdlQWN0aW9ucyA9IFt7IGxhYmVsOiB0aGlzLmxpdGVyYWxzLnBhZ2VBY3Rpb25TYXZlLCBhY3Rpb246IHRoaXMuc2F2ZS5iaW5kKHRoaXMsIGFjdGlvbnMuc2F2ZSkgfV07XG5cbiAgICBpZiAoYWN0aW9ucy5zYXZlTmV3KSB7XG4gICAgICBwYWdlQWN0aW9ucy5wdXNoKHsgbGFiZWw6IHRoaXMubGl0ZXJhbHMucGFnZUFjdGlvblNhdmVOZXcsIGFjdGlvbjogdGhpcy5zYXZlTmV3LmJpbmQodGhpcywgYWN0aW9ucy5zYXZlTmV3KSB9KTtcbiAgICB9XG5cbiAgICBpZiAoYWN0aW9ucy5jYW5jZWwgPT09IHVuZGVmaW5lZCB8fCBhY3Rpb25zLmNhbmNlbCkge1xuICAgICAgcGFnZUFjdGlvbnMucHVzaCh7IGxhYmVsOiB0aGlzLmxpdGVyYWxzLnBhZ2VBY3Rpb25DYW5jZWwsIGFjdGlvbjogdGhpcy5jYW5jZWwuYmluZCh0aGlzLCBhY3Rpb25zLmNhbmNlbCkgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhZ2VBY3Rpb25zO1xuICB9XG5cbiAgcHJpdmF0ZSBpc09iamVjdCh2YWx1ZTogYW55KTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICEhdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSk7XG4gIH1cblxufVxuIl19