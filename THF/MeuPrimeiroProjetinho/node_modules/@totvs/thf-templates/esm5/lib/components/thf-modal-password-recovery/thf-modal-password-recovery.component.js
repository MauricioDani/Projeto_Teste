/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { Router } from '@angular/router';
import { isExternalLink } from '../../utils/util';
import { ThfI18nPipe, ThfModalComponent } from '@totvs/thf-ui';
import { ThfModalPasswordRecoveryBaseComponent } from './thf-modal-password-recovery-base.component';
import { ThfModalPasswordRecoveryModalContent } from './enums/thf-modal-password-recovery-modal-content.enum';
import { ThfModalPasswordRecoveryService } from './thf-modal-password-recovery.service';
import { ThfModalPasswordRecoveryType } from './enums/thf-modal-password-recovery-type.enum';
/**
 * \@docsExtends ThfModalPasswordRecoveryBaseComponent
 *
 * \@example
 *
 * <example name="thf-modal-password-recovery-basic" title="Totvs Modal Password Recovery Basic">
 *  <file name="sample-thf-modal-password-recovery-basic/sample-thf-modal-password-recovery-basic.component.html"> </file>
 *  <file name="sample-thf-modal-password-recovery-basic/sample-thf-modal-password-recovery-basic.component.ts"> </file>
 * </example>
 *
 * <example name="thf-modal-password-recovery-labs" title="Totvs Modal Password Recovery Labs">
 *  <file name="sample-thf-modal-password-recovery-labs/sample-thf-modal-password-recovery-labs.component.html"> </file>
 *  <file name="sample-thf-modal-password-recovery-labs/sample-thf-modal-password-recovery-labs.component.ts"> </file>
 * </example>
 *
 * <example name="thf-modal-password-recovery-request" title="Totvs Modal Password Recovery Request">
 *  <file name="sample-thf-modal-password-recovery-request/sample-thf-modal-password-recovery-request.component.html"> </file>
 *  <file name="sample-thf-modal-password-recovery-request/sample-thf-modal-password-recovery-request.component.ts"> </file>
 * </example>
 */
var ThfModalPasswordRecoveryComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ThfModalPasswordRecoveryComponent, _super);
    function ThfModalPasswordRecoveryComponent(router, thfI18nPipe, thfModalPasswordRecoveryService) {
        var _this = _super.call(this) || this;
        _this.router = router;
        _this.thfI18nPipe = thfI18nPipe;
        _this.thfModalPasswordRecoveryService = thfModalPasswordRecoveryService;
        _this.chosenTypeFormOption = ThfModalPasswordRecoveryType.Email;
        _this.codeMask = '9 9 9 9 9 9';
        _this.emailModal = true;
        _this.emailModalPhrases = {};
        _this.endpoint = '.';
        _this.invalidCode = false;
        _this.invalidEmail = false;
        _this.modalType = ThfModalPasswordRecoveryModalContent.Email;
        _this.submittedCodeValue = (/** @type {?} */ ({}));
        _this.submittedContactValue = (/** @type {?} */ ({}));
        _this.primaryAction = { label: undefined, action: (/**
             * @return {?}
             */
            function () { }) };
        _this.secondaryAction = { label: undefined, action: (/**
             * @return {?}
             */
            function () { }) };
        _this.typeFormOptions = [
            { label: 'e-mail', value: ThfModalPasswordRecoveryType.Email },
            { label: 'SMS', value: ThfModalPasswordRecoveryType.SMS }
        ];
        return _this;
    }
    /**
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.passwordRecoverySubscription) {
            this.passwordRecoverySubscription.unsubscribe();
        }
        if (this.smsCodeSubscription) {
            this.smsCodeSubscription.unsubscribe();
        }
    };
    /**
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.completed = /**
     * @return {?}
     */
    function () {
        this.cancelAction();
    };
    /**
     * @param {?} form
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.formModelChangesCheck = /**
     * @param {?} form
     * @return {?}
     */
    function (form) {
        /** @type {?} */
        var invalidForm = form.invalid;
        this.invalidEmail = invalidForm && form.dirty;
        this.primaryAction.disabled = invalidForm;
        if (this.modalType === ThfModalPasswordRecoveryModalContent.SMSCode) {
            /** @type {?} */
            var codeError = this.codeError !== undefined && this.codeError !== '';
            this.showCustomCodeError = codeError && form.pristine;
        }
    };
    /**
     * @param {?} type
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.getInputType = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        var _this = this;
        this.type = type;
        this.pipeModalPhrases();
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.control = _this.emailForm.controls[type];
            _this.formModelChangesCheck(_this.emailForm);
            _this.resetFormFields(_this.control);
        }));
    };
    /**
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var control = this.checkFormType(this.type);
        this.control = this.emailForm.controls[control];
        this.setEmailModalPhrasesAndActions();
        this.formModelChangesCheck(this.emailForm);
        this.recoveryModalElement.open();
    };
    /**
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.openConfirmation = /**
     * @return {?}
     */
    function () {
        this.modalTitle = this.literals.emailSentTitle;
        this.modalType = ThfModalPasswordRecoveryModalContent.Confirmation;
        this.setActions(this.cancelAction, this.literals.closeButton, this.submitAction, this.literals.resendEmailButton, false);
    };
    /**
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.openSmsCode = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.modalTitle = this.literals.typeCodeTitle;
        this.modalType = ThfModalPasswordRecoveryModalContent.SMSCode;
        this.setActions(this.submitSmsCodeAction, this.literals.continueButton, this.cancelAction, this.literals.cancelButton, true);
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.control = _this.smsCodeForm.controls['sms'];
            _this.formModelChangesCheck(_this.smsCodeForm);
        }));
    };
    /**
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.resendSmsCode = /**
     * @return {?}
     */
    function () {
        this.incrementRetryAttempts();
        if (this.urlRecovery) {
            this.submitActionRequest(this.submittedContactValue, this.type);
        }
        else {
            this.submit.emit(this.submittedContactValue);
        }
    };
    /**
     * @private
     * @param {?} responseObj
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.assignSmsResponse = /**
     * @private
     * @param {?} responseObj
     * @return {?}
     */
    function (responseObj) {
        this.smsBodyResponse = Object.assign({}, { hash: responseObj.hash });
        if (responseObj.urlValidationCode) {
            this.smsBodyResponse = Object.assign(this.smsBodyResponse, { urlValidationCode: responseObj.urlValidationCode });
        }
    };
    /**
     * @private
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.cancelAction = /**
     * @private
     * @return {?}
     */
    function () {
        this.resetFormFields(this.control);
        this.submittedContactValue = {};
        this.chosenTypeFormOption = ThfModalPasswordRecoveryType.Email;
        this.modalType = ThfModalPasswordRecoveryModalContent.Email;
        this.type = this.modalPasswordRecoveryTypeAll ? ThfModalPasswordRecoveryType.All : this.type;
        this.recoveryModalElement.close();
    };
    /**
     * @private
     * @param {?} type
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.checkFormType = /**
     * @private
     * @param {?} type
     * @return {?}
     */
    function (type) {
        return type !== ThfModalPasswordRecoveryType.All ? type : ThfModalPasswordRecoveryType.Email;
    };
    /**
     * @private
     * @param {?} control
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.formReset = /**
     * @private
     * @param {?} control
     * @return {?}
     */
    function (control) {
        control.markAsPristine();
        control.markAsUntouched();
        control.updateValueAndValidity();
    };
    /**
     * @private
     * @param {?} type
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.getEmitValue = /**
     * @private
     * @param {?} type
     * @return {?}
     */
    function (type) {
        return type === ThfModalPasswordRecoveryType.SMS ? this.phone : this.email;
    };
    /**
     * @private
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.incrementRetryAttempts = /**
     * @private
     * @return {?}
     */
    function () {
        this.submittedContactValue.retry = (this.submittedContactValue.retry + 1 || 1);
    };
    /**
     * @private
     * @param {?} url
     * @param {?} queryParam
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.openExternalLink = /**
     * @private
     * @param {?} url
     * @param {?} queryParam
     * @return {?}
     */
    function (url, queryParam) {
        window.open(url + "?token=" + queryParam, '_self');
    };
    /**
     * @private
     * @param {?} url
     * @param {?} endpoint
     * @param {?} queryParam
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.openInternalLink = /**
     * @private
     * @param {?} url
     * @param {?} endpoint
     * @param {?} queryParam
     * @return {?}
     */
    function (url, endpoint, queryParam) {
        this.router.navigate([url + "/" + endpoint], { queryParams: { token: queryParam } });
    };
    /**
     * @private
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.pipeModalPhrases = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.type === ThfModalPasswordRecoveryType.SMS) {
            this.emailModalPhrases['firstPhrase'] = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.sms);
            this.emailModalPhrases['secondPhrase'] = this.setPipeArguments(this.literals.supportContact, this.literals.telephone);
        }
        else {
            this.emailModalPhrases['firstPhrase'] = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.email);
            this.emailModalPhrases['secondPhrase'] = this.setPipeArguments(this.literals.supportContact, this.literals.email);
        }
    };
    /**
     * @private
     * @param {?} recoveryToken
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.redirectToChangePassword = /**
     * @private
     * @param {?} recoveryToken
     * @return {?}
     */
    function (recoveryToken) {
        /** @type {?} */
        var urlChangePassword = recoveryToken.urlChangePassword;
        if (urlChangePassword) {
            isExternalLink(urlChangePassword) ?
                this.openExternalLink(urlChangePassword, recoveryToken.token) :
                this.openInternalLink(this.urlRecovery, urlChangePassword, recoveryToken.token);
        }
        else {
            /** @type {?} */
            var changePasswordEndpoint = 'changePassword';
            this.openInternalLink(this.urlRecovery, changePasswordEndpoint, recoveryToken.token);
        }
    };
    /**
     * @private
     * @param {?} control
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.resetFormFields = /**
     * @private
     * @param {?} control
     * @return {?}
     */
    function (control) {
        this.formReset(control);
        this.email = undefined;
        this.phone = undefined;
        this.smsCode = undefined;
    };
    /**
     * @private
     * @param {?} primaryAction
     * @param {?} primarylabel
     * @param {?} secondaryAction
     * @param {?} secondaryLabel
     * @param {?} disabled
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.setActions = /**
     * @private
     * @param {?} primaryAction
     * @param {?} primarylabel
     * @param {?} secondaryAction
     * @param {?} secondaryLabel
     * @param {?} disabled
     * @return {?}
     */
    function (primaryAction, primarylabel, secondaryAction, secondaryLabel, disabled) {
        var _this = this;
        this.primaryAction.action = (/**
         * @return {?}
         */
        function () { return primaryAction.call(_this); });
        this.primaryAction.label = primarylabel;
        this.secondaryAction.action = (/**
         * @return {?}
         */
        function () { return secondaryAction.call(_this); });
        this.secondaryAction.label = secondaryLabel;
        this.primaryAction.disabled = disabled;
    };
    /**
     * @private
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.setEmailModalPhrasesAndActions = /**
     * @private
     * @return {?}
     */
    function () {
        this.modalTitle = this.literals.forgotPasswordTitle;
        this.pipeModalPhrases();
        this.modalPasswordRecoveryTypeAll = this.type === ThfModalPasswordRecoveryType.All;
        this.setActions(this.submitAction, this.literals.sendButton, this.cancelAction, this.literals.cancelButton, true);
    };
    /**
     * @private
     * @param {?=} urlValidationCode
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.setRequestEndpoint = /**
     * @private
     * @param {?=} urlValidationCode
     * @return {?}
     */
    function (urlValidationCode) {
        /** @type {?} */
        var endpoint = urlValidationCode || 'validation';
        return this.urlRecovery + "/" + endpoint;
    };
    /**
     * @private
     * @param {?} literalAttr
     * @param {?} arg
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.setPipeArguments = /**
     * @private
     * @param {?} literalAttr
     * @param {?} arg
     * @return {?}
     */
    function (literalAttr, arg) {
        return this.thfI18nPipe.transform(literalAttr, arg);
    };
    /**
     * @private
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.submitAction = /**
     * @private
     * @return {?}
     */
    function () {
        this.modalType === ThfModalPasswordRecoveryModalContent.Confirmation ? this.incrementRetryAttempts() : this.formReset(this.control);
        this.submittedContactValue[this.checkFormType(this.type)] = this.getEmitValue(this.type);
        if (this.urlRecovery) {
            this.submitActionRequest(this.submittedContactValue, this.type);
        }
        else {
            this.submit.emit(this.submittedContactValue);
        }
    };
    /**
     * @private
     * @param {?} data
     * @param {?} modalType
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.submitActionRequest = /**
     * @private
     * @param {?} data
     * @param {?} modalType
     * @return {?}
     */
    function (data, modalType) {
        var _this = this;
        /** @type {?} */
        var params = modalType === ThfModalPasswordRecoveryType.SMS ? { type: 'sms' } : undefined;
        this.passwordRecoverySubscription =
            this.thfModalPasswordRecoveryService.post(this.urlRecovery, data, params)
                .subscribe((/**
             * @param {?} response
             * @return {?}
             */
            function (response) {
                if ((modalType === ThfModalPasswordRecoveryType.Email || modalType === ThfModalPasswordRecoveryType.All) && response.status === 204) {
                    _this.openConfirmation();
                }
                else if (modalType === ThfModalPasswordRecoveryType.SMS && response.status === 200) {
                    _this.assignSmsResponse(response.body);
                    _this.openSmsCode();
                }
            }));
    };
    /**
     * @private
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.submitSmsCodeAction = /**
     * @private
     * @return {?}
     */
    function () {
        this.submittedCodeValue.code = this.smsCode;
        if (this.urlRecovery) {
            this.submittedCodeValue = Object.assign(this.submittedCodeValue, { hash: this.smsBodyResponse.hash });
            this.submitSmsCodeRequest(this.submittedCodeValue);
        }
        else {
            this.codeSubmit.emit(this.submittedCodeValue);
        }
        this.resetFormFields(this.control);
    };
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    ThfModalPasswordRecoveryComponent.prototype.submitSmsCodeRequest = /**
     * @private
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        this.smsCodeSubscription = this.thfModalPasswordRecoveryService
            .post(this.setRequestEndpoint(this.smsBodyResponse.urlValidationCode), data)
            .subscribe((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            /** @type {?} */
            var successStatus = response.status === 200;
            if (successStatus) {
                _this.completed();
                _this.redirectToChangePassword(response.body);
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.codeError = error.error.message;
            _this.openSmsCode();
        }));
    };
    ThfModalPasswordRecoveryComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-modal-password-recovery',
                    template: "<thf-modal #recoveryModal\n  t-hide-close\n  t-size=\"auto\"\n  [ngSwitch]=\"modalType\"\n  [t-primary-action]=\"primaryAction\"\n  [t-secondary-action]=\"secondaryAction\"\n  [t-title]=\"modalTitle\"> \n  <div class=\"thf-modal-password-recovery-wrapper\">\n    <div *ngSwitchCase=\"'email'\" class=\"thf-modal-password-recovery-content thf-row\">\n      <div class=\"thf-modal-password-recovery-text thf-md-12 thf-mb-1\">\n        {{ emailModalPhrases.firstPhrase }}\n      </div>\n      <div class=\"thf-mb-2 thf-md-12\">\n        <form #emailForm=\"ngForm\">\n\n          <div *ngIf=\"modalPasswordRecoveryTypeAll\">\n            <thf-radio-group \n              name=\"type\"\n              [(ngModel)]=\"chosenTypeFormOption\"\n              [t-options]=\"typeFormOptions\"\n              (t-change)=\"getInputType($event)\">\n            </thf-radio-group>\n          </div>\n\n          <div class=\"thf-mt-1\">\n            <thf-email *ngIf=\"type === 'email' || type === 'all'\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              t-required\n              [t-label]=\"literals.insertEmail\"\n              (t-change-model)=\"formModelChangesCheck(emailForm)\">\n            </thf-email>\n    \n            <thf-input *ngIf=\"type === 'sms'\"\n              name=\"sms\"\n              [(ngModel)]=\"phone\"\n              t-icon=\"thf-icon-telephone\"\n              t-required\n              [t-label]=\"literals.insertPhone\"\n              [t-mask]=\"phoneMask\"\n              [t-maxlength]=\"maxLength\"\n              [t-minlength]=\"minLength\"\n              (t-change-model)=\"formModelChangesCheck(emailForm)\">\n            </thf-input>\n          </div>\n          \n          <div class=\"thf-field-container-bottom thf-field-container-error-container\">\n            <thf-modal-password-recovery-error-message *ngIf=\"invalidEmail && control.dirty\" \n              [t-text]=\"type === 'sms' ? literals.phoneErrorMessagePhrase : literals.emailErrorMessagePhrase\">\n            </thf-modal-password-recovery-error-message>\n          </div>\n        </form>\n      </div>\n      <div class=\"thf-modal-password-recovery-text thf-md-12\">{{ emailModalPhrases.secondPhrase }}<span *ngIf=\"contactEmail\">\n        {{ literals.prepositionIn }} \n          <a class=\"thf-modal-password-recovery-link\" href=\"mailto:{{ contactEmail }}\" target=\"_self\">{{ contactEmail }}</a>\n        </span>{{ endpoint }}\n      </div>\n    </div>\n\n    <div #smsCodeModal *ngSwitchCase=\"'smsCode'\" class=\"thf-modal-password-recovery-content thf-row\">\n      <div class=\"thf-modal-password-recovery-text thf-md-12 thf-mb-1\">{{ literals.sentSmsCodePhrase }}</div>\n      <div class=\"thf-mb-2 thf-md-12\">\n        <form #smsCodeForm=\"ngForm\">\n          <thf-input\n            name=\"sms\"\n            [(ngModel)]=\"smsCode\"\n            t-maxlength=\"11\"\n            t-minlength=\"11\"\n            t-required\n            [t-label]=\"literals.insertCode\"\n            [t-mask]=\"codeMask\"\n            (t-change-model)=\"formModelChangesCheck(smsCodeForm)\">\n          </thf-input>\n          <div class=\"thf-field-container-bottom thf-field-container-error-container\">\n            <thf-modal-password-recovery-error-message *ngIf=\"invalidEmail\"\n              [t-text]=\"smsCodeErrorMessage || this.literals.smsCodeErrorMessagePhrase\">\n            </thf-modal-password-recovery-error-message>\n            <thf-modal-password-recovery-error-message *ngIf=\"showCustomCodeError\"\n              [t-text]=\"codeError\">\n            </thf-modal-password-recovery-error-message>\n          </div>\n        </form>\n      </div>\n      <div class=\"thf-modal-password-recovery-text thf-md-12\">\n        {{ literals.sendAgainPhrase }} \n        <span class=\"thf-modal-password-recovery-link\" (click)=\"resendSmsCode()\">{{ literals.sendAgain }}</span>\n      </div>\n    </div>\n    \n    <div #confirmationModal *ngSwitchCase=\"'confirmation'\" class=\"thf-modal-password-recovery-content thf-row\">\n      <img \n        class=\"thf-modal-password-recovery-user-image thf-mb-2\" \n        src=\"./assets/images/email-sent.svg\"> \n      <div class=\"thf-modal-password-recovery-text\">\n        {{ literals.emailSentConfirmationPhrase }}\n      </div>\n    </div>\n  </div>\n</thf-modal>\n"
                }] }
    ];
    /** @nocollapse */
    ThfModalPasswordRecoveryComponent.ctorParameters = function () { return [
        { type: Router },
        { type: ThfI18nPipe },
        { type: ThfModalPasswordRecoveryService }
    ]; };
    ThfModalPasswordRecoveryComponent.propDecorators = {
        emailForm: [{ type: ViewChild, args: ['emailForm', { static: false },] }],
        recoveryModalElement: [{ type: ViewChild, args: ['recoveryModal', { static: true },] }],
        smsCodeForm: [{ type: ViewChild, args: ['smsCodeForm', { static: false },] }]
    };
    return ThfModalPasswordRecoveryComponent;
}(ThfModalPasswordRecoveryBaseComponent));
export { ThfModalPasswordRecoveryComponent };
if (false) {
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.chosenTypeFormOption;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.codeMask;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.control;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.emailModal;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.emailModalPhrases;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.endpoint;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.invalidCode;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.invalidEmail;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.modalTitle;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.modalType;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.showCustomCodeError;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.smsCodeErrorMessagePhrase;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.submittedCodeValue;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.submittedContactValue;
    /**
     * @type {?}
     * @private
     */
    ThfModalPasswordRecoveryComponent.prototype.passwordRecoverySubscription;
    /**
     * @type {?}
     * @private
     */
    ThfModalPasswordRecoveryComponent.prototype.smsBodyResponse;
    /**
     * @type {?}
     * @private
     */
    ThfModalPasswordRecoveryComponent.prototype.smsCodeSubscription;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.emailForm;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.recoveryModalElement;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.smsCodeForm;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.primaryAction;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.secondaryAction;
    /** @type {?} */
    ThfModalPasswordRecoveryComponent.prototype.typeFormOptions;
    /**
     * @type {?}
     * @private
     */
    ThfModalPasswordRecoveryComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    ThfModalPasswordRecoveryComponent.prototype.thfI18nPipe;
    /**
     * @type {?}
     * @private
     */
    ThfModalPasswordRecoveryComponent.prototype.thfModalPasswordRecoveryService;
}
//# sourceMappingURL=data:application/json;base64,