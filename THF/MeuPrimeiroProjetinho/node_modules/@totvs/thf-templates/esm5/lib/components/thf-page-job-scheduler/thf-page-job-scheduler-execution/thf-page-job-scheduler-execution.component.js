/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { isTypeof } from '../../../utils/util';
import { ThfPageJobSchedulerLookupService } from '../thf-page-job-scheduler-lookup.service';
import { ThfPageJobSchedulerService } from '../thf-page-job-scheduler.service';
var ThfPageJobSchedulerExecutionComponent = /** @class */ (function () {
    function ThfPageJobSchedulerExecutionComponent(thfPageJobSchedulerService, thfPageJobSchedulerLookup) {
        this.thfPageJobSchedulerService = thfPageJobSchedulerService;
        this.thfPageJobSchedulerLookup = thfPageJobSchedulerLookup;
        this._value = {};
        this.dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';
        this.existProcessAPI = true;
        this.minDateFirstExecution = new Date();
        this.periodicityOptions = [];
        this.timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';
        this.weekDays = [];
        this.isEdit = false;
        this.literals = (/** @type {?} */ ({}));
        this.changeProcess = new EventEmitter();
    }
    Object.defineProperty(ThfPageJobSchedulerExecutionComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._value = value && isTypeof(value, 'object') ? value : {};
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfPageJobSchedulerExecutionComponent.prototype, "startDateFirstExecution", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isEdit ? undefined : this.minDateFirstExecution;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ThfPageJobSchedulerExecutionComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.subscribeProcessIdValueChanges();
        }));
    };
    /**
     * @return {?}
     */
    ThfPageJobSchedulerExecutionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.periodicityTemplates = {
            daily: this.dailyTemplate,
            monthly: this.monthlyTemplate,
            weekly: this.weeklyTempalte
        };
        this.checkExistsProcessesAPI();
        this.periodicityOptions = this.getPeriodicityOptions();
        this.weekDays = this.getWeekDays();
    };
    /**
     * @private
     * @return {?}
     */
    ThfPageJobSchedulerExecutionComponent.prototype.checkExistsProcessesAPI = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.thfPageJobSchedulerService.getHeadProcesses().subscribe(undefined, (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.existProcessAPI = false;
        }));
    };
    /**
     * @private
     * @return {?}
     */
    ThfPageJobSchedulerExecutionComponent.prototype.getPeriodicityOptions = /**
     * @private
     * @return {?}
     */
    function () {
        return [
            { label: this.literals.single, value: 'single' },
            { label: this.literals.daily, value: 'daily' },
            { label: this.literals.weekly, value: 'weekly' },
            { label: this.literals.monthly, value: 'monthly' }
        ];
    };
    /**
     * @private
     * @return {?}
     */
    ThfPageJobSchedulerExecutionComponent.prototype.getWeekDays = /**
     * @private
     * @return {?}
     */
    function () {
        return [
            { label: this.literals.sunday, value: 'Sunday' },
            { label: this.literals.monday, value: 'Monday' },
            { label: this.literals.tuesday, value: 'Tuesday' },
            { label: this.literals.wednesday, value: 'Wednesday' },
            { label: this.literals.thursday, value: 'Thursday' },
            { label: this.literals.friday, value: 'Friday' },
            { label: this.literals.saturday, value: 'Saturday' }
        ];
    };
    /**
     * @private
     * @return {?}
     */
    ThfPageJobSchedulerExecutionComponent.prototype.subscribeProcessIdValueChanges = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.form.controls['processID'].valueChanges.subscribe((/**
         * @param {?} processId
         * @return {?}
         */
        function (processId) {
            _this.changeProcess.emit({ processId: processId, existAPI: _this.existProcessAPI });
        }));
    };
    ThfPageJobSchedulerExecutionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-page-job-scheduler-execution',
                    template: "<form #formExecution=\"ngForm\">\n  <div class=\"thf-row\">\n    <ng-container *ngIf=\"existProcessAPI; then lookupProcessesID; else inputProcessesID\"></ng-container>\n  </div>\n\n  <div class=\"thf-row\">\n    <thf-divider class=\"thf-md-12\" [t-label]=\"literals.firstExecution\"></thf-divider>\n\n    <thf-datepicker\n      class=\"thf-md-4\"\n      name=\"firstExecution\"\n      [(ngModel)]=\"value.firstExecution\"\n      t-placeholder=\"dd/mm/aaaa\"\n      t-required\n      [t-disabled]=\"isEdit\"\n      [t-label]=\"literals.day\"\n      [t-min-date]=\"startDateFirstExecution\">\n    </thf-datepicker>\n\n    <thf-input\n      class=\"thf-md-2\"\n      name=\"firstExecutionHour\"\n      [(ngModel)]=\"value.firstExecutionHour\"\n      t-mask=\"99:99\"\n      t-mask-format-model\n      t-placeholder=\"HH:mm\"\n      t-required\n      [t-disabled]=\"isEdit\"\n      [t-label]=\"literals.hour\"\n      [t-pattern]=\"timePattern\">\n    </thf-input>\n\n  </div>\n\n  <hr>\n\n  <div class=\"thf-row\">\n    <thf-radio-group\n      class=\"thf-sm-12\"\n      name=\"periodicity\"\n      [(ngModel)]=\"value.periodicity\"\n      t-columns=\"4\"\n      t-required\n      [t-label]=\"literals.periodicity\"\n      [t-options]=\"periodicityOptions\">\n    </thf-radio-group>\n\n    <ng-container *ngIf=\"value.periodicity !== 'single'\">\n      <thf-divider class=\"thf-md-12\" [t-label]=\"literals.periodicityData\">\n      </thf-divider>\n\n      <div class=\"thf-row\">\n        <ng-container *ngTemplateOutlet=\"periodicityTemplates[value.periodicity]\">\n        </ng-container>\n      </div>\n\n      <div class=\"thf-row\">\n        <thf-switch\n          class=\"thf-md-3\"\n          name=\"recurrent\"\n          [(ngModel)]=\"value.recurrent\"\n          [t-label]=\"literals.recurrent\"\n          [t-label-off]=\"literals.no\"\n          [t-label-on]=\"literals.yes\">\n        </thf-switch>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #lookupProcessesID>\n    <thf-lookup\n      class=\"thf-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      t-field-label=\"description\"\n      t-field-value=\"processID\"\n      t-required\n      [t-disabled]=\"isEdit\"\n      [t-filter-service]=\"thfPageJobSchedulerLookup\"\n      [t-label]=\"literals.process\"\n      [t-placeholder]=\"literals.enterProcess\">\n    </thf-lookup>\n  </ng-template>\n\n  <ng-template #inputProcessesID>\n    <thf-input\n      class=\"thf-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      t-required\n      [t-disabled]=\"isEdit\"\n      [t-label]=\"literals.process\"\n      [t-placeholder]=\"literals.enterProcess\">\n    </thf-input>\n  </ng-template>\n\n  <ng-template #dailyTemplate>\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\">\n    </ng-container>\n  </ng-template>\n\n  <ng-template #weeklyTemplate>\n    <div class=\"thf-row\">\n      <ng-container *ngTemplateOutlet=\"inputHourTemplate\">\n      </ng-container>\n    </div>\n\n    <thf-checkbox-group\n      class=\"thf-md-12\"\n      name=\"daysOfWeek\"\n      [(ngModel)]=\"value.daysOfWeek\"\n      t-columns=\"4\"\n      t-required\n      [t-label]=\"literals.weekDays\"\n      [t-options]=\"weekDays\">\n    </thf-checkbox-group>\n  </ng-template>\n\n  <ng-template #monthlyTemplate>\n    <thf-number\n      class=\"thf-md-3\"\n      name=\"dayOfMonth\"\n      [(ngModel)]=\"value.dayOfMonth\"\n      t-required\n      [t-error-pattern]=\"'Dia inv\u00E1lido'\"\n      [t-label]=\"literals.day\"\n      [t-max]=\"31\"\n      [t-pattern]=\"dayPattern\">\n    </thf-number>\n\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\">\n    </ng-container>\n  </ng-template>\n\n  <ng-template #inputHourTemplate>\n    <thf-input\n      class=\"thf-md-2\"\n      name=\"hour\"\n      [(ngModel)]=\"value.hour\"\n      t-mask=\"99:99\"\n      t-mask-format-model\n      t-placeholder=\"HH:mm\"\n      t-required\n      [t-label]=\"literals.hour\"\n      [t-pattern]=\"timePattern\">\n    </thf-input>\n  </ng-template>\n</form>\n"
                }] }
    ];
    /** @nocollapse */
    ThfPageJobSchedulerExecutionComponent.ctorParameters = function () { return [
        { type: ThfPageJobSchedulerService },
        { type: ThfPageJobSchedulerLookupService }
    ]; };
    ThfPageJobSchedulerExecutionComponent.propDecorators = {
        form: [{ type: ViewChild, args: ['formExecution', { static: true },] }],
        dailyTemplate: [{ type: ViewChild, args: ['dailyTemplate', { static: true },] }],
        monthlyTemplate: [{ type: ViewChild, args: ['monthlyTemplate', { static: true },] }],
        weeklyTempalte: [{ type: ViewChild, args: ['weeklyTemplate', { static: true },] }],
        isEdit: [{ type: Input, args: ['t-is-edit',] }],
        literals: [{ type: Input, args: ['t-literals',] }],
        value: [{ type: Input, args: ['t-value',] }],
        changeProcess: [{ type: Output, args: ['t-change-process',] }]
    };
    return ThfPageJobSchedulerExecutionComponent;
}());
export { ThfPageJobSchedulerExecutionComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ThfPageJobSchedulerExecutionComponent.prototype._value;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.dayPattern;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.existProcessAPI;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.minDateFirstExecution;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.periodicityOptions;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.periodicityTemplates;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.timePattern;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.weekDays;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.form;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.dailyTemplate;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.monthlyTemplate;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.weeklyTempalte;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.isEdit;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.literals;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.changeProcess;
    /**
     * @type {?}
     * @private
     */
    ThfPageJobSchedulerExecutionComponent.prototype.thfPageJobSchedulerService;
    /** @type {?} */
    ThfPageJobSchedulerExecutionComponent.prototype.thfPageJobSchedulerLookup;
}
//# sourceMappingURL=data:application/json;base64,